
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_87552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0000000ffffff; valaddr_reg:x3; val_offset:262656*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262656*0 + 3*0*FLEN/8, x4, x1, x2)

inst_87553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0000001ffffff; valaddr_reg:x3; val_offset:262659*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262659*0 + 3*1*FLEN/8, x4, x1, x2)

inst_87554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0000003ffffff; valaddr_reg:x3; val_offset:262662*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262662*0 + 3*2*FLEN/8, x4, x1, x2)

inst_87555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0000007ffffff; valaddr_reg:x3; val_offset:262665*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262665*0 + 3*3*FLEN/8, x4, x1, x2)

inst_87556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff000000fffffff; valaddr_reg:x3; val_offset:262668*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262668*0 + 3*4*FLEN/8, x4, x1, x2)

inst_87557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff000001fffffff; valaddr_reg:x3; val_offset:262671*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262671*0 + 3*5*FLEN/8, x4, x1, x2)

inst_87558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff000003fffffff; valaddr_reg:x3; val_offset:262674*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262674*0 + 3*6*FLEN/8, x4, x1, x2)

inst_87559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff000007fffffff; valaddr_reg:x3; val_offset:262677*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262677*0 + 3*7*FLEN/8, x4, x1, x2)

inst_87560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff00000ffffffff; valaddr_reg:x3; val_offset:262680*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262680*0 + 3*8*FLEN/8, x4, x1, x2)

inst_87561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff00001ffffffff; valaddr_reg:x3; val_offset:262683*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262683*0 + 3*9*FLEN/8, x4, x1, x2)

inst_87562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff00003ffffffff; valaddr_reg:x3; val_offset:262686*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262686*0 + 3*10*FLEN/8, x4, x1, x2)

inst_87563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff00007ffffffff; valaddr_reg:x3; val_offset:262689*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262689*0 + 3*11*FLEN/8, x4, x1, x2)

inst_87564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0000fffffffff; valaddr_reg:x3; val_offset:262692*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262692*0 + 3*12*FLEN/8, x4, x1, x2)

inst_87565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0001fffffffff; valaddr_reg:x3; val_offset:262695*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262695*0 + 3*13*FLEN/8, x4, x1, x2)

inst_87566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0003fffffffff; valaddr_reg:x3; val_offset:262698*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262698*0 + 3*14*FLEN/8, x4, x1, x2)

inst_87567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0007fffffffff; valaddr_reg:x3; val_offset:262701*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262701*0 + 3*15*FLEN/8, x4, x1, x2)

inst_87568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff000ffffffffff; valaddr_reg:x3; val_offset:262704*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262704*0 + 3*16*FLEN/8, x4, x1, x2)

inst_87569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff001ffffffffff; valaddr_reg:x3; val_offset:262707*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262707*0 + 3*17*FLEN/8, x4, x1, x2)

inst_87570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff003ffffffffff; valaddr_reg:x3; val_offset:262710*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262710*0 + 3*18*FLEN/8, x4, x1, x2)

inst_87571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff007ffffffffff; valaddr_reg:x3; val_offset:262713*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262713*0 + 3*19*FLEN/8, x4, x1, x2)

inst_87572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff00fffffffffff; valaddr_reg:x3; val_offset:262716*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262716*0 + 3*20*FLEN/8, x4, x1, x2)

inst_87573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff01fffffffffff; valaddr_reg:x3; val_offset:262719*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262719*0 + 3*21*FLEN/8, x4, x1, x2)

inst_87574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff03fffffffffff; valaddr_reg:x3; val_offset:262722*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262722*0 + 3*22*FLEN/8, x4, x1, x2)

inst_87575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff07fffffffffff; valaddr_reg:x3; val_offset:262725*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262725*0 + 3*23*FLEN/8, x4, x1, x2)

inst_87576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff0ffffffffffff; valaddr_reg:x3; val_offset:262728*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262728*0 + 3*24*FLEN/8, x4, x1, x2)

inst_87577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff1ffffffffffff; valaddr_reg:x3; val_offset:262731*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262731*0 + 3*25*FLEN/8, x4, x1, x2)

inst_87578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:262734*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262734*0 + 3*26*FLEN/8, x4, x1, x2)

inst_87579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff3ffffffffffff; valaddr_reg:x3; val_offset:262737*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262737*0 + 3*27*FLEN/8, x4, x1, x2)

inst_87580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:262740*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262740*0 + 3*28*FLEN/8, x4, x1, x2)

inst_87581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:262743*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262743*0 + 3*29*FLEN/8, x4, x1, x2)

inst_87582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:262746*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262746*0 + 3*30*FLEN/8, x4, x1, x2)

inst_87583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:262749*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262749*0 + 3*31*FLEN/8, x4, x1, x2)

inst_87584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff7ffffffffffff; valaddr_reg:x3; val_offset:262752*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262752*0 + 3*32*FLEN/8, x4, x1, x2)

inst_87585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff8000000000000; valaddr_reg:x3; val_offset:262755*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262755*0 + 3*33*FLEN/8, x4, x1, x2)

inst_87586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:262758*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262758*0 + 3*34*FLEN/8, x4, x1, x2)

inst_87587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:262761*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262761*0 + 3*35*FLEN/8, x4, x1, x2)

inst_87588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:262764*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262764*0 + 3*36*FLEN/8, x4, x1, x2)

inst_87589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffc000000000000; valaddr_reg:x3; val_offset:262767*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262767*0 + 3*37*FLEN/8, x4, x1, x2)

inst_87590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:262770*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262770*0 + 3*38*FLEN/8, x4, x1, x2)

inst_87591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:262773*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262773*0 + 3*39*FLEN/8, x4, x1, x2)

inst_87592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffe000000000000; valaddr_reg:x3; val_offset:262776*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262776*0 + 3*40*FLEN/8, x4, x1, x2)

inst_87593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fff000000000000; valaddr_reg:x3; val_offset:262779*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262779*0 + 3*41*FLEN/8, x4, x1, x2)

inst_87594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fff800000000000; valaddr_reg:x3; val_offset:262782*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262782*0 + 3*42*FLEN/8, x4, x1, x2)

inst_87595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffc00000000000; valaddr_reg:x3; val_offset:262785*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262785*0 + 3*43*FLEN/8, x4, x1, x2)

inst_87596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffe00000000000; valaddr_reg:x3; val_offset:262788*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262788*0 + 3*44*FLEN/8, x4, x1, x2)

inst_87597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffff00000000000; valaddr_reg:x3; val_offset:262791*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262791*0 + 3*45*FLEN/8, x4, x1, x2)

inst_87598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffff80000000000; valaddr_reg:x3; val_offset:262794*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262794*0 + 3*46*FLEN/8, x4, x1, x2)

inst_87599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffc0000000000; valaddr_reg:x3; val_offset:262797*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262797*0 + 3*47*FLEN/8, x4, x1, x2)

inst_87600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffe0000000000; valaddr_reg:x3; val_offset:262800*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262800*0 + 3*48*FLEN/8, x4, x1, x2)

inst_87601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffff0000000000; valaddr_reg:x3; val_offset:262803*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262803*0 + 3*49*FLEN/8, x4, x1, x2)

inst_87602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffff8000000000; valaddr_reg:x3; val_offset:262806*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262806*0 + 3*50*FLEN/8, x4, x1, x2)

inst_87603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffc000000000; valaddr_reg:x3; val_offset:262809*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262809*0 + 3*51*FLEN/8, x4, x1, x2)

inst_87604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffe000000000; valaddr_reg:x3; val_offset:262812*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262812*0 + 3*52*FLEN/8, x4, x1, x2)

inst_87605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffff000000000; valaddr_reg:x3; val_offset:262815*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262815*0 + 3*53*FLEN/8, x4, x1, x2)

inst_87606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffff800000000; valaddr_reg:x3; val_offset:262818*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262818*0 + 3*54*FLEN/8, x4, x1, x2)

inst_87607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffc00000000; valaddr_reg:x3; val_offset:262821*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262821*0 + 3*55*FLEN/8, x4, x1, x2)

inst_87608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffe00000000; valaddr_reg:x3; val_offset:262824*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262824*0 + 3*56*FLEN/8, x4, x1, x2)

inst_87609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffff00000000; valaddr_reg:x3; val_offset:262827*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262827*0 + 3*57*FLEN/8, x4, x1, x2)

inst_87610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffff80000000; valaddr_reg:x3; val_offset:262830*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262830*0 + 3*58*FLEN/8, x4, x1, x2)

inst_87611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffc0000000; valaddr_reg:x3; val_offset:262833*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262833*0 + 3*59*FLEN/8, x4, x1, x2)

inst_87612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffe0000000; valaddr_reg:x3; val_offset:262836*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262836*0 + 3*60*FLEN/8, x4, x1, x2)

inst_87613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffff0000000; valaddr_reg:x3; val_offset:262839*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262839*0 + 3*61*FLEN/8, x4, x1, x2)

inst_87614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffff8000000; valaddr_reg:x3; val_offset:262842*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262842*0 + 3*62*FLEN/8, x4, x1, x2)

inst_87615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffc000000; valaddr_reg:x3; val_offset:262845*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262845*0 + 3*63*FLEN/8, x4, x1, x2)

inst_87616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffe000000; valaddr_reg:x3; val_offset:262848*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262848*0 + 3*64*FLEN/8, x4, x1, x2)

inst_87617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffff000000; valaddr_reg:x3; val_offset:262851*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262851*0 + 3*65*FLEN/8, x4, x1, x2)

inst_87618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffff800000; valaddr_reg:x3; val_offset:262854*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262854*0 + 3*66*FLEN/8, x4, x1, x2)

inst_87619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffc00000; valaddr_reg:x3; val_offset:262857*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262857*0 + 3*67*FLEN/8, x4, x1, x2)

inst_87620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffe00000; valaddr_reg:x3; val_offset:262860*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262860*0 + 3*68*FLEN/8, x4, x1, x2)

inst_87621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffff00000; valaddr_reg:x3; val_offset:262863*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262863*0 + 3*69*FLEN/8, x4, x1, x2)

inst_87622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffff80000; valaddr_reg:x3; val_offset:262866*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262866*0 + 3*70*FLEN/8, x4, x1, x2)

inst_87623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffc0000; valaddr_reg:x3; val_offset:262869*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262869*0 + 3*71*FLEN/8, x4, x1, x2)

inst_87624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffe0000; valaddr_reg:x3; val_offset:262872*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262872*0 + 3*72*FLEN/8, x4, x1, x2)

inst_87625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffff0000; valaddr_reg:x3; val_offset:262875*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262875*0 + 3*73*FLEN/8, x4, x1, x2)

inst_87626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffff8000; valaddr_reg:x3; val_offset:262878*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262878*0 + 3*74*FLEN/8, x4, x1, x2)

inst_87627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffc000; valaddr_reg:x3; val_offset:262881*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262881*0 + 3*75*FLEN/8, x4, x1, x2)

inst_87628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffe000; valaddr_reg:x3; val_offset:262884*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262884*0 + 3*76*FLEN/8, x4, x1, x2)

inst_87629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffff000; valaddr_reg:x3; val_offset:262887*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262887*0 + 3*77*FLEN/8, x4, x1, x2)

inst_87630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffff800; valaddr_reg:x3; val_offset:262890*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262890*0 + 3*78*FLEN/8, x4, x1, x2)

inst_87631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffc00; valaddr_reg:x3; val_offset:262893*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262893*0 + 3*79*FLEN/8, x4, x1, x2)

inst_87632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffe00; valaddr_reg:x3; val_offset:262896*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262896*0 + 3*80*FLEN/8, x4, x1, x2)

inst_87633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffff00; valaddr_reg:x3; val_offset:262899*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262899*0 + 3*81*FLEN/8, x4, x1, x2)

inst_87634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffff80; valaddr_reg:x3; val_offset:262902*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262902*0 + 3*82*FLEN/8, x4, x1, x2)

inst_87635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:262905*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262905*0 + 3*83*FLEN/8, x4, x1, x2)

inst_87636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:262908*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262908*0 + 3*84*FLEN/8, x4, x1, x2)

inst_87637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:262911*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262911*0 + 3*85*FLEN/8, x4, x1, x2)

inst_87638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:262914*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262914*0 + 3*86*FLEN/8, x4, x1, x2)

inst_87639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:262917*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262917*0 + 3*87*FLEN/8, x4, x1, x2)

inst_87640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:262920*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262920*0 + 3*88*FLEN/8, x4, x1, x2)

inst_87641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb00beba61ea99 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2f5feccff1dc7 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab00beba61ea99; op2val:0x2032f5feccff1dc7;
op3val:0x3fffffffffffffff; valaddr_reg:x3; val_offset:262923*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262923*0 + 3*89*FLEN/8, x4, x1, x2)

inst_87642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000000000; valaddr_reg:x3; val_offset:262926*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262926*0 + 3*90*FLEN/8, x4, x1, x2)

inst_87643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000000001; valaddr_reg:x3; val_offset:262929*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262929*0 + 3*91*FLEN/8, x4, x1, x2)

inst_87644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000000003; valaddr_reg:x3; val_offset:262932*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262932*0 + 3*92*FLEN/8, x4, x1, x2)

inst_87645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000000007; valaddr_reg:x3; val_offset:262935*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262935*0 + 3*93*FLEN/8, x4, x1, x2)

inst_87646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000000000f; valaddr_reg:x3; val_offset:262938*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262938*0 + 3*94*FLEN/8, x4, x1, x2)

inst_87647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000000001f; valaddr_reg:x3; val_offset:262941*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262941*0 + 3*95*FLEN/8, x4, x1, x2)

inst_87648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000000003f; valaddr_reg:x3; val_offset:262944*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262944*0 + 3*96*FLEN/8, x4, x1, x2)

inst_87649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000000007f; valaddr_reg:x3; val_offset:262947*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262947*0 + 3*97*FLEN/8, x4, x1, x2)

inst_87650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000000000ff; valaddr_reg:x3; val_offset:262950*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262950*0 + 3*98*FLEN/8, x4, x1, x2)

inst_87651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000000001ff; valaddr_reg:x3; val_offset:262953*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262953*0 + 3*99*FLEN/8, x4, x1, x2)

inst_87652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000000003ff; valaddr_reg:x3; val_offset:262956*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262956*0 + 3*100*FLEN/8, x4, x1, x2)

inst_87653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000000007ff; valaddr_reg:x3; val_offset:262959*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262959*0 + 3*101*FLEN/8, x4, x1, x2)

inst_87654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000000fff; valaddr_reg:x3; val_offset:262962*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262962*0 + 3*102*FLEN/8, x4, x1, x2)

inst_87655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000001fff; valaddr_reg:x3; val_offset:262965*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262965*0 + 3*103*FLEN/8, x4, x1, x2)

inst_87656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000003fff; valaddr_reg:x3; val_offset:262968*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262968*0 + 3*104*FLEN/8, x4, x1, x2)

inst_87657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000007fff; valaddr_reg:x3; val_offset:262971*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262971*0 + 3*105*FLEN/8, x4, x1, x2)

inst_87658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000000ffff; valaddr_reg:x3; val_offset:262974*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262974*0 + 3*106*FLEN/8, x4, x1, x2)

inst_87659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000001ffff; valaddr_reg:x3; val_offset:262977*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262977*0 + 3*107*FLEN/8, x4, x1, x2)

inst_87660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000003ffff; valaddr_reg:x3; val_offset:262980*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262980*0 + 3*108*FLEN/8, x4, x1, x2)

inst_87661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000007ffff; valaddr_reg:x3; val_offset:262983*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262983*0 + 3*109*FLEN/8, x4, x1, x2)

inst_87662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000000fffff; valaddr_reg:x3; val_offset:262986*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262986*0 + 3*110*FLEN/8, x4, x1, x2)

inst_87663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000001fffff; valaddr_reg:x3; val_offset:262989*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262989*0 + 3*111*FLEN/8, x4, x1, x2)

inst_87664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000003fffff; valaddr_reg:x3; val_offset:262992*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262992*0 + 3*112*FLEN/8, x4, x1, x2)

inst_87665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000007fffff; valaddr_reg:x3; val_offset:262995*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262995*0 + 3*113*FLEN/8, x4, x1, x2)

inst_87666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000000ffffff; valaddr_reg:x3; val_offset:262998*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 262998*0 + 3*114*FLEN/8, x4, x1, x2)

inst_87667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000001ffffff; valaddr_reg:x3; val_offset:263001*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263001*0 + 3*115*FLEN/8, x4, x1, x2)

inst_87668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000003ffffff; valaddr_reg:x3; val_offset:263004*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263004*0 + 3*116*FLEN/8, x4, x1, x2)

inst_87669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000007ffffff; valaddr_reg:x3; val_offset:263007*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263007*0 + 3*117*FLEN/8, x4, x1, x2)

inst_87670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000000fffffff; valaddr_reg:x3; val_offset:263010*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263010*0 + 3*118*FLEN/8, x4, x1, x2)

inst_87671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000001fffffff; valaddr_reg:x3; val_offset:263013*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263013*0 + 3*119*FLEN/8, x4, x1, x2)

inst_87672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000003fffffff; valaddr_reg:x3; val_offset:263016*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263016*0 + 3*120*FLEN/8, x4, x1, x2)

inst_87673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000007fffffff; valaddr_reg:x3; val_offset:263019*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263019*0 + 3*121*FLEN/8, x4, x1, x2)

inst_87674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300000ffffffff; valaddr_reg:x3; val_offset:263022*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263022*0 + 3*122*FLEN/8, x4, x1, x2)

inst_87675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300001ffffffff; valaddr_reg:x3; val_offset:263025*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263025*0 + 3*123*FLEN/8, x4, x1, x2)

inst_87676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300003ffffffff; valaddr_reg:x3; val_offset:263028*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263028*0 + 3*124*FLEN/8, x4, x1, x2)

inst_87677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300007ffffffff; valaddr_reg:x3; val_offset:263031*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263031*0 + 3*125*FLEN/8, x4, x1, x2)

inst_87678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30000fffffffff; valaddr_reg:x3; val_offset:263034*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263034*0 + 3*126*FLEN/8, x4, x1, x2)

inst_87679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30001fffffffff; valaddr_reg:x3; val_offset:263037*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263037*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_87680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30003fffffffff; valaddr_reg:x3; val_offset:263040*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263040*0 + 3*128*FLEN/8, x4, x1, x2)

inst_87681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30007fffffffff; valaddr_reg:x3; val_offset:263043*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263043*0 + 3*129*FLEN/8, x4, x1, x2)

inst_87682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3000ffffffffff; valaddr_reg:x3; val_offset:263046*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263046*0 + 3*130*FLEN/8, x4, x1, x2)

inst_87683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3001ffffffffff; valaddr_reg:x3; val_offset:263049*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263049*0 + 3*131*FLEN/8, x4, x1, x2)

inst_87684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3003ffffffffff; valaddr_reg:x3; val_offset:263052*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263052*0 + 3*132*FLEN/8, x4, x1, x2)

inst_87685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3007ffffffffff; valaddr_reg:x3; val_offset:263055*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263055*0 + 3*133*FLEN/8, x4, x1, x2)

inst_87686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba300fffffffffff; valaddr_reg:x3; val_offset:263058*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263058*0 + 3*134*FLEN/8, x4, x1, x2)

inst_87687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba301fffffffffff; valaddr_reg:x3; val_offset:263061*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263061*0 + 3*135*FLEN/8, x4, x1, x2)

inst_87688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba303fffffffffff; valaddr_reg:x3; val_offset:263064*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263064*0 + 3*136*FLEN/8, x4, x1, x2)

inst_87689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba307fffffffffff; valaddr_reg:x3; val_offset:263067*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263067*0 + 3*137*FLEN/8, x4, x1, x2)

inst_87690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba30ffffffffffff; valaddr_reg:x3; val_offset:263070*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263070*0 + 3*138*FLEN/8, x4, x1, x2)

inst_87691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba31ffffffffffff; valaddr_reg:x3; val_offset:263073*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263073*0 + 3*139*FLEN/8, x4, x1, x2)

inst_87692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba33ffffffffffff; valaddr_reg:x3; val_offset:263076*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263076*0 + 3*140*FLEN/8, x4, x1, x2)

inst_87693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba37ffffffffffff; valaddr_reg:x3; val_offset:263079*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263079*0 + 3*141*FLEN/8, x4, x1, x2)

inst_87694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba38000000000000; valaddr_reg:x3; val_offset:263082*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263082*0 + 3*142*FLEN/8, x4, x1, x2)

inst_87695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3c000000000000; valaddr_reg:x3; val_offset:263085*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263085*0 + 3*143*FLEN/8, x4, x1, x2)

inst_87696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3e000000000000; valaddr_reg:x3; val_offset:263088*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263088*0 + 3*144*FLEN/8, x4, x1, x2)

inst_87697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3f000000000000; valaddr_reg:x3; val_offset:263091*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263091*0 + 3*145*FLEN/8, x4, x1, x2)

inst_87698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3f800000000000; valaddr_reg:x3; val_offset:263094*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263094*0 + 3*146*FLEN/8, x4, x1, x2)

inst_87699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fc00000000000; valaddr_reg:x3; val_offset:263097*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263097*0 + 3*147*FLEN/8, x4, x1, x2)

inst_87700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fe00000000000; valaddr_reg:x3; val_offset:263100*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263100*0 + 3*148*FLEN/8, x4, x1, x2)

inst_87701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ff00000000000; valaddr_reg:x3; val_offset:263103*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263103*0 + 3*149*FLEN/8, x4, x1, x2)

inst_87702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ff80000000000; valaddr_reg:x3; val_offset:263106*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263106*0 + 3*150*FLEN/8, x4, x1, x2)

inst_87703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffc0000000000; valaddr_reg:x3; val_offset:263109*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263109*0 + 3*151*FLEN/8, x4, x1, x2)

inst_87704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffe0000000000; valaddr_reg:x3; val_offset:263112*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263112*0 + 3*152*FLEN/8, x4, x1, x2)

inst_87705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fff0000000000; valaddr_reg:x3; val_offset:263115*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263115*0 + 3*153*FLEN/8, x4, x1, x2)

inst_87706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fff8000000000; valaddr_reg:x3; val_offset:263118*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263118*0 + 3*154*FLEN/8, x4, x1, x2)

inst_87707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffc000000000; valaddr_reg:x3; val_offset:263121*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263121*0 + 3*155*FLEN/8, x4, x1, x2)

inst_87708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffe000000000; valaddr_reg:x3; val_offset:263124*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263124*0 + 3*156*FLEN/8, x4, x1, x2)

inst_87709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffff000000000; valaddr_reg:x3; val_offset:263127*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263127*0 + 3*157*FLEN/8, x4, x1, x2)

inst_87710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffff800000000; valaddr_reg:x3; val_offset:263130*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263130*0 + 3*158*FLEN/8, x4, x1, x2)

inst_87711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffc00000000; valaddr_reg:x3; val_offset:263133*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263133*0 + 3*159*FLEN/8, x4, x1, x2)

inst_87712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffe00000000; valaddr_reg:x3; val_offset:263136*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263136*0 + 3*160*FLEN/8, x4, x1, x2)

inst_87713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffff00000000; valaddr_reg:x3; val_offset:263139*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263139*0 + 3*161*FLEN/8, x4, x1, x2)

inst_87714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffff80000000; valaddr_reg:x3; val_offset:263142*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263142*0 + 3*162*FLEN/8, x4, x1, x2)

inst_87715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffc0000000; valaddr_reg:x3; val_offset:263145*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263145*0 + 3*163*FLEN/8, x4, x1, x2)

inst_87716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffe0000000; valaddr_reg:x3; val_offset:263148*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263148*0 + 3*164*FLEN/8, x4, x1, x2)

inst_87717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffff0000000; valaddr_reg:x3; val_offset:263151*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263151*0 + 3*165*FLEN/8, x4, x1, x2)

inst_87718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffff8000000; valaddr_reg:x3; val_offset:263154*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263154*0 + 3*166*FLEN/8, x4, x1, x2)

inst_87719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffc000000; valaddr_reg:x3; val_offset:263157*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263157*0 + 3*167*FLEN/8, x4, x1, x2)

inst_87720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffe000000; valaddr_reg:x3; val_offset:263160*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263160*0 + 3*168*FLEN/8, x4, x1, x2)

inst_87721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffff000000; valaddr_reg:x3; val_offset:263163*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263163*0 + 3*169*FLEN/8, x4, x1, x2)

inst_87722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffff800000; valaddr_reg:x3; val_offset:263166*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263166*0 + 3*170*FLEN/8, x4, x1, x2)

inst_87723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffc00000; valaddr_reg:x3; val_offset:263169*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263169*0 + 3*171*FLEN/8, x4, x1, x2)

inst_87724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffe00000; valaddr_reg:x3; val_offset:263172*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263172*0 + 3*172*FLEN/8, x4, x1, x2)

inst_87725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffff00000; valaddr_reg:x3; val_offset:263175*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263175*0 + 3*173*FLEN/8, x4, x1, x2)

inst_87726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffff80000; valaddr_reg:x3; val_offset:263178*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263178*0 + 3*174*FLEN/8, x4, x1, x2)

inst_87727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffc0000; valaddr_reg:x3; val_offset:263181*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263181*0 + 3*175*FLEN/8, x4, x1, x2)

inst_87728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffe0000; valaddr_reg:x3; val_offset:263184*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263184*0 + 3*176*FLEN/8, x4, x1, x2)

inst_87729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffff0000; valaddr_reg:x3; val_offset:263187*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263187*0 + 3*177*FLEN/8, x4, x1, x2)

inst_87730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffff8000; valaddr_reg:x3; val_offset:263190*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263190*0 + 3*178*FLEN/8, x4, x1, x2)

inst_87731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffc000; valaddr_reg:x3; val_offset:263193*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263193*0 + 3*179*FLEN/8, x4, x1, x2)

inst_87732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffe000; valaddr_reg:x3; val_offset:263196*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263196*0 + 3*180*FLEN/8, x4, x1, x2)

inst_87733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffff000; valaddr_reg:x3; val_offset:263199*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263199*0 + 3*181*FLEN/8, x4, x1, x2)

inst_87734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffff800; valaddr_reg:x3; val_offset:263202*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263202*0 + 3*182*FLEN/8, x4, x1, x2)

inst_87735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffc00; valaddr_reg:x3; val_offset:263205*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263205*0 + 3*183*FLEN/8, x4, x1, x2)

inst_87736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffe00; valaddr_reg:x3; val_offset:263208*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263208*0 + 3*184*FLEN/8, x4, x1, x2)

inst_87737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffff00; valaddr_reg:x3; val_offset:263211*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263211*0 + 3*185*FLEN/8, x4, x1, x2)

inst_87738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffff80; valaddr_reg:x3; val_offset:263214*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263214*0 + 3*186*FLEN/8, x4, x1, x2)

inst_87739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffffc0; valaddr_reg:x3; val_offset:263217*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263217*0 + 3*187*FLEN/8, x4, x1, x2)

inst_87740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffffe0; valaddr_reg:x3; val_offset:263220*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263220*0 + 3*188*FLEN/8, x4, x1, x2)

inst_87741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffff0; valaddr_reg:x3; val_offset:263223*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263223*0 + 3*189*FLEN/8, x4, x1, x2)

inst_87742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffff8; valaddr_reg:x3; val_offset:263226*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263226*0 + 3*190*FLEN/8, x4, x1, x2)

inst_87743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffffc; valaddr_reg:x3; val_offset:263229*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263229*0 + 3*191*FLEN/8, x4, x1, x2)

inst_87744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3ffffffffffffe; valaddr_reg:x3; val_offset:263232*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263232*0 + 3*192*FLEN/8, x4, x1, x2)

inst_87745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3a3 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xba3fffffffffffff; valaddr_reg:x3; val_offset:263235*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263235*0 + 3*193*FLEN/8, x4, x1, x2)

inst_87746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:263238*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263238*0 + 3*194*FLEN/8, x4, x1, x2)

inst_87747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:263241*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263241*0 + 3*195*FLEN/8, x4, x1, x2)

inst_87748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:263244*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263244*0 + 3*196*FLEN/8, x4, x1, x2)

inst_87749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:263247*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263247*0 + 3*197*FLEN/8, x4, x1, x2)

inst_87750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:263250*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263250*0 + 3*198*FLEN/8, x4, x1, x2)

inst_87751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:263253*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263253*0 + 3*199*FLEN/8, x4, x1, x2)

inst_87752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:263256*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263256*0 + 3*200*FLEN/8, x4, x1, x2)

inst_87753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:263259*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263259*0 + 3*201*FLEN/8, x4, x1, x2)

inst_87754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:263262*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263262*0 + 3*202*FLEN/8, x4, x1, x2)

inst_87755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:263265*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263265*0 + 3*203*FLEN/8, x4, x1, x2)

inst_87756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:263268*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263268*0 + 3*204*FLEN/8, x4, x1, x2)

inst_87757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:263271*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263271*0 + 3*205*FLEN/8, x4, x1, x2)

inst_87758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:263274*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263274*0 + 3*206*FLEN/8, x4, x1, x2)

inst_87759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:263277*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263277*0 + 3*207*FLEN/8, x4, x1, x2)

inst_87760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:263280*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263280*0 + 3*208*FLEN/8, x4, x1, x2)

inst_87761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:263283*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263283*0 + 3*209*FLEN/8, x4, x1, x2)

inst_87762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:263286*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263286*0 + 3*210*FLEN/8, x4, x1, x2)

inst_87763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:263289*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263289*0 + 3*211*FLEN/8, x4, x1, x2)

inst_87764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:263292*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263292*0 + 3*212*FLEN/8, x4, x1, x2)

inst_87765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:263295*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263295*0 + 3*213*FLEN/8, x4, x1, x2)

inst_87766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:263298*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263298*0 + 3*214*FLEN/8, x4, x1, x2)

inst_87767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb01954875dbe6 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x2f56829a591c5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab01954875dbe6; op2val:0x9fc2f56829a591c5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:263301*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263301*0 + 3*215*FLEN/8, x4, x1, x2)

inst_87768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:263304*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263304*0 + 3*216*FLEN/8, x4, x1, x2)

inst_87769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:263307*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263307*0 + 3*217*FLEN/8, x4, x1, x2)

inst_87770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:263310*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263310*0 + 3*218*FLEN/8, x4, x1, x2)

inst_87771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:263313*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263313*0 + 3*219*FLEN/8, x4, x1, x2)

inst_87772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:263316*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263316*0 + 3*220*FLEN/8, x4, x1, x2)

inst_87773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:263319*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263319*0 + 3*221*FLEN/8, x4, x1, x2)

inst_87774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:263322*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263322*0 + 3*222*FLEN/8, x4, x1, x2)

inst_87775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:263325*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263325*0 + 3*223*FLEN/8, x4, x1, x2)

inst_87776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:263328*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263328*0 + 3*224*FLEN/8, x4, x1, x2)

inst_87777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:263331*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263331*0 + 3*225*FLEN/8, x4, x1, x2)

inst_87778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:263334*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263334*0 + 3*226*FLEN/8, x4, x1, x2)

inst_87779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:263337*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263337*0 + 3*227*FLEN/8, x4, x1, x2)

inst_87780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:263340*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263340*0 + 3*228*FLEN/8, x4, x1, x2)

inst_87781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:263343*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263343*0 + 3*229*FLEN/8, x4, x1, x2)

inst_87782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:263346*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263346*0 + 3*230*FLEN/8, x4, x1, x2)

inst_87783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:263349*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263349*0 + 3*231*FLEN/8, x4, x1, x2)

inst_87784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:263352*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263352*0 + 3*232*FLEN/8, x4, x1, x2)

inst_87785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:263355*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263355*0 + 3*233*FLEN/8, x4, x1, x2)

inst_87786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:263358*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263358*0 + 3*234*FLEN/8, x4, x1, x2)

inst_87787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:263361*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263361*0 + 3*235*FLEN/8, x4, x1, x2)

inst_87788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:263364*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263364*0 + 3*236*FLEN/8, x4, x1, x2)

inst_87789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:263367*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263367*0 + 3*237*FLEN/8, x4, x1, x2)

inst_87790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:263370*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263370*0 + 3*238*FLEN/8, x4, x1, x2)

inst_87791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:263373*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263373*0 + 3*239*FLEN/8, x4, x1, x2)

inst_87792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:263376*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263376*0 + 3*240*FLEN/8, x4, x1, x2)

inst_87793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:263379*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263379*0 + 3*241*FLEN/8, x4, x1, x2)

inst_87794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:263382*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263382*0 + 3*242*FLEN/8, x4, x1, x2)

inst_87795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:263385*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263385*0 + 3*243*FLEN/8, x4, x1, x2)

inst_87796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:263388*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263388*0 + 3*244*FLEN/8, x4, x1, x2)

inst_87797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:263391*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263391*0 + 3*245*FLEN/8, x4, x1, x2)

inst_87798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:263394*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263394*0 + 3*246*FLEN/8, x4, x1, x2)

inst_87799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:263397*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263397*0 + 3*247*FLEN/8, x4, x1, x2)

inst_87800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:263400*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263400*0 + 3*248*FLEN/8, x4, x1, x2)

inst_87801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:263403*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263403*0 + 3*249*FLEN/8, x4, x1, x2)

inst_87802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:263406*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263406*0 + 3*250*FLEN/8, x4, x1, x2)

inst_87803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:263409*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263409*0 + 3*251*FLEN/8, x4, x1, x2)

inst_87804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:263412*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263412*0 + 3*252*FLEN/8, x4, x1, x2)

inst_87805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:263415*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263415*0 + 3*253*FLEN/8, x4, x1, x2)

inst_87806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:263418*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263418*0 + 3*254*FLEN/8, x4, x1, x2)

inst_87807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:263421*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263421*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_87808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:263424*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263424*0 + 3*256*FLEN/8, x4, x1, x2)

inst_87809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:263427*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263427*0 + 3*257*FLEN/8, x4, x1, x2)

inst_87810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:263430*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263430*0 + 3*258*FLEN/8, x4, x1, x2)

inst_87811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:263433*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263433*0 + 3*259*FLEN/8, x4, x1, x2)

inst_87812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:263436*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263436*0 + 3*260*FLEN/8, x4, x1, x2)

inst_87813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:263439*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263439*0 + 3*261*FLEN/8, x4, x1, x2)

inst_87814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:263442*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263442*0 + 3*262*FLEN/8, x4, x1, x2)

inst_87815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:263445*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263445*0 + 3*263*FLEN/8, x4, x1, x2)

inst_87816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:263448*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263448*0 + 3*264*FLEN/8, x4, x1, x2)

inst_87817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:263451*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263451*0 + 3*265*FLEN/8, x4, x1, x2)

inst_87818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:263454*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263454*0 + 3*266*FLEN/8, x4, x1, x2)

inst_87819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:263457*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263457*0 + 3*267*FLEN/8, x4, x1, x2)

inst_87820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:263460*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263460*0 + 3*268*FLEN/8, x4, x1, x2)

inst_87821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:263463*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263463*0 + 3*269*FLEN/8, x4, x1, x2)

inst_87822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:263466*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263466*0 + 3*270*FLEN/8, x4, x1, x2)

inst_87823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:263469*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263469*0 + 3*271*FLEN/8, x4, x1, x2)

inst_87824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:263472*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263472*0 + 3*272*FLEN/8, x4, x1, x2)

inst_87825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:263475*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263475*0 + 3*273*FLEN/8, x4, x1, x2)

inst_87826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:263478*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263478*0 + 3*274*FLEN/8, x4, x1, x2)

inst_87827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:263481*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263481*0 + 3*275*FLEN/8, x4, x1, x2)

inst_87828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:263484*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263484*0 + 3*276*FLEN/8, x4, x1, x2)

inst_87829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:263487*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263487*0 + 3*277*FLEN/8, x4, x1, x2)

inst_87830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:263490*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263490*0 + 3*278*FLEN/8, x4, x1, x2)

inst_87831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:263493*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263493*0 + 3*279*FLEN/8, x4, x1, x2)

inst_87832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:263496*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263496*0 + 3*280*FLEN/8, x4, x1, x2)

inst_87833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:263499*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263499*0 + 3*281*FLEN/8, x4, x1, x2)

inst_87834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:263502*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263502*0 + 3*282*FLEN/8, x4, x1, x2)

inst_87835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:263505*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263505*0 + 3*283*FLEN/8, x4, x1, x2)

inst_87836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:263508*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263508*0 + 3*284*FLEN/8, x4, x1, x2)

inst_87837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:263511*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263511*0 + 3*285*FLEN/8, x4, x1, x2)

inst_87838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:263514*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263514*0 + 3*286*FLEN/8, x4, x1, x2)

inst_87839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:263517*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263517*0 + 3*287*FLEN/8, x4, x1, x2)

inst_87840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:263520*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263520*0 + 3*288*FLEN/8, x4, x1, x2)

inst_87841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:263523*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263523*0 + 3*289*FLEN/8, x4, x1, x2)

inst_87842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:263526*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263526*0 + 3*290*FLEN/8, x4, x1, x2)

inst_87843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:263529*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263529*0 + 3*291*FLEN/8, x4, x1, x2)

inst_87844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:263532*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263532*0 + 3*292*FLEN/8, x4, x1, x2)

inst_87845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:263535*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263535*0 + 3*293*FLEN/8, x4, x1, x2)

inst_87846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:263538*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263538*0 + 3*294*FLEN/8, x4, x1, x2)

inst_87847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:263541*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263541*0 + 3*295*FLEN/8, x4, x1, x2)

inst_87848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:263544*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263544*0 + 3*296*FLEN/8, x4, x1, x2)

inst_87849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:263547*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263547*0 + 3*297*FLEN/8, x4, x1, x2)

inst_87850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:263550*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263550*0 + 3*298*FLEN/8, x4, x1, x2)

inst_87851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:263553*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263553*0 + 3*299*FLEN/8, x4, x1, x2)

inst_87852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:263556*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263556*0 + 3*300*FLEN/8, x4, x1, x2)

inst_87853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:263559*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263559*0 + 3*301*FLEN/8, x4, x1, x2)

inst_87854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:263562*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263562*0 + 3*302*FLEN/8, x4, x1, x2)

inst_87855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:263565*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263565*0 + 3*303*FLEN/8, x4, x1, x2)

inst_87856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:263568*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263568*0 + 3*304*FLEN/8, x4, x1, x2)

inst_87857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:263571*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263571*0 + 3*305*FLEN/8, x4, x1, x2)

inst_87858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:263574*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263574*0 + 3*306*FLEN/8, x4, x1, x2)

inst_87859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:263577*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263577*0 + 3*307*FLEN/8, x4, x1, x2)

inst_87860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:263580*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263580*0 + 3*308*FLEN/8, x4, x1, x2)

inst_87861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:263583*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263583*0 + 3*309*FLEN/8, x4, x1, x2)

inst_87862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:263586*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263586*0 + 3*310*FLEN/8, x4, x1, x2)

inst_87863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:263589*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263589*0 + 3*311*FLEN/8, x4, x1, x2)

inst_87864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:263592*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263592*0 + 3*312*FLEN/8, x4, x1, x2)

inst_87865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:263595*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263595*0 + 3*313*FLEN/8, x4, x1, x2)

inst_87866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:263598*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263598*0 + 3*314*FLEN/8, x4, x1, x2)

inst_87867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:263601*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263601*0 + 3*315*FLEN/8, x4, x1, x2)

inst_87868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:263604*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263604*0 + 3*316*FLEN/8, x4, x1, x2)

inst_87869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:263607*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263607*0 + 3*317*FLEN/8, x4, x1, x2)

inst_87870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:263610*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263610*0 + 3*318*FLEN/8, x4, x1, x2)

inst_87871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:263613*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263613*0 + 3*319*FLEN/8, x4, x1, x2)

inst_87872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:263616*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263616*0 + 3*320*FLEN/8, x4, x1, x2)

inst_87873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:263619*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263619*0 + 3*321*FLEN/8, x4, x1, x2)

inst_87874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:263622*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263622*0 + 3*322*FLEN/8, x4, x1, x2)

inst_87875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:263625*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263625*0 + 3*323*FLEN/8, x4, x1, x2)

inst_87876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:263628*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263628*0 + 3*324*FLEN/8, x4, x1, x2)

inst_87877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:263631*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263631*0 + 3*325*FLEN/8, x4, x1, x2)

inst_87878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:263634*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263634*0 + 3*326*FLEN/8, x4, x1, x2)

inst_87879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:263637*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263637*0 + 3*327*FLEN/8, x4, x1, x2)

inst_87880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:263640*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263640*0 + 3*328*FLEN/8, x4, x1, x2)

inst_87881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:263643*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263643*0 + 3*329*FLEN/8, x4, x1, x2)

inst_87882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:263646*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263646*0 + 3*330*FLEN/8, x4, x1, x2)

inst_87883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:263649*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263649*0 + 3*331*FLEN/8, x4, x1, x2)

inst_87884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:263652*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263652*0 + 3*332*FLEN/8, x4, x1, x2)

inst_87885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:263655*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263655*0 + 3*333*FLEN/8, x4, x1, x2)

inst_87886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:263658*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263658*0 + 3*334*FLEN/8, x4, x1, x2)

inst_87887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:263661*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263661*0 + 3*335*FLEN/8, x4, x1, x2)

inst_87888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffffe0; valaddr_reg:x3; val_offset:263664*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263664*0 + 3*336*FLEN/8, x4, x1, x2)

inst_87889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffff0; valaddr_reg:x3; val_offset:263667*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263667*0 + 3*337*FLEN/8, x4, x1, x2)

inst_87890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffff8; valaddr_reg:x3; val_offset:263670*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263670*0 + 3*338*FLEN/8, x4, x1, x2)

inst_87891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffffc; valaddr_reg:x3; val_offset:263673*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263673*0 + 3*339*FLEN/8, x4, x1, x2)

inst_87892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1effffffffffffe; valaddr_reg:x3; val_offset:263676*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263676*0 + 3*340*FLEN/8, x4, x1, x2)

inst_87893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb0c5058cd1c29 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab0c5058cd1c29; op2val:0x0;
op3val:0x1efffffffffffff; valaddr_reg:x3; val_offset:263679*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263679*0 + 3*341*FLEN/8, x4, x1, x2)

inst_87894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:263682*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263682*0 + 3*342*FLEN/8, x4, x1, x2)

inst_87895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:263685*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263685*0 + 3*343*FLEN/8, x4, x1, x2)

inst_87896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:263688*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263688*0 + 3*344*FLEN/8, x4, x1, x2)

inst_87897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:263691*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263691*0 + 3*345*FLEN/8, x4, x1, x2)

inst_87898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:263694*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263694*0 + 3*346*FLEN/8, x4, x1, x2)

inst_87899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:263697*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263697*0 + 3*347*FLEN/8, x4, x1, x2)

inst_87900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:263700*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263700*0 + 3*348*FLEN/8, x4, x1, x2)

inst_87901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:263703*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263703*0 + 3*349*FLEN/8, x4, x1, x2)

inst_87902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:263706*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263706*0 + 3*350*FLEN/8, x4, x1, x2)

inst_87903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:263709*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263709*0 + 3*351*FLEN/8, x4, x1, x2)

inst_87904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:263712*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263712*0 + 3*352*FLEN/8, x4, x1, x2)

inst_87905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:263715*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263715*0 + 3*353*FLEN/8, x4, x1, x2)

inst_87906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:263718*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263718*0 + 3*354*FLEN/8, x4, x1, x2)

inst_87907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:263721*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263721*0 + 3*355*FLEN/8, x4, x1, x2)

inst_87908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:263724*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263724*0 + 3*356*FLEN/8, x4, x1, x2)

inst_87909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:263727*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263727*0 + 3*357*FLEN/8, x4, x1, x2)

inst_87910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:263730*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263730*0 + 3*358*FLEN/8, x4, x1, x2)

inst_87911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:263733*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263733*0 + 3*359*FLEN/8, x4, x1, x2)

inst_87912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:263736*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263736*0 + 3*360*FLEN/8, x4, x1, x2)

inst_87913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:263739*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263739*0 + 3*361*FLEN/8, x4, x1, x2)

inst_87914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:263742*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263742*0 + 3*362*FLEN/8, x4, x1, x2)

inst_87915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:263745*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263745*0 + 3*363*FLEN/8, x4, x1, x2)

inst_87916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:263748*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263748*0 + 3*364*FLEN/8, x4, x1, x2)

inst_87917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:263751*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263751*0 + 3*365*FLEN/8, x4, x1, x2)

inst_87918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:263754*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263754*0 + 3*366*FLEN/8, x4, x1, x2)

inst_87919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:263757*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263757*0 + 3*367*FLEN/8, x4, x1, x2)

inst_87920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:263760*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263760*0 + 3*368*FLEN/8, x4, x1, x2)

inst_87921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:263763*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263763*0 + 3*369*FLEN/8, x4, x1, x2)

inst_87922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:263766*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263766*0 + 3*370*FLEN/8, x4, x1, x2)

inst_87923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:263769*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263769*0 + 3*371*FLEN/8, x4, x1, x2)

inst_87924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:263772*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263772*0 + 3*372*FLEN/8, x4, x1, x2)

inst_87925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:263775*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263775*0 + 3*373*FLEN/8, x4, x1, x2)

inst_87926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:263778*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263778*0 + 3*374*FLEN/8, x4, x1, x2)

inst_87927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:263781*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263781*0 + 3*375*FLEN/8, x4, x1, x2)

inst_87928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:263784*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263784*0 + 3*376*FLEN/8, x4, x1, x2)

inst_87929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:263787*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263787*0 + 3*377*FLEN/8, x4, x1, x2)

inst_87930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:263790*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263790*0 + 3*378*FLEN/8, x4, x1, x2)

inst_87931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:263793*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263793*0 + 3*379*FLEN/8, x4, x1, x2)

inst_87932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:263796*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263796*0 + 3*380*FLEN/8, x4, x1, x2)

inst_87933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:263799*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263799*0 + 3*381*FLEN/8, x4, x1, x2)

inst_87934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:263802*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263802*0 + 3*382*FLEN/8, x4, x1, x2)

inst_87935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:263805*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263805*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_87936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:263808*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263808*0 + 3*384*FLEN/8, x4, x1, x2)

inst_87937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:263811*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263811*0 + 3*385*FLEN/8, x4, x1, x2)

inst_87938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:263814*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263814*0 + 3*386*FLEN/8, x4, x1, x2)

inst_87939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:263817*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263817*0 + 3*387*FLEN/8, x4, x1, x2)

inst_87940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:263820*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263820*0 + 3*388*FLEN/8, x4, x1, x2)

inst_87941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:263823*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263823*0 + 3*389*FLEN/8, x4, x1, x2)

inst_87942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:263826*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263826*0 + 3*390*FLEN/8, x4, x1, x2)

inst_87943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:263829*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263829*0 + 3*391*FLEN/8, x4, x1, x2)

inst_87944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:263832*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263832*0 + 3*392*FLEN/8, x4, x1, x2)

inst_87945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:263835*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263835*0 + 3*393*FLEN/8, x4, x1, x2)

inst_87946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:263838*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263838*0 + 3*394*FLEN/8, x4, x1, x2)

inst_87947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:263841*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263841*0 + 3*395*FLEN/8, x4, x1, x2)

inst_87948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:263844*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263844*0 + 3*396*FLEN/8, x4, x1, x2)

inst_87949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:263847*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263847*0 + 3*397*FLEN/8, x4, x1, x2)

inst_87950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:263850*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263850*0 + 3*398*FLEN/8, x4, x1, x2)

inst_87951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:263853*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263853*0 + 3*399*FLEN/8, x4, x1, x2)

inst_87952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:263856*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263856*0 + 3*400*FLEN/8, x4, x1, x2)

inst_87953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:263859*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263859*0 + 3*401*FLEN/8, x4, x1, x2)

inst_87954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:263862*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263862*0 + 3*402*FLEN/8, x4, x1, x2)

inst_87955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:263865*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263865*0 + 3*403*FLEN/8, x4, x1, x2)

inst_87956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:263868*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263868*0 + 3*404*FLEN/8, x4, x1, x2)

inst_87957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:263871*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263871*0 + 3*405*FLEN/8, x4, x1, x2)

inst_87958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:263874*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263874*0 + 3*406*FLEN/8, x4, x1, x2)

inst_87959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:263877*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263877*0 + 3*407*FLEN/8, x4, x1, x2)

inst_87960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:263880*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263880*0 + 3*408*FLEN/8, x4, x1, x2)

inst_87961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:263883*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263883*0 + 3*409*FLEN/8, x4, x1, x2)

inst_87962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:263886*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263886*0 + 3*410*FLEN/8, x4, x1, x2)

inst_87963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:263889*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263889*0 + 3*411*FLEN/8, x4, x1, x2)

inst_87964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:263892*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263892*0 + 3*412*FLEN/8, x4, x1, x2)

inst_87965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:263895*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263895*0 + 3*413*FLEN/8, x4, x1, x2)

inst_87966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:263898*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263898*0 + 3*414*FLEN/8, x4, x1, x2)

inst_87967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:263901*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263901*0 + 3*415*FLEN/8, x4, x1, x2)

inst_87968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:263904*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263904*0 + 3*416*FLEN/8, x4, x1, x2)

inst_87969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:263907*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263907*0 + 3*417*FLEN/8, x4, x1, x2)

inst_87970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:263910*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263910*0 + 3*418*FLEN/8, x4, x1, x2)

inst_87971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:263913*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263913*0 + 3*419*FLEN/8, x4, x1, x2)

inst_87972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:263916*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263916*0 + 3*420*FLEN/8, x4, x1, x2)

inst_87973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:263919*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263919*0 + 3*421*FLEN/8, x4, x1, x2)

inst_87974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:263922*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263922*0 + 3*422*FLEN/8, x4, x1, x2)

inst_87975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:263925*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263925*0 + 3*423*FLEN/8, x4, x1, x2)

inst_87976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:263928*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263928*0 + 3*424*FLEN/8, x4, x1, x2)

inst_87977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:263931*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263931*0 + 3*425*FLEN/8, x4, x1, x2)

inst_87978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:263934*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263934*0 + 3*426*FLEN/8, x4, x1, x2)

inst_87979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:263937*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263937*0 + 3*427*FLEN/8, x4, x1, x2)

inst_87980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:263940*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263940*0 + 3*428*FLEN/8, x4, x1, x2)

inst_87981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:263943*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263943*0 + 3*429*FLEN/8, x4, x1, x2)

inst_87982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:263946*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263946*0 + 3*430*FLEN/8, x4, x1, x2)

inst_87983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:263949*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263949*0 + 3*431*FLEN/8, x4, x1, x2)

inst_87984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:263952*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263952*0 + 3*432*FLEN/8, x4, x1, x2)

inst_87985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:263955*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263955*0 + 3*433*FLEN/8, x4, x1, x2)

inst_87986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:263958*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263958*0 + 3*434*FLEN/8, x4, x1, x2)

inst_87987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:263961*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263961*0 + 3*435*FLEN/8, x4, x1, x2)

inst_87988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:263964*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263964*0 + 3*436*FLEN/8, x4, x1, x2)

inst_87989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:263967*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263967*0 + 3*437*FLEN/8, x4, x1, x2)

inst_87990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:263970*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263970*0 + 3*438*FLEN/8, x4, x1, x2)

inst_87991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:263973*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263973*0 + 3*439*FLEN/8, x4, x1, x2)

inst_87992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:263976*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263976*0 + 3*440*FLEN/8, x4, x1, x2)

inst_87993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:263979*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263979*0 + 3*441*FLEN/8, x4, x1, x2)

inst_87994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:263982*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263982*0 + 3*442*FLEN/8, x4, x1, x2)

inst_87995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:263985*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263985*0 + 3*443*FLEN/8, x4, x1, x2)

inst_87996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:263988*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263988*0 + 3*444*FLEN/8, x4, x1, x2)

inst_87997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:263991*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263991*0 + 3*445*FLEN/8, x4, x1, x2)

inst_87998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:263994*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263994*0 + 3*446*FLEN/8, x4, x1, x2)

inst_87999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:263997*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 263997*0 + 3*447*FLEN/8, x4, x1, x2)

inst_88000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:264000*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264000*0 + 3*448*FLEN/8, x4, x1, x2)

inst_88001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:264003*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264003*0 + 3*449*FLEN/8, x4, x1, x2)

inst_88002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:264006*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264006*0 + 3*450*FLEN/8, x4, x1, x2)

inst_88003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:264009*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264009*0 + 3*451*FLEN/8, x4, x1, x2)

inst_88004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:264012*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264012*0 + 3*452*FLEN/8, x4, x1, x2)

inst_88005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:264015*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264015*0 + 3*453*FLEN/8, x4, x1, x2)

inst_88006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:264018*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264018*0 + 3*454*FLEN/8, x4, x1, x2)

inst_88007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:264021*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264021*0 + 3*455*FLEN/8, x4, x1, x2)

inst_88008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:264024*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264024*0 + 3*456*FLEN/8, x4, x1, x2)

inst_88009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:264027*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264027*0 + 3*457*FLEN/8, x4, x1, x2)

inst_88010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:264030*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264030*0 + 3*458*FLEN/8, x4, x1, x2)

inst_88011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:264033*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264033*0 + 3*459*FLEN/8, x4, x1, x2)

inst_88012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:264036*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264036*0 + 3*460*FLEN/8, x4, x1, x2)

inst_88013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:264039*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264039*0 + 3*461*FLEN/8, x4, x1, x2)

inst_88014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:264042*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264042*0 + 3*462*FLEN/8, x4, x1, x2)

inst_88015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:264045*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264045*0 + 3*463*FLEN/8, x4, x1, x2)

inst_88016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:264048*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264048*0 + 3*464*FLEN/8, x4, x1, x2)

inst_88017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:264051*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264051*0 + 3*465*FLEN/8, x4, x1, x2)

inst_88018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:264054*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264054*0 + 3*466*FLEN/8, x4, x1, x2)

inst_88019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb19abcbfb877f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab19abcbfb877f; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:264057*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264057*0 + 3*467*FLEN/8, x4, x1, x2)

inst_88020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:264060*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264060*0 + 3*468*FLEN/8, x4, x1, x2)

inst_88021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:264063*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264063*0 + 3*469*FLEN/8, x4, x1, x2)

inst_88022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:264066*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264066*0 + 3*470*FLEN/8, x4, x1, x2)

inst_88023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:264069*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264069*0 + 3*471*FLEN/8, x4, x1, x2)

inst_88024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:264072*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264072*0 + 3*472*FLEN/8, x4, x1, x2)

inst_88025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:264075*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264075*0 + 3*473*FLEN/8, x4, x1, x2)

inst_88026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:264078*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264078*0 + 3*474*FLEN/8, x4, x1, x2)

inst_88027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:264081*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264081*0 + 3*475*FLEN/8, x4, x1, x2)

inst_88028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:264084*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264084*0 + 3*476*FLEN/8, x4, x1, x2)

inst_88029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:264087*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264087*0 + 3*477*FLEN/8, x4, x1, x2)

inst_88030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:264090*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264090*0 + 3*478*FLEN/8, x4, x1, x2)

inst_88031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:264093*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264093*0 + 3*479*FLEN/8, x4, x1, x2)

inst_88032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:264096*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264096*0 + 3*480*FLEN/8, x4, x1, x2)

inst_88033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:264099*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264099*0 + 3*481*FLEN/8, x4, x1, x2)

inst_88034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:264102*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264102*0 + 3*482*FLEN/8, x4, x1, x2)

inst_88035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:264105*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264105*0 + 3*483*FLEN/8, x4, x1, x2)

inst_88036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:264108*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264108*0 + 3*484*FLEN/8, x4, x1, x2)

inst_88037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:264111*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264111*0 + 3*485*FLEN/8, x4, x1, x2)

inst_88038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:264114*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264114*0 + 3*486*FLEN/8, x4, x1, x2)

inst_88039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:264117*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264117*0 + 3*487*FLEN/8, x4, x1, x2)

inst_88040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:264120*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264120*0 + 3*488*FLEN/8, x4, x1, x2)

inst_88041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:264123*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264123*0 + 3*489*FLEN/8, x4, x1, x2)

inst_88042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:264126*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264126*0 + 3*490*FLEN/8, x4, x1, x2)

inst_88043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:264129*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264129*0 + 3*491*FLEN/8, x4, x1, x2)

inst_88044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:264132*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264132*0 + 3*492*FLEN/8, x4, x1, x2)

inst_88045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:264135*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264135*0 + 3*493*FLEN/8, x4, x1, x2)

inst_88046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:264138*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264138*0 + 3*494*FLEN/8, x4, x1, x2)

inst_88047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:264141*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264141*0 + 3*495*FLEN/8, x4, x1, x2)

inst_88048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:264144*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264144*0 + 3*496*FLEN/8, x4, x1, x2)

inst_88049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:264147*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264147*0 + 3*497*FLEN/8, x4, x1, x2)

inst_88050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:264150*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264150*0 + 3*498*FLEN/8, x4, x1, x2)

inst_88051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:264153*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264153*0 + 3*499*FLEN/8, x4, x1, x2)

inst_88052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:264156*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264156*0 + 3*500*FLEN/8, x4, x1, x2)

inst_88053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:264159*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264159*0 + 3*501*FLEN/8, x4, x1, x2)

inst_88054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:264162*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264162*0 + 3*502*FLEN/8, x4, x1, x2)

inst_88055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:264165*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264165*0 + 3*503*FLEN/8, x4, x1, x2)

inst_88056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:264168*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264168*0 + 3*504*FLEN/8, x4, x1, x2)

inst_88057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:264171*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264171*0 + 3*505*FLEN/8, x4, x1, x2)

inst_88058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:264174*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264174*0 + 3*506*FLEN/8, x4, x1, x2)

inst_88059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:264177*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264177*0 + 3*507*FLEN/8, x4, x1, x2)

inst_88060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:264180*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264180*0 + 3*508*FLEN/8, x4, x1, x2)

inst_88061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:264183*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264183*0 + 3*509*FLEN/8, x4, x1, x2)

inst_88062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:264186*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264186*0 + 3*510*FLEN/8, x4, x1, x2)

inst_88063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:264189*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264189*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_88064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:264192*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264192*0 + 3*512*FLEN/8, x4, x1, x2)

inst_88065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:264195*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264195*0 + 3*513*FLEN/8, x4, x1, x2)

inst_88066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:264198*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264198*0 + 3*514*FLEN/8, x4, x1, x2)

inst_88067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:264201*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264201*0 + 3*515*FLEN/8, x4, x1, x2)

inst_88068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:264204*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264204*0 + 3*516*FLEN/8, x4, x1, x2)

inst_88069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:264207*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264207*0 + 3*517*FLEN/8, x4, x1, x2)

inst_88070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:264210*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264210*0 + 3*518*FLEN/8, x4, x1, x2)

inst_88071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:264213*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264213*0 + 3*519*FLEN/8, x4, x1, x2)

inst_88072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:264216*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264216*0 + 3*520*FLEN/8, x4, x1, x2)

inst_88073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:264219*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264219*0 + 3*521*FLEN/8, x4, x1, x2)

inst_88074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:264222*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264222*0 + 3*522*FLEN/8, x4, x1, x2)

inst_88075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:264225*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264225*0 + 3*523*FLEN/8, x4, x1, x2)

inst_88076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:264228*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264228*0 + 3*524*FLEN/8, x4, x1, x2)

inst_88077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:264231*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264231*0 + 3*525*FLEN/8, x4, x1, x2)

inst_88078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:264234*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264234*0 + 3*526*FLEN/8, x4, x1, x2)

inst_88079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:264237*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264237*0 + 3*527*FLEN/8, x4, x1, x2)

inst_88080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:264240*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264240*0 + 3*528*FLEN/8, x4, x1, x2)

inst_88081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:264243*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264243*0 + 3*529*FLEN/8, x4, x1, x2)

inst_88082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:264246*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264246*0 + 3*530*FLEN/8, x4, x1, x2)

inst_88083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:264249*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264249*0 + 3*531*FLEN/8, x4, x1, x2)

inst_88084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:264252*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264252*0 + 3*532*FLEN/8, x4, x1, x2)

inst_88085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:264255*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264255*0 + 3*533*FLEN/8, x4, x1, x2)

inst_88086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:264258*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264258*0 + 3*534*FLEN/8, x4, x1, x2)

inst_88087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:264261*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264261*0 + 3*535*FLEN/8, x4, x1, x2)

inst_88088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:264264*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264264*0 + 3*536*FLEN/8, x4, x1, x2)

inst_88089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:264267*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264267*0 + 3*537*FLEN/8, x4, x1, x2)

inst_88090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:264270*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264270*0 + 3*538*FLEN/8, x4, x1, x2)

inst_88091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:264273*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264273*0 + 3*539*FLEN/8, x4, x1, x2)

inst_88092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:264276*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264276*0 + 3*540*FLEN/8, x4, x1, x2)

inst_88093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:264279*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264279*0 + 3*541*FLEN/8, x4, x1, x2)

inst_88094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:264282*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264282*0 + 3*542*FLEN/8, x4, x1, x2)

inst_88095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:264285*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264285*0 + 3*543*FLEN/8, x4, x1, x2)

inst_88096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:264288*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264288*0 + 3*544*FLEN/8, x4, x1, x2)

inst_88097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:264291*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264291*0 + 3*545*FLEN/8, x4, x1, x2)

inst_88098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:264294*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264294*0 + 3*546*FLEN/8, x4, x1, x2)

inst_88099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:264297*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264297*0 + 3*547*FLEN/8, x4, x1, x2)

inst_88100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:264300*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264300*0 + 3*548*FLEN/8, x4, x1, x2)

inst_88101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:264303*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264303*0 + 3*549*FLEN/8, x4, x1, x2)

inst_88102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:264306*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264306*0 + 3*550*FLEN/8, x4, x1, x2)

inst_88103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:264309*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264309*0 + 3*551*FLEN/8, x4, x1, x2)

inst_88104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:264312*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264312*0 + 3*552*FLEN/8, x4, x1, x2)

inst_88105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:264315*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264315*0 + 3*553*FLEN/8, x4, x1, x2)

inst_88106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:264318*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264318*0 + 3*554*FLEN/8, x4, x1, x2)

inst_88107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:264321*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264321*0 + 3*555*FLEN/8, x4, x1, x2)

inst_88108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:264324*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264324*0 + 3*556*FLEN/8, x4, x1, x2)

inst_88109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:264327*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264327*0 + 3*557*FLEN/8, x4, x1, x2)

inst_88110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:264330*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264330*0 + 3*558*FLEN/8, x4, x1, x2)

inst_88111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:264333*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264333*0 + 3*559*FLEN/8, x4, x1, x2)

inst_88112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:264336*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264336*0 + 3*560*FLEN/8, x4, x1, x2)

inst_88113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:264339*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264339*0 + 3*561*FLEN/8, x4, x1, x2)

inst_88114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:264342*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264342*0 + 3*562*FLEN/8, x4, x1, x2)

inst_88115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:264345*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264345*0 + 3*563*FLEN/8, x4, x1, x2)

inst_88116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:264348*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264348*0 + 3*564*FLEN/8, x4, x1, x2)

inst_88117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:264351*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264351*0 + 3*565*FLEN/8, x4, x1, x2)

inst_88118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:264354*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264354*0 + 3*566*FLEN/8, x4, x1, x2)

inst_88119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:264357*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264357*0 + 3*567*FLEN/8, x4, x1, x2)

inst_88120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:264360*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264360*0 + 3*568*FLEN/8, x4, x1, x2)

inst_88121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:264363*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264363*0 + 3*569*FLEN/8, x4, x1, x2)

inst_88122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:264366*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264366*0 + 3*570*FLEN/8, x4, x1, x2)

inst_88123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:264369*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264369*0 + 3*571*FLEN/8, x4, x1, x2)

inst_88124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:264372*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264372*0 + 3*572*FLEN/8, x4, x1, x2)

inst_88125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:264375*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264375*0 + 3*573*FLEN/8, x4, x1, x2)

inst_88126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:264378*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264378*0 + 3*574*FLEN/8, x4, x1, x2)

inst_88127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:264381*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264381*0 + 3*575*FLEN/8, x4, x1, x2)

inst_88128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:264384*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264384*0 + 3*576*FLEN/8, x4, x1, x2)

inst_88129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:264387*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264387*0 + 3*577*FLEN/8, x4, x1, x2)

inst_88130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:264390*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264390*0 + 3*578*FLEN/8, x4, x1, x2)

inst_88131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:264393*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264393*0 + 3*579*FLEN/8, x4, x1, x2)

inst_88132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:264396*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264396*0 + 3*580*FLEN/8, x4, x1, x2)

inst_88133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:264399*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264399*0 + 3*581*FLEN/8, x4, x1, x2)

inst_88134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:264402*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264402*0 + 3*582*FLEN/8, x4, x1, x2)

inst_88135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:264405*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264405*0 + 3*583*FLEN/8, x4, x1, x2)

inst_88136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:264408*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264408*0 + 3*584*FLEN/8, x4, x1, x2)

inst_88137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:264411*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264411*0 + 3*585*FLEN/8, x4, x1, x2)

inst_88138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:264414*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264414*0 + 3*586*FLEN/8, x4, x1, x2)

inst_88139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:264417*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264417*0 + 3*587*FLEN/8, x4, x1, x2)

inst_88140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:264420*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264420*0 + 3*588*FLEN/8, x4, x1, x2)

inst_88141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:264423*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264423*0 + 3*589*FLEN/8, x4, x1, x2)

inst_88142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:264426*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264426*0 + 3*590*FLEN/8, x4, x1, x2)

inst_88143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:264429*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264429*0 + 3*591*FLEN/8, x4, x1, x2)

inst_88144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:264432*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264432*0 + 3*592*FLEN/8, x4, x1, x2)

inst_88145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb2945757be064 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab2945757be064; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:264435*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264435*0 + 3*593*FLEN/8, x4, x1, x2)

inst_88146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:264438*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264438*0 + 3*594*FLEN/8, x4, x1, x2)

inst_88147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:264441*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264441*0 + 3*595*FLEN/8, x4, x1, x2)

inst_88148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:264444*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264444*0 + 3*596*FLEN/8, x4, x1, x2)

inst_88149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:264447*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264447*0 + 3*597*FLEN/8, x4, x1, x2)

inst_88150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:264450*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264450*0 + 3*598*FLEN/8, x4, x1, x2)

inst_88151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:264453*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264453*0 + 3*599*FLEN/8, x4, x1, x2)

inst_88152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:264456*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264456*0 + 3*600*FLEN/8, x4, x1, x2)

inst_88153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:264459*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264459*0 + 3*601*FLEN/8, x4, x1, x2)

inst_88154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:264462*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264462*0 + 3*602*FLEN/8, x4, x1, x2)

inst_88155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:264465*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264465*0 + 3*603*FLEN/8, x4, x1, x2)

inst_88156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:264468*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264468*0 + 3*604*FLEN/8, x4, x1, x2)

inst_88157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:264471*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264471*0 + 3*605*FLEN/8, x4, x1, x2)

inst_88158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:264474*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264474*0 + 3*606*FLEN/8, x4, x1, x2)

inst_88159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:264477*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264477*0 + 3*607*FLEN/8, x4, x1, x2)

inst_88160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:264480*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264480*0 + 3*608*FLEN/8, x4, x1, x2)

inst_88161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:264483*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264483*0 + 3*609*FLEN/8, x4, x1, x2)

inst_88162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:264486*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264486*0 + 3*610*FLEN/8, x4, x1, x2)

inst_88163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:264489*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264489*0 + 3*611*FLEN/8, x4, x1, x2)

inst_88164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:264492*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264492*0 + 3*612*FLEN/8, x4, x1, x2)

inst_88165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:264495*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264495*0 + 3*613*FLEN/8, x4, x1, x2)

inst_88166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:264498*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264498*0 + 3*614*FLEN/8, x4, x1, x2)

inst_88167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:264501*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264501*0 + 3*615*FLEN/8, x4, x1, x2)

inst_88168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000000000; valaddr_reg:x3; val_offset:264504*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264504*0 + 3*616*FLEN/8, x4, x1, x2)

inst_88169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000000001; valaddr_reg:x3; val_offset:264507*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264507*0 + 3*617*FLEN/8, x4, x1, x2)

inst_88170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000000003; valaddr_reg:x3; val_offset:264510*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264510*0 + 3*618*FLEN/8, x4, x1, x2)

inst_88171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000000007; valaddr_reg:x3; val_offset:264513*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264513*0 + 3*619*FLEN/8, x4, x1, x2)

inst_88172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000000000f; valaddr_reg:x3; val_offset:264516*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264516*0 + 3*620*FLEN/8, x4, x1, x2)

inst_88173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000000001f; valaddr_reg:x3; val_offset:264519*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264519*0 + 3*621*FLEN/8, x4, x1, x2)

inst_88174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000000003f; valaddr_reg:x3; val_offset:264522*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264522*0 + 3*622*FLEN/8, x4, x1, x2)

inst_88175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000000007f; valaddr_reg:x3; val_offset:264525*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264525*0 + 3*623*FLEN/8, x4, x1, x2)

inst_88176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000000000ff; valaddr_reg:x3; val_offset:264528*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264528*0 + 3*624*FLEN/8, x4, x1, x2)

inst_88177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000000001ff; valaddr_reg:x3; val_offset:264531*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264531*0 + 3*625*FLEN/8, x4, x1, x2)

inst_88178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000000003ff; valaddr_reg:x3; val_offset:264534*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264534*0 + 3*626*FLEN/8, x4, x1, x2)

inst_88179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000000007ff; valaddr_reg:x3; val_offset:264537*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264537*0 + 3*627*FLEN/8, x4, x1, x2)

inst_88180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000000fff; valaddr_reg:x3; val_offset:264540*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264540*0 + 3*628*FLEN/8, x4, x1, x2)

inst_88181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000001fff; valaddr_reg:x3; val_offset:264543*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264543*0 + 3*629*FLEN/8, x4, x1, x2)

inst_88182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000003fff; valaddr_reg:x3; val_offset:264546*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264546*0 + 3*630*FLEN/8, x4, x1, x2)

inst_88183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000007fff; valaddr_reg:x3; val_offset:264549*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264549*0 + 3*631*FLEN/8, x4, x1, x2)

inst_88184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000000ffff; valaddr_reg:x3; val_offset:264552*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264552*0 + 3*632*FLEN/8, x4, x1, x2)

inst_88185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000001ffff; valaddr_reg:x3; val_offset:264555*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264555*0 + 3*633*FLEN/8, x4, x1, x2)

inst_88186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000003ffff; valaddr_reg:x3; val_offset:264558*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264558*0 + 3*634*FLEN/8, x4, x1, x2)

inst_88187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000007ffff; valaddr_reg:x3; val_offset:264561*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264561*0 + 3*635*FLEN/8, x4, x1, x2)

inst_88188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000000fffff; valaddr_reg:x3; val_offset:264564*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264564*0 + 3*636*FLEN/8, x4, x1, x2)

inst_88189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000001fffff; valaddr_reg:x3; val_offset:264567*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264567*0 + 3*637*FLEN/8, x4, x1, x2)

inst_88190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000003fffff; valaddr_reg:x3; val_offset:264570*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264570*0 + 3*638*FLEN/8, x4, x1, x2)

inst_88191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000007fffff; valaddr_reg:x3; val_offset:264573*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264573*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_88192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000000ffffff; valaddr_reg:x3; val_offset:264576*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264576*0 + 3*640*FLEN/8, x4, x1, x2)

inst_88193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000001ffffff; valaddr_reg:x3; val_offset:264579*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264579*0 + 3*641*FLEN/8, x4, x1, x2)

inst_88194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000003ffffff; valaddr_reg:x3; val_offset:264582*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264582*0 + 3*642*FLEN/8, x4, x1, x2)

inst_88195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000007ffffff; valaddr_reg:x3; val_offset:264585*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264585*0 + 3*643*FLEN/8, x4, x1, x2)

inst_88196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000000fffffff; valaddr_reg:x3; val_offset:264588*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264588*0 + 3*644*FLEN/8, x4, x1, x2)

inst_88197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000001fffffff; valaddr_reg:x3; val_offset:264591*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264591*0 + 3*645*FLEN/8, x4, x1, x2)

inst_88198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000003fffffff; valaddr_reg:x3; val_offset:264594*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264594*0 + 3*646*FLEN/8, x4, x1, x2)

inst_88199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000007fffffff; valaddr_reg:x3; val_offset:264597*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264597*0 + 3*647*FLEN/8, x4, x1, x2)

inst_88200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100000ffffffff; valaddr_reg:x3; val_offset:264600*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264600*0 + 3*648*FLEN/8, x4, x1, x2)

inst_88201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100001ffffffff; valaddr_reg:x3; val_offset:264603*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264603*0 + 3*649*FLEN/8, x4, x1, x2)

inst_88202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100003ffffffff; valaddr_reg:x3; val_offset:264606*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264606*0 + 3*650*FLEN/8, x4, x1, x2)

inst_88203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100007ffffffff; valaddr_reg:x3; val_offset:264609*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264609*0 + 3*651*FLEN/8, x4, x1, x2)

inst_88204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310000fffffffff; valaddr_reg:x3; val_offset:264612*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264612*0 + 3*652*FLEN/8, x4, x1, x2)

inst_88205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310001fffffffff; valaddr_reg:x3; val_offset:264615*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264615*0 + 3*653*FLEN/8, x4, x1, x2)

inst_88206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310003fffffffff; valaddr_reg:x3; val_offset:264618*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264618*0 + 3*654*FLEN/8, x4, x1, x2)

inst_88207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310007fffffffff; valaddr_reg:x3; val_offset:264621*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264621*0 + 3*655*FLEN/8, x4, x1, x2)

inst_88208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831000ffffffffff; valaddr_reg:x3; val_offset:264624*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264624*0 + 3*656*FLEN/8, x4, x1, x2)

inst_88209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831001ffffffffff; valaddr_reg:x3; val_offset:264627*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264627*0 + 3*657*FLEN/8, x4, x1, x2)

inst_88210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831003ffffffffff; valaddr_reg:x3; val_offset:264630*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264630*0 + 3*658*FLEN/8, x4, x1, x2)

inst_88211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831007ffffffffff; valaddr_reg:x3; val_offset:264633*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264633*0 + 3*659*FLEN/8, x4, x1, x2)

inst_88212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83100fffffffffff; valaddr_reg:x3; val_offset:264636*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264636*0 + 3*660*FLEN/8, x4, x1, x2)

inst_88213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83101fffffffffff; valaddr_reg:x3; val_offset:264639*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264639*0 + 3*661*FLEN/8, x4, x1, x2)

inst_88214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83103fffffffffff; valaddr_reg:x3; val_offset:264642*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264642*0 + 3*662*FLEN/8, x4, x1, x2)

inst_88215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x83107fffffffffff; valaddr_reg:x3; val_offset:264645*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264645*0 + 3*663*FLEN/8, x4, x1, x2)

inst_88216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8310ffffffffffff; valaddr_reg:x3; val_offset:264648*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264648*0 + 3*664*FLEN/8, x4, x1, x2)

inst_88217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8311ffffffffffff; valaddr_reg:x3; val_offset:264651*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264651*0 + 3*665*FLEN/8, x4, x1, x2)

inst_88218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8313ffffffffffff; valaddr_reg:x3; val_offset:264654*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264654*0 + 3*666*FLEN/8, x4, x1, x2)

inst_88219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8317ffffffffffff; valaddr_reg:x3; val_offset:264657*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264657*0 + 3*667*FLEN/8, x4, x1, x2)

inst_88220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x8318000000000000; valaddr_reg:x3; val_offset:264660*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264660*0 + 3*668*FLEN/8, x4, x1, x2)

inst_88221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831c000000000000; valaddr_reg:x3; val_offset:264663*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264663*0 + 3*669*FLEN/8, x4, x1, x2)

inst_88222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831e000000000000; valaddr_reg:x3; val_offset:264666*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264666*0 + 3*670*FLEN/8, x4, x1, x2)

inst_88223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831f000000000000; valaddr_reg:x3; val_offset:264669*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264669*0 + 3*671*FLEN/8, x4, x1, x2)

inst_88224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831f800000000000; valaddr_reg:x3; val_offset:264672*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264672*0 + 3*672*FLEN/8, x4, x1, x2)

inst_88225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fc00000000000; valaddr_reg:x3; val_offset:264675*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264675*0 + 3*673*FLEN/8, x4, x1, x2)

inst_88226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fe00000000000; valaddr_reg:x3; val_offset:264678*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264678*0 + 3*674*FLEN/8, x4, x1, x2)

inst_88227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ff00000000000; valaddr_reg:x3; val_offset:264681*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264681*0 + 3*675*FLEN/8, x4, x1, x2)

inst_88228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ff80000000000; valaddr_reg:x3; val_offset:264684*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264684*0 + 3*676*FLEN/8, x4, x1, x2)

inst_88229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffc0000000000; valaddr_reg:x3; val_offset:264687*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264687*0 + 3*677*FLEN/8, x4, x1, x2)

inst_88230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffe0000000000; valaddr_reg:x3; val_offset:264690*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264690*0 + 3*678*FLEN/8, x4, x1, x2)

inst_88231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fff0000000000; valaddr_reg:x3; val_offset:264693*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264693*0 + 3*679*FLEN/8, x4, x1, x2)

inst_88232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fff8000000000; valaddr_reg:x3; val_offset:264696*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264696*0 + 3*680*FLEN/8, x4, x1, x2)

inst_88233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffc000000000; valaddr_reg:x3; val_offset:264699*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264699*0 + 3*681*FLEN/8, x4, x1, x2)

inst_88234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffe000000000; valaddr_reg:x3; val_offset:264702*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264702*0 + 3*682*FLEN/8, x4, x1, x2)

inst_88235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffff000000000; valaddr_reg:x3; val_offset:264705*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264705*0 + 3*683*FLEN/8, x4, x1, x2)

inst_88236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffff800000000; valaddr_reg:x3; val_offset:264708*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264708*0 + 3*684*FLEN/8, x4, x1, x2)

inst_88237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffc00000000; valaddr_reg:x3; val_offset:264711*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264711*0 + 3*685*FLEN/8, x4, x1, x2)

inst_88238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffe00000000; valaddr_reg:x3; val_offset:264714*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264714*0 + 3*686*FLEN/8, x4, x1, x2)

inst_88239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffff00000000; valaddr_reg:x3; val_offset:264717*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264717*0 + 3*687*FLEN/8, x4, x1, x2)

inst_88240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffff80000000; valaddr_reg:x3; val_offset:264720*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264720*0 + 3*688*FLEN/8, x4, x1, x2)

inst_88241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffc0000000; valaddr_reg:x3; val_offset:264723*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264723*0 + 3*689*FLEN/8, x4, x1, x2)

inst_88242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffe0000000; valaddr_reg:x3; val_offset:264726*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264726*0 + 3*690*FLEN/8, x4, x1, x2)

inst_88243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffff0000000; valaddr_reg:x3; val_offset:264729*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264729*0 + 3*691*FLEN/8, x4, x1, x2)

inst_88244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffff8000000; valaddr_reg:x3; val_offset:264732*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264732*0 + 3*692*FLEN/8, x4, x1, x2)

inst_88245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffc000000; valaddr_reg:x3; val_offset:264735*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264735*0 + 3*693*FLEN/8, x4, x1, x2)

inst_88246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffe000000; valaddr_reg:x3; val_offset:264738*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264738*0 + 3*694*FLEN/8, x4, x1, x2)

inst_88247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffff000000; valaddr_reg:x3; val_offset:264741*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264741*0 + 3*695*FLEN/8, x4, x1, x2)

inst_88248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffff800000; valaddr_reg:x3; val_offset:264744*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264744*0 + 3*696*FLEN/8, x4, x1, x2)

inst_88249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffc00000; valaddr_reg:x3; val_offset:264747*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264747*0 + 3*697*FLEN/8, x4, x1, x2)

inst_88250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffe00000; valaddr_reg:x3; val_offset:264750*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264750*0 + 3*698*FLEN/8, x4, x1, x2)

inst_88251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffff00000; valaddr_reg:x3; val_offset:264753*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264753*0 + 3*699*FLEN/8, x4, x1, x2)

inst_88252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffff80000; valaddr_reg:x3; val_offset:264756*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264756*0 + 3*700*FLEN/8, x4, x1, x2)

inst_88253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffc0000; valaddr_reg:x3; val_offset:264759*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264759*0 + 3*701*FLEN/8, x4, x1, x2)

inst_88254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffe0000; valaddr_reg:x3; val_offset:264762*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264762*0 + 3*702*FLEN/8, x4, x1, x2)

inst_88255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffff0000; valaddr_reg:x3; val_offset:264765*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264765*0 + 3*703*FLEN/8, x4, x1, x2)

inst_88256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffff8000; valaddr_reg:x3; val_offset:264768*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264768*0 + 3*704*FLEN/8, x4, x1, x2)

inst_88257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffc000; valaddr_reg:x3; val_offset:264771*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264771*0 + 3*705*FLEN/8, x4, x1, x2)

inst_88258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffe000; valaddr_reg:x3; val_offset:264774*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264774*0 + 3*706*FLEN/8, x4, x1, x2)

inst_88259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffff000; valaddr_reg:x3; val_offset:264777*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264777*0 + 3*707*FLEN/8, x4, x1, x2)

inst_88260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffff800; valaddr_reg:x3; val_offset:264780*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264780*0 + 3*708*FLEN/8, x4, x1, x2)

inst_88261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffc00; valaddr_reg:x3; val_offset:264783*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264783*0 + 3*709*FLEN/8, x4, x1, x2)

inst_88262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffe00; valaddr_reg:x3; val_offset:264786*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264786*0 + 3*710*FLEN/8, x4, x1, x2)

inst_88263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffff00; valaddr_reg:x3; val_offset:264789*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264789*0 + 3*711*FLEN/8, x4, x1, x2)

inst_88264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffff80; valaddr_reg:x3; val_offset:264792*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264792*0 + 3*712*FLEN/8, x4, x1, x2)

inst_88265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffffc0; valaddr_reg:x3; val_offset:264795*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264795*0 + 3*713*FLEN/8, x4, x1, x2)

inst_88266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffffe0; valaddr_reg:x3; val_offset:264798*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264798*0 + 3*714*FLEN/8, x4, x1, x2)

inst_88267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffff0; valaddr_reg:x3; val_offset:264801*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264801*0 + 3*715*FLEN/8, x4, x1, x2)

inst_88268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffff8; valaddr_reg:x3; val_offset:264804*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264804*0 + 3*716*FLEN/8, x4, x1, x2)

inst_88269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffffc; valaddr_reg:x3; val_offset:264807*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264807*0 + 3*717*FLEN/8, x4, x1, x2)

inst_88270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831ffffffffffffe; valaddr_reg:x3; val_offset:264810*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264810*0 + 3*718*FLEN/8, x4, x1, x2)

inst_88271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb326d45a6fa05 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x031 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab326d45a6fa05; op2val:0x8000;
op3val:0x831fffffffffffff; valaddr_reg:x3; val_offset:264813*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264813*0 + 3*719*FLEN/8, x4, x1, x2)

inst_88272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000000000; valaddr_reg:x3; val_offset:264816*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264816*0 + 3*720*FLEN/8, x4, x1, x2)

inst_88273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000000001; valaddr_reg:x3; val_offset:264819*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264819*0 + 3*721*FLEN/8, x4, x1, x2)

inst_88274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000000003; valaddr_reg:x3; val_offset:264822*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264822*0 + 3*722*FLEN/8, x4, x1, x2)

inst_88275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000000007; valaddr_reg:x3; val_offset:264825*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264825*0 + 3*723*FLEN/8, x4, x1, x2)

inst_88276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000000000f; valaddr_reg:x3; val_offset:264828*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264828*0 + 3*724*FLEN/8, x4, x1, x2)

inst_88277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000000001f; valaddr_reg:x3; val_offset:264831*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264831*0 + 3*725*FLEN/8, x4, x1, x2)

inst_88278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000000003f; valaddr_reg:x3; val_offset:264834*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264834*0 + 3*726*FLEN/8, x4, x1, x2)

inst_88279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000000007f; valaddr_reg:x3; val_offset:264837*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264837*0 + 3*727*FLEN/8, x4, x1, x2)

inst_88280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000000000ff; valaddr_reg:x3; val_offset:264840*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264840*0 + 3*728*FLEN/8, x4, x1, x2)

inst_88281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000000001ff; valaddr_reg:x3; val_offset:264843*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264843*0 + 3*729*FLEN/8, x4, x1, x2)

inst_88282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000000003ff; valaddr_reg:x3; val_offset:264846*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264846*0 + 3*730*FLEN/8, x4, x1, x2)

inst_88283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000000007ff; valaddr_reg:x3; val_offset:264849*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264849*0 + 3*731*FLEN/8, x4, x1, x2)

inst_88284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000000fff; valaddr_reg:x3; val_offset:264852*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264852*0 + 3*732*FLEN/8, x4, x1, x2)

inst_88285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000001fff; valaddr_reg:x3; val_offset:264855*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264855*0 + 3*733*FLEN/8, x4, x1, x2)

inst_88286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000003fff; valaddr_reg:x3; val_offset:264858*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264858*0 + 3*734*FLEN/8, x4, x1, x2)

inst_88287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000007fff; valaddr_reg:x3; val_offset:264861*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264861*0 + 3*735*FLEN/8, x4, x1, x2)

inst_88288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000000ffff; valaddr_reg:x3; val_offset:264864*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264864*0 + 3*736*FLEN/8, x4, x1, x2)

inst_88289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000001ffff; valaddr_reg:x3; val_offset:264867*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264867*0 + 3*737*FLEN/8, x4, x1, x2)

inst_88290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000003ffff; valaddr_reg:x3; val_offset:264870*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264870*0 + 3*738*FLEN/8, x4, x1, x2)

inst_88291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000007ffff; valaddr_reg:x3; val_offset:264873*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264873*0 + 3*739*FLEN/8, x4, x1, x2)

inst_88292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000000fffff; valaddr_reg:x3; val_offset:264876*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264876*0 + 3*740*FLEN/8, x4, x1, x2)

inst_88293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000001fffff; valaddr_reg:x3; val_offset:264879*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264879*0 + 3*741*FLEN/8, x4, x1, x2)

inst_88294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000003fffff; valaddr_reg:x3; val_offset:264882*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264882*0 + 3*742*FLEN/8, x4, x1, x2)

inst_88295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000007fffff; valaddr_reg:x3; val_offset:264885*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264885*0 + 3*743*FLEN/8, x4, x1, x2)

inst_88296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000000ffffff; valaddr_reg:x3; val_offset:264888*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264888*0 + 3*744*FLEN/8, x4, x1, x2)

inst_88297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000001ffffff; valaddr_reg:x3; val_offset:264891*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264891*0 + 3*745*FLEN/8, x4, x1, x2)

inst_88298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000003ffffff; valaddr_reg:x3; val_offset:264894*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264894*0 + 3*746*FLEN/8, x4, x1, x2)

inst_88299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000007ffffff; valaddr_reg:x3; val_offset:264897*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264897*0 + 3*747*FLEN/8, x4, x1, x2)

inst_88300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000000fffffff; valaddr_reg:x3; val_offset:264900*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264900*0 + 3*748*FLEN/8, x4, x1, x2)

inst_88301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000001fffffff; valaddr_reg:x3; val_offset:264903*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264903*0 + 3*749*FLEN/8, x4, x1, x2)

inst_88302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000003fffffff; valaddr_reg:x3; val_offset:264906*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264906*0 + 3*750*FLEN/8, x4, x1, x2)

inst_88303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000007fffffff; valaddr_reg:x3; val_offset:264909*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264909*0 + 3*751*FLEN/8, x4, x1, x2)

inst_88304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500000ffffffff; valaddr_reg:x3; val_offset:264912*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264912*0 + 3*752*FLEN/8, x4, x1, x2)

inst_88305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500001ffffffff; valaddr_reg:x3; val_offset:264915*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264915*0 + 3*753*FLEN/8, x4, x1, x2)

inst_88306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500003ffffffff; valaddr_reg:x3; val_offset:264918*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264918*0 + 3*754*FLEN/8, x4, x1, x2)

inst_88307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500007ffffffff; valaddr_reg:x3; val_offset:264921*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264921*0 + 3*755*FLEN/8, x4, x1, x2)

inst_88308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50000fffffffff; valaddr_reg:x3; val_offset:264924*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264924*0 + 3*756*FLEN/8, x4, x1, x2)

inst_88309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50001fffffffff; valaddr_reg:x3; val_offset:264927*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264927*0 + 3*757*FLEN/8, x4, x1, x2)

inst_88310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50003fffffffff; valaddr_reg:x3; val_offset:264930*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264930*0 + 3*758*FLEN/8, x4, x1, x2)

inst_88311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a50007fffffffff; valaddr_reg:x3; val_offset:264933*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264933*0 + 3*759*FLEN/8, x4, x1, x2)

inst_88312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5000ffffffffff; valaddr_reg:x3; val_offset:264936*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264936*0 + 3*760*FLEN/8, x4, x1, x2)

inst_88313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5001ffffffffff; valaddr_reg:x3; val_offset:264939*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264939*0 + 3*761*FLEN/8, x4, x1, x2)

inst_88314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5003ffffffffff; valaddr_reg:x3; val_offset:264942*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264942*0 + 3*762*FLEN/8, x4, x1, x2)

inst_88315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a5007ffffffffff; valaddr_reg:x3; val_offset:264945*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264945*0 + 3*763*FLEN/8, x4, x1, x2)

inst_88316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a500fffffffffff; valaddr_reg:x3; val_offset:264948*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264948*0 + 3*764*FLEN/8, x4, x1, x2)

inst_88317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a501fffffffffff; valaddr_reg:x3; val_offset:264951*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264951*0 + 3*765*FLEN/8, x4, x1, x2)

inst_88318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a503fffffffffff; valaddr_reg:x3; val_offset:264954*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264954*0 + 3*766*FLEN/8, x4, x1, x2)

inst_88319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xb32f8dd15aec3 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x2d2fb32308d23 and fs3 == 0 and fe3 == 0x3a5 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fab32f8dd15aec3; op2val:0x2032d2fb32308d23;
op3val:0x3a507fffffffffff; valaddr_reg:x3; val_offset:264957*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 264957*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182418816794623,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182418833571839,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182418867126271,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182418934235135,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182419068452863,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182419336888319,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182419873759231,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182420947501055,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182423094984703,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182427389951999,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182435979886591,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182453159755775,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182487519494143,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182556238970879,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182693677924351,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607182968555831295,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607183518311645183,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607184617823272959,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607186816846528511,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607191214893039615,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607200010986061823,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607217603172106239,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607252787544195071,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607323156288372735,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607463893776728063,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4607745368753438719,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4608308318706860031,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609434218613702655,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609434218613702656,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4610560118520545280,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611123068473966592,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611404543450677248,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611545280939032576,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611615649683210240,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611650834055299072,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611668426241343488,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611677222334365696,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611681620380876800,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611683819404132352,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611684918915760128,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611685468671574016,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611685743549480960,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611685880988434432,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611685949707911168,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611685984067649536,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686001247518720,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686009837453312,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686014132420608,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686016279904256,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686017353646080,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686017890516992,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018158952448,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018293170176,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018360279040,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018393833472,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018410610688,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018418999296,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018423193600,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018425290752,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018426339328,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018426863616,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427125760,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427256832,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427322368,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427355136,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427371520,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427379712,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427383808,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427385856,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427386880,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387392,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387648,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387776,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6893604473791441561,64,FLEN)
NAN_BOXED(2320187232758996423,64,FLEN)
NAN_BOXED(4611686018427387903,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707584,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707585,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707587,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707591,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707599,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707615,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707647,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707711,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936707839,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936708095,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936708607,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936709631,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936711679,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936715775,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936723967,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936740351,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936773119,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936838655,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289936969727,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289937231871,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289937756159,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289938804735,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289940901887,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289945096191,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289953484799,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223289970262015,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223290003816447,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223290070925311,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223290205143039,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223290473578495,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223291010449407,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223292084191231,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223294231674879,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223298526642175,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223307116576767,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223324296445951,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223358656184319,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223427375661055,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223564814614527,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416223839692521471,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416224389448335359,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416225488959963135,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416227687983218687,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416232086029729791,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416240882122751999,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416258474308796415,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416293658680885247,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416364027425062911,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416504764913418239,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13416786239890128895,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13417349189843550207,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13418475089750392831,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13418475089750392832,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13419600989657235456,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420163939610656768,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420445414587367424,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420586152075722752,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420656520819900416,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420691705191989248,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420709297378033664,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420718093471055872,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420722491517566976,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420724690540822528,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420725790052450304,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726339808264192,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726614686171136,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726752125124608,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726820844601344,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726855204339712,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726872384208896,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726880974143488,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726885269110784,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726887416594432,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726888490336256,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889027207168,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889295642624,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889429860352,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889496969216,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889530523648,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889547300864,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889555689472,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889559883776,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889561980928,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889563029504,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889563553792,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889563815936,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889563947008,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564012544,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564045312,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564061696,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564069888,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564073984,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564076032,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564077056,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564077568,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564077824,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564077952,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078016,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078048,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078064,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078072,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078076,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078078,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13420726889564078079,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6893605395298114534,64,FLEN)
NAN_BOXED(11512033425236529605,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485344,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485360,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485368,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485372,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485374,64,FLEN)
NAN_BOXED(6893617193847430185,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485375,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6893631880273037183,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6893649032921210980,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930112,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930113,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930115,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930119,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930127,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930143,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930175,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930239,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930367,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930623,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595931135,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595932159,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595934207,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595938303,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595946495,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595962879,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595995647,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596061183,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596192255,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596454399,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418596978687,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418598027263,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418600124415,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418604318719,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418612707327,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418629484543,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418663038975,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418730147839,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418864365567,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419132801023,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048419669671935,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048420743413759,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048422890897407,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048427185864703,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048435775799295,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048452955668479,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048487315406847,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048556034883583,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048693473837055,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048968351743999,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444049518107557887,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444050617619185663,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444052816642441215,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444057214688952319,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444066010781974527,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444083602968018943,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444118787340107775,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444189156084285439,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444329893572640767,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444611368549351423,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9445174318502772735,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615359,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9446300218409615360,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447426118316457984,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9447989068269879296,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448270543246589952,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448411280734945280,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448481649479122944,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448516833851211776,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448534426037256192,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448543222130278400,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448547620176789504,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448549819200045056,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448550918711672832,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551468467486720,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551743345393664,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551880784347136,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551949503823872,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448551983863562240,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552001043431424,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552009633366016,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552013928333312,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552016075816960,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017149558784,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017686429696,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552017954865152,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018089082880,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018156191744,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018189746176,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018206523392,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018214912000,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018219106304,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018221203456,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222252032,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018222776320,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223038464,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223169536,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223235072,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223267840,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223284224,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223292416,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223296512,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223298560,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223299584,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300096,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300352,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300480,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300544,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300576,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300592,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300600,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300604,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300606,64,FLEN)
NAN_BOXED(6893659099522071045,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300607,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672768,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672769,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672771,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672775,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672783,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672799,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672831,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336672895,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336673023,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336673279,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336673791,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336674815,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336676863,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336680959,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336689151,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336705535,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336738303,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336803839,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452336934911,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452337197055,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452337721343,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452338769919,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452340867071,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452345061375,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452353449983,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452370227199,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452403781631,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452470890495,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452605108223,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858452873543679,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858453410414591,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858454484156415,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858456631640063,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858460926607359,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858469516541951,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858486696411135,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858521056149503,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858589775626239,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201858727214579711,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201859002092486655,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201859551848300543,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201860651359928319,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201862850383183871,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201867248429694975,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201876044522717183,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201893636708761599,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201928821080850431,64,FLEN)
NAN_BOXED(6893659699063140035,64,FLEN)
NAN_BOXED(2320148734369893667,64,FLEN)
NAN_BOXED(4201999189825028095,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
