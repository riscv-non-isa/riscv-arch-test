
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_43776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:131328*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131328*0 + 3*0*FLEN/8, x4, x1, x2)

inst_43777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:131331*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131331*0 + 3*1*FLEN/8, x4, x1, x2)

inst_43778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:131334*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131334*0 + 3*2*FLEN/8, x4, x1, x2)

inst_43779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:131337*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131337*0 + 3*3*FLEN/8, x4, x1, x2)

inst_43780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:131340*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131340*0 + 3*4*FLEN/8, x4, x1, x2)

inst_43781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:131343*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131343*0 + 3*5*FLEN/8, x4, x1, x2)

inst_43782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:131346*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131346*0 + 3*6*FLEN/8, x4, x1, x2)

inst_43783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:131349*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131349*0 + 3*7*FLEN/8, x4, x1, x2)

inst_43784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:131352*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131352*0 + 3*8*FLEN/8, x4, x1, x2)

inst_43785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:131355*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131355*0 + 3*9*FLEN/8, x4, x1, x2)

inst_43786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000000000; valaddr_reg:x3; val_offset:131358*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131358*0 + 3*10*FLEN/8, x4, x1, x2)

inst_43787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000000001; valaddr_reg:x3; val_offset:131361*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131361*0 + 3*11*FLEN/8, x4, x1, x2)

inst_43788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000000003; valaddr_reg:x3; val_offset:131364*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131364*0 + 3*12*FLEN/8, x4, x1, x2)

inst_43789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000000007; valaddr_reg:x3; val_offset:131367*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131367*0 + 3*13*FLEN/8, x4, x1, x2)

inst_43790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000000000f; valaddr_reg:x3; val_offset:131370*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131370*0 + 3*14*FLEN/8, x4, x1, x2)

inst_43791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000000001f; valaddr_reg:x3; val_offset:131373*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131373*0 + 3*15*FLEN/8, x4, x1, x2)

inst_43792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000000003f; valaddr_reg:x3; val_offset:131376*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131376*0 + 3*16*FLEN/8, x4, x1, x2)

inst_43793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000000007f; valaddr_reg:x3; val_offset:131379*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131379*0 + 3*17*FLEN/8, x4, x1, x2)

inst_43794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000000000ff; valaddr_reg:x3; val_offset:131382*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131382*0 + 3*18*FLEN/8, x4, x1, x2)

inst_43795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000000001ff; valaddr_reg:x3; val_offset:131385*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131385*0 + 3*19*FLEN/8, x4, x1, x2)

inst_43796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000000003ff; valaddr_reg:x3; val_offset:131388*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131388*0 + 3*20*FLEN/8, x4, x1, x2)

inst_43797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000000007ff; valaddr_reg:x3; val_offset:131391*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131391*0 + 3*21*FLEN/8, x4, x1, x2)

inst_43798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000000fff; valaddr_reg:x3; val_offset:131394*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131394*0 + 3*22*FLEN/8, x4, x1, x2)

inst_43799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000001fff; valaddr_reg:x3; val_offset:131397*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131397*0 + 3*23*FLEN/8, x4, x1, x2)

inst_43800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000003fff; valaddr_reg:x3; val_offset:131400*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131400*0 + 3*24*FLEN/8, x4, x1, x2)

inst_43801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000007fff; valaddr_reg:x3; val_offset:131403*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131403*0 + 3*25*FLEN/8, x4, x1, x2)

inst_43802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000000ffff; valaddr_reg:x3; val_offset:131406*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131406*0 + 3*26*FLEN/8, x4, x1, x2)

inst_43803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000001ffff; valaddr_reg:x3; val_offset:131409*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131409*0 + 3*27*FLEN/8, x4, x1, x2)

inst_43804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000003ffff; valaddr_reg:x3; val_offset:131412*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131412*0 + 3*28*FLEN/8, x4, x1, x2)

inst_43805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000007ffff; valaddr_reg:x3; val_offset:131415*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131415*0 + 3*29*FLEN/8, x4, x1, x2)

inst_43806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000000fffff; valaddr_reg:x3; val_offset:131418*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131418*0 + 3*30*FLEN/8, x4, x1, x2)

inst_43807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000001fffff; valaddr_reg:x3; val_offset:131421*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131421*0 + 3*31*FLEN/8, x4, x1, x2)

inst_43808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000003fffff; valaddr_reg:x3; val_offset:131424*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131424*0 + 3*32*FLEN/8, x4, x1, x2)

inst_43809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000007fffff; valaddr_reg:x3; val_offset:131427*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131427*0 + 3*33*FLEN/8, x4, x1, x2)

inst_43810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000000ffffff; valaddr_reg:x3; val_offset:131430*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131430*0 + 3*34*FLEN/8, x4, x1, x2)

inst_43811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000001ffffff; valaddr_reg:x3; val_offset:131433*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131433*0 + 3*35*FLEN/8, x4, x1, x2)

inst_43812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000003ffffff; valaddr_reg:x3; val_offset:131436*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131436*0 + 3*36*FLEN/8, x4, x1, x2)

inst_43813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000007ffffff; valaddr_reg:x3; val_offset:131439*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131439*0 + 3*37*FLEN/8, x4, x1, x2)

inst_43814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000000fffffff; valaddr_reg:x3; val_offset:131442*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131442*0 + 3*38*FLEN/8, x4, x1, x2)

inst_43815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000001fffffff; valaddr_reg:x3; val_offset:131445*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131445*0 + 3*39*FLEN/8, x4, x1, x2)

inst_43816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000003fffffff; valaddr_reg:x3; val_offset:131448*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131448*0 + 3*40*FLEN/8, x4, x1, x2)

inst_43817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000007fffffff; valaddr_reg:x3; val_offset:131451*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131451*0 + 3*41*FLEN/8, x4, x1, x2)

inst_43818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100000ffffffff; valaddr_reg:x3; val_offset:131454*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131454*0 + 3*42*FLEN/8, x4, x1, x2)

inst_43819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100001ffffffff; valaddr_reg:x3; val_offset:131457*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131457*0 + 3*43*FLEN/8, x4, x1, x2)

inst_43820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100003ffffffff; valaddr_reg:x3; val_offset:131460*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131460*0 + 3*44*FLEN/8, x4, x1, x2)

inst_43821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100007ffffffff; valaddr_reg:x3; val_offset:131463*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131463*0 + 3*45*FLEN/8, x4, x1, x2)

inst_43822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410000fffffffff; valaddr_reg:x3; val_offset:131466*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131466*0 + 3*46*FLEN/8, x4, x1, x2)

inst_43823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410001fffffffff; valaddr_reg:x3; val_offset:131469*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131469*0 + 3*47*FLEN/8, x4, x1, x2)

inst_43824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410003fffffffff; valaddr_reg:x3; val_offset:131472*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131472*0 + 3*48*FLEN/8, x4, x1, x2)

inst_43825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410007fffffffff; valaddr_reg:x3; val_offset:131475*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131475*0 + 3*49*FLEN/8, x4, x1, x2)

inst_43826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841000ffffffffff; valaddr_reg:x3; val_offset:131478*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131478*0 + 3*50*FLEN/8, x4, x1, x2)

inst_43827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841001ffffffffff; valaddr_reg:x3; val_offset:131481*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131481*0 + 3*51*FLEN/8, x4, x1, x2)

inst_43828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841003ffffffffff; valaddr_reg:x3; val_offset:131484*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131484*0 + 3*52*FLEN/8, x4, x1, x2)

inst_43829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841007ffffffffff; valaddr_reg:x3; val_offset:131487*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131487*0 + 3*53*FLEN/8, x4, x1, x2)

inst_43830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84100fffffffffff; valaddr_reg:x3; val_offset:131490*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131490*0 + 3*54*FLEN/8, x4, x1, x2)

inst_43831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84101fffffffffff; valaddr_reg:x3; val_offset:131493*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131493*0 + 3*55*FLEN/8, x4, x1, x2)

inst_43832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84103fffffffffff; valaddr_reg:x3; val_offset:131496*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131496*0 + 3*56*FLEN/8, x4, x1, x2)

inst_43833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x84107fffffffffff; valaddr_reg:x3; val_offset:131499*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131499*0 + 3*57*FLEN/8, x4, x1, x2)

inst_43834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8410ffffffffffff; valaddr_reg:x3; val_offset:131502*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131502*0 + 3*58*FLEN/8, x4, x1, x2)

inst_43835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8411ffffffffffff; valaddr_reg:x3; val_offset:131505*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131505*0 + 3*59*FLEN/8, x4, x1, x2)

inst_43836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8413ffffffffffff; valaddr_reg:x3; val_offset:131508*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131508*0 + 3*60*FLEN/8, x4, x1, x2)

inst_43837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8417ffffffffffff; valaddr_reg:x3; val_offset:131511*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131511*0 + 3*61*FLEN/8, x4, x1, x2)

inst_43838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x8418000000000000; valaddr_reg:x3; val_offset:131514*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131514*0 + 3*62*FLEN/8, x4, x1, x2)

inst_43839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841c000000000000; valaddr_reg:x3; val_offset:131517*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131517*0 + 3*63*FLEN/8, x4, x1, x2)

inst_43840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841e000000000000; valaddr_reg:x3; val_offset:131520*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131520*0 + 3*64*FLEN/8, x4, x1, x2)

inst_43841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841f000000000000; valaddr_reg:x3; val_offset:131523*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131523*0 + 3*65*FLEN/8, x4, x1, x2)

inst_43842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841f800000000000; valaddr_reg:x3; val_offset:131526*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131526*0 + 3*66*FLEN/8, x4, x1, x2)

inst_43843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fc00000000000; valaddr_reg:x3; val_offset:131529*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131529*0 + 3*67*FLEN/8, x4, x1, x2)

inst_43844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fe00000000000; valaddr_reg:x3; val_offset:131532*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131532*0 + 3*68*FLEN/8, x4, x1, x2)

inst_43845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ff00000000000; valaddr_reg:x3; val_offset:131535*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131535*0 + 3*69*FLEN/8, x4, x1, x2)

inst_43846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ff80000000000; valaddr_reg:x3; val_offset:131538*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131538*0 + 3*70*FLEN/8, x4, x1, x2)

inst_43847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffc0000000000; valaddr_reg:x3; val_offset:131541*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131541*0 + 3*71*FLEN/8, x4, x1, x2)

inst_43848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffe0000000000; valaddr_reg:x3; val_offset:131544*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131544*0 + 3*72*FLEN/8, x4, x1, x2)

inst_43849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fff0000000000; valaddr_reg:x3; val_offset:131547*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131547*0 + 3*73*FLEN/8, x4, x1, x2)

inst_43850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fff8000000000; valaddr_reg:x3; val_offset:131550*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131550*0 + 3*74*FLEN/8, x4, x1, x2)

inst_43851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffc000000000; valaddr_reg:x3; val_offset:131553*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131553*0 + 3*75*FLEN/8, x4, x1, x2)

inst_43852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffe000000000; valaddr_reg:x3; val_offset:131556*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131556*0 + 3*76*FLEN/8, x4, x1, x2)

inst_43853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffff000000000; valaddr_reg:x3; val_offset:131559*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131559*0 + 3*77*FLEN/8, x4, x1, x2)

inst_43854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffff800000000; valaddr_reg:x3; val_offset:131562*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131562*0 + 3*78*FLEN/8, x4, x1, x2)

inst_43855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffc00000000; valaddr_reg:x3; val_offset:131565*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131565*0 + 3*79*FLEN/8, x4, x1, x2)

inst_43856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffe00000000; valaddr_reg:x3; val_offset:131568*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131568*0 + 3*80*FLEN/8, x4, x1, x2)

inst_43857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffff00000000; valaddr_reg:x3; val_offset:131571*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131571*0 + 3*81*FLEN/8, x4, x1, x2)

inst_43858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffff80000000; valaddr_reg:x3; val_offset:131574*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131574*0 + 3*82*FLEN/8, x4, x1, x2)

inst_43859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffc0000000; valaddr_reg:x3; val_offset:131577*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131577*0 + 3*83*FLEN/8, x4, x1, x2)

inst_43860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffe0000000; valaddr_reg:x3; val_offset:131580*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131580*0 + 3*84*FLEN/8, x4, x1, x2)

inst_43861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffff0000000; valaddr_reg:x3; val_offset:131583*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131583*0 + 3*85*FLEN/8, x4, x1, x2)

inst_43862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffff8000000; valaddr_reg:x3; val_offset:131586*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131586*0 + 3*86*FLEN/8, x4, x1, x2)

inst_43863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffc000000; valaddr_reg:x3; val_offset:131589*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131589*0 + 3*87*FLEN/8, x4, x1, x2)

inst_43864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffe000000; valaddr_reg:x3; val_offset:131592*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131592*0 + 3*88*FLEN/8, x4, x1, x2)

inst_43865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffff000000; valaddr_reg:x3; val_offset:131595*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131595*0 + 3*89*FLEN/8, x4, x1, x2)

inst_43866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffff800000; valaddr_reg:x3; val_offset:131598*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131598*0 + 3*90*FLEN/8, x4, x1, x2)

inst_43867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffc00000; valaddr_reg:x3; val_offset:131601*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131601*0 + 3*91*FLEN/8, x4, x1, x2)

inst_43868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffe00000; valaddr_reg:x3; val_offset:131604*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131604*0 + 3*92*FLEN/8, x4, x1, x2)

inst_43869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffff00000; valaddr_reg:x3; val_offset:131607*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131607*0 + 3*93*FLEN/8, x4, x1, x2)

inst_43870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffff80000; valaddr_reg:x3; val_offset:131610*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131610*0 + 3*94*FLEN/8, x4, x1, x2)

inst_43871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffc0000; valaddr_reg:x3; val_offset:131613*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131613*0 + 3*95*FLEN/8, x4, x1, x2)

inst_43872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffe0000; valaddr_reg:x3; val_offset:131616*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131616*0 + 3*96*FLEN/8, x4, x1, x2)

inst_43873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffff0000; valaddr_reg:x3; val_offset:131619*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131619*0 + 3*97*FLEN/8, x4, x1, x2)

inst_43874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffff8000; valaddr_reg:x3; val_offset:131622*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131622*0 + 3*98*FLEN/8, x4, x1, x2)

inst_43875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffc000; valaddr_reg:x3; val_offset:131625*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131625*0 + 3*99*FLEN/8, x4, x1, x2)

inst_43876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffe000; valaddr_reg:x3; val_offset:131628*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131628*0 + 3*100*FLEN/8, x4, x1, x2)

inst_43877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffff000; valaddr_reg:x3; val_offset:131631*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131631*0 + 3*101*FLEN/8, x4, x1, x2)

inst_43878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffff800; valaddr_reg:x3; val_offset:131634*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131634*0 + 3*102*FLEN/8, x4, x1, x2)

inst_43879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffc00; valaddr_reg:x3; val_offset:131637*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131637*0 + 3*103*FLEN/8, x4, x1, x2)

inst_43880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffe00; valaddr_reg:x3; val_offset:131640*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131640*0 + 3*104*FLEN/8, x4, x1, x2)

inst_43881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffff00; valaddr_reg:x3; val_offset:131643*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131643*0 + 3*105*FLEN/8, x4, x1, x2)

inst_43882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffff80; valaddr_reg:x3; val_offset:131646*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131646*0 + 3*106*FLEN/8, x4, x1, x2)

inst_43883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffffc0; valaddr_reg:x3; val_offset:131649*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131649*0 + 3*107*FLEN/8, x4, x1, x2)

inst_43884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffffe0; valaddr_reg:x3; val_offset:131652*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131652*0 + 3*108*FLEN/8, x4, x1, x2)

inst_43885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffff0; valaddr_reg:x3; val_offset:131655*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131655*0 + 3*109*FLEN/8, x4, x1, x2)

inst_43886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffff8; valaddr_reg:x3; val_offset:131658*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131658*0 + 3*110*FLEN/8, x4, x1, x2)

inst_43887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffffc; valaddr_reg:x3; val_offset:131661*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131661*0 + 3*111*FLEN/8, x4, x1, x2)

inst_43888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841ffffffffffffe; valaddr_reg:x3; val_offset:131664*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131664*0 + 3*112*FLEN/8, x4, x1, x2)

inst_43889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9a52027eda59 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x041 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9a52027eda59; op2val:0x8000;
op3val:0x841fffffffffffff; valaddr_reg:x3; val_offset:131667*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131667*0 + 3*113*FLEN/8, x4, x1, x2)

inst_43890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000000000; valaddr_reg:x3; val_offset:131670*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131670*0 + 3*114*FLEN/8, x4, x1, x2)

inst_43891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000000001; valaddr_reg:x3; val_offset:131673*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131673*0 + 3*115*FLEN/8, x4, x1, x2)

inst_43892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000000003; valaddr_reg:x3; val_offset:131676*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131676*0 + 3*116*FLEN/8, x4, x1, x2)

inst_43893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000000007; valaddr_reg:x3; val_offset:131679*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131679*0 + 3*117*FLEN/8, x4, x1, x2)

inst_43894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000000000f; valaddr_reg:x3; val_offset:131682*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131682*0 + 3*118*FLEN/8, x4, x1, x2)

inst_43895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000000001f; valaddr_reg:x3; val_offset:131685*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131685*0 + 3*119*FLEN/8, x4, x1, x2)

inst_43896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000000003f; valaddr_reg:x3; val_offset:131688*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131688*0 + 3*120*FLEN/8, x4, x1, x2)

inst_43897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000000007f; valaddr_reg:x3; val_offset:131691*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131691*0 + 3*121*FLEN/8, x4, x1, x2)

inst_43898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000000000ff; valaddr_reg:x3; val_offset:131694*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131694*0 + 3*122*FLEN/8, x4, x1, x2)

inst_43899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000000001ff; valaddr_reg:x3; val_offset:131697*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131697*0 + 3*123*FLEN/8, x4, x1, x2)

inst_43900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000000003ff; valaddr_reg:x3; val_offset:131700*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131700*0 + 3*124*FLEN/8, x4, x1, x2)

inst_43901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000000007ff; valaddr_reg:x3; val_offset:131703*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131703*0 + 3*125*FLEN/8, x4, x1, x2)

inst_43902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000000fff; valaddr_reg:x3; val_offset:131706*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131706*0 + 3*126*FLEN/8, x4, x1, x2)

inst_43903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000001fff; valaddr_reg:x3; val_offset:131709*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131709*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_43904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000003fff; valaddr_reg:x3; val_offset:131712*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131712*0 + 3*128*FLEN/8, x4, x1, x2)

inst_43905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000007fff; valaddr_reg:x3; val_offset:131715*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131715*0 + 3*129*FLEN/8, x4, x1, x2)

inst_43906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000000ffff; valaddr_reg:x3; val_offset:131718*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131718*0 + 3*130*FLEN/8, x4, x1, x2)

inst_43907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000001ffff; valaddr_reg:x3; val_offset:131721*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131721*0 + 3*131*FLEN/8, x4, x1, x2)

inst_43908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000003ffff; valaddr_reg:x3; val_offset:131724*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131724*0 + 3*132*FLEN/8, x4, x1, x2)

inst_43909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000007ffff; valaddr_reg:x3; val_offset:131727*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131727*0 + 3*133*FLEN/8, x4, x1, x2)

inst_43910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000000fffff; valaddr_reg:x3; val_offset:131730*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131730*0 + 3*134*FLEN/8, x4, x1, x2)

inst_43911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000001fffff; valaddr_reg:x3; val_offset:131733*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131733*0 + 3*135*FLEN/8, x4, x1, x2)

inst_43912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000003fffff; valaddr_reg:x3; val_offset:131736*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131736*0 + 3*136*FLEN/8, x4, x1, x2)

inst_43913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000007fffff; valaddr_reg:x3; val_offset:131739*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131739*0 + 3*137*FLEN/8, x4, x1, x2)

inst_43914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000000ffffff; valaddr_reg:x3; val_offset:131742*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131742*0 + 3*138*FLEN/8, x4, x1, x2)

inst_43915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000001ffffff; valaddr_reg:x3; val_offset:131745*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131745*0 + 3*139*FLEN/8, x4, x1, x2)

inst_43916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000003ffffff; valaddr_reg:x3; val_offset:131748*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131748*0 + 3*140*FLEN/8, x4, x1, x2)

inst_43917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000007ffffff; valaddr_reg:x3; val_offset:131751*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131751*0 + 3*141*FLEN/8, x4, x1, x2)

inst_43918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000000fffffff; valaddr_reg:x3; val_offset:131754*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131754*0 + 3*142*FLEN/8, x4, x1, x2)

inst_43919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000001fffffff; valaddr_reg:x3; val_offset:131757*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131757*0 + 3*143*FLEN/8, x4, x1, x2)

inst_43920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000003fffffff; valaddr_reg:x3; val_offset:131760*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131760*0 + 3*144*FLEN/8, x4, x1, x2)

inst_43921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000007fffffff; valaddr_reg:x3; val_offset:131763*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131763*0 + 3*145*FLEN/8, x4, x1, x2)

inst_43922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00000ffffffff; valaddr_reg:x3; val_offset:131766*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131766*0 + 3*146*FLEN/8, x4, x1, x2)

inst_43923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00001ffffffff; valaddr_reg:x3; val_offset:131769*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131769*0 + 3*147*FLEN/8, x4, x1, x2)

inst_43924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00003ffffffff; valaddr_reg:x3; val_offset:131772*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131772*0 + 3*148*FLEN/8, x4, x1, x2)

inst_43925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00007ffffffff; valaddr_reg:x3; val_offset:131775*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131775*0 + 3*149*FLEN/8, x4, x1, x2)

inst_43926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0000fffffffff; valaddr_reg:x3; val_offset:131778*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131778*0 + 3*150*FLEN/8, x4, x1, x2)

inst_43927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0001fffffffff; valaddr_reg:x3; val_offset:131781*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131781*0 + 3*151*FLEN/8, x4, x1, x2)

inst_43928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0003fffffffff; valaddr_reg:x3; val_offset:131784*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131784*0 + 3*152*FLEN/8, x4, x1, x2)

inst_43929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0007fffffffff; valaddr_reg:x3; val_offset:131787*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131787*0 + 3*153*FLEN/8, x4, x1, x2)

inst_43930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a000ffffffffff; valaddr_reg:x3; val_offset:131790*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131790*0 + 3*154*FLEN/8, x4, x1, x2)

inst_43931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a001ffffffffff; valaddr_reg:x3; val_offset:131793*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131793*0 + 3*155*FLEN/8, x4, x1, x2)

inst_43932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a003ffffffffff; valaddr_reg:x3; val_offset:131796*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131796*0 + 3*156*FLEN/8, x4, x1, x2)

inst_43933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a007ffffffffff; valaddr_reg:x3; val_offset:131799*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131799*0 + 3*157*FLEN/8, x4, x1, x2)

inst_43934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a00fffffffffff; valaddr_reg:x3; val_offset:131802*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131802*0 + 3*158*FLEN/8, x4, x1, x2)

inst_43935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a01fffffffffff; valaddr_reg:x3; val_offset:131805*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131805*0 + 3*159*FLEN/8, x4, x1, x2)

inst_43936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a03fffffffffff; valaddr_reg:x3; val_offset:131808*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131808*0 + 3*160*FLEN/8, x4, x1, x2)

inst_43937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a07fffffffffff; valaddr_reg:x3; val_offset:131811*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131811*0 + 3*161*FLEN/8, x4, x1, x2)

inst_43938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a0ffffffffffff; valaddr_reg:x3; val_offset:131814*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131814*0 + 3*162*FLEN/8, x4, x1, x2)

inst_43939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a1ffffffffffff; valaddr_reg:x3; val_offset:131817*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131817*0 + 3*163*FLEN/8, x4, x1, x2)

inst_43940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a3ffffffffffff; valaddr_reg:x3; val_offset:131820*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131820*0 + 3*164*FLEN/8, x4, x1, x2)

inst_43941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a7ffffffffffff; valaddr_reg:x3; val_offset:131823*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131823*0 + 3*165*FLEN/8, x4, x1, x2)

inst_43942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7a8000000000000; valaddr_reg:x3; val_offset:131826*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131826*0 + 3*166*FLEN/8, x4, x1, x2)

inst_43943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7ac000000000000; valaddr_reg:x3; val_offset:131829*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131829*0 + 3*167*FLEN/8, x4, x1, x2)

inst_43944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7ae000000000000; valaddr_reg:x3; val_offset:131832*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131832*0 + 3*168*FLEN/8, x4, x1, x2)

inst_43945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7af000000000000; valaddr_reg:x3; val_offset:131835*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131835*0 + 3*169*FLEN/8, x4, x1, x2)

inst_43946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7af800000000000; valaddr_reg:x3; val_offset:131838*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131838*0 + 3*170*FLEN/8, x4, x1, x2)

inst_43947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afc00000000000; valaddr_reg:x3; val_offset:131841*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131841*0 + 3*171*FLEN/8, x4, x1, x2)

inst_43948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afe00000000000; valaddr_reg:x3; val_offset:131844*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131844*0 + 3*172*FLEN/8, x4, x1, x2)

inst_43949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7aff00000000000; valaddr_reg:x3; val_offset:131847*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131847*0 + 3*173*FLEN/8, x4, x1, x2)

inst_43950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7aff80000000000; valaddr_reg:x3; val_offset:131850*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131850*0 + 3*174*FLEN/8, x4, x1, x2)

inst_43951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affc0000000000; valaddr_reg:x3; val_offset:131853*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131853*0 + 3*175*FLEN/8, x4, x1, x2)

inst_43952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affe0000000000; valaddr_reg:x3; val_offset:131856*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131856*0 + 3*176*FLEN/8, x4, x1, x2)

inst_43953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afff0000000000; valaddr_reg:x3; val_offset:131859*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131859*0 + 3*177*FLEN/8, x4, x1, x2)

inst_43954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afff8000000000; valaddr_reg:x3; val_offset:131862*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131862*0 + 3*178*FLEN/8, x4, x1, x2)

inst_43955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffc000000000; valaddr_reg:x3; val_offset:131865*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131865*0 + 3*179*FLEN/8, x4, x1, x2)

inst_43956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffe000000000; valaddr_reg:x3; val_offset:131868*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131868*0 + 3*180*FLEN/8, x4, x1, x2)

inst_43957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affff000000000; valaddr_reg:x3; val_offset:131871*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131871*0 + 3*181*FLEN/8, x4, x1, x2)

inst_43958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affff800000000; valaddr_reg:x3; val_offset:131874*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131874*0 + 3*182*FLEN/8, x4, x1, x2)

inst_43959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffc00000000; valaddr_reg:x3; val_offset:131877*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131877*0 + 3*183*FLEN/8, x4, x1, x2)

inst_43960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffe00000000; valaddr_reg:x3; val_offset:131880*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131880*0 + 3*184*FLEN/8, x4, x1, x2)

inst_43961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffff00000000; valaddr_reg:x3; val_offset:131883*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131883*0 + 3*185*FLEN/8, x4, x1, x2)

inst_43962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffff80000000; valaddr_reg:x3; val_offset:131886*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131886*0 + 3*186*FLEN/8, x4, x1, x2)

inst_43963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffc0000000; valaddr_reg:x3; val_offset:131889*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131889*0 + 3*187*FLEN/8, x4, x1, x2)

inst_43964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffe0000000; valaddr_reg:x3; val_offset:131892*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131892*0 + 3*188*FLEN/8, x4, x1, x2)

inst_43965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffff0000000; valaddr_reg:x3; val_offset:131895*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131895*0 + 3*189*FLEN/8, x4, x1, x2)

inst_43966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffff8000000; valaddr_reg:x3; val_offset:131898*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131898*0 + 3*190*FLEN/8, x4, x1, x2)

inst_43967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffc000000; valaddr_reg:x3; val_offset:131901*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131901*0 + 3*191*FLEN/8, x4, x1, x2)

inst_43968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffe000000; valaddr_reg:x3; val_offset:131904*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131904*0 + 3*192*FLEN/8, x4, x1, x2)

inst_43969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffff000000; valaddr_reg:x3; val_offset:131907*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131907*0 + 3*193*FLEN/8, x4, x1, x2)

inst_43970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffff800000; valaddr_reg:x3; val_offset:131910*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131910*0 + 3*194*FLEN/8, x4, x1, x2)

inst_43971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffc00000; valaddr_reg:x3; val_offset:131913*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131913*0 + 3*195*FLEN/8, x4, x1, x2)

inst_43972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffe00000; valaddr_reg:x3; val_offset:131916*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131916*0 + 3*196*FLEN/8, x4, x1, x2)

inst_43973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffff00000; valaddr_reg:x3; val_offset:131919*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131919*0 + 3*197*FLEN/8, x4, x1, x2)

inst_43974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffff80000; valaddr_reg:x3; val_offset:131922*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131922*0 + 3*198*FLEN/8, x4, x1, x2)

inst_43975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffc0000; valaddr_reg:x3; val_offset:131925*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131925*0 + 3*199*FLEN/8, x4, x1, x2)

inst_43976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffe0000; valaddr_reg:x3; val_offset:131928*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131928*0 + 3*200*FLEN/8, x4, x1, x2)

inst_43977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffff0000; valaddr_reg:x3; val_offset:131931*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131931*0 + 3*201*FLEN/8, x4, x1, x2)

inst_43978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffff8000; valaddr_reg:x3; val_offset:131934*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131934*0 + 3*202*FLEN/8, x4, x1, x2)

inst_43979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffc000; valaddr_reg:x3; val_offset:131937*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131937*0 + 3*203*FLEN/8, x4, x1, x2)

inst_43980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffe000; valaddr_reg:x3; val_offset:131940*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131940*0 + 3*204*FLEN/8, x4, x1, x2)

inst_43981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffff000; valaddr_reg:x3; val_offset:131943*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131943*0 + 3*205*FLEN/8, x4, x1, x2)

inst_43982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffff800; valaddr_reg:x3; val_offset:131946*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131946*0 + 3*206*FLEN/8, x4, x1, x2)

inst_43983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffc00; valaddr_reg:x3; val_offset:131949*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131949*0 + 3*207*FLEN/8, x4, x1, x2)

inst_43984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffe00; valaddr_reg:x3; val_offset:131952*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131952*0 + 3*208*FLEN/8, x4, x1, x2)

inst_43985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffff00; valaddr_reg:x3; val_offset:131955*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131955*0 + 3*209*FLEN/8, x4, x1, x2)

inst_43986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffff80; valaddr_reg:x3; val_offset:131958*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131958*0 + 3*210*FLEN/8, x4, x1, x2)

inst_43987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffffc0; valaddr_reg:x3; val_offset:131961*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131961*0 + 3*211*FLEN/8, x4, x1, x2)

inst_43988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffffe0; valaddr_reg:x3; val_offset:131964*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131964*0 + 3*212*FLEN/8, x4, x1, x2)

inst_43989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffff0; valaddr_reg:x3; val_offset:131967*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131967*0 + 3*213*FLEN/8, x4, x1, x2)

inst_43990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffff8; valaddr_reg:x3; val_offset:131970*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131970*0 + 3*214*FLEN/8, x4, x1, x2)

inst_43991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffffc; valaddr_reg:x3; val_offset:131973*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131973*0 + 3*215*FLEN/8, x4, x1, x2)

inst_43992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7affffffffffffe; valaddr_reg:x3; val_offset:131976*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131976*0 + 3*216*FLEN/8, x4, x1, x2)

inst_43993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x37a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xb7afffffffffffff; valaddr_reg:x3; val_offset:131979*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131979*0 + 3*217*FLEN/8, x4, x1, x2)

inst_43994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:131982*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131982*0 + 3*218*FLEN/8, x4, x1, x2)

inst_43995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:131985*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131985*0 + 3*219*FLEN/8, x4, x1, x2)

inst_43996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:131988*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131988*0 + 3*220*FLEN/8, x4, x1, x2)

inst_43997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:131991*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131991*0 + 3*221*FLEN/8, x4, x1, x2)

inst_43998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:131994*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131994*0 + 3*222*FLEN/8, x4, x1, x2)

inst_43999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:131997*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 131997*0 + 3*223*FLEN/8, x4, x1, x2)

inst_44000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:132000*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132000*0 + 3*224*FLEN/8, x4, x1, x2)

inst_44001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:132003*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132003*0 + 3*225*FLEN/8, x4, x1, x2)

inst_44002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:132006*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132006*0 + 3*226*FLEN/8, x4, x1, x2)

inst_44003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:132009*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132009*0 + 3*227*FLEN/8, x4, x1, x2)

inst_44004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:132012*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132012*0 + 3*228*FLEN/8, x4, x1, x2)

inst_44005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:132015*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132015*0 + 3*229*FLEN/8, x4, x1, x2)

inst_44006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:132018*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132018*0 + 3*230*FLEN/8, x4, x1, x2)

inst_44007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:132021*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132021*0 + 3*231*FLEN/8, x4, x1, x2)

inst_44008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:132024*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132024*0 + 3*232*FLEN/8, x4, x1, x2)

inst_44009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:132027*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132027*0 + 3*233*FLEN/8, x4, x1, x2)

inst_44010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:132030*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132030*0 + 3*234*FLEN/8, x4, x1, x2)

inst_44011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:132033*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132033*0 + 3*235*FLEN/8, x4, x1, x2)

inst_44012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:132036*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132036*0 + 3*236*FLEN/8, x4, x1, x2)

inst_44013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:132039*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132039*0 + 3*237*FLEN/8, x4, x1, x2)

inst_44014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:132042*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132042*0 + 3*238*FLEN/8, x4, x1, x2)

inst_44015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xb9f3ac06cad37 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x289346c4caba1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9b9f3ac06cad37; op2val:0x9fd289346c4caba1;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:132045*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132045*0 + 3*239*FLEN/8, x4, x1, x2)

inst_44016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:132048*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132048*0 + 3*240*FLEN/8, x4, x1, x2)

inst_44017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:132051*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132051*0 + 3*241*FLEN/8, x4, x1, x2)

inst_44018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:132054*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132054*0 + 3*242*FLEN/8, x4, x1, x2)

inst_44019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:132057*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132057*0 + 3*243*FLEN/8, x4, x1, x2)

inst_44020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:132060*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132060*0 + 3*244*FLEN/8, x4, x1, x2)

inst_44021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:132063*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132063*0 + 3*245*FLEN/8, x4, x1, x2)

inst_44022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:132066*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132066*0 + 3*246*FLEN/8, x4, x1, x2)

inst_44023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:132069*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132069*0 + 3*247*FLEN/8, x4, x1, x2)

inst_44024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:132072*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132072*0 + 3*248*FLEN/8, x4, x1, x2)

inst_44025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:132075*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132075*0 + 3*249*FLEN/8, x4, x1, x2)

inst_44026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:132078*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132078*0 + 3*250*FLEN/8, x4, x1, x2)

inst_44027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:132081*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132081*0 + 3*251*FLEN/8, x4, x1, x2)

inst_44028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:132084*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132084*0 + 3*252*FLEN/8, x4, x1, x2)

inst_44029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:132087*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132087*0 + 3*253*FLEN/8, x4, x1, x2)

inst_44030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:132090*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132090*0 + 3*254*FLEN/8, x4, x1, x2)

inst_44031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:132093*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132093*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_44032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:132096*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132096*0 + 3*256*FLEN/8, x4, x1, x2)

inst_44033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:132099*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132099*0 + 3*257*FLEN/8, x4, x1, x2)

inst_44034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:132102*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132102*0 + 3*258*FLEN/8, x4, x1, x2)

inst_44035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:132105*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132105*0 + 3*259*FLEN/8, x4, x1, x2)

inst_44036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:132108*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132108*0 + 3*260*FLEN/8, x4, x1, x2)

inst_44037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:132111*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132111*0 + 3*261*FLEN/8, x4, x1, x2)

inst_44038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000000000; valaddr_reg:x3; val_offset:132114*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132114*0 + 3*262*FLEN/8, x4, x1, x2)

inst_44039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000000001; valaddr_reg:x3; val_offset:132117*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132117*0 + 3*263*FLEN/8, x4, x1, x2)

inst_44040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000000003; valaddr_reg:x3; val_offset:132120*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132120*0 + 3*264*FLEN/8, x4, x1, x2)

inst_44041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000000007; valaddr_reg:x3; val_offset:132123*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132123*0 + 3*265*FLEN/8, x4, x1, x2)

inst_44042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000000000f; valaddr_reg:x3; val_offset:132126*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132126*0 + 3*266*FLEN/8, x4, x1, x2)

inst_44043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000000001f; valaddr_reg:x3; val_offset:132129*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132129*0 + 3*267*FLEN/8, x4, x1, x2)

inst_44044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000000003f; valaddr_reg:x3; val_offset:132132*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132132*0 + 3*268*FLEN/8, x4, x1, x2)

inst_44045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000000007f; valaddr_reg:x3; val_offset:132135*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132135*0 + 3*269*FLEN/8, x4, x1, x2)

inst_44046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000000000ff; valaddr_reg:x3; val_offset:132138*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132138*0 + 3*270*FLEN/8, x4, x1, x2)

inst_44047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000000001ff; valaddr_reg:x3; val_offset:132141*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132141*0 + 3*271*FLEN/8, x4, x1, x2)

inst_44048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000000003ff; valaddr_reg:x3; val_offset:132144*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132144*0 + 3*272*FLEN/8, x4, x1, x2)

inst_44049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000000007ff; valaddr_reg:x3; val_offset:132147*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132147*0 + 3*273*FLEN/8, x4, x1, x2)

inst_44050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000000fff; valaddr_reg:x3; val_offset:132150*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132150*0 + 3*274*FLEN/8, x4, x1, x2)

inst_44051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000001fff; valaddr_reg:x3; val_offset:132153*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132153*0 + 3*275*FLEN/8, x4, x1, x2)

inst_44052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000003fff; valaddr_reg:x3; val_offset:132156*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132156*0 + 3*276*FLEN/8, x4, x1, x2)

inst_44053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000007fff; valaddr_reg:x3; val_offset:132159*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132159*0 + 3*277*FLEN/8, x4, x1, x2)

inst_44054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000000ffff; valaddr_reg:x3; val_offset:132162*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132162*0 + 3*278*FLEN/8, x4, x1, x2)

inst_44055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000001ffff; valaddr_reg:x3; val_offset:132165*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132165*0 + 3*279*FLEN/8, x4, x1, x2)

inst_44056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000003ffff; valaddr_reg:x3; val_offset:132168*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132168*0 + 3*280*FLEN/8, x4, x1, x2)

inst_44057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000007ffff; valaddr_reg:x3; val_offset:132171*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132171*0 + 3*281*FLEN/8, x4, x1, x2)

inst_44058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000000fffff; valaddr_reg:x3; val_offset:132174*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132174*0 + 3*282*FLEN/8, x4, x1, x2)

inst_44059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000001fffff; valaddr_reg:x3; val_offset:132177*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132177*0 + 3*283*FLEN/8, x4, x1, x2)

inst_44060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000003fffff; valaddr_reg:x3; val_offset:132180*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132180*0 + 3*284*FLEN/8, x4, x1, x2)

inst_44061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000007fffff; valaddr_reg:x3; val_offset:132183*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132183*0 + 3*285*FLEN/8, x4, x1, x2)

inst_44062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000000ffffff; valaddr_reg:x3; val_offset:132186*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132186*0 + 3*286*FLEN/8, x4, x1, x2)

inst_44063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000001ffffff; valaddr_reg:x3; val_offset:132189*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132189*0 + 3*287*FLEN/8, x4, x1, x2)

inst_44064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000003ffffff; valaddr_reg:x3; val_offset:132192*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132192*0 + 3*288*FLEN/8, x4, x1, x2)

inst_44065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000007ffffff; valaddr_reg:x3; val_offset:132195*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132195*0 + 3*289*FLEN/8, x4, x1, x2)

inst_44066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000000fffffff; valaddr_reg:x3; val_offset:132198*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132198*0 + 3*290*FLEN/8, x4, x1, x2)

inst_44067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000001fffffff; valaddr_reg:x3; val_offset:132201*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132201*0 + 3*291*FLEN/8, x4, x1, x2)

inst_44068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000003fffffff; valaddr_reg:x3; val_offset:132204*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132204*0 + 3*292*FLEN/8, x4, x1, x2)

inst_44069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000007fffffff; valaddr_reg:x3; val_offset:132207*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132207*0 + 3*293*FLEN/8, x4, x1, x2)

inst_44070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00000ffffffff; valaddr_reg:x3; val_offset:132210*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132210*0 + 3*294*FLEN/8, x4, x1, x2)

inst_44071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00001ffffffff; valaddr_reg:x3; val_offset:132213*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132213*0 + 3*295*FLEN/8, x4, x1, x2)

inst_44072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00003ffffffff; valaddr_reg:x3; val_offset:132216*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132216*0 + 3*296*FLEN/8, x4, x1, x2)

inst_44073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00007ffffffff; valaddr_reg:x3; val_offset:132219*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132219*0 + 3*297*FLEN/8, x4, x1, x2)

inst_44074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0000fffffffff; valaddr_reg:x3; val_offset:132222*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132222*0 + 3*298*FLEN/8, x4, x1, x2)

inst_44075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0001fffffffff; valaddr_reg:x3; val_offset:132225*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132225*0 + 3*299*FLEN/8, x4, x1, x2)

inst_44076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0003fffffffff; valaddr_reg:x3; val_offset:132228*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132228*0 + 3*300*FLEN/8, x4, x1, x2)

inst_44077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0007fffffffff; valaddr_reg:x3; val_offset:132231*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132231*0 + 3*301*FLEN/8, x4, x1, x2)

inst_44078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a000ffffffffff; valaddr_reg:x3; val_offset:132234*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132234*0 + 3*302*FLEN/8, x4, x1, x2)

inst_44079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a001ffffffffff; valaddr_reg:x3; val_offset:132237*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132237*0 + 3*303*FLEN/8, x4, x1, x2)

inst_44080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a003ffffffffff; valaddr_reg:x3; val_offset:132240*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132240*0 + 3*304*FLEN/8, x4, x1, x2)

inst_44081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a007ffffffffff; valaddr_reg:x3; val_offset:132243*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132243*0 + 3*305*FLEN/8, x4, x1, x2)

inst_44082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a00fffffffffff; valaddr_reg:x3; val_offset:132246*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132246*0 + 3*306*FLEN/8, x4, x1, x2)

inst_44083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a01fffffffffff; valaddr_reg:x3; val_offset:132249*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132249*0 + 3*307*FLEN/8, x4, x1, x2)

inst_44084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a03fffffffffff; valaddr_reg:x3; val_offset:132252*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132252*0 + 3*308*FLEN/8, x4, x1, x2)

inst_44085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a07fffffffffff; valaddr_reg:x3; val_offset:132255*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132255*0 + 3*309*FLEN/8, x4, x1, x2)

inst_44086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a0ffffffffffff; valaddr_reg:x3; val_offset:132258*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132258*0 + 3*310*FLEN/8, x4, x1, x2)

inst_44087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a1ffffffffffff; valaddr_reg:x3; val_offset:132261*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132261*0 + 3*311*FLEN/8, x4, x1, x2)

inst_44088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a3ffffffffffff; valaddr_reg:x3; val_offset:132264*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132264*0 + 3*312*FLEN/8, x4, x1, x2)

inst_44089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a7ffffffffffff; valaddr_reg:x3; val_offset:132267*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132267*0 + 3*313*FLEN/8, x4, x1, x2)

inst_44090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1a8000000000000; valaddr_reg:x3; val_offset:132270*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132270*0 + 3*314*FLEN/8, x4, x1, x2)

inst_44091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1ac000000000000; valaddr_reg:x3; val_offset:132273*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132273*0 + 3*315*FLEN/8, x4, x1, x2)

inst_44092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1ae000000000000; valaddr_reg:x3; val_offset:132276*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132276*0 + 3*316*FLEN/8, x4, x1, x2)

inst_44093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1af000000000000; valaddr_reg:x3; val_offset:132279*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132279*0 + 3*317*FLEN/8, x4, x1, x2)

inst_44094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1af800000000000; valaddr_reg:x3; val_offset:132282*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132282*0 + 3*318*FLEN/8, x4, x1, x2)

inst_44095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afc00000000000; valaddr_reg:x3; val_offset:132285*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132285*0 + 3*319*FLEN/8, x4, x1, x2)

inst_44096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afe00000000000; valaddr_reg:x3; val_offset:132288*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132288*0 + 3*320*FLEN/8, x4, x1, x2)

inst_44097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1aff00000000000; valaddr_reg:x3; val_offset:132291*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132291*0 + 3*321*FLEN/8, x4, x1, x2)

inst_44098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1aff80000000000; valaddr_reg:x3; val_offset:132294*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132294*0 + 3*322*FLEN/8, x4, x1, x2)

inst_44099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affc0000000000; valaddr_reg:x3; val_offset:132297*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132297*0 + 3*323*FLEN/8, x4, x1, x2)

inst_44100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affe0000000000; valaddr_reg:x3; val_offset:132300*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132300*0 + 3*324*FLEN/8, x4, x1, x2)

inst_44101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afff0000000000; valaddr_reg:x3; val_offset:132303*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132303*0 + 3*325*FLEN/8, x4, x1, x2)

inst_44102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afff8000000000; valaddr_reg:x3; val_offset:132306*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132306*0 + 3*326*FLEN/8, x4, x1, x2)

inst_44103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffc000000000; valaddr_reg:x3; val_offset:132309*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132309*0 + 3*327*FLEN/8, x4, x1, x2)

inst_44104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffe000000000; valaddr_reg:x3; val_offset:132312*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132312*0 + 3*328*FLEN/8, x4, x1, x2)

inst_44105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affff000000000; valaddr_reg:x3; val_offset:132315*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132315*0 + 3*329*FLEN/8, x4, x1, x2)

inst_44106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affff800000000; valaddr_reg:x3; val_offset:132318*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132318*0 + 3*330*FLEN/8, x4, x1, x2)

inst_44107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffc00000000; valaddr_reg:x3; val_offset:132321*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132321*0 + 3*331*FLEN/8, x4, x1, x2)

inst_44108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffe00000000; valaddr_reg:x3; val_offset:132324*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132324*0 + 3*332*FLEN/8, x4, x1, x2)

inst_44109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffff00000000; valaddr_reg:x3; val_offset:132327*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132327*0 + 3*333*FLEN/8, x4, x1, x2)

inst_44110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffff80000000; valaddr_reg:x3; val_offset:132330*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132330*0 + 3*334*FLEN/8, x4, x1, x2)

inst_44111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffc0000000; valaddr_reg:x3; val_offset:132333*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132333*0 + 3*335*FLEN/8, x4, x1, x2)

inst_44112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffe0000000; valaddr_reg:x3; val_offset:132336*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132336*0 + 3*336*FLEN/8, x4, x1, x2)

inst_44113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffff0000000; valaddr_reg:x3; val_offset:132339*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132339*0 + 3*337*FLEN/8, x4, x1, x2)

inst_44114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffff8000000; valaddr_reg:x3; val_offset:132342*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132342*0 + 3*338*FLEN/8, x4, x1, x2)

inst_44115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffc000000; valaddr_reg:x3; val_offset:132345*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132345*0 + 3*339*FLEN/8, x4, x1, x2)

inst_44116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffe000000; valaddr_reg:x3; val_offset:132348*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132348*0 + 3*340*FLEN/8, x4, x1, x2)

inst_44117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffff000000; valaddr_reg:x3; val_offset:132351*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132351*0 + 3*341*FLEN/8, x4, x1, x2)

inst_44118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffff800000; valaddr_reg:x3; val_offset:132354*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132354*0 + 3*342*FLEN/8, x4, x1, x2)

inst_44119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffc00000; valaddr_reg:x3; val_offset:132357*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132357*0 + 3*343*FLEN/8, x4, x1, x2)

inst_44120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffe00000; valaddr_reg:x3; val_offset:132360*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132360*0 + 3*344*FLEN/8, x4, x1, x2)

inst_44121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffff00000; valaddr_reg:x3; val_offset:132363*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132363*0 + 3*345*FLEN/8, x4, x1, x2)

inst_44122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffff80000; valaddr_reg:x3; val_offset:132366*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132366*0 + 3*346*FLEN/8, x4, x1, x2)

inst_44123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffc0000; valaddr_reg:x3; val_offset:132369*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132369*0 + 3*347*FLEN/8, x4, x1, x2)

inst_44124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffe0000; valaddr_reg:x3; val_offset:132372*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132372*0 + 3*348*FLEN/8, x4, x1, x2)

inst_44125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffff0000; valaddr_reg:x3; val_offset:132375*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132375*0 + 3*349*FLEN/8, x4, x1, x2)

inst_44126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffff8000; valaddr_reg:x3; val_offset:132378*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132378*0 + 3*350*FLEN/8, x4, x1, x2)

inst_44127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffc000; valaddr_reg:x3; val_offset:132381*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132381*0 + 3*351*FLEN/8, x4, x1, x2)

inst_44128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffe000; valaddr_reg:x3; val_offset:132384*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132384*0 + 3*352*FLEN/8, x4, x1, x2)

inst_44129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffff000; valaddr_reg:x3; val_offset:132387*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132387*0 + 3*353*FLEN/8, x4, x1, x2)

inst_44130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffff800; valaddr_reg:x3; val_offset:132390*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132390*0 + 3*354*FLEN/8, x4, x1, x2)

inst_44131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffc00; valaddr_reg:x3; val_offset:132393*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132393*0 + 3*355*FLEN/8, x4, x1, x2)

inst_44132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffe00; valaddr_reg:x3; val_offset:132396*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132396*0 + 3*356*FLEN/8, x4, x1, x2)

inst_44133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffff00; valaddr_reg:x3; val_offset:132399*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132399*0 + 3*357*FLEN/8, x4, x1, x2)

inst_44134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffff80; valaddr_reg:x3; val_offset:132402*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132402*0 + 3*358*FLEN/8, x4, x1, x2)

inst_44135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffffc0; valaddr_reg:x3; val_offset:132405*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132405*0 + 3*359*FLEN/8, x4, x1, x2)

inst_44136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffffe0; valaddr_reg:x3; val_offset:132408*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132408*0 + 3*360*FLEN/8, x4, x1, x2)

inst_44137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffff0; valaddr_reg:x3; val_offset:132411*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132411*0 + 3*361*FLEN/8, x4, x1, x2)

inst_44138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffff8; valaddr_reg:x3; val_offset:132414*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132414*0 + 3*362*FLEN/8, x4, x1, x2)

inst_44139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffffc; valaddr_reg:x3; val_offset:132417*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132417*0 + 3*363*FLEN/8, x4, x1, x2)

inst_44140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1affffffffffffe; valaddr_reg:x3; val_offset:132420*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132420*0 + 3*364*FLEN/8, x4, x1, x2)

inst_44141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xbaf1560e67599 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9baf1560e67599; op2val:0x0;
op3val:0x1afffffffffffff; valaddr_reg:x3; val_offset:132423*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132423*0 + 3*365*FLEN/8, x4, x1, x2)

inst_44142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:132426*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132426*0 + 3*366*FLEN/8, x4, x1, x2)

inst_44143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:132429*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132429*0 + 3*367*FLEN/8, x4, x1, x2)

inst_44144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:132432*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132432*0 + 3*368*FLEN/8, x4, x1, x2)

inst_44145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:132435*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132435*0 + 3*369*FLEN/8, x4, x1, x2)

inst_44146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:132438*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132438*0 + 3*370*FLEN/8, x4, x1, x2)

inst_44147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:132441*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132441*0 + 3*371*FLEN/8, x4, x1, x2)

inst_44148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:132444*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132444*0 + 3*372*FLEN/8, x4, x1, x2)

inst_44149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:132447*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132447*0 + 3*373*FLEN/8, x4, x1, x2)

inst_44150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:132450*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132450*0 + 3*374*FLEN/8, x4, x1, x2)

inst_44151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:132453*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132453*0 + 3*375*FLEN/8, x4, x1, x2)

inst_44152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:132456*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132456*0 + 3*376*FLEN/8, x4, x1, x2)

inst_44153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:132459*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132459*0 + 3*377*FLEN/8, x4, x1, x2)

inst_44154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:132462*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132462*0 + 3*378*FLEN/8, x4, x1, x2)

inst_44155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:132465*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132465*0 + 3*379*FLEN/8, x4, x1, x2)

inst_44156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:132468*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132468*0 + 3*380*FLEN/8, x4, x1, x2)

inst_44157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:132471*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132471*0 + 3*381*FLEN/8, x4, x1, x2)

inst_44158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:132474*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132474*0 + 3*382*FLEN/8, x4, x1, x2)

inst_44159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:132477*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132477*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_44160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:132480*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132480*0 + 3*384*FLEN/8, x4, x1, x2)

inst_44161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:132483*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132483*0 + 3*385*FLEN/8, x4, x1, x2)

inst_44162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:132486*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132486*0 + 3*386*FLEN/8, x4, x1, x2)

inst_44163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:132489*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132489*0 + 3*387*FLEN/8, x4, x1, x2)

inst_44164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:132492*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132492*0 + 3*388*FLEN/8, x4, x1, x2)

inst_44165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:132495*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132495*0 + 3*389*FLEN/8, x4, x1, x2)

inst_44166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:132498*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132498*0 + 3*390*FLEN/8, x4, x1, x2)

inst_44167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:132501*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132501*0 + 3*391*FLEN/8, x4, x1, x2)

inst_44168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:132504*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132504*0 + 3*392*FLEN/8, x4, x1, x2)

inst_44169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:132507*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132507*0 + 3*393*FLEN/8, x4, x1, x2)

inst_44170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:132510*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132510*0 + 3*394*FLEN/8, x4, x1, x2)

inst_44171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:132513*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132513*0 + 3*395*FLEN/8, x4, x1, x2)

inst_44172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:132516*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132516*0 + 3*396*FLEN/8, x4, x1, x2)

inst_44173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:132519*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132519*0 + 3*397*FLEN/8, x4, x1, x2)

inst_44174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:132522*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132522*0 + 3*398*FLEN/8, x4, x1, x2)

inst_44175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:132525*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132525*0 + 3*399*FLEN/8, x4, x1, x2)

inst_44176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:132528*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132528*0 + 3*400*FLEN/8, x4, x1, x2)

inst_44177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:132531*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132531*0 + 3*401*FLEN/8, x4, x1, x2)

inst_44178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:132534*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132534*0 + 3*402*FLEN/8, x4, x1, x2)

inst_44179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:132537*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132537*0 + 3*403*FLEN/8, x4, x1, x2)

inst_44180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:132540*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132540*0 + 3*404*FLEN/8, x4, x1, x2)

inst_44181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:132543*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132543*0 + 3*405*FLEN/8, x4, x1, x2)

inst_44182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:132546*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132546*0 + 3*406*FLEN/8, x4, x1, x2)

inst_44183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:132549*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132549*0 + 3*407*FLEN/8, x4, x1, x2)

inst_44184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:132552*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132552*0 + 3*408*FLEN/8, x4, x1, x2)

inst_44185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:132555*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132555*0 + 3*409*FLEN/8, x4, x1, x2)

inst_44186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:132558*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132558*0 + 3*410*FLEN/8, x4, x1, x2)

inst_44187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:132561*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132561*0 + 3*411*FLEN/8, x4, x1, x2)

inst_44188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:132564*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132564*0 + 3*412*FLEN/8, x4, x1, x2)

inst_44189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:132567*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132567*0 + 3*413*FLEN/8, x4, x1, x2)

inst_44190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:132570*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132570*0 + 3*414*FLEN/8, x4, x1, x2)

inst_44191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:132573*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132573*0 + 3*415*FLEN/8, x4, x1, x2)

inst_44192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:132576*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132576*0 + 3*416*FLEN/8, x4, x1, x2)

inst_44193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:132579*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132579*0 + 3*417*FLEN/8, x4, x1, x2)

inst_44194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:132582*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132582*0 + 3*418*FLEN/8, x4, x1, x2)

inst_44195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:132585*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132585*0 + 3*419*FLEN/8, x4, x1, x2)

inst_44196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:132588*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132588*0 + 3*420*FLEN/8, x4, x1, x2)

inst_44197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:132591*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132591*0 + 3*421*FLEN/8, x4, x1, x2)

inst_44198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:132594*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132594*0 + 3*422*FLEN/8, x4, x1, x2)

inst_44199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:132597*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132597*0 + 3*423*FLEN/8, x4, x1, x2)

inst_44200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:132600*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132600*0 + 3*424*FLEN/8, x4, x1, x2)

inst_44201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:132603*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132603*0 + 3*425*FLEN/8, x4, x1, x2)

inst_44202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:132606*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132606*0 + 3*426*FLEN/8, x4, x1, x2)

inst_44203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:132609*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132609*0 + 3*427*FLEN/8, x4, x1, x2)

inst_44204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:132612*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132612*0 + 3*428*FLEN/8, x4, x1, x2)

inst_44205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:132615*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132615*0 + 3*429*FLEN/8, x4, x1, x2)

inst_44206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:132618*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132618*0 + 3*430*FLEN/8, x4, x1, x2)

inst_44207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:132621*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132621*0 + 3*431*FLEN/8, x4, x1, x2)

inst_44208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:132624*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132624*0 + 3*432*FLEN/8, x4, x1, x2)

inst_44209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:132627*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132627*0 + 3*433*FLEN/8, x4, x1, x2)

inst_44210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:132630*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132630*0 + 3*434*FLEN/8, x4, x1, x2)

inst_44211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:132633*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132633*0 + 3*435*FLEN/8, x4, x1, x2)

inst_44212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:132636*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132636*0 + 3*436*FLEN/8, x4, x1, x2)

inst_44213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:132639*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132639*0 + 3*437*FLEN/8, x4, x1, x2)

inst_44214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:132642*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132642*0 + 3*438*FLEN/8, x4, x1, x2)

inst_44215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:132645*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132645*0 + 3*439*FLEN/8, x4, x1, x2)

inst_44216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:132648*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132648*0 + 3*440*FLEN/8, x4, x1, x2)

inst_44217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:132651*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132651*0 + 3*441*FLEN/8, x4, x1, x2)

inst_44218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:132654*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132654*0 + 3*442*FLEN/8, x4, x1, x2)

inst_44219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:132657*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132657*0 + 3*443*FLEN/8, x4, x1, x2)

inst_44220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:132660*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132660*0 + 3*444*FLEN/8, x4, x1, x2)

inst_44221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:132663*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132663*0 + 3*445*FLEN/8, x4, x1, x2)

inst_44222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:132666*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132666*0 + 3*446*FLEN/8, x4, x1, x2)

inst_44223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:132669*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132669*0 + 3*447*FLEN/8, x4, x1, x2)

inst_44224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:132672*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132672*0 + 3*448*FLEN/8, x4, x1, x2)

inst_44225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:132675*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132675*0 + 3*449*FLEN/8, x4, x1, x2)

inst_44226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:132678*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132678*0 + 3*450*FLEN/8, x4, x1, x2)

inst_44227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:132681*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132681*0 + 3*451*FLEN/8, x4, x1, x2)

inst_44228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:132684*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132684*0 + 3*452*FLEN/8, x4, x1, x2)

inst_44229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:132687*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132687*0 + 3*453*FLEN/8, x4, x1, x2)

inst_44230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:132690*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132690*0 + 3*454*FLEN/8, x4, x1, x2)

inst_44231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:132693*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132693*0 + 3*455*FLEN/8, x4, x1, x2)

inst_44232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:132696*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132696*0 + 3*456*FLEN/8, x4, x1, x2)

inst_44233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:132699*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132699*0 + 3*457*FLEN/8, x4, x1, x2)

inst_44234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:132702*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132702*0 + 3*458*FLEN/8, x4, x1, x2)

inst_44235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:132705*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132705*0 + 3*459*FLEN/8, x4, x1, x2)

inst_44236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:132708*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132708*0 + 3*460*FLEN/8, x4, x1, x2)

inst_44237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:132711*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132711*0 + 3*461*FLEN/8, x4, x1, x2)

inst_44238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:132714*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132714*0 + 3*462*FLEN/8, x4, x1, x2)

inst_44239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:132717*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132717*0 + 3*463*FLEN/8, x4, x1, x2)

inst_44240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:132720*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132720*0 + 3*464*FLEN/8, x4, x1, x2)

inst_44241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:132723*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132723*0 + 3*465*FLEN/8, x4, x1, x2)

inst_44242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:132726*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132726*0 + 3*466*FLEN/8, x4, x1, x2)

inst_44243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:132729*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132729*0 + 3*467*FLEN/8, x4, x1, x2)

inst_44244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:132732*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132732*0 + 3*468*FLEN/8, x4, x1, x2)

inst_44245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:132735*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132735*0 + 3*469*FLEN/8, x4, x1, x2)

inst_44246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:132738*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132738*0 + 3*470*FLEN/8, x4, x1, x2)

inst_44247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:132741*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132741*0 + 3*471*FLEN/8, x4, x1, x2)

inst_44248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:132744*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132744*0 + 3*472*FLEN/8, x4, x1, x2)

inst_44249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:132747*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132747*0 + 3*473*FLEN/8, x4, x1, x2)

inst_44250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:132750*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132750*0 + 3*474*FLEN/8, x4, x1, x2)

inst_44251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:132753*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132753*0 + 3*475*FLEN/8, x4, x1, x2)

inst_44252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:132756*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132756*0 + 3*476*FLEN/8, x4, x1, x2)

inst_44253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:132759*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132759*0 + 3*477*FLEN/8, x4, x1, x2)

inst_44254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:132762*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132762*0 + 3*478*FLEN/8, x4, x1, x2)

inst_44255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:132765*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132765*0 + 3*479*FLEN/8, x4, x1, x2)

inst_44256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:132768*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132768*0 + 3*480*FLEN/8, x4, x1, x2)

inst_44257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:132771*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132771*0 + 3*481*FLEN/8, x4, x1, x2)

inst_44258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:132774*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132774*0 + 3*482*FLEN/8, x4, x1, x2)

inst_44259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:132777*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132777*0 + 3*483*FLEN/8, x4, x1, x2)

inst_44260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:132780*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132780*0 + 3*484*FLEN/8, x4, x1, x2)

inst_44261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:132783*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132783*0 + 3*485*FLEN/8, x4, x1, x2)

inst_44262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:132786*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132786*0 + 3*486*FLEN/8, x4, x1, x2)

inst_44263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:132789*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132789*0 + 3*487*FLEN/8, x4, x1, x2)

inst_44264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:132792*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132792*0 + 3*488*FLEN/8, x4, x1, x2)

inst_44265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:132795*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132795*0 + 3*489*FLEN/8, x4, x1, x2)

inst_44266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:132798*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132798*0 + 3*490*FLEN/8, x4, x1, x2)

inst_44267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0e4ae971d8ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0e4ae971d8ab; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:132801*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132801*0 + 3*491*FLEN/8, x4, x1, x2)

inst_44268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:132804*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132804*0 + 3*492*FLEN/8, x4, x1, x2)

inst_44269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:132807*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132807*0 + 3*493*FLEN/8, x4, x1, x2)

inst_44270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:132810*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132810*0 + 3*494*FLEN/8, x4, x1, x2)

inst_44271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:132813*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132813*0 + 3*495*FLEN/8, x4, x1, x2)

inst_44272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:132816*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132816*0 + 3*496*FLEN/8, x4, x1, x2)

inst_44273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:132819*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132819*0 + 3*497*FLEN/8, x4, x1, x2)

inst_44274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:132822*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132822*0 + 3*498*FLEN/8, x4, x1, x2)

inst_44275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:132825*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132825*0 + 3*499*FLEN/8, x4, x1, x2)

inst_44276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:132828*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132828*0 + 3*500*FLEN/8, x4, x1, x2)

inst_44277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:132831*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132831*0 + 3*501*FLEN/8, x4, x1, x2)

inst_44278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:132834*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132834*0 + 3*502*FLEN/8, x4, x1, x2)

inst_44279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:132837*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132837*0 + 3*503*FLEN/8, x4, x1, x2)

inst_44280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:132840*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132840*0 + 3*504*FLEN/8, x4, x1, x2)

inst_44281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:132843*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132843*0 + 3*505*FLEN/8, x4, x1, x2)

inst_44282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:132846*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132846*0 + 3*506*FLEN/8, x4, x1, x2)

inst_44283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:132849*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132849*0 + 3*507*FLEN/8, x4, x1, x2)

inst_44284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:132852*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132852*0 + 3*508*FLEN/8, x4, x1, x2)

inst_44285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:132855*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132855*0 + 3*509*FLEN/8, x4, x1, x2)

inst_44286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:132858*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132858*0 + 3*510*FLEN/8, x4, x1, x2)

inst_44287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:132861*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132861*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_44288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:132864*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132864*0 + 3*512*FLEN/8, x4, x1, x2)

inst_44289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:132867*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132867*0 + 3*513*FLEN/8, x4, x1, x2)

inst_44290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000000000; valaddr_reg:x3; val_offset:132870*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132870*0 + 3*514*FLEN/8, x4, x1, x2)

inst_44291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000000001; valaddr_reg:x3; val_offset:132873*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132873*0 + 3*515*FLEN/8, x4, x1, x2)

inst_44292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000000003; valaddr_reg:x3; val_offset:132876*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132876*0 + 3*516*FLEN/8, x4, x1, x2)

inst_44293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000000007; valaddr_reg:x3; val_offset:132879*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132879*0 + 3*517*FLEN/8, x4, x1, x2)

inst_44294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000000000f; valaddr_reg:x3; val_offset:132882*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132882*0 + 3*518*FLEN/8, x4, x1, x2)

inst_44295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000000001f; valaddr_reg:x3; val_offset:132885*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132885*0 + 3*519*FLEN/8, x4, x1, x2)

inst_44296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000000003f; valaddr_reg:x3; val_offset:132888*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132888*0 + 3*520*FLEN/8, x4, x1, x2)

inst_44297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000000007f; valaddr_reg:x3; val_offset:132891*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132891*0 + 3*521*FLEN/8, x4, x1, x2)

inst_44298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000000000ff; valaddr_reg:x3; val_offset:132894*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132894*0 + 3*522*FLEN/8, x4, x1, x2)

inst_44299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000000001ff; valaddr_reg:x3; val_offset:132897*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132897*0 + 3*523*FLEN/8, x4, x1, x2)

inst_44300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000000003ff; valaddr_reg:x3; val_offset:132900*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132900*0 + 3*524*FLEN/8, x4, x1, x2)

inst_44301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000000007ff; valaddr_reg:x3; val_offset:132903*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132903*0 + 3*525*FLEN/8, x4, x1, x2)

inst_44302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000000fff; valaddr_reg:x3; val_offset:132906*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132906*0 + 3*526*FLEN/8, x4, x1, x2)

inst_44303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000001fff; valaddr_reg:x3; val_offset:132909*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132909*0 + 3*527*FLEN/8, x4, x1, x2)

inst_44304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000003fff; valaddr_reg:x3; val_offset:132912*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132912*0 + 3*528*FLEN/8, x4, x1, x2)

inst_44305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000007fff; valaddr_reg:x3; val_offset:132915*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132915*0 + 3*529*FLEN/8, x4, x1, x2)

inst_44306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000000ffff; valaddr_reg:x3; val_offset:132918*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132918*0 + 3*530*FLEN/8, x4, x1, x2)

inst_44307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000001ffff; valaddr_reg:x3; val_offset:132921*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132921*0 + 3*531*FLEN/8, x4, x1, x2)

inst_44308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000003ffff; valaddr_reg:x3; val_offset:132924*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132924*0 + 3*532*FLEN/8, x4, x1, x2)

inst_44309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000007ffff; valaddr_reg:x3; val_offset:132927*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132927*0 + 3*533*FLEN/8, x4, x1, x2)

inst_44310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000000fffff; valaddr_reg:x3; val_offset:132930*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132930*0 + 3*534*FLEN/8, x4, x1, x2)

inst_44311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000001fffff; valaddr_reg:x3; val_offset:132933*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132933*0 + 3*535*FLEN/8, x4, x1, x2)

inst_44312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000003fffff; valaddr_reg:x3; val_offset:132936*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132936*0 + 3*536*FLEN/8, x4, x1, x2)

inst_44313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000007fffff; valaddr_reg:x3; val_offset:132939*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132939*0 + 3*537*FLEN/8, x4, x1, x2)

inst_44314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000000ffffff; valaddr_reg:x3; val_offset:132942*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132942*0 + 3*538*FLEN/8, x4, x1, x2)

inst_44315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000001ffffff; valaddr_reg:x3; val_offset:132945*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132945*0 + 3*539*FLEN/8, x4, x1, x2)

inst_44316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000003ffffff; valaddr_reg:x3; val_offset:132948*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132948*0 + 3*540*FLEN/8, x4, x1, x2)

inst_44317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000007ffffff; valaddr_reg:x3; val_offset:132951*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132951*0 + 3*541*FLEN/8, x4, x1, x2)

inst_44318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000000fffffff; valaddr_reg:x3; val_offset:132954*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132954*0 + 3*542*FLEN/8, x4, x1, x2)

inst_44319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000001fffffff; valaddr_reg:x3; val_offset:132957*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132957*0 + 3*543*FLEN/8, x4, x1, x2)

inst_44320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000003fffffff; valaddr_reg:x3; val_offset:132960*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132960*0 + 3*544*FLEN/8, x4, x1, x2)

inst_44321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000007fffffff; valaddr_reg:x3; val_offset:132963*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132963*0 + 3*545*FLEN/8, x4, x1, x2)

inst_44322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00000ffffffff; valaddr_reg:x3; val_offset:132966*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132966*0 + 3*546*FLEN/8, x4, x1, x2)

inst_44323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00001ffffffff; valaddr_reg:x3; val_offset:132969*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132969*0 + 3*547*FLEN/8, x4, x1, x2)

inst_44324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00003ffffffff; valaddr_reg:x3; val_offset:132972*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132972*0 + 3*548*FLEN/8, x4, x1, x2)

inst_44325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00007ffffffff; valaddr_reg:x3; val_offset:132975*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132975*0 + 3*549*FLEN/8, x4, x1, x2)

inst_44326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0000fffffffff; valaddr_reg:x3; val_offset:132978*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132978*0 + 3*550*FLEN/8, x4, x1, x2)

inst_44327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0001fffffffff; valaddr_reg:x3; val_offset:132981*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132981*0 + 3*551*FLEN/8, x4, x1, x2)

inst_44328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0003fffffffff; valaddr_reg:x3; val_offset:132984*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132984*0 + 3*552*FLEN/8, x4, x1, x2)

inst_44329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0007fffffffff; valaddr_reg:x3; val_offset:132987*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132987*0 + 3*553*FLEN/8, x4, x1, x2)

inst_44330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b000ffffffffff; valaddr_reg:x3; val_offset:132990*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132990*0 + 3*554*FLEN/8, x4, x1, x2)

inst_44331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b001ffffffffff; valaddr_reg:x3; val_offset:132993*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132993*0 + 3*555*FLEN/8, x4, x1, x2)

inst_44332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b003ffffffffff; valaddr_reg:x3; val_offset:132996*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132996*0 + 3*556*FLEN/8, x4, x1, x2)

inst_44333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b007ffffffffff; valaddr_reg:x3; val_offset:132999*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 132999*0 + 3*557*FLEN/8, x4, x1, x2)

inst_44334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b00fffffffffff; valaddr_reg:x3; val_offset:133002*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133002*0 + 3*558*FLEN/8, x4, x1, x2)

inst_44335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b01fffffffffff; valaddr_reg:x3; val_offset:133005*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133005*0 + 3*559*FLEN/8, x4, x1, x2)

inst_44336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b03fffffffffff; valaddr_reg:x3; val_offset:133008*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133008*0 + 3*560*FLEN/8, x4, x1, x2)

inst_44337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b07fffffffffff; valaddr_reg:x3; val_offset:133011*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133011*0 + 3*561*FLEN/8, x4, x1, x2)

inst_44338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b0ffffffffffff; valaddr_reg:x3; val_offset:133014*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133014*0 + 3*562*FLEN/8, x4, x1, x2)

inst_44339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b1ffffffffffff; valaddr_reg:x3; val_offset:133017*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133017*0 + 3*563*FLEN/8, x4, x1, x2)

inst_44340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b3ffffffffffff; valaddr_reg:x3; val_offset:133020*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133020*0 + 3*564*FLEN/8, x4, x1, x2)

inst_44341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b7ffffffffffff; valaddr_reg:x3; val_offset:133023*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133023*0 + 3*565*FLEN/8, x4, x1, x2)

inst_44342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1b8000000000000; valaddr_reg:x3; val_offset:133026*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133026*0 + 3*566*FLEN/8, x4, x1, x2)

inst_44343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bc000000000000; valaddr_reg:x3; val_offset:133029*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133029*0 + 3*567*FLEN/8, x4, x1, x2)

inst_44344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1be000000000000; valaddr_reg:x3; val_offset:133032*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133032*0 + 3*568*FLEN/8, x4, x1, x2)

inst_44345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bf000000000000; valaddr_reg:x3; val_offset:133035*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133035*0 + 3*569*FLEN/8, x4, x1, x2)

inst_44346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bf800000000000; valaddr_reg:x3; val_offset:133038*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133038*0 + 3*570*FLEN/8, x4, x1, x2)

inst_44347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfc00000000000; valaddr_reg:x3; val_offset:133041*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133041*0 + 3*571*FLEN/8, x4, x1, x2)

inst_44348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfe00000000000; valaddr_reg:x3; val_offset:133044*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133044*0 + 3*572*FLEN/8, x4, x1, x2)

inst_44349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bff00000000000; valaddr_reg:x3; val_offset:133047*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133047*0 + 3*573*FLEN/8, x4, x1, x2)

inst_44350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bff80000000000; valaddr_reg:x3; val_offset:133050*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133050*0 + 3*574*FLEN/8, x4, x1, x2)

inst_44351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffc0000000000; valaddr_reg:x3; val_offset:133053*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133053*0 + 3*575*FLEN/8, x4, x1, x2)

inst_44352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffe0000000000; valaddr_reg:x3; val_offset:133056*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133056*0 + 3*576*FLEN/8, x4, x1, x2)

inst_44353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfff0000000000; valaddr_reg:x3; val_offset:133059*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133059*0 + 3*577*FLEN/8, x4, x1, x2)

inst_44354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfff8000000000; valaddr_reg:x3; val_offset:133062*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133062*0 + 3*578*FLEN/8, x4, x1, x2)

inst_44355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffc000000000; valaddr_reg:x3; val_offset:133065*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133065*0 + 3*579*FLEN/8, x4, x1, x2)

inst_44356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffe000000000; valaddr_reg:x3; val_offset:133068*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133068*0 + 3*580*FLEN/8, x4, x1, x2)

inst_44357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffff000000000; valaddr_reg:x3; val_offset:133071*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133071*0 + 3*581*FLEN/8, x4, x1, x2)

inst_44358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffff800000000; valaddr_reg:x3; val_offset:133074*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133074*0 + 3*582*FLEN/8, x4, x1, x2)

inst_44359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffc00000000; valaddr_reg:x3; val_offset:133077*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133077*0 + 3*583*FLEN/8, x4, x1, x2)

inst_44360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffe00000000; valaddr_reg:x3; val_offset:133080*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133080*0 + 3*584*FLEN/8, x4, x1, x2)

inst_44361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffff00000000; valaddr_reg:x3; val_offset:133083*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133083*0 + 3*585*FLEN/8, x4, x1, x2)

inst_44362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffff80000000; valaddr_reg:x3; val_offset:133086*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133086*0 + 3*586*FLEN/8, x4, x1, x2)

inst_44363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffc0000000; valaddr_reg:x3; val_offset:133089*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133089*0 + 3*587*FLEN/8, x4, x1, x2)

inst_44364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffe0000000; valaddr_reg:x3; val_offset:133092*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133092*0 + 3*588*FLEN/8, x4, x1, x2)

inst_44365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffff0000000; valaddr_reg:x3; val_offset:133095*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133095*0 + 3*589*FLEN/8, x4, x1, x2)

inst_44366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffff8000000; valaddr_reg:x3; val_offset:133098*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133098*0 + 3*590*FLEN/8, x4, x1, x2)

inst_44367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffc000000; valaddr_reg:x3; val_offset:133101*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133101*0 + 3*591*FLEN/8, x4, x1, x2)

inst_44368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffe000000; valaddr_reg:x3; val_offset:133104*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133104*0 + 3*592*FLEN/8, x4, x1, x2)

inst_44369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffff000000; valaddr_reg:x3; val_offset:133107*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133107*0 + 3*593*FLEN/8, x4, x1, x2)

inst_44370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffff800000; valaddr_reg:x3; val_offset:133110*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133110*0 + 3*594*FLEN/8, x4, x1, x2)

inst_44371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffc00000; valaddr_reg:x3; val_offset:133113*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133113*0 + 3*595*FLEN/8, x4, x1, x2)

inst_44372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffe00000; valaddr_reg:x3; val_offset:133116*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133116*0 + 3*596*FLEN/8, x4, x1, x2)

inst_44373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffff00000; valaddr_reg:x3; val_offset:133119*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133119*0 + 3*597*FLEN/8, x4, x1, x2)

inst_44374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffff80000; valaddr_reg:x3; val_offset:133122*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133122*0 + 3*598*FLEN/8, x4, x1, x2)

inst_44375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffc0000; valaddr_reg:x3; val_offset:133125*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133125*0 + 3*599*FLEN/8, x4, x1, x2)

inst_44376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffe0000; valaddr_reg:x3; val_offset:133128*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133128*0 + 3*600*FLEN/8, x4, x1, x2)

inst_44377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffff0000; valaddr_reg:x3; val_offset:133131*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133131*0 + 3*601*FLEN/8, x4, x1, x2)

inst_44378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffff8000; valaddr_reg:x3; val_offset:133134*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133134*0 + 3*602*FLEN/8, x4, x1, x2)

inst_44379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffc000; valaddr_reg:x3; val_offset:133137*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133137*0 + 3*603*FLEN/8, x4, x1, x2)

inst_44380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffe000; valaddr_reg:x3; val_offset:133140*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133140*0 + 3*604*FLEN/8, x4, x1, x2)

inst_44381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffff000; valaddr_reg:x3; val_offset:133143*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133143*0 + 3*605*FLEN/8, x4, x1, x2)

inst_44382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffff800; valaddr_reg:x3; val_offset:133146*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133146*0 + 3*606*FLEN/8, x4, x1, x2)

inst_44383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffc00; valaddr_reg:x3; val_offset:133149*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133149*0 + 3*607*FLEN/8, x4, x1, x2)

inst_44384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffe00; valaddr_reg:x3; val_offset:133152*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133152*0 + 3*608*FLEN/8, x4, x1, x2)

inst_44385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffff00; valaddr_reg:x3; val_offset:133155*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133155*0 + 3*609*FLEN/8, x4, x1, x2)

inst_44386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffff80; valaddr_reg:x3; val_offset:133158*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133158*0 + 3*610*FLEN/8, x4, x1, x2)

inst_44387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffffc0; valaddr_reg:x3; val_offset:133161*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133161*0 + 3*611*FLEN/8, x4, x1, x2)

inst_44388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffffe0; valaddr_reg:x3; val_offset:133164*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133164*0 + 3*612*FLEN/8, x4, x1, x2)

inst_44389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffff0; valaddr_reg:x3; val_offset:133167*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133167*0 + 3*613*FLEN/8, x4, x1, x2)

inst_44390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffff8; valaddr_reg:x3; val_offset:133170*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133170*0 + 3*614*FLEN/8, x4, x1, x2)

inst_44391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffffc; valaddr_reg:x3; val_offset:133173*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133173*0 + 3*615*FLEN/8, x4, x1, x2)

inst_44392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bffffffffffffe; valaddr_reg:x3; val_offset:133176*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133176*0 + 3*616*FLEN/8, x4, x1, x2)

inst_44393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc0f0f9718f68b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c0f0f9718f68b; op2val:0x0;
op3val:0x1bfffffffffffff; valaddr_reg:x3; val_offset:133179*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133179*0 + 3*617*FLEN/8, x4, x1, x2)

inst_44394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:133182*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133182*0 + 3*618*FLEN/8, x4, x1, x2)

inst_44395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:133185*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133185*0 + 3*619*FLEN/8, x4, x1, x2)

inst_44396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:133188*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133188*0 + 3*620*FLEN/8, x4, x1, x2)

inst_44397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:133191*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133191*0 + 3*621*FLEN/8, x4, x1, x2)

inst_44398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:133194*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133194*0 + 3*622*FLEN/8, x4, x1, x2)

inst_44399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:133197*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133197*0 + 3*623*FLEN/8, x4, x1, x2)

inst_44400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:133200*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133200*0 + 3*624*FLEN/8, x4, x1, x2)

inst_44401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:133203*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133203*0 + 3*625*FLEN/8, x4, x1, x2)

inst_44402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:133206*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133206*0 + 3*626*FLEN/8, x4, x1, x2)

inst_44403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:133209*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133209*0 + 3*627*FLEN/8, x4, x1, x2)

inst_44404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:133212*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133212*0 + 3*628*FLEN/8, x4, x1, x2)

inst_44405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:133215*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133215*0 + 3*629*FLEN/8, x4, x1, x2)

inst_44406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:133218*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133218*0 + 3*630*FLEN/8, x4, x1, x2)

inst_44407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:133221*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133221*0 + 3*631*FLEN/8, x4, x1, x2)

inst_44408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:133224*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133224*0 + 3*632*FLEN/8, x4, x1, x2)

inst_44409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:133227*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133227*0 + 3*633*FLEN/8, x4, x1, x2)

inst_44410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:133230*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133230*0 + 3*634*FLEN/8, x4, x1, x2)

inst_44411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:133233*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133233*0 + 3*635*FLEN/8, x4, x1, x2)

inst_44412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:133236*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133236*0 + 3*636*FLEN/8, x4, x1, x2)

inst_44413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:133239*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133239*0 + 3*637*FLEN/8, x4, x1, x2)

inst_44414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:133242*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133242*0 + 3*638*FLEN/8, x4, x1, x2)

inst_44415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:133245*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133245*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_44416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:133248*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133248*0 + 3*640*FLEN/8, x4, x1, x2)

inst_44417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:133251*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133251*0 + 3*641*FLEN/8, x4, x1, x2)

inst_44418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:133254*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133254*0 + 3*642*FLEN/8, x4, x1, x2)

inst_44419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:133257*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133257*0 + 3*643*FLEN/8, x4, x1, x2)

inst_44420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:133260*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133260*0 + 3*644*FLEN/8, x4, x1, x2)

inst_44421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:133263*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133263*0 + 3*645*FLEN/8, x4, x1, x2)

inst_44422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:133266*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133266*0 + 3*646*FLEN/8, x4, x1, x2)

inst_44423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:133269*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133269*0 + 3*647*FLEN/8, x4, x1, x2)

inst_44424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:133272*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133272*0 + 3*648*FLEN/8, x4, x1, x2)

inst_44425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:133275*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133275*0 + 3*649*FLEN/8, x4, x1, x2)

inst_44426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:133278*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133278*0 + 3*650*FLEN/8, x4, x1, x2)

inst_44427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:133281*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133281*0 + 3*651*FLEN/8, x4, x1, x2)

inst_44428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:133284*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133284*0 + 3*652*FLEN/8, x4, x1, x2)

inst_44429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:133287*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133287*0 + 3*653*FLEN/8, x4, x1, x2)

inst_44430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:133290*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133290*0 + 3*654*FLEN/8, x4, x1, x2)

inst_44431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:133293*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133293*0 + 3*655*FLEN/8, x4, x1, x2)

inst_44432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:133296*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133296*0 + 3*656*FLEN/8, x4, x1, x2)

inst_44433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:133299*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133299*0 + 3*657*FLEN/8, x4, x1, x2)

inst_44434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:133302*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133302*0 + 3*658*FLEN/8, x4, x1, x2)

inst_44435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:133305*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133305*0 + 3*659*FLEN/8, x4, x1, x2)

inst_44436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:133308*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133308*0 + 3*660*FLEN/8, x4, x1, x2)

inst_44437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:133311*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133311*0 + 3*661*FLEN/8, x4, x1, x2)

inst_44438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:133314*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133314*0 + 3*662*FLEN/8, x4, x1, x2)

inst_44439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:133317*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133317*0 + 3*663*FLEN/8, x4, x1, x2)

inst_44440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:133320*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133320*0 + 3*664*FLEN/8, x4, x1, x2)

inst_44441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:133323*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133323*0 + 3*665*FLEN/8, x4, x1, x2)

inst_44442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:133326*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133326*0 + 3*666*FLEN/8, x4, x1, x2)

inst_44443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:133329*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133329*0 + 3*667*FLEN/8, x4, x1, x2)

inst_44444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:133332*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133332*0 + 3*668*FLEN/8, x4, x1, x2)

inst_44445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:133335*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133335*0 + 3*669*FLEN/8, x4, x1, x2)

inst_44446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:133338*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133338*0 + 3*670*FLEN/8, x4, x1, x2)

inst_44447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:133341*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133341*0 + 3*671*FLEN/8, x4, x1, x2)

inst_44448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:133344*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133344*0 + 3*672*FLEN/8, x4, x1, x2)

inst_44449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:133347*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133347*0 + 3*673*FLEN/8, x4, x1, x2)

inst_44450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:133350*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133350*0 + 3*674*FLEN/8, x4, x1, x2)

inst_44451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:133353*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133353*0 + 3*675*FLEN/8, x4, x1, x2)

inst_44452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:133356*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133356*0 + 3*676*FLEN/8, x4, x1, x2)

inst_44453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:133359*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133359*0 + 3*677*FLEN/8, x4, x1, x2)

inst_44454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:133362*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133362*0 + 3*678*FLEN/8, x4, x1, x2)

inst_44455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:133365*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133365*0 + 3*679*FLEN/8, x4, x1, x2)

inst_44456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:133368*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133368*0 + 3*680*FLEN/8, x4, x1, x2)

inst_44457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:133371*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133371*0 + 3*681*FLEN/8, x4, x1, x2)

inst_44458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:133374*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133374*0 + 3*682*FLEN/8, x4, x1, x2)

inst_44459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:133377*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133377*0 + 3*683*FLEN/8, x4, x1, x2)

inst_44460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:133380*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133380*0 + 3*684*FLEN/8, x4, x1, x2)

inst_44461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:133383*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133383*0 + 3*685*FLEN/8, x4, x1, x2)

inst_44462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:133386*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133386*0 + 3*686*FLEN/8, x4, x1, x2)

inst_44463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:133389*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133389*0 + 3*687*FLEN/8, x4, x1, x2)

inst_44464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:133392*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133392*0 + 3*688*FLEN/8, x4, x1, x2)

inst_44465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:133395*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133395*0 + 3*689*FLEN/8, x4, x1, x2)

inst_44466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:133398*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133398*0 + 3*690*FLEN/8, x4, x1, x2)

inst_44467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:133401*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133401*0 + 3*691*FLEN/8, x4, x1, x2)

inst_44468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:133404*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133404*0 + 3*692*FLEN/8, x4, x1, x2)

inst_44469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:133407*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133407*0 + 3*693*FLEN/8, x4, x1, x2)

inst_44470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:133410*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133410*0 + 3*694*FLEN/8, x4, x1, x2)

inst_44471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:133413*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133413*0 + 3*695*FLEN/8, x4, x1, x2)

inst_44472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:133416*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133416*0 + 3*696*FLEN/8, x4, x1, x2)

inst_44473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:133419*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133419*0 + 3*697*FLEN/8, x4, x1, x2)

inst_44474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:133422*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133422*0 + 3*698*FLEN/8, x4, x1, x2)

inst_44475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:133425*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133425*0 + 3*699*FLEN/8, x4, x1, x2)

inst_44476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:133428*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133428*0 + 3*700*FLEN/8, x4, x1, x2)

inst_44477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:133431*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133431*0 + 3*701*FLEN/8, x4, x1, x2)

inst_44478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:133434*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133434*0 + 3*702*FLEN/8, x4, x1, x2)

inst_44479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:133437*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133437*0 + 3*703*FLEN/8, x4, x1, x2)

inst_44480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:133440*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133440*0 + 3*704*FLEN/8, x4, x1, x2)

inst_44481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:133443*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133443*0 + 3*705*FLEN/8, x4, x1, x2)

inst_44482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:133446*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133446*0 + 3*706*FLEN/8, x4, x1, x2)

inst_44483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:133449*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133449*0 + 3*707*FLEN/8, x4, x1, x2)

inst_44484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:133452*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133452*0 + 3*708*FLEN/8, x4, x1, x2)

inst_44485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:133455*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133455*0 + 3*709*FLEN/8, x4, x1, x2)

inst_44486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:133458*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133458*0 + 3*710*FLEN/8, x4, x1, x2)

inst_44487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:133461*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133461*0 + 3*711*FLEN/8, x4, x1, x2)

inst_44488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:133464*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133464*0 + 3*712*FLEN/8, x4, x1, x2)

inst_44489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:133467*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133467*0 + 3*713*FLEN/8, x4, x1, x2)

inst_44490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:133470*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133470*0 + 3*714*FLEN/8, x4, x1, x2)

inst_44491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:133473*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133473*0 + 3*715*FLEN/8, x4, x1, x2)

inst_44492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:133476*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133476*0 + 3*716*FLEN/8, x4, x1, x2)

inst_44493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:133479*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133479*0 + 3*717*FLEN/8, x4, x1, x2)

inst_44494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:133482*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133482*0 + 3*718*FLEN/8, x4, x1, x2)

inst_44495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:133485*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133485*0 + 3*719*FLEN/8, x4, x1, x2)

inst_44496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:133488*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133488*0 + 3*720*FLEN/8, x4, x1, x2)

inst_44497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:133491*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133491*0 + 3*721*FLEN/8, x4, x1, x2)

inst_44498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:133494*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133494*0 + 3*722*FLEN/8, x4, x1, x2)

inst_44499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:133497*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133497*0 + 3*723*FLEN/8, x4, x1, x2)

inst_44500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:133500*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133500*0 + 3*724*FLEN/8, x4, x1, x2)

inst_44501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:133503*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133503*0 + 3*725*FLEN/8, x4, x1, x2)

inst_44502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:133506*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133506*0 + 3*726*FLEN/8, x4, x1, x2)

inst_44503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:133509*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133509*0 + 3*727*FLEN/8, x4, x1, x2)

inst_44504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:133512*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133512*0 + 3*728*FLEN/8, x4, x1, x2)

inst_44505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:133515*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133515*0 + 3*729*FLEN/8, x4, x1, x2)

inst_44506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:133518*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133518*0 + 3*730*FLEN/8, x4, x1, x2)

inst_44507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:133521*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133521*0 + 3*731*FLEN/8, x4, x1, x2)

inst_44508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:133524*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133524*0 + 3*732*FLEN/8, x4, x1, x2)

inst_44509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:133527*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133527*0 + 3*733*FLEN/8, x4, x1, x2)

inst_44510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:133530*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133530*0 + 3*734*FLEN/8, x4, x1, x2)

inst_44511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:133533*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133533*0 + 3*735*FLEN/8, x4, x1, x2)

inst_44512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:133536*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133536*0 + 3*736*FLEN/8, x4, x1, x2)

inst_44513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:133539*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133539*0 + 3*737*FLEN/8, x4, x1, x2)

inst_44514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:133542*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133542*0 + 3*738*FLEN/8, x4, x1, x2)

inst_44515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:133545*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133545*0 + 3*739*FLEN/8, x4, x1, x2)

inst_44516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:133548*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133548*0 + 3*740*FLEN/8, x4, x1, x2)

inst_44517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:133551*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133551*0 + 3*741*FLEN/8, x4, x1, x2)

inst_44518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:133554*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133554*0 + 3*742*FLEN/8, x4, x1, x2)

inst_44519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc18b330ac6a5d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c18b330ac6a5d; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:133557*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133557*0 + 3*743*FLEN/8, x4, x1, x2)

inst_44520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:133560*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133560*0 + 3*744*FLEN/8, x4, x1, x2)

inst_44521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:133563*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133563*0 + 3*745*FLEN/8, x4, x1, x2)

inst_44522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:133566*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133566*0 + 3*746*FLEN/8, x4, x1, x2)

inst_44523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:133569*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133569*0 + 3*747*FLEN/8, x4, x1, x2)

inst_44524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:133572*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133572*0 + 3*748*FLEN/8, x4, x1, x2)

inst_44525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:133575*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133575*0 + 3*749*FLEN/8, x4, x1, x2)

inst_44526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:133578*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133578*0 + 3*750*FLEN/8, x4, x1, x2)

inst_44527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:133581*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133581*0 + 3*751*FLEN/8, x4, x1, x2)

inst_44528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:133584*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133584*0 + 3*752*FLEN/8, x4, x1, x2)

inst_44529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:133587*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133587*0 + 3*753*FLEN/8, x4, x1, x2)

inst_44530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:133590*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133590*0 + 3*754*FLEN/8, x4, x1, x2)

inst_44531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:133593*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133593*0 + 3*755*FLEN/8, x4, x1, x2)

inst_44532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:133596*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133596*0 + 3*756*FLEN/8, x4, x1, x2)

inst_44533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:133599*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133599*0 + 3*757*FLEN/8, x4, x1, x2)

inst_44534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:133602*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133602*0 + 3*758*FLEN/8, x4, x1, x2)

inst_44535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:133605*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133605*0 + 3*759*FLEN/8, x4, x1, x2)

inst_44536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:133608*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133608*0 + 3*760*FLEN/8, x4, x1, x2)

inst_44537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:133611*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133611*0 + 3*761*FLEN/8, x4, x1, x2)

inst_44538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:133614*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133614*0 + 3*762*FLEN/8, x4, x1, x2)

inst_44539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:133617*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133617*0 + 3*763*FLEN/8, x4, x1, x2)

inst_44540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:133620*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133620*0 + 3*764*FLEN/8, x4, x1, x2)

inst_44541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:133623*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133623*0 + 3*765*FLEN/8, x4, x1, x2)

inst_44542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x3e0000000000000; valaddr_reg:x3; val_offset:133626*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133626*0 + 3*766*FLEN/8, x4, x1, x2)

inst_44543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xc55dc8bec155f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9c55dc8bec155f; op2val:0x0;
op3val:0x3e0000000000001; valaddr_reg:x3; val_offset:133629*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 133629*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858048,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858049,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858051,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858055,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858063,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858079,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858111,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858175,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858303,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633858559,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633859071,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633860095,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633862143,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633866239,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633874431,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633890815,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633923583,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012633989119,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012634120191,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012634382335,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012634906623,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012635955199,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012638052351,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012642246655,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012650635263,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012667412479,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012700966911,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012768075775,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106012902293503,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106013170728959,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106013707599871,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106014781341695,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106016928825343,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106021223792639,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106029813727231,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106046993596415,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106081353334783,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106150072811519,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106287511764991,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516106562389671935,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516107112145485823,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516108211657113599,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516110410680369151,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516114808726880255,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516123604819902463,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516141197005946879,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516176381378035711,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516246750122213375,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516387487610568703,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9516668962587279359,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9517231912540700671,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9518357812447543295,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9518357812447543296,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9519483712354385920,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520046662307807232,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520328137284517888,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520468874772873216,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520539243517050880,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520574427889139712,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520592020075184128,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520600816168206336,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520605214214717440,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520607413237972992,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520608512749600768,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609062505414656,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609337383321600,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609474822275072,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609543541751808,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609577901490176,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609595081359360,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609603671293952,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609607966261248,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609610113744896,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609611187486720,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609611724357632,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609611992793088,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612127010816,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612194119680,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612227674112,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612244451328,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612252839936,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612257034240,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612259131392,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612260179968,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612260704256,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612260966400,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261097472,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261163008,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261195776,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261212160,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261220352,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261224448,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261226496,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261227520,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228032,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228288,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228416,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228480,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228512,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228528,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228536,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228540,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228542,64,FLEN)
NAN_BOXED(6889269732013169241,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9520609612261228543,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517248,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517249,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517251,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517255,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517263,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517279,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517311,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517375,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517503,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214517759,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214518271,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214519295,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214521343,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214525439,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214533631,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214550015,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214582783,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214648319,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705214779391,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705215041535,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705215565823,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705216614399,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705218711551,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705222905855,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705231294463,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705248071679,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705281626111,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705348734975,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705482952703,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575705751388159,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575706288259071,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575707362000895,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575709509484543,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575713804451839,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575722394386431,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575739574255615,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575773933993983,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575842653470719,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231575980092424191,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231576254970331135,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231576804726145023,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231577904237772799,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231580103261028351,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231584501307539455,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231593297400561663,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231610889586606079,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231646073958694911,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231716442702872575,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13231857180191227903,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13232138655167938559,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13232701605121359871,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13233827505028202495,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13233827505028202496,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13234953404935045120,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13235516354888466432,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13235797829865177088,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13235938567353532416,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236008936097710080,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236044120469798912,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236061712655843328,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236070508748865536,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236074906795376640,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236077105818632192,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236078205330259968,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236078755086073856,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079029963980800,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079167402934272,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079236122411008,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079270482149376,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079287662018560,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079296251953152,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079300546920448,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079302694404096,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079303768145920,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304305016832,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304573452288,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304707670016,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304774778880,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304808333312,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304825110528,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304833499136,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304837693440,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304839790592,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304840839168,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841363456,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841625600,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841756672,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841822208,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841854976,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841871360,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841879552,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841883648,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841885696,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841886720,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887232,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887488,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887616,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887680,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887712,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887728,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887736,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887740,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887742,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13236079304841887743,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889275129678572855,64,FLEN)
NAN_BOXED(11516418055388048289,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632896,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632897,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632899,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632903,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632911,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632927,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632959,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633023,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633151,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633407,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633919,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311634943,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311636991,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311641087,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311649279,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311665663,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311698431,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311763967,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311895039,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312157183,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312681471,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590313730047,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590315827199,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590320021503,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590328410111,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590345187327,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590378741759,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590445850623,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590580068351,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590848503807,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093591385374719,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093592459116543,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093594606600191,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093598901567487,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093607491502079,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093624671371263,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093659031109631,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093727750586367,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093865189539839,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094140067446783,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094689823260671,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117095789334888447,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117097988358143999,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117102386404655103,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117111182497677311,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117128774683721727,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117163959055810559,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117234327799988223,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117375065288343551,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117656540265054207,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(118219490218475519,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318143,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318144,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(120471290032160768,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121034239985582080,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121315714962292736,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121456452450648064,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121526821194825728,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121562005566914560,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121579597752958976,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121588393845981184,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121592791892492288,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121594990915747840,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596090427375616,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596640183189504,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596915061096448,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597052500049920,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597121219526656,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597155579265024,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597172759134208,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597181349068800,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597185644036096,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597187791519744,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597188865261568,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189402132480,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189670567936,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189804785664,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189871894528,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189905448960,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189922226176,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189930614784,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189934809088,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189936906240,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189937954816,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938479104,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938741248,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938872320,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938937856,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938970624,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938987008,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938995200,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938999296,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939001344,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002368,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002880,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003136,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003264,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003328,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003360,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003376,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003384,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003388,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003390,64,FLEN)
NAN_BOXED(6889292561348195737,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003391,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6889397244876937387,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003392,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003393,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003395,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003399,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003407,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003423,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003455,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003519,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003647,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003903,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939004415,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939005439,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939007487,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939011583,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939019775,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939036159,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939068927,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939134463,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939265535,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939527679,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189940051967,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189941100543,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189943197695,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189947391999,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189955780607,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189972557823,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190006112255,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190073221119,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190207438847,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597190475874303,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597191012745215,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597192086487039,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597194233970687,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597198528937983,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597207118872575,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597224298741759,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597258658480127,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597327377956863,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597464816910335,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597739694817279,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121598289450631167,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121599388962258943,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121601587985514495,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121605986032025599,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121614782125047807,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121632374311092223,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121667558683181055,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121737927427358719,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121878664915714047,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122160139892424703,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(122723089845846015,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688639,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(123848989752688640,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(124974889659531264,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125537839612952576,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125819314589663232,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(125960052078018560,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126030420822196224,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126065605194285056,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126083197380329472,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126091993473351680,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126096391519862784,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126098590543118336,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126099690054746112,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100239810560000,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100514688466944,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100652127420416,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100720846897152,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100755206635520,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100772386504704,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100780976439296,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100785271406592,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100787418890240,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100788492632064,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789029502976,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789297938432,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789432156160,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789499265024,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789532819456,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789549596672,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789557985280,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789562179584,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789564276736,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565325312,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789565849600,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566111744,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566242816,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566308352,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566341120,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566357504,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566365696,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566369792,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566371840,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566372864,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373376,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373632,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373760,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373824,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373856,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373872,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373880,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373884,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373886,64,FLEN)
NAN_BOXED(6889398089603937931,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373887,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6889408687864834653,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970752,64,FLEN)
NAN_BOXED(6889475935698687327,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970753,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
