
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_33792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffe0000000000; valaddr_reg:x3; val_offset:101376*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101376*0 + 3*0*FLEN/8, x4, x1, x2)

inst_33793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fff0000000000; valaddr_reg:x3; val_offset:101379*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101379*0 + 3*1*FLEN/8, x4, x1, x2)

inst_33794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fff8000000000; valaddr_reg:x3; val_offset:101382*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101382*0 + 3*2*FLEN/8, x4, x1, x2)

inst_33795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffc000000000; valaddr_reg:x3; val_offset:101385*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101385*0 + 3*3*FLEN/8, x4, x1, x2)

inst_33796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffe000000000; valaddr_reg:x3; val_offset:101388*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101388*0 + 3*4*FLEN/8, x4, x1, x2)

inst_33797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffff000000000; valaddr_reg:x3; val_offset:101391*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101391*0 + 3*5*FLEN/8, x4, x1, x2)

inst_33798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffff800000000; valaddr_reg:x3; val_offset:101394*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101394*0 + 3*6*FLEN/8, x4, x1, x2)

inst_33799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffc00000000; valaddr_reg:x3; val_offset:101397*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101397*0 + 3*7*FLEN/8, x4, x1, x2)

inst_33800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffe00000000; valaddr_reg:x3; val_offset:101400*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101400*0 + 3*8*FLEN/8, x4, x1, x2)

inst_33801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffff00000000; valaddr_reg:x3; val_offset:101403*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101403*0 + 3*9*FLEN/8, x4, x1, x2)

inst_33802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffff80000000; valaddr_reg:x3; val_offset:101406*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101406*0 + 3*10*FLEN/8, x4, x1, x2)

inst_33803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffc0000000; valaddr_reg:x3; val_offset:101409*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101409*0 + 3*11*FLEN/8, x4, x1, x2)

inst_33804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffe0000000; valaddr_reg:x3; val_offset:101412*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101412*0 + 3*12*FLEN/8, x4, x1, x2)

inst_33805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffff0000000; valaddr_reg:x3; val_offset:101415*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101415*0 + 3*13*FLEN/8, x4, x1, x2)

inst_33806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffff8000000; valaddr_reg:x3; val_offset:101418*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101418*0 + 3*14*FLEN/8, x4, x1, x2)

inst_33807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffc000000; valaddr_reg:x3; val_offset:101421*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101421*0 + 3*15*FLEN/8, x4, x1, x2)

inst_33808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffe000000; valaddr_reg:x3; val_offset:101424*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101424*0 + 3*16*FLEN/8, x4, x1, x2)

inst_33809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffff000000; valaddr_reg:x3; val_offset:101427*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101427*0 + 3*17*FLEN/8, x4, x1, x2)

inst_33810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffff800000; valaddr_reg:x3; val_offset:101430*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101430*0 + 3*18*FLEN/8, x4, x1, x2)

inst_33811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffc00000; valaddr_reg:x3; val_offset:101433*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101433*0 + 3*19*FLEN/8, x4, x1, x2)

inst_33812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffe00000; valaddr_reg:x3; val_offset:101436*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101436*0 + 3*20*FLEN/8, x4, x1, x2)

inst_33813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffff00000; valaddr_reg:x3; val_offset:101439*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101439*0 + 3*21*FLEN/8, x4, x1, x2)

inst_33814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffff80000; valaddr_reg:x3; val_offset:101442*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101442*0 + 3*22*FLEN/8, x4, x1, x2)

inst_33815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffc0000; valaddr_reg:x3; val_offset:101445*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101445*0 + 3*23*FLEN/8, x4, x1, x2)

inst_33816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffe0000; valaddr_reg:x3; val_offset:101448*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101448*0 + 3*24*FLEN/8, x4, x1, x2)

inst_33817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffff0000; valaddr_reg:x3; val_offset:101451*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101451*0 + 3*25*FLEN/8, x4, x1, x2)

inst_33818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffff8000; valaddr_reg:x3; val_offset:101454*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101454*0 + 3*26*FLEN/8, x4, x1, x2)

inst_33819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffc000; valaddr_reg:x3; val_offset:101457*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101457*0 + 3*27*FLEN/8, x4, x1, x2)

inst_33820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffe000; valaddr_reg:x3; val_offset:101460*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101460*0 + 3*28*FLEN/8, x4, x1, x2)

inst_33821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffff000; valaddr_reg:x3; val_offset:101463*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101463*0 + 3*29*FLEN/8, x4, x1, x2)

inst_33822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffff800; valaddr_reg:x3; val_offset:101466*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101466*0 + 3*30*FLEN/8, x4, x1, x2)

inst_33823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffc00; valaddr_reg:x3; val_offset:101469*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101469*0 + 3*31*FLEN/8, x4, x1, x2)

inst_33824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffe00; valaddr_reg:x3; val_offset:101472*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101472*0 + 3*32*FLEN/8, x4, x1, x2)

inst_33825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffff00; valaddr_reg:x3; val_offset:101475*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101475*0 + 3*33*FLEN/8, x4, x1, x2)

inst_33826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffff80; valaddr_reg:x3; val_offset:101478*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101478*0 + 3*34*FLEN/8, x4, x1, x2)

inst_33827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffffc0; valaddr_reg:x3; val_offset:101481*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101481*0 + 3*35*FLEN/8, x4, x1, x2)

inst_33828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffffe0; valaddr_reg:x3; val_offset:101484*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101484*0 + 3*36*FLEN/8, x4, x1, x2)

inst_33829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffff0; valaddr_reg:x3; val_offset:101487*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101487*0 + 3*37*FLEN/8, x4, x1, x2)

inst_33830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffff8; valaddr_reg:x3; val_offset:101490*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101490*0 + 3*38*FLEN/8, x4, x1, x2)

inst_33831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffffc; valaddr_reg:x3; val_offset:101493*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101493*0 + 3*39*FLEN/8, x4, x1, x2)

inst_33832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834ffffffffffffe; valaddr_reg:x3; val_offset:101496*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101496*0 + 3*40*FLEN/8, x4, x1, x2)

inst_33833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5633d0c4ac927 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95633d0c4ac927; op2val:0x8000;
op3val:0x834fffffffffffff; valaddr_reg:x3; val_offset:101499*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101499*0 + 3*41*FLEN/8, x4, x1, x2)

inst_33834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:101502*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101502*0 + 3*42*FLEN/8, x4, x1, x2)

inst_33835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:101505*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101505*0 + 3*43*FLEN/8, x4, x1, x2)

inst_33836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:101508*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101508*0 + 3*44*FLEN/8, x4, x1, x2)

inst_33837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:101511*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101511*0 + 3*45*FLEN/8, x4, x1, x2)

inst_33838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:101514*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101514*0 + 3*46*FLEN/8, x4, x1, x2)

inst_33839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:101517*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101517*0 + 3*47*FLEN/8, x4, x1, x2)

inst_33840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:101520*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101520*0 + 3*48*FLEN/8, x4, x1, x2)

inst_33841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:101523*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101523*0 + 3*49*FLEN/8, x4, x1, x2)

inst_33842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:101526*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101526*0 + 3*50*FLEN/8, x4, x1, x2)

inst_33843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:101529*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101529*0 + 3*51*FLEN/8, x4, x1, x2)

inst_33844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:101532*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101532*0 + 3*52*FLEN/8, x4, x1, x2)

inst_33845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:101535*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101535*0 + 3*53*FLEN/8, x4, x1, x2)

inst_33846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:101538*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101538*0 + 3*54*FLEN/8, x4, x1, x2)

inst_33847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:101541*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101541*0 + 3*55*FLEN/8, x4, x1, x2)

inst_33848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:101544*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101544*0 + 3*56*FLEN/8, x4, x1, x2)

inst_33849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:101547*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101547*0 + 3*57*FLEN/8, x4, x1, x2)

inst_33850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:101550*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101550*0 + 3*58*FLEN/8, x4, x1, x2)

inst_33851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:101553*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101553*0 + 3*59*FLEN/8, x4, x1, x2)

inst_33852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:101556*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101556*0 + 3*60*FLEN/8, x4, x1, x2)

inst_33853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:101559*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101559*0 + 3*61*FLEN/8, x4, x1, x2)

inst_33854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:101562*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101562*0 + 3*62*FLEN/8, x4, x1, x2)

inst_33855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:101565*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101565*0 + 3*63*FLEN/8, x4, x1, x2)

inst_33856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000000000; valaddr_reg:x3; val_offset:101568*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101568*0 + 3*64*FLEN/8, x4, x1, x2)

inst_33857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000000001; valaddr_reg:x3; val_offset:101571*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101571*0 + 3*65*FLEN/8, x4, x1, x2)

inst_33858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000000003; valaddr_reg:x3; val_offset:101574*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101574*0 + 3*66*FLEN/8, x4, x1, x2)

inst_33859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000000007; valaddr_reg:x3; val_offset:101577*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101577*0 + 3*67*FLEN/8, x4, x1, x2)

inst_33860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000000000f; valaddr_reg:x3; val_offset:101580*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101580*0 + 3*68*FLEN/8, x4, x1, x2)

inst_33861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000000001f; valaddr_reg:x3; val_offset:101583*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101583*0 + 3*69*FLEN/8, x4, x1, x2)

inst_33862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000000003f; valaddr_reg:x3; val_offset:101586*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101586*0 + 3*70*FLEN/8, x4, x1, x2)

inst_33863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000000007f; valaddr_reg:x3; val_offset:101589*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101589*0 + 3*71*FLEN/8, x4, x1, x2)

inst_33864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000000000ff; valaddr_reg:x3; val_offset:101592*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101592*0 + 3*72*FLEN/8, x4, x1, x2)

inst_33865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000000001ff; valaddr_reg:x3; val_offset:101595*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101595*0 + 3*73*FLEN/8, x4, x1, x2)

inst_33866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000000003ff; valaddr_reg:x3; val_offset:101598*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101598*0 + 3*74*FLEN/8, x4, x1, x2)

inst_33867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000000007ff; valaddr_reg:x3; val_offset:101601*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101601*0 + 3*75*FLEN/8, x4, x1, x2)

inst_33868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000000fff; valaddr_reg:x3; val_offset:101604*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101604*0 + 3*76*FLEN/8, x4, x1, x2)

inst_33869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000001fff; valaddr_reg:x3; val_offset:101607*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101607*0 + 3*77*FLEN/8, x4, x1, x2)

inst_33870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000003fff; valaddr_reg:x3; val_offset:101610*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101610*0 + 3*78*FLEN/8, x4, x1, x2)

inst_33871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000007fff; valaddr_reg:x3; val_offset:101613*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101613*0 + 3*79*FLEN/8, x4, x1, x2)

inst_33872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000000ffff; valaddr_reg:x3; val_offset:101616*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101616*0 + 3*80*FLEN/8, x4, x1, x2)

inst_33873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000001ffff; valaddr_reg:x3; val_offset:101619*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101619*0 + 3*81*FLEN/8, x4, x1, x2)

inst_33874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000003ffff; valaddr_reg:x3; val_offset:101622*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101622*0 + 3*82*FLEN/8, x4, x1, x2)

inst_33875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000007ffff; valaddr_reg:x3; val_offset:101625*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101625*0 + 3*83*FLEN/8, x4, x1, x2)

inst_33876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000000fffff; valaddr_reg:x3; val_offset:101628*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101628*0 + 3*84*FLEN/8, x4, x1, x2)

inst_33877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000001fffff; valaddr_reg:x3; val_offset:101631*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101631*0 + 3*85*FLEN/8, x4, x1, x2)

inst_33878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000003fffff; valaddr_reg:x3; val_offset:101634*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101634*0 + 3*86*FLEN/8, x4, x1, x2)

inst_33879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000007fffff; valaddr_reg:x3; val_offset:101637*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101637*0 + 3*87*FLEN/8, x4, x1, x2)

inst_33880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000000ffffff; valaddr_reg:x3; val_offset:101640*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101640*0 + 3*88*FLEN/8, x4, x1, x2)

inst_33881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000001ffffff; valaddr_reg:x3; val_offset:101643*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101643*0 + 3*89*FLEN/8, x4, x1, x2)

inst_33882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000003ffffff; valaddr_reg:x3; val_offset:101646*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101646*0 + 3*90*FLEN/8, x4, x1, x2)

inst_33883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000007ffffff; valaddr_reg:x3; val_offset:101649*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101649*0 + 3*91*FLEN/8, x4, x1, x2)

inst_33884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000000fffffff; valaddr_reg:x3; val_offset:101652*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101652*0 + 3*92*FLEN/8, x4, x1, x2)

inst_33885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000001fffffff; valaddr_reg:x3; val_offset:101655*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101655*0 + 3*93*FLEN/8, x4, x1, x2)

inst_33886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000003fffffff; valaddr_reg:x3; val_offset:101658*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101658*0 + 3*94*FLEN/8, x4, x1, x2)

inst_33887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000007fffffff; valaddr_reg:x3; val_offset:101661*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101661*0 + 3*95*FLEN/8, x4, x1, x2)

inst_33888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00000ffffffff; valaddr_reg:x3; val_offset:101664*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101664*0 + 3*96*FLEN/8, x4, x1, x2)

inst_33889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00001ffffffff; valaddr_reg:x3; val_offset:101667*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101667*0 + 3*97*FLEN/8, x4, x1, x2)

inst_33890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00003ffffffff; valaddr_reg:x3; val_offset:101670*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101670*0 + 3*98*FLEN/8, x4, x1, x2)

inst_33891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00007ffffffff; valaddr_reg:x3; val_offset:101673*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101673*0 + 3*99*FLEN/8, x4, x1, x2)

inst_33892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0000fffffffff; valaddr_reg:x3; val_offset:101676*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101676*0 + 3*100*FLEN/8, x4, x1, x2)

inst_33893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0001fffffffff; valaddr_reg:x3; val_offset:101679*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101679*0 + 3*101*FLEN/8, x4, x1, x2)

inst_33894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0003fffffffff; valaddr_reg:x3; val_offset:101682*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101682*0 + 3*102*FLEN/8, x4, x1, x2)

inst_33895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0007fffffffff; valaddr_reg:x3; val_offset:101685*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101685*0 + 3*103*FLEN/8, x4, x1, x2)

inst_33896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe000ffffffffff; valaddr_reg:x3; val_offset:101688*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101688*0 + 3*104*FLEN/8, x4, x1, x2)

inst_33897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe001ffffffffff; valaddr_reg:x3; val_offset:101691*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101691*0 + 3*105*FLEN/8, x4, x1, x2)

inst_33898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe003ffffffffff; valaddr_reg:x3; val_offset:101694*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101694*0 + 3*106*FLEN/8, x4, x1, x2)

inst_33899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe007ffffffffff; valaddr_reg:x3; val_offset:101697*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101697*0 + 3*107*FLEN/8, x4, x1, x2)

inst_33900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe00fffffffffff; valaddr_reg:x3; val_offset:101700*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101700*0 + 3*108*FLEN/8, x4, x1, x2)

inst_33901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe01fffffffffff; valaddr_reg:x3; val_offset:101703*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101703*0 + 3*109*FLEN/8, x4, x1, x2)

inst_33902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe03fffffffffff; valaddr_reg:x3; val_offset:101706*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101706*0 + 3*110*FLEN/8, x4, x1, x2)

inst_33903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe07fffffffffff; valaddr_reg:x3; val_offset:101709*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101709*0 + 3*111*FLEN/8, x4, x1, x2)

inst_33904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe0ffffffffffff; valaddr_reg:x3; val_offset:101712*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101712*0 + 3*112*FLEN/8, x4, x1, x2)

inst_33905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe1ffffffffffff; valaddr_reg:x3; val_offset:101715*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101715*0 + 3*113*FLEN/8, x4, x1, x2)

inst_33906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe3ffffffffffff; valaddr_reg:x3; val_offset:101718*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101718*0 + 3*114*FLEN/8, x4, x1, x2)

inst_33907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe7ffffffffffff; valaddr_reg:x3; val_offset:101721*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101721*0 + 3*115*FLEN/8, x4, x1, x2)

inst_33908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xe8000000000000; valaddr_reg:x3; val_offset:101724*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101724*0 + 3*116*FLEN/8, x4, x1, x2)

inst_33909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xec000000000000; valaddr_reg:x3; val_offset:101727*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101727*0 + 3*117*FLEN/8, x4, x1, x2)

inst_33910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xee000000000000; valaddr_reg:x3; val_offset:101730*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101730*0 + 3*118*FLEN/8, x4, x1, x2)

inst_33911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xef000000000000; valaddr_reg:x3; val_offset:101733*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101733*0 + 3*119*FLEN/8, x4, x1, x2)

inst_33912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xef800000000000; valaddr_reg:x3; val_offset:101736*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101736*0 + 3*120*FLEN/8, x4, x1, x2)

inst_33913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefc00000000000; valaddr_reg:x3; val_offset:101739*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101739*0 + 3*121*FLEN/8, x4, x1, x2)

inst_33914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefe00000000000; valaddr_reg:x3; val_offset:101742*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101742*0 + 3*122*FLEN/8, x4, x1, x2)

inst_33915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeff00000000000; valaddr_reg:x3; val_offset:101745*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101745*0 + 3*123*FLEN/8, x4, x1, x2)

inst_33916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeff80000000000; valaddr_reg:x3; val_offset:101748*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101748*0 + 3*124*FLEN/8, x4, x1, x2)

inst_33917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffc0000000000; valaddr_reg:x3; val_offset:101751*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101751*0 + 3*125*FLEN/8, x4, x1, x2)

inst_33918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffe0000000000; valaddr_reg:x3; val_offset:101754*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101754*0 + 3*126*FLEN/8, x4, x1, x2)

inst_33919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefff0000000000; valaddr_reg:x3; val_offset:101757*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101757*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_33920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefff8000000000; valaddr_reg:x3; val_offset:101760*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101760*0 + 3*128*FLEN/8, x4, x1, x2)

inst_33921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffc000000000; valaddr_reg:x3; val_offset:101763*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101763*0 + 3*129*FLEN/8, x4, x1, x2)

inst_33922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffe000000000; valaddr_reg:x3; val_offset:101766*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101766*0 + 3*130*FLEN/8, x4, x1, x2)

inst_33923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffff000000000; valaddr_reg:x3; val_offset:101769*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101769*0 + 3*131*FLEN/8, x4, x1, x2)

inst_33924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffff800000000; valaddr_reg:x3; val_offset:101772*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101772*0 + 3*132*FLEN/8, x4, x1, x2)

inst_33925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffc00000000; valaddr_reg:x3; val_offset:101775*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101775*0 + 3*133*FLEN/8, x4, x1, x2)

inst_33926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffe00000000; valaddr_reg:x3; val_offset:101778*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101778*0 + 3*134*FLEN/8, x4, x1, x2)

inst_33927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffff00000000; valaddr_reg:x3; val_offset:101781*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101781*0 + 3*135*FLEN/8, x4, x1, x2)

inst_33928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffff80000000; valaddr_reg:x3; val_offset:101784*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101784*0 + 3*136*FLEN/8, x4, x1, x2)

inst_33929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffc0000000; valaddr_reg:x3; val_offset:101787*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101787*0 + 3*137*FLEN/8, x4, x1, x2)

inst_33930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffe0000000; valaddr_reg:x3; val_offset:101790*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101790*0 + 3*138*FLEN/8, x4, x1, x2)

inst_33931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffff0000000; valaddr_reg:x3; val_offset:101793*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101793*0 + 3*139*FLEN/8, x4, x1, x2)

inst_33932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffff8000000; valaddr_reg:x3; val_offset:101796*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101796*0 + 3*140*FLEN/8, x4, x1, x2)

inst_33933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffc000000; valaddr_reg:x3; val_offset:101799*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101799*0 + 3*141*FLEN/8, x4, x1, x2)

inst_33934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffe000000; valaddr_reg:x3; val_offset:101802*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101802*0 + 3*142*FLEN/8, x4, x1, x2)

inst_33935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffff000000; valaddr_reg:x3; val_offset:101805*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101805*0 + 3*143*FLEN/8, x4, x1, x2)

inst_33936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffff800000; valaddr_reg:x3; val_offset:101808*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101808*0 + 3*144*FLEN/8, x4, x1, x2)

inst_33937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffc00000; valaddr_reg:x3; val_offset:101811*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101811*0 + 3*145*FLEN/8, x4, x1, x2)

inst_33938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffe00000; valaddr_reg:x3; val_offset:101814*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101814*0 + 3*146*FLEN/8, x4, x1, x2)

inst_33939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffff00000; valaddr_reg:x3; val_offset:101817*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101817*0 + 3*147*FLEN/8, x4, x1, x2)

inst_33940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffff80000; valaddr_reg:x3; val_offset:101820*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101820*0 + 3*148*FLEN/8, x4, x1, x2)

inst_33941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffc0000; valaddr_reg:x3; val_offset:101823*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101823*0 + 3*149*FLEN/8, x4, x1, x2)

inst_33942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffe0000; valaddr_reg:x3; val_offset:101826*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101826*0 + 3*150*FLEN/8, x4, x1, x2)

inst_33943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffff0000; valaddr_reg:x3; val_offset:101829*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101829*0 + 3*151*FLEN/8, x4, x1, x2)

inst_33944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffff8000; valaddr_reg:x3; val_offset:101832*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101832*0 + 3*152*FLEN/8, x4, x1, x2)

inst_33945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffc000; valaddr_reg:x3; val_offset:101835*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101835*0 + 3*153*FLEN/8, x4, x1, x2)

inst_33946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffe000; valaddr_reg:x3; val_offset:101838*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101838*0 + 3*154*FLEN/8, x4, x1, x2)

inst_33947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffff000; valaddr_reg:x3; val_offset:101841*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101841*0 + 3*155*FLEN/8, x4, x1, x2)

inst_33948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffff800; valaddr_reg:x3; val_offset:101844*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101844*0 + 3*156*FLEN/8, x4, x1, x2)

inst_33949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffc00; valaddr_reg:x3; val_offset:101847*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101847*0 + 3*157*FLEN/8, x4, x1, x2)

inst_33950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffe00; valaddr_reg:x3; val_offset:101850*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101850*0 + 3*158*FLEN/8, x4, x1, x2)

inst_33951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffff00; valaddr_reg:x3; val_offset:101853*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101853*0 + 3*159*FLEN/8, x4, x1, x2)

inst_33952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffff80; valaddr_reg:x3; val_offset:101856*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101856*0 + 3*160*FLEN/8, x4, x1, x2)

inst_33953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffffc0; valaddr_reg:x3; val_offset:101859*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101859*0 + 3*161*FLEN/8, x4, x1, x2)

inst_33954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffffe0; valaddr_reg:x3; val_offset:101862*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101862*0 + 3*162*FLEN/8, x4, x1, x2)

inst_33955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffff0; valaddr_reg:x3; val_offset:101865*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101865*0 + 3*163*FLEN/8, x4, x1, x2)

inst_33956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffff8; valaddr_reg:x3; val_offset:101868*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101868*0 + 3*164*FLEN/8, x4, x1, x2)

inst_33957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffffc; valaddr_reg:x3; val_offset:101871*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101871*0 + 3*165*FLEN/8, x4, x1, x2)

inst_33958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xeffffffffffffe; valaddr_reg:x3; val_offset:101874*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101874*0 + 3*166*FLEN/8, x4, x1, x2)

inst_33959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58b8b100e1909 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958b8b100e1909; op2val:0x0;
op3val:0xefffffffffffff; valaddr_reg:x3; val_offset:101877*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101877*0 + 3*167*FLEN/8, x4, x1, x2)

inst_33960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:101880*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101880*0 + 3*168*FLEN/8, x4, x1, x2)

inst_33961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:101883*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101883*0 + 3*169*FLEN/8, x4, x1, x2)

inst_33962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:101886*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101886*0 + 3*170*FLEN/8, x4, x1, x2)

inst_33963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:101889*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101889*0 + 3*171*FLEN/8, x4, x1, x2)

inst_33964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:101892*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101892*0 + 3*172*FLEN/8, x4, x1, x2)

inst_33965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:101895*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101895*0 + 3*173*FLEN/8, x4, x1, x2)

inst_33966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:101898*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101898*0 + 3*174*FLEN/8, x4, x1, x2)

inst_33967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:101901*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101901*0 + 3*175*FLEN/8, x4, x1, x2)

inst_33968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:101904*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101904*0 + 3*176*FLEN/8, x4, x1, x2)

inst_33969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:101907*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101907*0 + 3*177*FLEN/8, x4, x1, x2)

inst_33970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:101910*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101910*0 + 3*178*FLEN/8, x4, x1, x2)

inst_33971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:101913*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101913*0 + 3*179*FLEN/8, x4, x1, x2)

inst_33972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:101916*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101916*0 + 3*180*FLEN/8, x4, x1, x2)

inst_33973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:101919*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101919*0 + 3*181*FLEN/8, x4, x1, x2)

inst_33974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:101922*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101922*0 + 3*182*FLEN/8, x4, x1, x2)

inst_33975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:101925*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101925*0 + 3*183*FLEN/8, x4, x1, x2)

inst_33976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:101928*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101928*0 + 3*184*FLEN/8, x4, x1, x2)

inst_33977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:101931*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101931*0 + 3*185*FLEN/8, x4, x1, x2)

inst_33978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:101934*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101934*0 + 3*186*FLEN/8, x4, x1, x2)

inst_33979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:101937*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101937*0 + 3*187*FLEN/8, x4, x1, x2)

inst_33980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:101940*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101940*0 + 3*188*FLEN/8, x4, x1, x2)

inst_33981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:101943*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101943*0 + 3*189*FLEN/8, x4, x1, x2)

inst_33982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000000000; valaddr_reg:x3; val_offset:101946*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101946*0 + 3*190*FLEN/8, x4, x1, x2)

inst_33983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000000001; valaddr_reg:x3; val_offset:101949*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101949*0 + 3*191*FLEN/8, x4, x1, x2)

inst_33984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000000003; valaddr_reg:x3; val_offset:101952*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101952*0 + 3*192*FLEN/8, x4, x1, x2)

inst_33985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000000007; valaddr_reg:x3; val_offset:101955*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101955*0 + 3*193*FLEN/8, x4, x1, x2)

inst_33986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000000000f; valaddr_reg:x3; val_offset:101958*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101958*0 + 3*194*FLEN/8, x4, x1, x2)

inst_33987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000000001f; valaddr_reg:x3; val_offset:101961*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101961*0 + 3*195*FLEN/8, x4, x1, x2)

inst_33988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000000003f; valaddr_reg:x3; val_offset:101964*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101964*0 + 3*196*FLEN/8, x4, x1, x2)

inst_33989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000000007f; valaddr_reg:x3; val_offset:101967*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101967*0 + 3*197*FLEN/8, x4, x1, x2)

inst_33990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000000000ff; valaddr_reg:x3; val_offset:101970*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101970*0 + 3*198*FLEN/8, x4, x1, x2)

inst_33991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000000001ff; valaddr_reg:x3; val_offset:101973*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101973*0 + 3*199*FLEN/8, x4, x1, x2)

inst_33992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000000003ff; valaddr_reg:x3; val_offset:101976*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101976*0 + 3*200*FLEN/8, x4, x1, x2)

inst_33993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000000007ff; valaddr_reg:x3; val_offset:101979*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101979*0 + 3*201*FLEN/8, x4, x1, x2)

inst_33994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000000fff; valaddr_reg:x3; val_offset:101982*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101982*0 + 3*202*FLEN/8, x4, x1, x2)

inst_33995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000001fff; valaddr_reg:x3; val_offset:101985*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101985*0 + 3*203*FLEN/8, x4, x1, x2)

inst_33996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000003fff; valaddr_reg:x3; val_offset:101988*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101988*0 + 3*204*FLEN/8, x4, x1, x2)

inst_33997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000007fff; valaddr_reg:x3; val_offset:101991*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101991*0 + 3*205*FLEN/8, x4, x1, x2)

inst_33998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000000ffff; valaddr_reg:x3; val_offset:101994*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101994*0 + 3*206*FLEN/8, x4, x1, x2)

inst_33999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000001ffff; valaddr_reg:x3; val_offset:101997*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 101997*0 + 3*207*FLEN/8, x4, x1, x2)

inst_34000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000003ffff; valaddr_reg:x3; val_offset:102000*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102000*0 + 3*208*FLEN/8, x4, x1, x2)

inst_34001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000007ffff; valaddr_reg:x3; val_offset:102003*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102003*0 + 3*209*FLEN/8, x4, x1, x2)

inst_34002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000000fffff; valaddr_reg:x3; val_offset:102006*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102006*0 + 3*210*FLEN/8, x4, x1, x2)

inst_34003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000001fffff; valaddr_reg:x3; val_offset:102009*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102009*0 + 3*211*FLEN/8, x4, x1, x2)

inst_34004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000003fffff; valaddr_reg:x3; val_offset:102012*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102012*0 + 3*212*FLEN/8, x4, x1, x2)

inst_34005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000007fffff; valaddr_reg:x3; val_offset:102015*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102015*0 + 3*213*FLEN/8, x4, x1, x2)

inst_34006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000000ffffff; valaddr_reg:x3; val_offset:102018*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102018*0 + 3*214*FLEN/8, x4, x1, x2)

inst_34007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000001ffffff; valaddr_reg:x3; val_offset:102021*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102021*0 + 3*215*FLEN/8, x4, x1, x2)

inst_34008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000003ffffff; valaddr_reg:x3; val_offset:102024*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102024*0 + 3*216*FLEN/8, x4, x1, x2)

inst_34009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000007ffffff; valaddr_reg:x3; val_offset:102027*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102027*0 + 3*217*FLEN/8, x4, x1, x2)

inst_34010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000000fffffff; valaddr_reg:x3; val_offset:102030*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102030*0 + 3*218*FLEN/8, x4, x1, x2)

inst_34011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000001fffffff; valaddr_reg:x3; val_offset:102033*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102033*0 + 3*219*FLEN/8, x4, x1, x2)

inst_34012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000003fffffff; valaddr_reg:x3; val_offset:102036*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102036*0 + 3*220*FLEN/8, x4, x1, x2)

inst_34013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000007fffffff; valaddr_reg:x3; val_offset:102039*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102039*0 + 3*221*FLEN/8, x4, x1, x2)

inst_34014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00000ffffffff; valaddr_reg:x3; val_offset:102042*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102042*0 + 3*222*FLEN/8, x4, x1, x2)

inst_34015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00001ffffffff; valaddr_reg:x3; val_offset:102045*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102045*0 + 3*223*FLEN/8, x4, x1, x2)

inst_34016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00003ffffffff; valaddr_reg:x3; val_offset:102048*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102048*0 + 3*224*FLEN/8, x4, x1, x2)

inst_34017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00007ffffffff; valaddr_reg:x3; val_offset:102051*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102051*0 + 3*225*FLEN/8, x4, x1, x2)

inst_34018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0000fffffffff; valaddr_reg:x3; val_offset:102054*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102054*0 + 3*226*FLEN/8, x4, x1, x2)

inst_34019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0001fffffffff; valaddr_reg:x3; val_offset:102057*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102057*0 + 3*227*FLEN/8, x4, x1, x2)

inst_34020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0003fffffffff; valaddr_reg:x3; val_offset:102060*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102060*0 + 3*228*FLEN/8, x4, x1, x2)

inst_34021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0007fffffffff; valaddr_reg:x3; val_offset:102063*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102063*0 + 3*229*FLEN/8, x4, x1, x2)

inst_34022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f000ffffffffff; valaddr_reg:x3; val_offset:102066*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102066*0 + 3*230*FLEN/8, x4, x1, x2)

inst_34023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f001ffffffffff; valaddr_reg:x3; val_offset:102069*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102069*0 + 3*231*FLEN/8, x4, x1, x2)

inst_34024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f003ffffffffff; valaddr_reg:x3; val_offset:102072*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102072*0 + 3*232*FLEN/8, x4, x1, x2)

inst_34025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f007ffffffffff; valaddr_reg:x3; val_offset:102075*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102075*0 + 3*233*FLEN/8, x4, x1, x2)

inst_34026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f00fffffffffff; valaddr_reg:x3; val_offset:102078*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102078*0 + 3*234*FLEN/8, x4, x1, x2)

inst_34027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f01fffffffffff; valaddr_reg:x3; val_offset:102081*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102081*0 + 3*235*FLEN/8, x4, x1, x2)

inst_34028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f03fffffffffff; valaddr_reg:x3; val_offset:102084*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102084*0 + 3*236*FLEN/8, x4, x1, x2)

inst_34029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f07fffffffffff; valaddr_reg:x3; val_offset:102087*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102087*0 + 3*237*FLEN/8, x4, x1, x2)

inst_34030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f0ffffffffffff; valaddr_reg:x3; val_offset:102090*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102090*0 + 3*238*FLEN/8, x4, x1, x2)

inst_34031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f1ffffffffffff; valaddr_reg:x3; val_offset:102093*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102093*0 + 3*239*FLEN/8, x4, x1, x2)

inst_34032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f3ffffffffffff; valaddr_reg:x3; val_offset:102096*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102096*0 + 3*240*FLEN/8, x4, x1, x2)

inst_34033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f7ffffffffffff; valaddr_reg:x3; val_offset:102099*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102099*0 + 3*241*FLEN/8, x4, x1, x2)

inst_34034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2f8000000000000; valaddr_reg:x3; val_offset:102102*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102102*0 + 3*242*FLEN/8, x4, x1, x2)

inst_34035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fc000000000000; valaddr_reg:x3; val_offset:102105*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102105*0 + 3*243*FLEN/8, x4, x1, x2)

inst_34036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fe000000000000; valaddr_reg:x3; val_offset:102108*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102108*0 + 3*244*FLEN/8, x4, x1, x2)

inst_34037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ff000000000000; valaddr_reg:x3; val_offset:102111*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102111*0 + 3*245*FLEN/8, x4, x1, x2)

inst_34038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ff800000000000; valaddr_reg:x3; val_offset:102114*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102114*0 + 3*246*FLEN/8, x4, x1, x2)

inst_34039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffc00000000000; valaddr_reg:x3; val_offset:102117*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102117*0 + 3*247*FLEN/8, x4, x1, x2)

inst_34040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffe00000000000; valaddr_reg:x3; val_offset:102120*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102120*0 + 3*248*FLEN/8, x4, x1, x2)

inst_34041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fff00000000000; valaddr_reg:x3; val_offset:102123*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102123*0 + 3*249*FLEN/8, x4, x1, x2)

inst_34042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fff80000000000; valaddr_reg:x3; val_offset:102126*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102126*0 + 3*250*FLEN/8, x4, x1, x2)

inst_34043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffc0000000000; valaddr_reg:x3; val_offset:102129*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102129*0 + 3*251*FLEN/8, x4, x1, x2)

inst_34044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffe0000000000; valaddr_reg:x3; val_offset:102132*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102132*0 + 3*252*FLEN/8, x4, x1, x2)

inst_34045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffff0000000000; valaddr_reg:x3; val_offset:102135*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102135*0 + 3*253*FLEN/8, x4, x1, x2)

inst_34046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffff8000000000; valaddr_reg:x3; val_offset:102138*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102138*0 + 3*254*FLEN/8, x4, x1, x2)

inst_34047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffc000000000; valaddr_reg:x3; val_offset:102141*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102141*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_34048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffe000000000; valaddr_reg:x3; val_offset:102144*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102144*0 + 3*256*FLEN/8, x4, x1, x2)

inst_34049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffff000000000; valaddr_reg:x3; val_offset:102147*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102147*0 + 3*257*FLEN/8, x4, x1, x2)

inst_34050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffff800000000; valaddr_reg:x3; val_offset:102150*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102150*0 + 3*258*FLEN/8, x4, x1, x2)

inst_34051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffc00000000; valaddr_reg:x3; val_offset:102153*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102153*0 + 3*259*FLEN/8, x4, x1, x2)

inst_34052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffe00000000; valaddr_reg:x3; val_offset:102156*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102156*0 + 3*260*FLEN/8, x4, x1, x2)

inst_34053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffff00000000; valaddr_reg:x3; val_offset:102159*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102159*0 + 3*261*FLEN/8, x4, x1, x2)

inst_34054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffff80000000; valaddr_reg:x3; val_offset:102162*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102162*0 + 3*262*FLEN/8, x4, x1, x2)

inst_34055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffc0000000; valaddr_reg:x3; val_offset:102165*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102165*0 + 3*263*FLEN/8, x4, x1, x2)

inst_34056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffe0000000; valaddr_reg:x3; val_offset:102168*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102168*0 + 3*264*FLEN/8, x4, x1, x2)

inst_34057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffff0000000; valaddr_reg:x3; val_offset:102171*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102171*0 + 3*265*FLEN/8, x4, x1, x2)

inst_34058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffff8000000; valaddr_reg:x3; val_offset:102174*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102174*0 + 3*266*FLEN/8, x4, x1, x2)

inst_34059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffc000000; valaddr_reg:x3; val_offset:102177*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102177*0 + 3*267*FLEN/8, x4, x1, x2)

inst_34060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffe000000; valaddr_reg:x3; val_offset:102180*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102180*0 + 3*268*FLEN/8, x4, x1, x2)

inst_34061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffff000000; valaddr_reg:x3; val_offset:102183*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102183*0 + 3*269*FLEN/8, x4, x1, x2)

inst_34062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffff800000; valaddr_reg:x3; val_offset:102186*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102186*0 + 3*270*FLEN/8, x4, x1, x2)

inst_34063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffc00000; valaddr_reg:x3; val_offset:102189*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102189*0 + 3*271*FLEN/8, x4, x1, x2)

inst_34064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffe00000; valaddr_reg:x3; val_offset:102192*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102192*0 + 3*272*FLEN/8, x4, x1, x2)

inst_34065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffff00000; valaddr_reg:x3; val_offset:102195*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102195*0 + 3*273*FLEN/8, x4, x1, x2)

inst_34066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffff80000; valaddr_reg:x3; val_offset:102198*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102198*0 + 3*274*FLEN/8, x4, x1, x2)

inst_34067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffc0000; valaddr_reg:x3; val_offset:102201*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102201*0 + 3*275*FLEN/8, x4, x1, x2)

inst_34068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffe0000; valaddr_reg:x3; val_offset:102204*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102204*0 + 3*276*FLEN/8, x4, x1, x2)

inst_34069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffff0000; valaddr_reg:x3; val_offset:102207*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102207*0 + 3*277*FLEN/8, x4, x1, x2)

inst_34070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffff8000; valaddr_reg:x3; val_offset:102210*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102210*0 + 3*278*FLEN/8, x4, x1, x2)

inst_34071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffc000; valaddr_reg:x3; val_offset:102213*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102213*0 + 3*279*FLEN/8, x4, x1, x2)

inst_34072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffe000; valaddr_reg:x3; val_offset:102216*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102216*0 + 3*280*FLEN/8, x4, x1, x2)

inst_34073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffff000; valaddr_reg:x3; val_offset:102219*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102219*0 + 3*281*FLEN/8, x4, x1, x2)

inst_34074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffff800; valaddr_reg:x3; val_offset:102222*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102222*0 + 3*282*FLEN/8, x4, x1, x2)

inst_34075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffc00; valaddr_reg:x3; val_offset:102225*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102225*0 + 3*283*FLEN/8, x4, x1, x2)

inst_34076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffe00; valaddr_reg:x3; val_offset:102228*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102228*0 + 3*284*FLEN/8, x4, x1, x2)

inst_34077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffff00; valaddr_reg:x3; val_offset:102231*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102231*0 + 3*285*FLEN/8, x4, x1, x2)

inst_34078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffff80; valaddr_reg:x3; val_offset:102234*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102234*0 + 3*286*FLEN/8, x4, x1, x2)

inst_34079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffffc0; valaddr_reg:x3; val_offset:102237*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102237*0 + 3*287*FLEN/8, x4, x1, x2)

inst_34080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffffe0; valaddr_reg:x3; val_offset:102240*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102240*0 + 3*288*FLEN/8, x4, x1, x2)

inst_34081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffff0; valaddr_reg:x3; val_offset:102243*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102243*0 + 3*289*FLEN/8, x4, x1, x2)

inst_34082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffff8; valaddr_reg:x3; val_offset:102246*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102246*0 + 3*290*FLEN/8, x4, x1, x2)

inst_34083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffffc; valaddr_reg:x3; val_offset:102249*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102249*0 + 3*291*FLEN/8, x4, x1, x2)

inst_34084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2fffffffffffffe; valaddr_reg:x3; val_offset:102252*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102252*0 + 3*292*FLEN/8, x4, x1, x2)

inst_34085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x58d8ed574b30b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f958d8ed574b30b; op2val:0x0;
op3val:0x2ffffffffffffff; valaddr_reg:x3; val_offset:102255*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102255*0 + 3*293*FLEN/8, x4, x1, x2)

inst_34086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:102258*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102258*0 + 3*294*FLEN/8, x4, x1, x2)

inst_34087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:102261*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102261*0 + 3*295*FLEN/8, x4, x1, x2)

inst_34088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:102264*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102264*0 + 3*296*FLEN/8, x4, x1, x2)

inst_34089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:102267*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102267*0 + 3*297*FLEN/8, x4, x1, x2)

inst_34090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:102270*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102270*0 + 3*298*FLEN/8, x4, x1, x2)

inst_34091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:102273*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102273*0 + 3*299*FLEN/8, x4, x1, x2)

inst_34092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:102276*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102276*0 + 3*300*FLEN/8, x4, x1, x2)

inst_34093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:102279*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102279*0 + 3*301*FLEN/8, x4, x1, x2)

inst_34094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:102282*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102282*0 + 3*302*FLEN/8, x4, x1, x2)

inst_34095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:102285*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102285*0 + 3*303*FLEN/8, x4, x1, x2)

inst_34096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:102288*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102288*0 + 3*304*FLEN/8, x4, x1, x2)

inst_34097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:102291*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102291*0 + 3*305*FLEN/8, x4, x1, x2)

inst_34098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:102294*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102294*0 + 3*306*FLEN/8, x4, x1, x2)

inst_34099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:102297*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102297*0 + 3*307*FLEN/8, x4, x1, x2)

inst_34100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:102300*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102300*0 + 3*308*FLEN/8, x4, x1, x2)

inst_34101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:102303*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102303*0 + 3*309*FLEN/8, x4, x1, x2)

inst_34102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:102306*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102306*0 + 3*310*FLEN/8, x4, x1, x2)

inst_34103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:102309*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102309*0 + 3*311*FLEN/8, x4, x1, x2)

inst_34104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:102312*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102312*0 + 3*312*FLEN/8, x4, x1, x2)

inst_34105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:102315*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102315*0 + 3*313*FLEN/8, x4, x1, x2)

inst_34106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:102318*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102318*0 + 3*314*FLEN/8, x4, x1, x2)

inst_34107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:102321*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102321*0 + 3*315*FLEN/8, x4, x1, x2)

inst_34108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000000000; valaddr_reg:x3; val_offset:102324*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102324*0 + 3*316*FLEN/8, x4, x1, x2)

inst_34109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000000001; valaddr_reg:x3; val_offset:102327*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102327*0 + 3*317*FLEN/8, x4, x1, x2)

inst_34110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000000003; valaddr_reg:x3; val_offset:102330*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102330*0 + 3*318*FLEN/8, x4, x1, x2)

inst_34111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000000007; valaddr_reg:x3; val_offset:102333*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102333*0 + 3*319*FLEN/8, x4, x1, x2)

inst_34112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000000000f; valaddr_reg:x3; val_offset:102336*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102336*0 + 3*320*FLEN/8, x4, x1, x2)

inst_34113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000000001f; valaddr_reg:x3; val_offset:102339*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102339*0 + 3*321*FLEN/8, x4, x1, x2)

inst_34114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000000003f; valaddr_reg:x3; val_offset:102342*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102342*0 + 3*322*FLEN/8, x4, x1, x2)

inst_34115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000000007f; valaddr_reg:x3; val_offset:102345*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102345*0 + 3*323*FLEN/8, x4, x1, x2)

inst_34116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000000000ff; valaddr_reg:x3; val_offset:102348*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102348*0 + 3*324*FLEN/8, x4, x1, x2)

inst_34117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000000001ff; valaddr_reg:x3; val_offset:102351*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102351*0 + 3*325*FLEN/8, x4, x1, x2)

inst_34118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000000003ff; valaddr_reg:x3; val_offset:102354*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102354*0 + 3*326*FLEN/8, x4, x1, x2)

inst_34119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000000007ff; valaddr_reg:x3; val_offset:102357*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102357*0 + 3*327*FLEN/8, x4, x1, x2)

inst_34120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000000fff; valaddr_reg:x3; val_offset:102360*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102360*0 + 3*328*FLEN/8, x4, x1, x2)

inst_34121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000001fff; valaddr_reg:x3; val_offset:102363*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102363*0 + 3*329*FLEN/8, x4, x1, x2)

inst_34122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000003fff; valaddr_reg:x3; val_offset:102366*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102366*0 + 3*330*FLEN/8, x4, x1, x2)

inst_34123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000007fff; valaddr_reg:x3; val_offset:102369*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102369*0 + 3*331*FLEN/8, x4, x1, x2)

inst_34124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000000ffff; valaddr_reg:x3; val_offset:102372*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102372*0 + 3*332*FLEN/8, x4, x1, x2)

inst_34125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000001ffff; valaddr_reg:x3; val_offset:102375*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102375*0 + 3*333*FLEN/8, x4, x1, x2)

inst_34126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000003ffff; valaddr_reg:x3; val_offset:102378*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102378*0 + 3*334*FLEN/8, x4, x1, x2)

inst_34127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000007ffff; valaddr_reg:x3; val_offset:102381*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102381*0 + 3*335*FLEN/8, x4, x1, x2)

inst_34128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000000fffff; valaddr_reg:x3; val_offset:102384*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102384*0 + 3*336*FLEN/8, x4, x1, x2)

inst_34129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000001fffff; valaddr_reg:x3; val_offset:102387*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102387*0 + 3*337*FLEN/8, x4, x1, x2)

inst_34130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000003fffff; valaddr_reg:x3; val_offset:102390*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102390*0 + 3*338*FLEN/8, x4, x1, x2)

inst_34131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000007fffff; valaddr_reg:x3; val_offset:102393*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102393*0 + 3*339*FLEN/8, x4, x1, x2)

inst_34132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000000ffffff; valaddr_reg:x3; val_offset:102396*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102396*0 + 3*340*FLEN/8, x4, x1, x2)

inst_34133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000001ffffff; valaddr_reg:x3; val_offset:102399*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102399*0 + 3*341*FLEN/8, x4, x1, x2)

inst_34134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000003ffffff; valaddr_reg:x3; val_offset:102402*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102402*0 + 3*342*FLEN/8, x4, x1, x2)

inst_34135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000007ffffff; valaddr_reg:x3; val_offset:102405*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102405*0 + 3*343*FLEN/8, x4, x1, x2)

inst_34136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000000fffffff; valaddr_reg:x3; val_offset:102408*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102408*0 + 3*344*FLEN/8, x4, x1, x2)

inst_34137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000001fffffff; valaddr_reg:x3; val_offset:102411*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102411*0 + 3*345*FLEN/8, x4, x1, x2)

inst_34138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000003fffffff; valaddr_reg:x3; val_offset:102414*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102414*0 + 3*346*FLEN/8, x4, x1, x2)

inst_34139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000007fffffff; valaddr_reg:x3; val_offset:102417*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102417*0 + 3*347*FLEN/8, x4, x1, x2)

inst_34140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00000ffffffff; valaddr_reg:x3; val_offset:102420*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102420*0 + 3*348*FLEN/8, x4, x1, x2)

inst_34141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00001ffffffff; valaddr_reg:x3; val_offset:102423*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102423*0 + 3*349*FLEN/8, x4, x1, x2)

inst_34142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00003ffffffff; valaddr_reg:x3; val_offset:102426*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102426*0 + 3*350*FLEN/8, x4, x1, x2)

inst_34143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00007ffffffff; valaddr_reg:x3; val_offset:102429*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102429*0 + 3*351*FLEN/8, x4, x1, x2)

inst_34144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0000fffffffff; valaddr_reg:x3; val_offset:102432*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102432*0 + 3*352*FLEN/8, x4, x1, x2)

inst_34145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0001fffffffff; valaddr_reg:x3; val_offset:102435*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102435*0 + 3*353*FLEN/8, x4, x1, x2)

inst_34146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0003fffffffff; valaddr_reg:x3; val_offset:102438*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102438*0 + 3*354*FLEN/8, x4, x1, x2)

inst_34147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0007fffffffff; valaddr_reg:x3; val_offset:102441*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102441*0 + 3*355*FLEN/8, x4, x1, x2)

inst_34148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a000ffffffffff; valaddr_reg:x3; val_offset:102444*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102444*0 + 3*356*FLEN/8, x4, x1, x2)

inst_34149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a001ffffffffff; valaddr_reg:x3; val_offset:102447*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102447*0 + 3*357*FLEN/8, x4, x1, x2)

inst_34150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a003ffffffffff; valaddr_reg:x3; val_offset:102450*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102450*0 + 3*358*FLEN/8, x4, x1, x2)

inst_34151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a007ffffffffff; valaddr_reg:x3; val_offset:102453*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102453*0 + 3*359*FLEN/8, x4, x1, x2)

inst_34152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a00fffffffffff; valaddr_reg:x3; val_offset:102456*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102456*0 + 3*360*FLEN/8, x4, x1, x2)

inst_34153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a01fffffffffff; valaddr_reg:x3; val_offset:102459*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102459*0 + 3*361*FLEN/8, x4, x1, x2)

inst_34154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a03fffffffffff; valaddr_reg:x3; val_offset:102462*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102462*0 + 3*362*FLEN/8, x4, x1, x2)

inst_34155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a07fffffffffff; valaddr_reg:x3; val_offset:102465*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102465*0 + 3*363*FLEN/8, x4, x1, x2)

inst_34156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a0ffffffffffff; valaddr_reg:x3; val_offset:102468*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102468*0 + 3*364*FLEN/8, x4, x1, x2)

inst_34157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a1ffffffffffff; valaddr_reg:x3; val_offset:102471*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102471*0 + 3*365*FLEN/8, x4, x1, x2)

inst_34158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a3ffffffffffff; valaddr_reg:x3; val_offset:102474*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102474*0 + 3*366*FLEN/8, x4, x1, x2)

inst_34159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a7ffffffffffff; valaddr_reg:x3; val_offset:102477*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102477*0 + 3*367*FLEN/8, x4, x1, x2)

inst_34160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1a8000000000000; valaddr_reg:x3; val_offset:102480*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102480*0 + 3*368*FLEN/8, x4, x1, x2)

inst_34161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ac000000000000; valaddr_reg:x3; val_offset:102483*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102483*0 + 3*369*FLEN/8, x4, x1, x2)

inst_34162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1ae000000000000; valaddr_reg:x3; val_offset:102486*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102486*0 + 3*370*FLEN/8, x4, x1, x2)

inst_34163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1af000000000000; valaddr_reg:x3; val_offset:102489*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102489*0 + 3*371*FLEN/8, x4, x1, x2)

inst_34164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1af800000000000; valaddr_reg:x3; val_offset:102492*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102492*0 + 3*372*FLEN/8, x4, x1, x2)

inst_34165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afc00000000000; valaddr_reg:x3; val_offset:102495*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102495*0 + 3*373*FLEN/8, x4, x1, x2)

inst_34166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afe00000000000; valaddr_reg:x3; val_offset:102498*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102498*0 + 3*374*FLEN/8, x4, x1, x2)

inst_34167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1aff00000000000; valaddr_reg:x3; val_offset:102501*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102501*0 + 3*375*FLEN/8, x4, x1, x2)

inst_34168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1aff80000000000; valaddr_reg:x3; val_offset:102504*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102504*0 + 3*376*FLEN/8, x4, x1, x2)

inst_34169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affc0000000000; valaddr_reg:x3; val_offset:102507*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102507*0 + 3*377*FLEN/8, x4, x1, x2)

inst_34170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affe0000000000; valaddr_reg:x3; val_offset:102510*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102510*0 + 3*378*FLEN/8, x4, x1, x2)

inst_34171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afff0000000000; valaddr_reg:x3; val_offset:102513*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102513*0 + 3*379*FLEN/8, x4, x1, x2)

inst_34172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afff8000000000; valaddr_reg:x3; val_offset:102516*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102516*0 + 3*380*FLEN/8, x4, x1, x2)

inst_34173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffc000000000; valaddr_reg:x3; val_offset:102519*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102519*0 + 3*381*FLEN/8, x4, x1, x2)

inst_34174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffe000000000; valaddr_reg:x3; val_offset:102522*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102522*0 + 3*382*FLEN/8, x4, x1, x2)

inst_34175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affff000000000; valaddr_reg:x3; val_offset:102525*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102525*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_34176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affff800000000; valaddr_reg:x3; val_offset:102528*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102528*0 + 3*384*FLEN/8, x4, x1, x2)

inst_34177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffc00000000; valaddr_reg:x3; val_offset:102531*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102531*0 + 3*385*FLEN/8, x4, x1, x2)

inst_34178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffe00000000; valaddr_reg:x3; val_offset:102534*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102534*0 + 3*386*FLEN/8, x4, x1, x2)

inst_34179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffff00000000; valaddr_reg:x3; val_offset:102537*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102537*0 + 3*387*FLEN/8, x4, x1, x2)

inst_34180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffff80000000; valaddr_reg:x3; val_offset:102540*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102540*0 + 3*388*FLEN/8, x4, x1, x2)

inst_34181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffc0000000; valaddr_reg:x3; val_offset:102543*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102543*0 + 3*389*FLEN/8, x4, x1, x2)

inst_34182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffe0000000; valaddr_reg:x3; val_offset:102546*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102546*0 + 3*390*FLEN/8, x4, x1, x2)

inst_34183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffff0000000; valaddr_reg:x3; val_offset:102549*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102549*0 + 3*391*FLEN/8, x4, x1, x2)

inst_34184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffff8000000; valaddr_reg:x3; val_offset:102552*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102552*0 + 3*392*FLEN/8, x4, x1, x2)

inst_34185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffc000000; valaddr_reg:x3; val_offset:102555*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102555*0 + 3*393*FLEN/8, x4, x1, x2)

inst_34186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffe000000; valaddr_reg:x3; val_offset:102558*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102558*0 + 3*394*FLEN/8, x4, x1, x2)

inst_34187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffff000000; valaddr_reg:x3; val_offset:102561*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102561*0 + 3*395*FLEN/8, x4, x1, x2)

inst_34188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffff800000; valaddr_reg:x3; val_offset:102564*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102564*0 + 3*396*FLEN/8, x4, x1, x2)

inst_34189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffc00000; valaddr_reg:x3; val_offset:102567*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102567*0 + 3*397*FLEN/8, x4, x1, x2)

inst_34190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffe00000; valaddr_reg:x3; val_offset:102570*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102570*0 + 3*398*FLEN/8, x4, x1, x2)

inst_34191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffff00000; valaddr_reg:x3; val_offset:102573*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102573*0 + 3*399*FLEN/8, x4, x1, x2)

inst_34192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffff80000; valaddr_reg:x3; val_offset:102576*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102576*0 + 3*400*FLEN/8, x4, x1, x2)

inst_34193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffc0000; valaddr_reg:x3; val_offset:102579*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102579*0 + 3*401*FLEN/8, x4, x1, x2)

inst_34194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffe0000; valaddr_reg:x3; val_offset:102582*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102582*0 + 3*402*FLEN/8, x4, x1, x2)

inst_34195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffff0000; valaddr_reg:x3; val_offset:102585*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102585*0 + 3*403*FLEN/8, x4, x1, x2)

inst_34196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffff8000; valaddr_reg:x3; val_offset:102588*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102588*0 + 3*404*FLEN/8, x4, x1, x2)

inst_34197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffc000; valaddr_reg:x3; val_offset:102591*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102591*0 + 3*405*FLEN/8, x4, x1, x2)

inst_34198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffe000; valaddr_reg:x3; val_offset:102594*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102594*0 + 3*406*FLEN/8, x4, x1, x2)

inst_34199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffff000; valaddr_reg:x3; val_offset:102597*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102597*0 + 3*407*FLEN/8, x4, x1, x2)

inst_34200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffff800; valaddr_reg:x3; val_offset:102600*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102600*0 + 3*408*FLEN/8, x4, x1, x2)

inst_34201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffc00; valaddr_reg:x3; val_offset:102603*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102603*0 + 3*409*FLEN/8, x4, x1, x2)

inst_34202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffe00; valaddr_reg:x3; val_offset:102606*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102606*0 + 3*410*FLEN/8, x4, x1, x2)

inst_34203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffff00; valaddr_reg:x3; val_offset:102609*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102609*0 + 3*411*FLEN/8, x4, x1, x2)

inst_34204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffff80; valaddr_reg:x3; val_offset:102612*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102612*0 + 3*412*FLEN/8, x4, x1, x2)

inst_34205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffffc0; valaddr_reg:x3; val_offset:102615*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102615*0 + 3*413*FLEN/8, x4, x1, x2)

inst_34206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffffe0; valaddr_reg:x3; val_offset:102618*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102618*0 + 3*414*FLEN/8, x4, x1, x2)

inst_34207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffff0; valaddr_reg:x3; val_offset:102621*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102621*0 + 3*415*FLEN/8, x4, x1, x2)

inst_34208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffff8; valaddr_reg:x3; val_offset:102624*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102624*0 + 3*416*FLEN/8, x4, x1, x2)

inst_34209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffffc; valaddr_reg:x3; val_offset:102627*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102627*0 + 3*417*FLEN/8, x4, x1, x2)

inst_34210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1affffffffffffe; valaddr_reg:x3; val_offset:102630*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102630*0 + 3*418*FLEN/8, x4, x1, x2)

inst_34211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5a97f6c8d188f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95a97f6c8d188f; op2val:0x0;
op3val:0x1afffffffffffff; valaddr_reg:x3; val_offset:102633*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102633*0 + 3*419*FLEN/8, x4, x1, x2)

inst_34212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:102636*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102636*0 + 3*420*FLEN/8, x4, x1, x2)

inst_34213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:102639*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102639*0 + 3*421*FLEN/8, x4, x1, x2)

inst_34214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:102642*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102642*0 + 3*422*FLEN/8, x4, x1, x2)

inst_34215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:102645*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102645*0 + 3*423*FLEN/8, x4, x1, x2)

inst_34216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:102648*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102648*0 + 3*424*FLEN/8, x4, x1, x2)

inst_34217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:102651*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102651*0 + 3*425*FLEN/8, x4, x1, x2)

inst_34218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:102654*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102654*0 + 3*426*FLEN/8, x4, x1, x2)

inst_34219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:102657*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102657*0 + 3*427*FLEN/8, x4, x1, x2)

inst_34220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:102660*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102660*0 + 3*428*FLEN/8, x4, x1, x2)

inst_34221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:102663*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102663*0 + 3*429*FLEN/8, x4, x1, x2)

inst_34222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:102666*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102666*0 + 3*430*FLEN/8, x4, x1, x2)

inst_34223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:102669*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102669*0 + 3*431*FLEN/8, x4, x1, x2)

inst_34224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:102672*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102672*0 + 3*432*FLEN/8, x4, x1, x2)

inst_34225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:102675*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102675*0 + 3*433*FLEN/8, x4, x1, x2)

inst_34226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:102678*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102678*0 + 3*434*FLEN/8, x4, x1, x2)

inst_34227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:102681*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102681*0 + 3*435*FLEN/8, x4, x1, x2)

inst_34228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:102684*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102684*0 + 3*436*FLEN/8, x4, x1, x2)

inst_34229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:102687*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102687*0 + 3*437*FLEN/8, x4, x1, x2)

inst_34230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:102690*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102690*0 + 3*438*FLEN/8, x4, x1, x2)

inst_34231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:102693*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102693*0 + 3*439*FLEN/8, x4, x1, x2)

inst_34232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:102696*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102696*0 + 3*440*FLEN/8, x4, x1, x2)

inst_34233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:102699*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102699*0 + 3*441*FLEN/8, x4, x1, x2)

inst_34234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000000000; valaddr_reg:x3; val_offset:102702*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102702*0 + 3*442*FLEN/8, x4, x1, x2)

inst_34235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000000001; valaddr_reg:x3; val_offset:102705*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102705*0 + 3*443*FLEN/8, x4, x1, x2)

inst_34236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000000003; valaddr_reg:x3; val_offset:102708*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102708*0 + 3*444*FLEN/8, x4, x1, x2)

inst_34237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000000007; valaddr_reg:x3; val_offset:102711*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102711*0 + 3*445*FLEN/8, x4, x1, x2)

inst_34238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000000000f; valaddr_reg:x3; val_offset:102714*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102714*0 + 3*446*FLEN/8, x4, x1, x2)

inst_34239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000000001f; valaddr_reg:x3; val_offset:102717*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102717*0 + 3*447*FLEN/8, x4, x1, x2)

inst_34240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000000003f; valaddr_reg:x3; val_offset:102720*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102720*0 + 3*448*FLEN/8, x4, x1, x2)

inst_34241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000000007f; valaddr_reg:x3; val_offset:102723*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102723*0 + 3*449*FLEN/8, x4, x1, x2)

inst_34242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000000000ff; valaddr_reg:x3; val_offset:102726*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102726*0 + 3*450*FLEN/8, x4, x1, x2)

inst_34243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000000001ff; valaddr_reg:x3; val_offset:102729*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102729*0 + 3*451*FLEN/8, x4, x1, x2)

inst_34244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000000003ff; valaddr_reg:x3; val_offset:102732*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102732*0 + 3*452*FLEN/8, x4, x1, x2)

inst_34245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000000007ff; valaddr_reg:x3; val_offset:102735*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102735*0 + 3*453*FLEN/8, x4, x1, x2)

inst_34246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000000fff; valaddr_reg:x3; val_offset:102738*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102738*0 + 3*454*FLEN/8, x4, x1, x2)

inst_34247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000001fff; valaddr_reg:x3; val_offset:102741*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102741*0 + 3*455*FLEN/8, x4, x1, x2)

inst_34248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000003fff; valaddr_reg:x3; val_offset:102744*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102744*0 + 3*456*FLEN/8, x4, x1, x2)

inst_34249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000007fff; valaddr_reg:x3; val_offset:102747*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102747*0 + 3*457*FLEN/8, x4, x1, x2)

inst_34250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000000ffff; valaddr_reg:x3; val_offset:102750*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102750*0 + 3*458*FLEN/8, x4, x1, x2)

inst_34251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000001ffff; valaddr_reg:x3; val_offset:102753*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102753*0 + 3*459*FLEN/8, x4, x1, x2)

inst_34252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000003ffff; valaddr_reg:x3; val_offset:102756*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102756*0 + 3*460*FLEN/8, x4, x1, x2)

inst_34253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000007ffff; valaddr_reg:x3; val_offset:102759*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102759*0 + 3*461*FLEN/8, x4, x1, x2)

inst_34254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000000fffff; valaddr_reg:x3; val_offset:102762*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102762*0 + 3*462*FLEN/8, x4, x1, x2)

inst_34255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000001fffff; valaddr_reg:x3; val_offset:102765*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102765*0 + 3*463*FLEN/8, x4, x1, x2)

inst_34256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000003fffff; valaddr_reg:x3; val_offset:102768*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102768*0 + 3*464*FLEN/8, x4, x1, x2)

inst_34257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000007fffff; valaddr_reg:x3; val_offset:102771*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102771*0 + 3*465*FLEN/8, x4, x1, x2)

inst_34258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000000ffffff; valaddr_reg:x3; val_offset:102774*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102774*0 + 3*466*FLEN/8, x4, x1, x2)

inst_34259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000001ffffff; valaddr_reg:x3; val_offset:102777*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102777*0 + 3*467*FLEN/8, x4, x1, x2)

inst_34260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000003ffffff; valaddr_reg:x3; val_offset:102780*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102780*0 + 3*468*FLEN/8, x4, x1, x2)

inst_34261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000007ffffff; valaddr_reg:x3; val_offset:102783*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102783*0 + 3*469*FLEN/8, x4, x1, x2)

inst_34262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000000fffffff; valaddr_reg:x3; val_offset:102786*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102786*0 + 3*470*FLEN/8, x4, x1, x2)

inst_34263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000001fffffff; valaddr_reg:x3; val_offset:102789*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102789*0 + 3*471*FLEN/8, x4, x1, x2)

inst_34264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000003fffffff; valaddr_reg:x3; val_offset:102792*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102792*0 + 3*472*FLEN/8, x4, x1, x2)

inst_34265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000007fffffff; valaddr_reg:x3; val_offset:102795*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102795*0 + 3*473*FLEN/8, x4, x1, x2)

inst_34266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900000ffffffff; valaddr_reg:x3; val_offset:102798*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102798*0 + 3*474*FLEN/8, x4, x1, x2)

inst_34267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900001ffffffff; valaddr_reg:x3; val_offset:102801*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102801*0 + 3*475*FLEN/8, x4, x1, x2)

inst_34268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900003ffffffff; valaddr_reg:x3; val_offset:102804*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102804*0 + 3*476*FLEN/8, x4, x1, x2)

inst_34269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900007ffffffff; valaddr_reg:x3; val_offset:102807*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102807*0 + 3*477*FLEN/8, x4, x1, x2)

inst_34270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290000fffffffff; valaddr_reg:x3; val_offset:102810*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102810*0 + 3*478*FLEN/8, x4, x1, x2)

inst_34271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290001fffffffff; valaddr_reg:x3; val_offset:102813*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102813*0 + 3*479*FLEN/8, x4, x1, x2)

inst_34272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290003fffffffff; valaddr_reg:x3; val_offset:102816*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102816*0 + 3*480*FLEN/8, x4, x1, x2)

inst_34273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290007fffffffff; valaddr_reg:x3; val_offset:102819*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102819*0 + 3*481*FLEN/8, x4, x1, x2)

inst_34274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29000ffffffffff; valaddr_reg:x3; val_offset:102822*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102822*0 + 3*482*FLEN/8, x4, x1, x2)

inst_34275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29001ffffffffff; valaddr_reg:x3; val_offset:102825*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102825*0 + 3*483*FLEN/8, x4, x1, x2)

inst_34276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29003ffffffffff; valaddr_reg:x3; val_offset:102828*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102828*0 + 3*484*FLEN/8, x4, x1, x2)

inst_34277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29007ffffffffff; valaddr_reg:x3; val_offset:102831*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102831*0 + 3*485*FLEN/8, x4, x1, x2)

inst_34278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2900fffffffffff; valaddr_reg:x3; val_offset:102834*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102834*0 + 3*486*FLEN/8, x4, x1, x2)

inst_34279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2901fffffffffff; valaddr_reg:x3; val_offset:102837*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102837*0 + 3*487*FLEN/8, x4, x1, x2)

inst_34280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2903fffffffffff; valaddr_reg:x3; val_offset:102840*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102840*0 + 3*488*FLEN/8, x4, x1, x2)

inst_34281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x2907fffffffffff; valaddr_reg:x3; val_offset:102843*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102843*0 + 3*489*FLEN/8, x4, x1, x2)

inst_34282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x290ffffffffffff; valaddr_reg:x3; val_offset:102846*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102846*0 + 3*490*FLEN/8, x4, x1, x2)

inst_34283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x291ffffffffffff; valaddr_reg:x3; val_offset:102849*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102849*0 + 3*491*FLEN/8, x4, x1, x2)

inst_34284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x293ffffffffffff; valaddr_reg:x3; val_offset:102852*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102852*0 + 3*492*FLEN/8, x4, x1, x2)

inst_34285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x297ffffffffffff; valaddr_reg:x3; val_offset:102855*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102855*0 + 3*493*FLEN/8, x4, x1, x2)

inst_34286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x298000000000000; valaddr_reg:x3; val_offset:102858*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102858*0 + 3*494*FLEN/8, x4, x1, x2)

inst_34287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29c000000000000; valaddr_reg:x3; val_offset:102861*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102861*0 + 3*495*FLEN/8, x4, x1, x2)

inst_34288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29e000000000000; valaddr_reg:x3; val_offset:102864*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102864*0 + 3*496*FLEN/8, x4, x1, x2)

inst_34289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29f000000000000; valaddr_reg:x3; val_offset:102867*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102867*0 + 3*497*FLEN/8, x4, x1, x2)

inst_34290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29f800000000000; valaddr_reg:x3; val_offset:102870*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102870*0 + 3*498*FLEN/8, x4, x1, x2)

inst_34291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fc00000000000; valaddr_reg:x3; val_offset:102873*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102873*0 + 3*499*FLEN/8, x4, x1, x2)

inst_34292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fe00000000000; valaddr_reg:x3; val_offset:102876*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102876*0 + 3*500*FLEN/8, x4, x1, x2)

inst_34293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ff00000000000; valaddr_reg:x3; val_offset:102879*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102879*0 + 3*501*FLEN/8, x4, x1, x2)

inst_34294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ff80000000000; valaddr_reg:x3; val_offset:102882*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102882*0 + 3*502*FLEN/8, x4, x1, x2)

inst_34295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffc0000000000; valaddr_reg:x3; val_offset:102885*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102885*0 + 3*503*FLEN/8, x4, x1, x2)

inst_34296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffe0000000000; valaddr_reg:x3; val_offset:102888*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102888*0 + 3*504*FLEN/8, x4, x1, x2)

inst_34297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fff0000000000; valaddr_reg:x3; val_offset:102891*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102891*0 + 3*505*FLEN/8, x4, x1, x2)

inst_34298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fff8000000000; valaddr_reg:x3; val_offset:102894*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102894*0 + 3*506*FLEN/8, x4, x1, x2)

inst_34299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffc000000000; valaddr_reg:x3; val_offset:102897*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102897*0 + 3*507*FLEN/8, x4, x1, x2)

inst_34300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffe000000000; valaddr_reg:x3; val_offset:102900*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102900*0 + 3*508*FLEN/8, x4, x1, x2)

inst_34301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffff000000000; valaddr_reg:x3; val_offset:102903*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102903*0 + 3*509*FLEN/8, x4, x1, x2)

inst_34302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffff800000000; valaddr_reg:x3; val_offset:102906*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102906*0 + 3*510*FLEN/8, x4, x1, x2)

inst_34303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffc00000000; valaddr_reg:x3; val_offset:102909*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102909*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_34304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffe00000000; valaddr_reg:x3; val_offset:102912*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102912*0 + 3*512*FLEN/8, x4, x1, x2)

inst_34305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffff00000000; valaddr_reg:x3; val_offset:102915*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102915*0 + 3*513*FLEN/8, x4, x1, x2)

inst_34306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffff80000000; valaddr_reg:x3; val_offset:102918*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102918*0 + 3*514*FLEN/8, x4, x1, x2)

inst_34307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffc0000000; valaddr_reg:x3; val_offset:102921*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102921*0 + 3*515*FLEN/8, x4, x1, x2)

inst_34308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffe0000000; valaddr_reg:x3; val_offset:102924*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102924*0 + 3*516*FLEN/8, x4, x1, x2)

inst_34309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffff0000000; valaddr_reg:x3; val_offset:102927*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102927*0 + 3*517*FLEN/8, x4, x1, x2)

inst_34310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffff8000000; valaddr_reg:x3; val_offset:102930*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102930*0 + 3*518*FLEN/8, x4, x1, x2)

inst_34311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffc000000; valaddr_reg:x3; val_offset:102933*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102933*0 + 3*519*FLEN/8, x4, x1, x2)

inst_34312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffe000000; valaddr_reg:x3; val_offset:102936*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102936*0 + 3*520*FLEN/8, x4, x1, x2)

inst_34313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffff000000; valaddr_reg:x3; val_offset:102939*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102939*0 + 3*521*FLEN/8, x4, x1, x2)

inst_34314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffff800000; valaddr_reg:x3; val_offset:102942*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102942*0 + 3*522*FLEN/8, x4, x1, x2)

inst_34315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffc00000; valaddr_reg:x3; val_offset:102945*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102945*0 + 3*523*FLEN/8, x4, x1, x2)

inst_34316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffe00000; valaddr_reg:x3; val_offset:102948*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102948*0 + 3*524*FLEN/8, x4, x1, x2)

inst_34317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffff00000; valaddr_reg:x3; val_offset:102951*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102951*0 + 3*525*FLEN/8, x4, x1, x2)

inst_34318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffff80000; valaddr_reg:x3; val_offset:102954*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102954*0 + 3*526*FLEN/8, x4, x1, x2)

inst_34319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffc0000; valaddr_reg:x3; val_offset:102957*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102957*0 + 3*527*FLEN/8, x4, x1, x2)

inst_34320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffe0000; valaddr_reg:x3; val_offset:102960*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102960*0 + 3*528*FLEN/8, x4, x1, x2)

inst_34321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffff0000; valaddr_reg:x3; val_offset:102963*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102963*0 + 3*529*FLEN/8, x4, x1, x2)

inst_34322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffff8000; valaddr_reg:x3; val_offset:102966*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102966*0 + 3*530*FLEN/8, x4, x1, x2)

inst_34323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffc000; valaddr_reg:x3; val_offset:102969*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102969*0 + 3*531*FLEN/8, x4, x1, x2)

inst_34324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffe000; valaddr_reg:x3; val_offset:102972*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102972*0 + 3*532*FLEN/8, x4, x1, x2)

inst_34325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffff000; valaddr_reg:x3; val_offset:102975*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102975*0 + 3*533*FLEN/8, x4, x1, x2)

inst_34326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffff800; valaddr_reg:x3; val_offset:102978*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102978*0 + 3*534*FLEN/8, x4, x1, x2)

inst_34327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffc00; valaddr_reg:x3; val_offset:102981*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102981*0 + 3*535*FLEN/8, x4, x1, x2)

inst_34328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffe00; valaddr_reg:x3; val_offset:102984*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102984*0 + 3*536*FLEN/8, x4, x1, x2)

inst_34329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffff00; valaddr_reg:x3; val_offset:102987*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102987*0 + 3*537*FLEN/8, x4, x1, x2)

inst_34330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffff80; valaddr_reg:x3; val_offset:102990*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102990*0 + 3*538*FLEN/8, x4, x1, x2)

inst_34331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffffc0; valaddr_reg:x3; val_offset:102993*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102993*0 + 3*539*FLEN/8, x4, x1, x2)

inst_34332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffffe0; valaddr_reg:x3; val_offset:102996*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102996*0 + 3*540*FLEN/8, x4, x1, x2)

inst_34333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffff0; valaddr_reg:x3; val_offset:102999*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 102999*0 + 3*541*FLEN/8, x4, x1, x2)

inst_34334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffff8; valaddr_reg:x3; val_offset:103002*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103002*0 + 3*542*FLEN/8, x4, x1, x2)

inst_34335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffffc; valaddr_reg:x3; val_offset:103005*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103005*0 + 3*543*FLEN/8, x4, x1, x2)

inst_34336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29ffffffffffffe; valaddr_reg:x3; val_offset:103008*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103008*0 + 3*544*FLEN/8, x4, x1, x2)

inst_34337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5aa7b4d61f217 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x029 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95aa7b4d61f217; op2val:0x0;
op3val:0x29fffffffffffff; valaddr_reg:x3; val_offset:103011*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103011*0 + 3*545*FLEN/8, x4, x1, x2)

inst_34338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:103014*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103014*0 + 3*546*FLEN/8, x4, x1, x2)

inst_34339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:103017*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103017*0 + 3*547*FLEN/8, x4, x1, x2)

inst_34340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:103020*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103020*0 + 3*548*FLEN/8, x4, x1, x2)

inst_34341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:103023*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103023*0 + 3*549*FLEN/8, x4, x1, x2)

inst_34342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:103026*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103026*0 + 3*550*FLEN/8, x4, x1, x2)

inst_34343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:103029*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103029*0 + 3*551*FLEN/8, x4, x1, x2)

inst_34344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:103032*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103032*0 + 3*552*FLEN/8, x4, x1, x2)

inst_34345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:103035*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103035*0 + 3*553*FLEN/8, x4, x1, x2)

inst_34346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:103038*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103038*0 + 3*554*FLEN/8, x4, x1, x2)

inst_34347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:103041*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103041*0 + 3*555*FLEN/8, x4, x1, x2)

inst_34348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:103044*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103044*0 + 3*556*FLEN/8, x4, x1, x2)

inst_34349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:103047*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103047*0 + 3*557*FLEN/8, x4, x1, x2)

inst_34350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:103050*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103050*0 + 3*558*FLEN/8, x4, x1, x2)

inst_34351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:103053*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103053*0 + 3*559*FLEN/8, x4, x1, x2)

inst_34352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:103056*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103056*0 + 3*560*FLEN/8, x4, x1, x2)

inst_34353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:103059*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103059*0 + 3*561*FLEN/8, x4, x1, x2)

inst_34354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:103062*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103062*0 + 3*562*FLEN/8, x4, x1, x2)

inst_34355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:103065*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103065*0 + 3*563*FLEN/8, x4, x1, x2)

inst_34356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:103068*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103068*0 + 3*564*FLEN/8, x4, x1, x2)

inst_34357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:103071*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103071*0 + 3*565*FLEN/8, x4, x1, x2)

inst_34358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:103074*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103074*0 + 3*566*FLEN/8, x4, x1, x2)

inst_34359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:103077*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103077*0 + 3*567*FLEN/8, x4, x1, x2)

inst_34360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000000000; valaddr_reg:x3; val_offset:103080*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103080*0 + 3*568*FLEN/8, x4, x1, x2)

inst_34361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000000001; valaddr_reg:x3; val_offset:103083*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103083*0 + 3*569*FLEN/8, x4, x1, x2)

inst_34362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000000003; valaddr_reg:x3; val_offset:103086*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103086*0 + 3*570*FLEN/8, x4, x1, x2)

inst_34363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000000007; valaddr_reg:x3; val_offset:103089*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103089*0 + 3*571*FLEN/8, x4, x1, x2)

inst_34364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000000000f; valaddr_reg:x3; val_offset:103092*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103092*0 + 3*572*FLEN/8, x4, x1, x2)

inst_34365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000000001f; valaddr_reg:x3; val_offset:103095*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103095*0 + 3*573*FLEN/8, x4, x1, x2)

inst_34366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000000003f; valaddr_reg:x3; val_offset:103098*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103098*0 + 3*574*FLEN/8, x4, x1, x2)

inst_34367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000000007f; valaddr_reg:x3; val_offset:103101*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103101*0 + 3*575*FLEN/8, x4, x1, x2)

inst_34368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000000000ff; valaddr_reg:x3; val_offset:103104*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103104*0 + 3*576*FLEN/8, x4, x1, x2)

inst_34369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000000001ff; valaddr_reg:x3; val_offset:103107*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103107*0 + 3*577*FLEN/8, x4, x1, x2)

inst_34370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000000003ff; valaddr_reg:x3; val_offset:103110*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103110*0 + 3*578*FLEN/8, x4, x1, x2)

inst_34371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000000007ff; valaddr_reg:x3; val_offset:103113*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103113*0 + 3*579*FLEN/8, x4, x1, x2)

inst_34372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000000fff; valaddr_reg:x3; val_offset:103116*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103116*0 + 3*580*FLEN/8, x4, x1, x2)

inst_34373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000001fff; valaddr_reg:x3; val_offset:103119*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103119*0 + 3*581*FLEN/8, x4, x1, x2)

inst_34374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000003fff; valaddr_reg:x3; val_offset:103122*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103122*0 + 3*582*FLEN/8, x4, x1, x2)

inst_34375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000007fff; valaddr_reg:x3; val_offset:103125*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103125*0 + 3*583*FLEN/8, x4, x1, x2)

inst_34376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000000ffff; valaddr_reg:x3; val_offset:103128*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103128*0 + 3*584*FLEN/8, x4, x1, x2)

inst_34377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000001ffff; valaddr_reg:x3; val_offset:103131*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103131*0 + 3*585*FLEN/8, x4, x1, x2)

inst_34378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000003ffff; valaddr_reg:x3; val_offset:103134*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103134*0 + 3*586*FLEN/8, x4, x1, x2)

inst_34379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000007ffff; valaddr_reg:x3; val_offset:103137*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103137*0 + 3*587*FLEN/8, x4, x1, x2)

inst_34380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000000fffff; valaddr_reg:x3; val_offset:103140*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103140*0 + 3*588*FLEN/8, x4, x1, x2)

inst_34381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000001fffff; valaddr_reg:x3; val_offset:103143*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103143*0 + 3*589*FLEN/8, x4, x1, x2)

inst_34382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000003fffff; valaddr_reg:x3; val_offset:103146*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103146*0 + 3*590*FLEN/8, x4, x1, x2)

inst_34383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000007fffff; valaddr_reg:x3; val_offset:103149*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103149*0 + 3*591*FLEN/8, x4, x1, x2)

inst_34384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000000ffffff; valaddr_reg:x3; val_offset:103152*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103152*0 + 3*592*FLEN/8, x4, x1, x2)

inst_34385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000001ffffff; valaddr_reg:x3; val_offset:103155*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103155*0 + 3*593*FLEN/8, x4, x1, x2)

inst_34386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000003ffffff; valaddr_reg:x3; val_offset:103158*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103158*0 + 3*594*FLEN/8, x4, x1, x2)

inst_34387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000007ffffff; valaddr_reg:x3; val_offset:103161*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103161*0 + 3*595*FLEN/8, x4, x1, x2)

inst_34388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000000fffffff; valaddr_reg:x3; val_offset:103164*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103164*0 + 3*596*FLEN/8, x4, x1, x2)

inst_34389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000001fffffff; valaddr_reg:x3; val_offset:103167*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103167*0 + 3*597*FLEN/8, x4, x1, x2)

inst_34390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000003fffffff; valaddr_reg:x3; val_offset:103170*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103170*0 + 3*598*FLEN/8, x4, x1, x2)

inst_34391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000007fffffff; valaddr_reg:x3; val_offset:103173*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103173*0 + 3*599*FLEN/8, x4, x1, x2)

inst_34392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00000ffffffff; valaddr_reg:x3; val_offset:103176*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103176*0 + 3*600*FLEN/8, x4, x1, x2)

inst_34393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00001ffffffff; valaddr_reg:x3; val_offset:103179*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103179*0 + 3*601*FLEN/8, x4, x1, x2)

inst_34394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00003ffffffff; valaddr_reg:x3; val_offset:103182*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103182*0 + 3*602*FLEN/8, x4, x1, x2)

inst_34395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00007ffffffff; valaddr_reg:x3; val_offset:103185*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103185*0 + 3*603*FLEN/8, x4, x1, x2)

inst_34396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0000fffffffff; valaddr_reg:x3; val_offset:103188*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103188*0 + 3*604*FLEN/8, x4, x1, x2)

inst_34397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0001fffffffff; valaddr_reg:x3; val_offset:103191*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103191*0 + 3*605*FLEN/8, x4, x1, x2)

inst_34398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0003fffffffff; valaddr_reg:x3; val_offset:103194*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103194*0 + 3*606*FLEN/8, x4, x1, x2)

inst_34399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0007fffffffff; valaddr_reg:x3; val_offset:103197*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103197*0 + 3*607*FLEN/8, x4, x1, x2)

inst_34400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb000ffffffffff; valaddr_reg:x3; val_offset:103200*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103200*0 + 3*608*FLEN/8, x4, x1, x2)

inst_34401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb001ffffffffff; valaddr_reg:x3; val_offset:103203*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103203*0 + 3*609*FLEN/8, x4, x1, x2)

inst_34402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb003ffffffffff; valaddr_reg:x3; val_offset:103206*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103206*0 + 3*610*FLEN/8, x4, x1, x2)

inst_34403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb007ffffffffff; valaddr_reg:x3; val_offset:103209*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103209*0 + 3*611*FLEN/8, x4, x1, x2)

inst_34404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb00fffffffffff; valaddr_reg:x3; val_offset:103212*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103212*0 + 3*612*FLEN/8, x4, x1, x2)

inst_34405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb01fffffffffff; valaddr_reg:x3; val_offset:103215*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103215*0 + 3*613*FLEN/8, x4, x1, x2)

inst_34406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb03fffffffffff; valaddr_reg:x3; val_offset:103218*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103218*0 + 3*614*FLEN/8, x4, x1, x2)

inst_34407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb07fffffffffff; valaddr_reg:x3; val_offset:103221*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103221*0 + 3*615*FLEN/8, x4, x1, x2)

inst_34408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb0ffffffffffff; valaddr_reg:x3; val_offset:103224*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103224*0 + 3*616*FLEN/8, x4, x1, x2)

inst_34409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb1ffffffffffff; valaddr_reg:x3; val_offset:103227*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103227*0 + 3*617*FLEN/8, x4, x1, x2)

inst_34410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb3ffffffffffff; valaddr_reg:x3; val_offset:103230*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103230*0 + 3*618*FLEN/8, x4, x1, x2)

inst_34411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb7ffffffffffff; valaddr_reg:x3; val_offset:103233*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103233*0 + 3*619*FLEN/8, x4, x1, x2)

inst_34412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xb8000000000000; valaddr_reg:x3; val_offset:103236*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103236*0 + 3*620*FLEN/8, x4, x1, x2)

inst_34413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbc000000000000; valaddr_reg:x3; val_offset:103239*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103239*0 + 3*621*FLEN/8, x4, x1, x2)

inst_34414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbe000000000000; valaddr_reg:x3; val_offset:103242*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103242*0 + 3*622*FLEN/8, x4, x1, x2)

inst_34415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbf000000000000; valaddr_reg:x3; val_offset:103245*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103245*0 + 3*623*FLEN/8, x4, x1, x2)

inst_34416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbf800000000000; valaddr_reg:x3; val_offset:103248*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103248*0 + 3*624*FLEN/8, x4, x1, x2)

inst_34417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfc00000000000; valaddr_reg:x3; val_offset:103251*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103251*0 + 3*625*FLEN/8, x4, x1, x2)

inst_34418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfe00000000000; valaddr_reg:x3; val_offset:103254*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103254*0 + 3*626*FLEN/8, x4, x1, x2)

inst_34419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbff00000000000; valaddr_reg:x3; val_offset:103257*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103257*0 + 3*627*FLEN/8, x4, x1, x2)

inst_34420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbff80000000000; valaddr_reg:x3; val_offset:103260*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103260*0 + 3*628*FLEN/8, x4, x1, x2)

inst_34421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffc0000000000; valaddr_reg:x3; val_offset:103263*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103263*0 + 3*629*FLEN/8, x4, x1, x2)

inst_34422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffe0000000000; valaddr_reg:x3; val_offset:103266*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103266*0 + 3*630*FLEN/8, x4, x1, x2)

inst_34423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfff0000000000; valaddr_reg:x3; val_offset:103269*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103269*0 + 3*631*FLEN/8, x4, x1, x2)

inst_34424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfff8000000000; valaddr_reg:x3; val_offset:103272*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103272*0 + 3*632*FLEN/8, x4, x1, x2)

inst_34425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffc000000000; valaddr_reg:x3; val_offset:103275*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103275*0 + 3*633*FLEN/8, x4, x1, x2)

inst_34426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffe000000000; valaddr_reg:x3; val_offset:103278*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103278*0 + 3*634*FLEN/8, x4, x1, x2)

inst_34427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffff000000000; valaddr_reg:x3; val_offset:103281*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103281*0 + 3*635*FLEN/8, x4, x1, x2)

inst_34428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffff800000000; valaddr_reg:x3; val_offset:103284*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103284*0 + 3*636*FLEN/8, x4, x1, x2)

inst_34429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffc00000000; valaddr_reg:x3; val_offset:103287*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103287*0 + 3*637*FLEN/8, x4, x1, x2)

inst_34430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffe00000000; valaddr_reg:x3; val_offset:103290*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103290*0 + 3*638*FLEN/8, x4, x1, x2)

inst_34431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffff00000000; valaddr_reg:x3; val_offset:103293*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103293*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_34432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffff80000000; valaddr_reg:x3; val_offset:103296*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103296*0 + 3*640*FLEN/8, x4, x1, x2)

inst_34433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffc0000000; valaddr_reg:x3; val_offset:103299*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103299*0 + 3*641*FLEN/8, x4, x1, x2)

inst_34434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffe0000000; valaddr_reg:x3; val_offset:103302*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103302*0 + 3*642*FLEN/8, x4, x1, x2)

inst_34435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffff0000000; valaddr_reg:x3; val_offset:103305*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103305*0 + 3*643*FLEN/8, x4, x1, x2)

inst_34436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffff8000000; valaddr_reg:x3; val_offset:103308*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103308*0 + 3*644*FLEN/8, x4, x1, x2)

inst_34437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffc000000; valaddr_reg:x3; val_offset:103311*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103311*0 + 3*645*FLEN/8, x4, x1, x2)

inst_34438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffe000000; valaddr_reg:x3; val_offset:103314*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103314*0 + 3*646*FLEN/8, x4, x1, x2)

inst_34439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffff000000; valaddr_reg:x3; val_offset:103317*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103317*0 + 3*647*FLEN/8, x4, x1, x2)

inst_34440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffff800000; valaddr_reg:x3; val_offset:103320*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103320*0 + 3*648*FLEN/8, x4, x1, x2)

inst_34441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffc00000; valaddr_reg:x3; val_offset:103323*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103323*0 + 3*649*FLEN/8, x4, x1, x2)

inst_34442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffe00000; valaddr_reg:x3; val_offset:103326*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103326*0 + 3*650*FLEN/8, x4, x1, x2)

inst_34443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffff00000; valaddr_reg:x3; val_offset:103329*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103329*0 + 3*651*FLEN/8, x4, x1, x2)

inst_34444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffff80000; valaddr_reg:x3; val_offset:103332*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103332*0 + 3*652*FLEN/8, x4, x1, x2)

inst_34445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffc0000; valaddr_reg:x3; val_offset:103335*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103335*0 + 3*653*FLEN/8, x4, x1, x2)

inst_34446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffe0000; valaddr_reg:x3; val_offset:103338*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103338*0 + 3*654*FLEN/8, x4, x1, x2)

inst_34447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffff0000; valaddr_reg:x3; val_offset:103341*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103341*0 + 3*655*FLEN/8, x4, x1, x2)

inst_34448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffff8000; valaddr_reg:x3; val_offset:103344*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103344*0 + 3*656*FLEN/8, x4, x1, x2)

inst_34449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffc000; valaddr_reg:x3; val_offset:103347*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103347*0 + 3*657*FLEN/8, x4, x1, x2)

inst_34450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffe000; valaddr_reg:x3; val_offset:103350*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103350*0 + 3*658*FLEN/8, x4, x1, x2)

inst_34451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffff000; valaddr_reg:x3; val_offset:103353*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103353*0 + 3*659*FLEN/8, x4, x1, x2)

inst_34452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffff800; valaddr_reg:x3; val_offset:103356*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103356*0 + 3*660*FLEN/8, x4, x1, x2)

inst_34453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffc00; valaddr_reg:x3; val_offset:103359*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103359*0 + 3*661*FLEN/8, x4, x1, x2)

inst_34454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffe00; valaddr_reg:x3; val_offset:103362*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103362*0 + 3*662*FLEN/8, x4, x1, x2)

inst_34455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffff00; valaddr_reg:x3; val_offset:103365*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103365*0 + 3*663*FLEN/8, x4, x1, x2)

inst_34456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffff80; valaddr_reg:x3; val_offset:103368*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103368*0 + 3*664*FLEN/8, x4, x1, x2)

inst_34457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffffc0; valaddr_reg:x3; val_offset:103371*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103371*0 + 3*665*FLEN/8, x4, x1, x2)

inst_34458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffffe0; valaddr_reg:x3; val_offset:103374*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103374*0 + 3*666*FLEN/8, x4, x1, x2)

inst_34459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffff0; valaddr_reg:x3; val_offset:103377*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103377*0 + 3*667*FLEN/8, x4, x1, x2)

inst_34460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffff8; valaddr_reg:x3; val_offset:103380*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103380*0 + 3*668*FLEN/8, x4, x1, x2)

inst_34461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffffc; valaddr_reg:x3; val_offset:103383*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103383*0 + 3*669*FLEN/8, x4, x1, x2)

inst_34462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbffffffffffffe; valaddr_reg:x3; val_offset:103386*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103386*0 + 3*670*FLEN/8, x4, x1, x2)

inst_34463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5bc9bfa95bea1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95bc9bfa95bea1; op2val:0x0;
op3val:0xbfffffffffffff; valaddr_reg:x3; val_offset:103389*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103389*0 + 3*671*FLEN/8, x4, x1, x2)

inst_34464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000000000; valaddr_reg:x3; val_offset:103392*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103392*0 + 3*672*FLEN/8, x4, x1, x2)

inst_34465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000000001; valaddr_reg:x3; val_offset:103395*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103395*0 + 3*673*FLEN/8, x4, x1, x2)

inst_34466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000000003; valaddr_reg:x3; val_offset:103398*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103398*0 + 3*674*FLEN/8, x4, x1, x2)

inst_34467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000000007; valaddr_reg:x3; val_offset:103401*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103401*0 + 3*675*FLEN/8, x4, x1, x2)

inst_34468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000000000f; valaddr_reg:x3; val_offset:103404*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103404*0 + 3*676*FLEN/8, x4, x1, x2)

inst_34469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000000001f; valaddr_reg:x3; val_offset:103407*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103407*0 + 3*677*FLEN/8, x4, x1, x2)

inst_34470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000000003f; valaddr_reg:x3; val_offset:103410*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103410*0 + 3*678*FLEN/8, x4, x1, x2)

inst_34471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000000007f; valaddr_reg:x3; val_offset:103413*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103413*0 + 3*679*FLEN/8, x4, x1, x2)

inst_34472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000000000ff; valaddr_reg:x3; val_offset:103416*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103416*0 + 3*680*FLEN/8, x4, x1, x2)

inst_34473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000000001ff; valaddr_reg:x3; val_offset:103419*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103419*0 + 3*681*FLEN/8, x4, x1, x2)

inst_34474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000000003ff; valaddr_reg:x3; val_offset:103422*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103422*0 + 3*682*FLEN/8, x4, x1, x2)

inst_34475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000000007ff; valaddr_reg:x3; val_offset:103425*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103425*0 + 3*683*FLEN/8, x4, x1, x2)

inst_34476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000000fff; valaddr_reg:x3; val_offset:103428*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103428*0 + 3*684*FLEN/8, x4, x1, x2)

inst_34477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000001fff; valaddr_reg:x3; val_offset:103431*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103431*0 + 3*685*FLEN/8, x4, x1, x2)

inst_34478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000003fff; valaddr_reg:x3; val_offset:103434*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103434*0 + 3*686*FLEN/8, x4, x1, x2)

inst_34479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000007fff; valaddr_reg:x3; val_offset:103437*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103437*0 + 3*687*FLEN/8, x4, x1, x2)

inst_34480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000000ffff; valaddr_reg:x3; val_offset:103440*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103440*0 + 3*688*FLEN/8, x4, x1, x2)

inst_34481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000001ffff; valaddr_reg:x3; val_offset:103443*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103443*0 + 3*689*FLEN/8, x4, x1, x2)

inst_34482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000003ffff; valaddr_reg:x3; val_offset:103446*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103446*0 + 3*690*FLEN/8, x4, x1, x2)

inst_34483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000007ffff; valaddr_reg:x3; val_offset:103449*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103449*0 + 3*691*FLEN/8, x4, x1, x2)

inst_34484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000000fffff; valaddr_reg:x3; val_offset:103452*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103452*0 + 3*692*FLEN/8, x4, x1, x2)

inst_34485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000001fffff; valaddr_reg:x3; val_offset:103455*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103455*0 + 3*693*FLEN/8, x4, x1, x2)

inst_34486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000003fffff; valaddr_reg:x3; val_offset:103458*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103458*0 + 3*694*FLEN/8, x4, x1, x2)

inst_34487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000007fffff; valaddr_reg:x3; val_offset:103461*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103461*0 + 3*695*FLEN/8, x4, x1, x2)

inst_34488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000000ffffff; valaddr_reg:x3; val_offset:103464*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103464*0 + 3*696*FLEN/8, x4, x1, x2)

inst_34489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000001ffffff; valaddr_reg:x3; val_offset:103467*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103467*0 + 3*697*FLEN/8, x4, x1, x2)

inst_34490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000003ffffff; valaddr_reg:x3; val_offset:103470*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103470*0 + 3*698*FLEN/8, x4, x1, x2)

inst_34491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000007ffffff; valaddr_reg:x3; val_offset:103473*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103473*0 + 3*699*FLEN/8, x4, x1, x2)

inst_34492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000000fffffff; valaddr_reg:x3; val_offset:103476*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103476*0 + 3*700*FLEN/8, x4, x1, x2)

inst_34493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000001fffffff; valaddr_reg:x3; val_offset:103479*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103479*0 + 3*701*FLEN/8, x4, x1, x2)

inst_34494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000003fffffff; valaddr_reg:x3; val_offset:103482*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103482*0 + 3*702*FLEN/8, x4, x1, x2)

inst_34495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000007fffffff; valaddr_reg:x3; val_offset:103485*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103485*0 + 3*703*FLEN/8, x4, x1, x2)

inst_34496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00000ffffffff; valaddr_reg:x3; val_offset:103488*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103488*0 + 3*704*FLEN/8, x4, x1, x2)

inst_34497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00001ffffffff; valaddr_reg:x3; val_offset:103491*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103491*0 + 3*705*FLEN/8, x4, x1, x2)

inst_34498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00003ffffffff; valaddr_reg:x3; val_offset:103494*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103494*0 + 3*706*FLEN/8, x4, x1, x2)

inst_34499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00007ffffffff; valaddr_reg:x3; val_offset:103497*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103497*0 + 3*707*FLEN/8, x4, x1, x2)

inst_34500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0000fffffffff; valaddr_reg:x3; val_offset:103500*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103500*0 + 3*708*FLEN/8, x4, x1, x2)

inst_34501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0001fffffffff; valaddr_reg:x3; val_offset:103503*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103503*0 + 3*709*FLEN/8, x4, x1, x2)

inst_34502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0003fffffffff; valaddr_reg:x3; val_offset:103506*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103506*0 + 3*710*FLEN/8, x4, x1, x2)

inst_34503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0007fffffffff; valaddr_reg:x3; val_offset:103509*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103509*0 + 3*711*FLEN/8, x4, x1, x2)

inst_34504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e000ffffffffff; valaddr_reg:x3; val_offset:103512*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103512*0 + 3*712*FLEN/8, x4, x1, x2)

inst_34505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e001ffffffffff; valaddr_reg:x3; val_offset:103515*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103515*0 + 3*713*FLEN/8, x4, x1, x2)

inst_34506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e003ffffffffff; valaddr_reg:x3; val_offset:103518*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103518*0 + 3*714*FLEN/8, x4, x1, x2)

inst_34507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e007ffffffffff; valaddr_reg:x3; val_offset:103521*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103521*0 + 3*715*FLEN/8, x4, x1, x2)

inst_34508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e00fffffffffff; valaddr_reg:x3; val_offset:103524*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103524*0 + 3*716*FLEN/8, x4, x1, x2)

inst_34509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e01fffffffffff; valaddr_reg:x3; val_offset:103527*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103527*0 + 3*717*FLEN/8, x4, x1, x2)

inst_34510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e03fffffffffff; valaddr_reg:x3; val_offset:103530*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103530*0 + 3*718*FLEN/8, x4, x1, x2)

inst_34511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e07fffffffffff; valaddr_reg:x3; val_offset:103533*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103533*0 + 3*719*FLEN/8, x4, x1, x2)

inst_34512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e0ffffffffffff; valaddr_reg:x3; val_offset:103536*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103536*0 + 3*720*FLEN/8, x4, x1, x2)

inst_34513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e1ffffffffffff; valaddr_reg:x3; val_offset:103539*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103539*0 + 3*721*FLEN/8, x4, x1, x2)

inst_34514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e3ffffffffffff; valaddr_reg:x3; val_offset:103542*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103542*0 + 3*722*FLEN/8, x4, x1, x2)

inst_34515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e7ffffffffffff; valaddr_reg:x3; val_offset:103545*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103545*0 + 3*723*FLEN/8, x4, x1, x2)

inst_34516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39e8000000000000; valaddr_reg:x3; val_offset:103548*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103548*0 + 3*724*FLEN/8, x4, x1, x2)

inst_34517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39ec000000000000; valaddr_reg:x3; val_offset:103551*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103551*0 + 3*725*FLEN/8, x4, x1, x2)

inst_34518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39ee000000000000; valaddr_reg:x3; val_offset:103554*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103554*0 + 3*726*FLEN/8, x4, x1, x2)

inst_34519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39ef000000000000; valaddr_reg:x3; val_offset:103557*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103557*0 + 3*727*FLEN/8, x4, x1, x2)

inst_34520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39ef800000000000; valaddr_reg:x3; val_offset:103560*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103560*0 + 3*728*FLEN/8, x4, x1, x2)

inst_34521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efc00000000000; valaddr_reg:x3; val_offset:103563*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103563*0 + 3*729*FLEN/8, x4, x1, x2)

inst_34522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efe00000000000; valaddr_reg:x3; val_offset:103566*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103566*0 + 3*730*FLEN/8, x4, x1, x2)

inst_34523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39eff00000000000; valaddr_reg:x3; val_offset:103569*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103569*0 + 3*731*FLEN/8, x4, x1, x2)

inst_34524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39eff80000000000; valaddr_reg:x3; val_offset:103572*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103572*0 + 3*732*FLEN/8, x4, x1, x2)

inst_34525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effc0000000000; valaddr_reg:x3; val_offset:103575*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103575*0 + 3*733*FLEN/8, x4, x1, x2)

inst_34526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effe0000000000; valaddr_reg:x3; val_offset:103578*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103578*0 + 3*734*FLEN/8, x4, x1, x2)

inst_34527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efff0000000000; valaddr_reg:x3; val_offset:103581*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103581*0 + 3*735*FLEN/8, x4, x1, x2)

inst_34528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efff8000000000; valaddr_reg:x3; val_offset:103584*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103584*0 + 3*736*FLEN/8, x4, x1, x2)

inst_34529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffc000000000; valaddr_reg:x3; val_offset:103587*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103587*0 + 3*737*FLEN/8, x4, x1, x2)

inst_34530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffe000000000; valaddr_reg:x3; val_offset:103590*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103590*0 + 3*738*FLEN/8, x4, x1, x2)

inst_34531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effff000000000; valaddr_reg:x3; val_offset:103593*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103593*0 + 3*739*FLEN/8, x4, x1, x2)

inst_34532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effff800000000; valaddr_reg:x3; val_offset:103596*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103596*0 + 3*740*FLEN/8, x4, x1, x2)

inst_34533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffc00000000; valaddr_reg:x3; val_offset:103599*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103599*0 + 3*741*FLEN/8, x4, x1, x2)

inst_34534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffe00000000; valaddr_reg:x3; val_offset:103602*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103602*0 + 3*742*FLEN/8, x4, x1, x2)

inst_34535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffff00000000; valaddr_reg:x3; val_offset:103605*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103605*0 + 3*743*FLEN/8, x4, x1, x2)

inst_34536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffff80000000; valaddr_reg:x3; val_offset:103608*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103608*0 + 3*744*FLEN/8, x4, x1, x2)

inst_34537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffc0000000; valaddr_reg:x3; val_offset:103611*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103611*0 + 3*745*FLEN/8, x4, x1, x2)

inst_34538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffe0000000; valaddr_reg:x3; val_offset:103614*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103614*0 + 3*746*FLEN/8, x4, x1, x2)

inst_34539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffff0000000; valaddr_reg:x3; val_offset:103617*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103617*0 + 3*747*FLEN/8, x4, x1, x2)

inst_34540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffff8000000; valaddr_reg:x3; val_offset:103620*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103620*0 + 3*748*FLEN/8, x4, x1, x2)

inst_34541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffc000000; valaddr_reg:x3; val_offset:103623*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103623*0 + 3*749*FLEN/8, x4, x1, x2)

inst_34542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffe000000; valaddr_reg:x3; val_offset:103626*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103626*0 + 3*750*FLEN/8, x4, x1, x2)

inst_34543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffff000000; valaddr_reg:x3; val_offset:103629*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103629*0 + 3*751*FLEN/8, x4, x1, x2)

inst_34544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffff800000; valaddr_reg:x3; val_offset:103632*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103632*0 + 3*752*FLEN/8, x4, x1, x2)

inst_34545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffc00000; valaddr_reg:x3; val_offset:103635*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103635*0 + 3*753*FLEN/8, x4, x1, x2)

inst_34546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffe00000; valaddr_reg:x3; val_offset:103638*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103638*0 + 3*754*FLEN/8, x4, x1, x2)

inst_34547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffff00000; valaddr_reg:x3; val_offset:103641*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103641*0 + 3*755*FLEN/8, x4, x1, x2)

inst_34548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffff80000; valaddr_reg:x3; val_offset:103644*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103644*0 + 3*756*FLEN/8, x4, x1, x2)

inst_34549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffc0000; valaddr_reg:x3; val_offset:103647*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103647*0 + 3*757*FLEN/8, x4, x1, x2)

inst_34550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffe0000; valaddr_reg:x3; val_offset:103650*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103650*0 + 3*758*FLEN/8, x4, x1, x2)

inst_34551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffff0000; valaddr_reg:x3; val_offset:103653*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103653*0 + 3*759*FLEN/8, x4, x1, x2)

inst_34552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffff8000; valaddr_reg:x3; val_offset:103656*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103656*0 + 3*760*FLEN/8, x4, x1, x2)

inst_34553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffffc000; valaddr_reg:x3; val_offset:103659*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103659*0 + 3*761*FLEN/8, x4, x1, x2)

inst_34554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffffe000; valaddr_reg:x3; val_offset:103662*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103662*0 + 3*762*FLEN/8, x4, x1, x2)

inst_34555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffff000; valaddr_reg:x3; val_offset:103665*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103665*0 + 3*763*FLEN/8, x4, x1, x2)

inst_34556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffff800; valaddr_reg:x3; val_offset:103668*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103668*0 + 3*764*FLEN/8, x4, x1, x2)

inst_34557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffffc00; valaddr_reg:x3; val_offset:103671*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103671*0 + 3*765*FLEN/8, x4, x1, x2)

inst_34558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39effffffffffe00; valaddr_reg:x3; val_offset:103674*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103674*0 + 3*766*FLEN/8, x4, x1, x2)

inst_34559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x5c45b5675331d and fs2 == 0 and fe2 == 0x204 and fm2 == 0x785964f1cb2bc and fs3 == 0 and fe3 == 0x39e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f95c45b5675331d; op2val:0x204785964f1cb2bc;
op3val:0x39efffffffffff00; valaddr_reg:x3; val_offset:103677*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 103677*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462060618082156544,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462061717593784320,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062267349598208,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062542227505152,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062679666458624,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062748385935360,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062782745673728,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062799925542912,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062808515477504,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062812810444800,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062814957928448,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816031670272,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816568541184,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816836976640,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062816971194368,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817038303232,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817071857664,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817088634880,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817097023488,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817101217792,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817103314944,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104363520,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817104887808,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105149952,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105281024,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105346560,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105379328,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105395712,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105403904,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105408000,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105410048,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411072,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411584,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411840,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105411968,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412032,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412064,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412080,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412088,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412092,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412094,64,FLEN)
NAN_BOXED(6887520318983424295,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9462062817105412095,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186944,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186945,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186947,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186951,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186959,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783186975,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187007,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187071,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187199,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187455,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783187967,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783188991,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783191039,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783195135,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783203327,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783219711,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783252479,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783318015,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783449087,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394783711231,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394784235519,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394785284095,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394787381247,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394791575551,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394799964159,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394816741375,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394850295807,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050394917404671,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395051622399,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395320057855,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050395856928767,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050396930670591,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050399078154239,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050403373121535,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050411963056127,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050429142925311,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050463502663679,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050532222140415,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050669661093887,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63050944539000831,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63051494294814719,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63052593806442495,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63054792829698047,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63059190876209151,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63067986969231359,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63085579155275775,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63120763527364607,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63191132271542271,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63331869759897599,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63613344736608255,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(64176294690029567,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872191,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65302194596872192,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66428094503714816,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(66991044457136128,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67272519433846784,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67413256922202112,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67483625666379776,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67518810038468608,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67536402224513024,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67545198317535232,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67549596364046336,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67551795387301888,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67552894898929664,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553444654743552,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553719532650496,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553856971603968,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553925691080704,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553960050819072,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553977230688256,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553985820622848,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553990115590144,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553992263073792,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993336815616,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553993873686528,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994142121984,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994276339712,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994343448576,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994377003008,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994393780224,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994402168832,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994406363136,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994408460288,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994409508864,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410033152,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410295296,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410426368,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410491904,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410524672,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410541056,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410549248,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410553344,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410555392,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556416,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410556928,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557184,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557312,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557376,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557408,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557424,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557432,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557436,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557438,64,FLEN)
NAN_BOXED(6887564634519116041,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557439,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413312,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413313,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413315,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413319,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413327,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413343,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413375,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413439,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413567,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486413823,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486414335,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486415359,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486417407,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486421503,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486429695,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486446079,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486478847,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486544383,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486675455,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182486937599,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182487461887,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182488510463,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182490607615,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182494801919,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182503190527,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182519967743,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182553522175,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182620631039,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669182754848767,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183023284223,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669183560155135,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669184633896959,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669186781380607,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669191076347903,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669199666282495,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669216846151679,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669251205890047,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669319925366783,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669457364320255,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211669732242227199,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211670281998041087,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211671381509668863,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211673580532924415,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211677978579435519,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211686774672457727,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211704366858502143,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211739551230590975,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211809919974768639,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(211950657463123967,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212232132439834623,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(212795082393255935,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098559,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(213920982300098560,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215046882206941184,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215609832160362496,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(215891307137073152,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216032044625428480,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216102413369606144,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216137597741694976,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216155189927739392,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216163986020761600,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216168384067272704,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216170583090528256,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216171682602156032,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172232357969920,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172507235876864,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172644674830336,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172713394307072,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172747754045440,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172764933914624,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172773523849216,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172777818816512,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172779966300160,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781040041984,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781576912896,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781845348352,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172781979566080,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782046674944,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782080229376,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782097006592,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782105395200,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782109589504,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782111686656,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782112735232,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113259520,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113521664,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113652736,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113718272,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113751040,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113767424,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113775616,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113779712,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113781760,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113782784,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783296,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783552,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783680,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783744,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783776,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783792,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783800,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783804,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783806,64,FLEN)
NAN_BOXED(6887566849739109131,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(216172782113783807,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632896,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632897,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632899,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632903,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632911,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632927,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632959,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633023,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633151,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633407,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311633919,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311634943,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311636991,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311641087,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311649279,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311665663,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311698431,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311763967,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311895039,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312157183,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590312681471,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590313730047,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590315827199,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590320021503,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590328410111,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590345187327,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590378741759,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590445850623,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590580068351,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590848503807,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093591385374719,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093592459116543,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093594606600191,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093598901567487,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093607491502079,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093624671371263,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093659031109631,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093727750586367,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093865189539839,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094140067446783,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117094689823260671,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117095789334888447,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117097988358143999,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117102386404655103,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117111182497677311,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117128774683721727,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117163959055810559,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117234327799988223,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117375065288343551,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117656540265054207,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(118219490218475519,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318143,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(119345390125318144,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(120471290032160768,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121034239985582080,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121315714962292736,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121456452450648064,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121526821194825728,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121562005566914560,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121579597752958976,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121588393845981184,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121592791892492288,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121594990915747840,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596090427375616,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596640183189504,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121596915061096448,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597052500049920,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597121219526656,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597155579265024,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597172759134208,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597181349068800,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597185644036096,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597187791519744,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597188865261568,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189402132480,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189670567936,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189804785664,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189871894528,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189905448960,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189922226176,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189930614784,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189934809088,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189936906240,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189937954816,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938479104,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938741248,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938872320,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938937856,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938970624,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938987008,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938995200,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189938999296,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939001344,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002368,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939002880,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003136,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003264,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003328,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003360,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003376,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003384,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003388,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003390,64,FLEN)
NAN_BOXED(6887597569880168591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(121597189939003391,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190336,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190337,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190339,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190343,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190351,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190367,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190399,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190463,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190591,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722190847,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722191359,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722192383,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722194431,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722198527,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722206719,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722223103,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722255871,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722321407,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722452479,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584722714623,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584723238911,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584724287487,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584726384639,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584730578943,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584738967551,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584755744767,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584789299199,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584856408063,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647584990625791,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585259061247,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647585795932159,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647586869673983,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647589017157631,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647593312124927,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647601902059519,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647619081928703,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647653441667071,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647722161143807,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184647859600097279,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648134478004223,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184648684233818111,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184649783745445887,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184651982768701439,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184656380815212543,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184665176908234751,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184682769094279167,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184717953466367999,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184788322210545663,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(184929059698900991,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185210534675611647,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(185773484629032959,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875583,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(186899384535875584,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188025284442718208,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188588234396139520,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(188869709372850176,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189010446861205504,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189080815605383168,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189115999977472000,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189133592163516416,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189142388256538624,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189146786303049728,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189148985326305280,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150084837933056,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150634593746944,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189150909471653888,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151046910607360,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151115630084096,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151149989822464,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151167169691648,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151175759626240,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151180054593536,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151182202077184,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183275819008,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151183812689920,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184081125376,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184215343104,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184282451968,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184316006400,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184332783616,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184341172224,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184345366528,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184347463680,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184348512256,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349036544,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349298688,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349429760,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349495296,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349528064,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349544448,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349552640,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349556736,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349558784,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349559808,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560320,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560576,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560704,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560768,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560800,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560816,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560824,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560828,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560830,64,FLEN)
NAN_BOXED(6887598651689005591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(189151184349560831,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075456,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075457,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075459,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075463,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075471,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075487,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075519,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075583,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075711,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901075967,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901076479,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901077503,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901079551,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901083647,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901091839,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901108223,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901140991,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901206527,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901337599,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595901599743,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595902124031,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595903172607,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595905269759,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595909464063,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595917852671,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595934629887,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539595968184319,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596035293183,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596169510911,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596437946367,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539596974817279,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539598048559103,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539600196042751,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539604491010047,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539613080944639,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539630260813823,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539664620552191,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539733340028927,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49539870778982399,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540145656889343,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49540695412703231,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49541794924331007,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49543993947586559,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49548391994097663,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49557188087119871,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49574780273164287,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49609964645253119,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49680333389430783,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(49821070877786111,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50102545854496767,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(50665495807918079,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760703,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(51791395714760704,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(52917295621603328,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53480245575024640,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53761720551735296,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53902458040090624,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(53972826784268288,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54008011156357120,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54025603342401536,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54034399435423744,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54038797481934848,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54040996505190400,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042096016818176,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042645772632064,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54042920650539008,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043058089492480,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043126808969216,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043161168707584,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043178348576768,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043186938511360,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043191233478656,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043193380962304,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194454704128,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043194991575040,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195260010496,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195394228224,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195461337088,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195494891520,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195511668736,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195520057344,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195524251648,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195526348800,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527397376,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195527921664,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528183808,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528314880,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528380416,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528413184,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528429568,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528437760,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528441856,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528443904,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528444928,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445440,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445696,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445824,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445888,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445920,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445936,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445944,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445948,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445950,64,FLEN)
NAN_BOXED(6887618583243112097,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(54043195528445951,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079296,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079297,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079299,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079303,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079311,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079327,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079359,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079423,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079551,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945079807,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945080319,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945081343,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945083391,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945087487,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945095679,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945112063,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945144831,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945210367,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945341439,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254945603583,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254946127871,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254947176447,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254949273599,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254953467903,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254961856511,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333254978633727,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333255012188159,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333255079297023,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333255213514751,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333255481950207,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333256018821119,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333257092562943,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333259240046591,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333263535013887,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333272124948479,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333289304817663,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333323664556031,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333392384032767,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333529822986239,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170333804700893183,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170334354456707071,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170335453968334847,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170337652991590399,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170342051038101503,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170350847131123711,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170368439317168127,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170403623689256959,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170473992433434623,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170614729921789951,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4170896204898500607,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4171459154851921919,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4172585054758764543,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4172585054758764544,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4173710954665607168,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174273904619028480,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174555379595739136,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174696117084094464,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174766485828272128,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174801670200360960,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174819262386405376,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174828058479427584,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174832456525938688,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174834655549194240,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174835755060822016,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836304816635904,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836579694542848,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836717133496320,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836785852973056,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836820212711424,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836837392580608,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836845982515200,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836850277482496,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836852424966144,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836853498707968,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854035578880,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854304014336,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854438232064,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854505340928,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854538895360,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854555672576,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854564061184,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854568255488,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854570352640,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854571401216,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854571925504,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572187648,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572318720,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572384256,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572417024,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572433408,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572441600,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572445696,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572447744,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572448768,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572449280,64,FLEN)
NAN_BOXED(6887627101704631069,64,FLEN)
NAN_BOXED(2325974613179019964,64,FLEN)
NAN_BOXED(4174836854572449536,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
