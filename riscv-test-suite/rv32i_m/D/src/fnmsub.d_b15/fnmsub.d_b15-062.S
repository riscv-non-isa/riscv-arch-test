
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_46848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dff80000000000; valaddr_reg:x3; val_offset:140544*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140544*0 + 3*0*FLEN/8, x4, x1, x2)

inst_46849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffc0000000000; valaddr_reg:x3; val_offset:140547*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140547*0 + 3*1*FLEN/8, x4, x1, x2)

inst_46850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffe0000000000; valaddr_reg:x3; val_offset:140550*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140550*0 + 3*2*FLEN/8, x4, x1, x2)

inst_46851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfff0000000000; valaddr_reg:x3; val_offset:140553*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140553*0 + 3*3*FLEN/8, x4, x1, x2)

inst_46852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfff8000000000; valaddr_reg:x3; val_offset:140556*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140556*0 + 3*4*FLEN/8, x4, x1, x2)

inst_46853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffc000000000; valaddr_reg:x3; val_offset:140559*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140559*0 + 3*5*FLEN/8, x4, x1, x2)

inst_46854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffe000000000; valaddr_reg:x3; val_offset:140562*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140562*0 + 3*6*FLEN/8, x4, x1, x2)

inst_46855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffff000000000; valaddr_reg:x3; val_offset:140565*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140565*0 + 3*7*FLEN/8, x4, x1, x2)

inst_46856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffff800000000; valaddr_reg:x3; val_offset:140568*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140568*0 + 3*8*FLEN/8, x4, x1, x2)

inst_46857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffc00000000; valaddr_reg:x3; val_offset:140571*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140571*0 + 3*9*FLEN/8, x4, x1, x2)

inst_46858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffe00000000; valaddr_reg:x3; val_offset:140574*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140574*0 + 3*10*FLEN/8, x4, x1, x2)

inst_46859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffff00000000; valaddr_reg:x3; val_offset:140577*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140577*0 + 3*11*FLEN/8, x4, x1, x2)

inst_46860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffff80000000; valaddr_reg:x3; val_offset:140580*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140580*0 + 3*12*FLEN/8, x4, x1, x2)

inst_46861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffc0000000; valaddr_reg:x3; val_offset:140583*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140583*0 + 3*13*FLEN/8, x4, x1, x2)

inst_46862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffe0000000; valaddr_reg:x3; val_offset:140586*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140586*0 + 3*14*FLEN/8, x4, x1, x2)

inst_46863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffff0000000; valaddr_reg:x3; val_offset:140589*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140589*0 + 3*15*FLEN/8, x4, x1, x2)

inst_46864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffff8000000; valaddr_reg:x3; val_offset:140592*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140592*0 + 3*16*FLEN/8, x4, x1, x2)

inst_46865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffc000000; valaddr_reg:x3; val_offset:140595*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140595*0 + 3*17*FLEN/8, x4, x1, x2)

inst_46866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffe000000; valaddr_reg:x3; val_offset:140598*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140598*0 + 3*18*FLEN/8, x4, x1, x2)

inst_46867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffff000000; valaddr_reg:x3; val_offset:140601*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140601*0 + 3*19*FLEN/8, x4, x1, x2)

inst_46868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffff800000; valaddr_reg:x3; val_offset:140604*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140604*0 + 3*20*FLEN/8, x4, x1, x2)

inst_46869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffc00000; valaddr_reg:x3; val_offset:140607*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140607*0 + 3*21*FLEN/8, x4, x1, x2)

inst_46870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffe00000; valaddr_reg:x3; val_offset:140610*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140610*0 + 3*22*FLEN/8, x4, x1, x2)

inst_46871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffff00000; valaddr_reg:x3; val_offset:140613*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140613*0 + 3*23*FLEN/8, x4, x1, x2)

inst_46872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffff80000; valaddr_reg:x3; val_offset:140616*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140616*0 + 3*24*FLEN/8, x4, x1, x2)

inst_46873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffc0000; valaddr_reg:x3; val_offset:140619*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140619*0 + 3*25*FLEN/8, x4, x1, x2)

inst_46874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffe0000; valaddr_reg:x3; val_offset:140622*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140622*0 + 3*26*FLEN/8, x4, x1, x2)

inst_46875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffff0000; valaddr_reg:x3; val_offset:140625*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140625*0 + 3*27*FLEN/8, x4, x1, x2)

inst_46876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffff8000; valaddr_reg:x3; val_offset:140628*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140628*0 + 3*28*FLEN/8, x4, x1, x2)

inst_46877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffc000; valaddr_reg:x3; val_offset:140631*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140631*0 + 3*29*FLEN/8, x4, x1, x2)

inst_46878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffe000; valaddr_reg:x3; val_offset:140634*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140634*0 + 3*30*FLEN/8, x4, x1, x2)

inst_46879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffff000; valaddr_reg:x3; val_offset:140637*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140637*0 + 3*31*FLEN/8, x4, x1, x2)

inst_46880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffff800; valaddr_reg:x3; val_offset:140640*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140640*0 + 3*32*FLEN/8, x4, x1, x2)

inst_46881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffc00; valaddr_reg:x3; val_offset:140643*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140643*0 + 3*33*FLEN/8, x4, x1, x2)

inst_46882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffe00; valaddr_reg:x3; val_offset:140646*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140646*0 + 3*34*FLEN/8, x4, x1, x2)

inst_46883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffff00; valaddr_reg:x3; val_offset:140649*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140649*0 + 3*35*FLEN/8, x4, x1, x2)

inst_46884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffff80; valaddr_reg:x3; val_offset:140652*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140652*0 + 3*36*FLEN/8, x4, x1, x2)

inst_46885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffffc0; valaddr_reg:x3; val_offset:140655*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140655*0 + 3*37*FLEN/8, x4, x1, x2)

inst_46886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffffe0; valaddr_reg:x3; val_offset:140658*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140658*0 + 3*38*FLEN/8, x4, x1, x2)

inst_46887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffff0; valaddr_reg:x3; val_offset:140661*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140661*0 + 3*39*FLEN/8, x4, x1, x2)

inst_46888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffff8; valaddr_reg:x3; val_offset:140664*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140664*0 + 3*40*FLEN/8, x4, x1, x2)

inst_46889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffffc; valaddr_reg:x3; val_offset:140667*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140667*0 + 3*41*FLEN/8, x4, x1, x2)

inst_46890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dffffffffffffe; valaddr_reg:x3; val_offset:140670*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140670*0 + 3*42*FLEN/8, x4, x1, x2)

inst_46891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x38d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xb8dfffffffffffff; valaddr_reg:x3; val_offset:140673*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140673*0 + 3*43*FLEN/8, x4, x1, x2)

inst_46892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:140676*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140676*0 + 3*44*FLEN/8, x4, x1, x2)

inst_46893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:140679*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140679*0 + 3*45*FLEN/8, x4, x1, x2)

inst_46894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:140682*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140682*0 + 3*46*FLEN/8, x4, x1, x2)

inst_46895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:140685*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140685*0 + 3*47*FLEN/8, x4, x1, x2)

inst_46896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:140688*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140688*0 + 3*48*FLEN/8, x4, x1, x2)

inst_46897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:140691*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140691*0 + 3*49*FLEN/8, x4, x1, x2)

inst_46898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:140694*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140694*0 + 3*50*FLEN/8, x4, x1, x2)

inst_46899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:140697*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140697*0 + 3*51*FLEN/8, x4, x1, x2)

inst_46900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:140700*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140700*0 + 3*52*FLEN/8, x4, x1, x2)

inst_46901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:140703*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140703*0 + 3*53*FLEN/8, x4, x1, x2)

inst_46902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:140706*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140706*0 + 3*54*FLEN/8, x4, x1, x2)

inst_46903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:140709*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140709*0 + 3*55*FLEN/8, x4, x1, x2)

inst_46904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:140712*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140712*0 + 3*56*FLEN/8, x4, x1, x2)

inst_46905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:140715*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140715*0 + 3*57*FLEN/8, x4, x1, x2)

inst_46906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:140718*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140718*0 + 3*58*FLEN/8, x4, x1, x2)

inst_46907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:140721*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140721*0 + 3*59*FLEN/8, x4, x1, x2)

inst_46908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:140724*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140724*0 + 3*60*FLEN/8, x4, x1, x2)

inst_46909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:140727*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140727*0 + 3*61*FLEN/8, x4, x1, x2)

inst_46910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:140730*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140730*0 + 3*62*FLEN/8, x4, x1, x2)

inst_46911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:140733*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140733*0 + 3*63*FLEN/8, x4, x1, x2)

inst_46912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:140736*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140736*0 + 3*64*FLEN/8, x4, x1, x2)

inst_46913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdb485bd8641e5 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x13c6e631d2fd8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9db485bd8641e5; op2val:0x9fd13c6e631d2fd8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:140739*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140739*0 + 3*65*FLEN/8, x4, x1, x2)

inst_46914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000000000; valaddr_reg:x3; val_offset:140742*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140742*0 + 3*66*FLEN/8, x4, x1, x2)

inst_46915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000000001; valaddr_reg:x3; val_offset:140745*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140745*0 + 3*67*FLEN/8, x4, x1, x2)

inst_46916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000000003; valaddr_reg:x3; val_offset:140748*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140748*0 + 3*68*FLEN/8, x4, x1, x2)

inst_46917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000000007; valaddr_reg:x3; val_offset:140751*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140751*0 + 3*69*FLEN/8, x4, x1, x2)

inst_46918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000000000f; valaddr_reg:x3; val_offset:140754*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140754*0 + 3*70*FLEN/8, x4, x1, x2)

inst_46919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000000001f; valaddr_reg:x3; val_offset:140757*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140757*0 + 3*71*FLEN/8, x4, x1, x2)

inst_46920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000000003f; valaddr_reg:x3; val_offset:140760*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140760*0 + 3*72*FLEN/8, x4, x1, x2)

inst_46921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000000007f; valaddr_reg:x3; val_offset:140763*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140763*0 + 3*73*FLEN/8, x4, x1, x2)

inst_46922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000000000ff; valaddr_reg:x3; val_offset:140766*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140766*0 + 3*74*FLEN/8, x4, x1, x2)

inst_46923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000000001ff; valaddr_reg:x3; val_offset:140769*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140769*0 + 3*75*FLEN/8, x4, x1, x2)

inst_46924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000000003ff; valaddr_reg:x3; val_offset:140772*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140772*0 + 3*76*FLEN/8, x4, x1, x2)

inst_46925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000000007ff; valaddr_reg:x3; val_offset:140775*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140775*0 + 3*77*FLEN/8, x4, x1, x2)

inst_46926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000000fff; valaddr_reg:x3; val_offset:140778*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140778*0 + 3*78*FLEN/8, x4, x1, x2)

inst_46927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000001fff; valaddr_reg:x3; val_offset:140781*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140781*0 + 3*79*FLEN/8, x4, x1, x2)

inst_46928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000003fff; valaddr_reg:x3; val_offset:140784*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140784*0 + 3*80*FLEN/8, x4, x1, x2)

inst_46929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000007fff; valaddr_reg:x3; val_offset:140787*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140787*0 + 3*81*FLEN/8, x4, x1, x2)

inst_46930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000000ffff; valaddr_reg:x3; val_offset:140790*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140790*0 + 3*82*FLEN/8, x4, x1, x2)

inst_46931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000001ffff; valaddr_reg:x3; val_offset:140793*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140793*0 + 3*83*FLEN/8, x4, x1, x2)

inst_46932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000003ffff; valaddr_reg:x3; val_offset:140796*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140796*0 + 3*84*FLEN/8, x4, x1, x2)

inst_46933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000007ffff; valaddr_reg:x3; val_offset:140799*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140799*0 + 3*85*FLEN/8, x4, x1, x2)

inst_46934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000000fffff; valaddr_reg:x3; val_offset:140802*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140802*0 + 3*86*FLEN/8, x4, x1, x2)

inst_46935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000001fffff; valaddr_reg:x3; val_offset:140805*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140805*0 + 3*87*FLEN/8, x4, x1, x2)

inst_46936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000003fffff; valaddr_reg:x3; val_offset:140808*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140808*0 + 3*88*FLEN/8, x4, x1, x2)

inst_46937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000007fffff; valaddr_reg:x3; val_offset:140811*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140811*0 + 3*89*FLEN/8, x4, x1, x2)

inst_46938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000000ffffff; valaddr_reg:x3; val_offset:140814*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140814*0 + 3*90*FLEN/8, x4, x1, x2)

inst_46939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000001ffffff; valaddr_reg:x3; val_offset:140817*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140817*0 + 3*91*FLEN/8, x4, x1, x2)

inst_46940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000003ffffff; valaddr_reg:x3; val_offset:140820*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140820*0 + 3*92*FLEN/8, x4, x1, x2)

inst_46941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000007ffffff; valaddr_reg:x3; val_offset:140823*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140823*0 + 3*93*FLEN/8, x4, x1, x2)

inst_46942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000000fffffff; valaddr_reg:x3; val_offset:140826*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140826*0 + 3*94*FLEN/8, x4, x1, x2)

inst_46943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000001fffffff; valaddr_reg:x3; val_offset:140829*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140829*0 + 3*95*FLEN/8, x4, x1, x2)

inst_46944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000003fffffff; valaddr_reg:x3; val_offset:140832*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140832*0 + 3*96*FLEN/8, x4, x1, x2)

inst_46945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000007fffffff; valaddr_reg:x3; val_offset:140835*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140835*0 + 3*97*FLEN/8, x4, x1, x2)

inst_46946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600000ffffffff; valaddr_reg:x3; val_offset:140838*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140838*0 + 3*98*FLEN/8, x4, x1, x2)

inst_46947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600001ffffffff; valaddr_reg:x3; val_offset:140841*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140841*0 + 3*99*FLEN/8, x4, x1, x2)

inst_46948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600003ffffffff; valaddr_reg:x3; val_offset:140844*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140844*0 + 3*100*FLEN/8, x4, x1, x2)

inst_46949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600007ffffffff; valaddr_reg:x3; val_offset:140847*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140847*0 + 3*101*FLEN/8, x4, x1, x2)

inst_46950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60000fffffffff; valaddr_reg:x3; val_offset:140850*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140850*0 + 3*102*FLEN/8, x4, x1, x2)

inst_46951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60001fffffffff; valaddr_reg:x3; val_offset:140853*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140853*0 + 3*103*FLEN/8, x4, x1, x2)

inst_46952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60003fffffffff; valaddr_reg:x3; val_offset:140856*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140856*0 + 3*104*FLEN/8, x4, x1, x2)

inst_46953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60007fffffffff; valaddr_reg:x3; val_offset:140859*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140859*0 + 3*105*FLEN/8, x4, x1, x2)

inst_46954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6000ffffffffff; valaddr_reg:x3; val_offset:140862*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140862*0 + 3*106*FLEN/8, x4, x1, x2)

inst_46955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6001ffffffffff; valaddr_reg:x3; val_offset:140865*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140865*0 + 3*107*FLEN/8, x4, x1, x2)

inst_46956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6003ffffffffff; valaddr_reg:x3; val_offset:140868*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140868*0 + 3*108*FLEN/8, x4, x1, x2)

inst_46957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6007ffffffffff; valaddr_reg:x3; val_offset:140871*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140871*0 + 3*109*FLEN/8, x4, x1, x2)

inst_46958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a600fffffffffff; valaddr_reg:x3; val_offset:140874*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140874*0 + 3*110*FLEN/8, x4, x1, x2)

inst_46959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a601fffffffffff; valaddr_reg:x3; val_offset:140877*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140877*0 + 3*111*FLEN/8, x4, x1, x2)

inst_46960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a603fffffffffff; valaddr_reg:x3; val_offset:140880*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140880*0 + 3*112*FLEN/8, x4, x1, x2)

inst_46961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a607fffffffffff; valaddr_reg:x3; val_offset:140883*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140883*0 + 3*113*FLEN/8, x4, x1, x2)

inst_46962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a60ffffffffffff; valaddr_reg:x3; val_offset:140886*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140886*0 + 3*114*FLEN/8, x4, x1, x2)

inst_46963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a61ffffffffffff; valaddr_reg:x3; val_offset:140889*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140889*0 + 3*115*FLEN/8, x4, x1, x2)

inst_46964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a63ffffffffffff; valaddr_reg:x3; val_offset:140892*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140892*0 + 3*116*FLEN/8, x4, x1, x2)

inst_46965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a67ffffffffffff; valaddr_reg:x3; val_offset:140895*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140895*0 + 3*117*FLEN/8, x4, x1, x2)

inst_46966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a68000000000000; valaddr_reg:x3; val_offset:140898*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140898*0 + 3*118*FLEN/8, x4, x1, x2)

inst_46967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6c000000000000; valaddr_reg:x3; val_offset:140901*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140901*0 + 3*119*FLEN/8, x4, x1, x2)

inst_46968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6e000000000000; valaddr_reg:x3; val_offset:140904*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140904*0 + 3*120*FLEN/8, x4, x1, x2)

inst_46969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6f000000000000; valaddr_reg:x3; val_offset:140907*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140907*0 + 3*121*FLEN/8, x4, x1, x2)

inst_46970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6f800000000000; valaddr_reg:x3; val_offset:140910*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140910*0 + 3*122*FLEN/8, x4, x1, x2)

inst_46971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fc00000000000; valaddr_reg:x3; val_offset:140913*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140913*0 + 3*123*FLEN/8, x4, x1, x2)

inst_46972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fe00000000000; valaddr_reg:x3; val_offset:140916*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140916*0 + 3*124*FLEN/8, x4, x1, x2)

inst_46973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ff00000000000; valaddr_reg:x3; val_offset:140919*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140919*0 + 3*125*FLEN/8, x4, x1, x2)

inst_46974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ff80000000000; valaddr_reg:x3; val_offset:140922*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140922*0 + 3*126*FLEN/8, x4, x1, x2)

inst_46975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffc0000000000; valaddr_reg:x3; val_offset:140925*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140925*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_46976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffe0000000000; valaddr_reg:x3; val_offset:140928*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140928*0 + 3*128*FLEN/8, x4, x1, x2)

inst_46977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fff0000000000; valaddr_reg:x3; val_offset:140931*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140931*0 + 3*129*FLEN/8, x4, x1, x2)

inst_46978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fff8000000000; valaddr_reg:x3; val_offset:140934*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140934*0 + 3*130*FLEN/8, x4, x1, x2)

inst_46979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffc000000000; valaddr_reg:x3; val_offset:140937*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140937*0 + 3*131*FLEN/8, x4, x1, x2)

inst_46980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffe000000000; valaddr_reg:x3; val_offset:140940*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140940*0 + 3*132*FLEN/8, x4, x1, x2)

inst_46981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffff000000000; valaddr_reg:x3; val_offset:140943*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140943*0 + 3*133*FLEN/8, x4, x1, x2)

inst_46982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffff800000000; valaddr_reg:x3; val_offset:140946*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140946*0 + 3*134*FLEN/8, x4, x1, x2)

inst_46983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffc00000000; valaddr_reg:x3; val_offset:140949*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140949*0 + 3*135*FLEN/8, x4, x1, x2)

inst_46984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffe00000000; valaddr_reg:x3; val_offset:140952*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140952*0 + 3*136*FLEN/8, x4, x1, x2)

inst_46985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffff00000000; valaddr_reg:x3; val_offset:140955*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140955*0 + 3*137*FLEN/8, x4, x1, x2)

inst_46986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffff80000000; valaddr_reg:x3; val_offset:140958*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140958*0 + 3*138*FLEN/8, x4, x1, x2)

inst_46987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffc0000000; valaddr_reg:x3; val_offset:140961*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140961*0 + 3*139*FLEN/8, x4, x1, x2)

inst_46988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffe0000000; valaddr_reg:x3; val_offset:140964*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140964*0 + 3*140*FLEN/8, x4, x1, x2)

inst_46989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffff0000000; valaddr_reg:x3; val_offset:140967*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140967*0 + 3*141*FLEN/8, x4, x1, x2)

inst_46990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffff8000000; valaddr_reg:x3; val_offset:140970*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140970*0 + 3*142*FLEN/8, x4, x1, x2)

inst_46991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffc000000; valaddr_reg:x3; val_offset:140973*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140973*0 + 3*143*FLEN/8, x4, x1, x2)

inst_46992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffe000000; valaddr_reg:x3; val_offset:140976*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140976*0 + 3*144*FLEN/8, x4, x1, x2)

inst_46993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffff000000; valaddr_reg:x3; val_offset:140979*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140979*0 + 3*145*FLEN/8, x4, x1, x2)

inst_46994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffff800000; valaddr_reg:x3; val_offset:140982*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140982*0 + 3*146*FLEN/8, x4, x1, x2)

inst_46995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffc00000; valaddr_reg:x3; val_offset:140985*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140985*0 + 3*147*FLEN/8, x4, x1, x2)

inst_46996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffe00000; valaddr_reg:x3; val_offset:140988*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140988*0 + 3*148*FLEN/8, x4, x1, x2)

inst_46997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffff00000; valaddr_reg:x3; val_offset:140991*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140991*0 + 3*149*FLEN/8, x4, x1, x2)

inst_46998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffff80000; valaddr_reg:x3; val_offset:140994*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140994*0 + 3*150*FLEN/8, x4, x1, x2)

inst_46999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffc0000; valaddr_reg:x3; val_offset:140997*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 140997*0 + 3*151*FLEN/8, x4, x1, x2)

inst_47000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffe0000; valaddr_reg:x3; val_offset:141000*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141000*0 + 3*152*FLEN/8, x4, x1, x2)

inst_47001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffff0000; valaddr_reg:x3; val_offset:141003*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141003*0 + 3*153*FLEN/8, x4, x1, x2)

inst_47002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffff8000; valaddr_reg:x3; val_offset:141006*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141006*0 + 3*154*FLEN/8, x4, x1, x2)

inst_47003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffc000; valaddr_reg:x3; val_offset:141009*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141009*0 + 3*155*FLEN/8, x4, x1, x2)

inst_47004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffe000; valaddr_reg:x3; val_offset:141012*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141012*0 + 3*156*FLEN/8, x4, x1, x2)

inst_47005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffff000; valaddr_reg:x3; val_offset:141015*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141015*0 + 3*157*FLEN/8, x4, x1, x2)

inst_47006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffff800; valaddr_reg:x3; val_offset:141018*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141018*0 + 3*158*FLEN/8, x4, x1, x2)

inst_47007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffc00; valaddr_reg:x3; val_offset:141021*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141021*0 + 3*159*FLEN/8, x4, x1, x2)

inst_47008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffe00; valaddr_reg:x3; val_offset:141024*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141024*0 + 3*160*FLEN/8, x4, x1, x2)

inst_47009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffff00; valaddr_reg:x3; val_offset:141027*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141027*0 + 3*161*FLEN/8, x4, x1, x2)

inst_47010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffff80; valaddr_reg:x3; val_offset:141030*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141030*0 + 3*162*FLEN/8, x4, x1, x2)

inst_47011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffffc0; valaddr_reg:x3; val_offset:141033*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141033*0 + 3*163*FLEN/8, x4, x1, x2)

inst_47012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffffe0; valaddr_reg:x3; val_offset:141036*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141036*0 + 3*164*FLEN/8, x4, x1, x2)

inst_47013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffff0; valaddr_reg:x3; val_offset:141039*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141039*0 + 3*165*FLEN/8, x4, x1, x2)

inst_47014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffff8; valaddr_reg:x3; val_offset:141042*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141042*0 + 3*166*FLEN/8, x4, x1, x2)

inst_47015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffffc; valaddr_reg:x3; val_offset:141045*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141045*0 + 3*167*FLEN/8, x4, x1, x2)

inst_47016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6ffffffffffffe; valaddr_reg:x3; val_offset:141048*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141048*0 + 3*168*FLEN/8, x4, x1, x2)

inst_47017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3a6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3a6fffffffffffff; valaddr_reg:x3; val_offset:141051*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141051*0 + 3*169*FLEN/8, x4, x1, x2)

inst_47018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:141054*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141054*0 + 3*170*FLEN/8, x4, x1, x2)

inst_47019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:141057*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141057*0 + 3*171*FLEN/8, x4, x1, x2)

inst_47020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:141060*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141060*0 + 3*172*FLEN/8, x4, x1, x2)

inst_47021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:141063*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141063*0 + 3*173*FLEN/8, x4, x1, x2)

inst_47022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:141066*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141066*0 + 3*174*FLEN/8, x4, x1, x2)

inst_47023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:141069*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141069*0 + 3*175*FLEN/8, x4, x1, x2)

inst_47024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:141072*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141072*0 + 3*176*FLEN/8, x4, x1, x2)

inst_47025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:141075*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141075*0 + 3*177*FLEN/8, x4, x1, x2)

inst_47026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:141078*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141078*0 + 3*178*FLEN/8, x4, x1, x2)

inst_47027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:141081*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141081*0 + 3*179*FLEN/8, x4, x1, x2)

inst_47028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:141084*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141084*0 + 3*180*FLEN/8, x4, x1, x2)

inst_47029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:141087*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141087*0 + 3*181*FLEN/8, x4, x1, x2)

inst_47030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:141090*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141090*0 + 3*182*FLEN/8, x4, x1, x2)

inst_47031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:141093*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141093*0 + 3*183*FLEN/8, x4, x1, x2)

inst_47032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:141096*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141096*0 + 3*184*FLEN/8, x4, x1, x2)

inst_47033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:141099*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141099*0 + 3*185*FLEN/8, x4, x1, x2)

inst_47034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:141102*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141102*0 + 3*186*FLEN/8, x4, x1, x2)

inst_47035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:141105*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141105*0 + 3*187*FLEN/8, x4, x1, x2)

inst_47036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:141108*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141108*0 + 3*188*FLEN/8, x4, x1, x2)

inst_47037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:141111*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141111*0 + 3*189*FLEN/8, x4, x1, x2)

inst_47038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:141114*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141114*0 + 3*190*FLEN/8, x4, x1, x2)

inst_47039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdbdfc4ac55563 and fs2 == 0 and fe2 == 0x204 and fm2 == 0x136f27a680dd8 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dbdfc4ac55563; op2val:0x204136f27a680dd8;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:141117*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141117*0 + 3*191*FLEN/8, x4, x1, x2)

inst_47040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:141120*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141120*0 + 3*192*FLEN/8, x4, x1, x2)

inst_47041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:141123*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141123*0 + 3*193*FLEN/8, x4, x1, x2)

inst_47042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:141126*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141126*0 + 3*194*FLEN/8, x4, x1, x2)

inst_47043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:141129*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141129*0 + 3*195*FLEN/8, x4, x1, x2)

inst_47044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:141132*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141132*0 + 3*196*FLEN/8, x4, x1, x2)

inst_47045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:141135*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141135*0 + 3*197*FLEN/8, x4, x1, x2)

inst_47046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:141138*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141138*0 + 3*198*FLEN/8, x4, x1, x2)

inst_47047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:141141*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141141*0 + 3*199*FLEN/8, x4, x1, x2)

inst_47048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:141144*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141144*0 + 3*200*FLEN/8, x4, x1, x2)

inst_47049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:141147*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141147*0 + 3*201*FLEN/8, x4, x1, x2)

inst_47050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:141150*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141150*0 + 3*202*FLEN/8, x4, x1, x2)

inst_47051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:141153*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141153*0 + 3*203*FLEN/8, x4, x1, x2)

inst_47052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:141156*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141156*0 + 3*204*FLEN/8, x4, x1, x2)

inst_47053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:141159*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141159*0 + 3*205*FLEN/8, x4, x1, x2)

inst_47054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:141162*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141162*0 + 3*206*FLEN/8, x4, x1, x2)

inst_47055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:141165*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141165*0 + 3*207*FLEN/8, x4, x1, x2)

inst_47056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:141168*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141168*0 + 3*208*FLEN/8, x4, x1, x2)

inst_47057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:141171*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141171*0 + 3*209*FLEN/8, x4, x1, x2)

inst_47058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:141174*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141174*0 + 3*210*FLEN/8, x4, x1, x2)

inst_47059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:141177*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141177*0 + 3*211*FLEN/8, x4, x1, x2)

inst_47060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:141180*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141180*0 + 3*212*FLEN/8, x4, x1, x2)

inst_47061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:141183*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141183*0 + 3*213*FLEN/8, x4, x1, x2)

inst_47062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000000000; valaddr_reg:x3; val_offset:141186*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141186*0 + 3*214*FLEN/8, x4, x1, x2)

inst_47063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000000001; valaddr_reg:x3; val_offset:141189*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141189*0 + 3*215*FLEN/8, x4, x1, x2)

inst_47064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000000003; valaddr_reg:x3; val_offset:141192*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141192*0 + 3*216*FLEN/8, x4, x1, x2)

inst_47065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000000007; valaddr_reg:x3; val_offset:141195*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141195*0 + 3*217*FLEN/8, x4, x1, x2)

inst_47066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000000000f; valaddr_reg:x3; val_offset:141198*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141198*0 + 3*218*FLEN/8, x4, x1, x2)

inst_47067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000000001f; valaddr_reg:x3; val_offset:141201*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141201*0 + 3*219*FLEN/8, x4, x1, x2)

inst_47068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000000003f; valaddr_reg:x3; val_offset:141204*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141204*0 + 3*220*FLEN/8, x4, x1, x2)

inst_47069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000000007f; valaddr_reg:x3; val_offset:141207*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141207*0 + 3*221*FLEN/8, x4, x1, x2)

inst_47070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000000000ff; valaddr_reg:x3; val_offset:141210*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141210*0 + 3*222*FLEN/8, x4, x1, x2)

inst_47071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000000001ff; valaddr_reg:x3; val_offset:141213*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141213*0 + 3*223*FLEN/8, x4, x1, x2)

inst_47072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000000003ff; valaddr_reg:x3; val_offset:141216*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141216*0 + 3*224*FLEN/8, x4, x1, x2)

inst_47073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000000007ff; valaddr_reg:x3; val_offset:141219*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141219*0 + 3*225*FLEN/8, x4, x1, x2)

inst_47074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000000fff; valaddr_reg:x3; val_offset:141222*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141222*0 + 3*226*FLEN/8, x4, x1, x2)

inst_47075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000001fff; valaddr_reg:x3; val_offset:141225*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141225*0 + 3*227*FLEN/8, x4, x1, x2)

inst_47076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000003fff; valaddr_reg:x3; val_offset:141228*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141228*0 + 3*228*FLEN/8, x4, x1, x2)

inst_47077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000007fff; valaddr_reg:x3; val_offset:141231*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141231*0 + 3*229*FLEN/8, x4, x1, x2)

inst_47078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000000ffff; valaddr_reg:x3; val_offset:141234*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141234*0 + 3*230*FLEN/8, x4, x1, x2)

inst_47079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000001ffff; valaddr_reg:x3; val_offset:141237*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141237*0 + 3*231*FLEN/8, x4, x1, x2)

inst_47080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000003ffff; valaddr_reg:x3; val_offset:141240*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141240*0 + 3*232*FLEN/8, x4, x1, x2)

inst_47081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000007ffff; valaddr_reg:x3; val_offset:141243*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141243*0 + 3*233*FLEN/8, x4, x1, x2)

inst_47082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000000fffff; valaddr_reg:x3; val_offset:141246*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141246*0 + 3*234*FLEN/8, x4, x1, x2)

inst_47083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000001fffff; valaddr_reg:x3; val_offset:141249*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141249*0 + 3*235*FLEN/8, x4, x1, x2)

inst_47084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000003fffff; valaddr_reg:x3; val_offset:141252*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141252*0 + 3*236*FLEN/8, x4, x1, x2)

inst_47085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000007fffff; valaddr_reg:x3; val_offset:141255*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141255*0 + 3*237*FLEN/8, x4, x1, x2)

inst_47086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000000ffffff; valaddr_reg:x3; val_offset:141258*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141258*0 + 3*238*FLEN/8, x4, x1, x2)

inst_47087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000001ffffff; valaddr_reg:x3; val_offset:141261*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141261*0 + 3*239*FLEN/8, x4, x1, x2)

inst_47088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000003ffffff; valaddr_reg:x3; val_offset:141264*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141264*0 + 3*240*FLEN/8, x4, x1, x2)

inst_47089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000007ffffff; valaddr_reg:x3; val_offset:141267*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141267*0 + 3*241*FLEN/8, x4, x1, x2)

inst_47090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000000fffffff; valaddr_reg:x3; val_offset:141270*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141270*0 + 3*242*FLEN/8, x4, x1, x2)

inst_47091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000001fffffff; valaddr_reg:x3; val_offset:141273*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141273*0 + 3*243*FLEN/8, x4, x1, x2)

inst_47092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000003fffffff; valaddr_reg:x3; val_offset:141276*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141276*0 + 3*244*FLEN/8, x4, x1, x2)

inst_47093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000007fffffff; valaddr_reg:x3; val_offset:141279*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141279*0 + 3*245*FLEN/8, x4, x1, x2)

inst_47094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100000ffffffff; valaddr_reg:x3; val_offset:141282*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141282*0 + 3*246*FLEN/8, x4, x1, x2)

inst_47095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100001ffffffff; valaddr_reg:x3; val_offset:141285*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141285*0 + 3*247*FLEN/8, x4, x1, x2)

inst_47096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100003ffffffff; valaddr_reg:x3; val_offset:141288*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141288*0 + 3*248*FLEN/8, x4, x1, x2)

inst_47097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100007ffffffff; valaddr_reg:x3; val_offset:141291*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141291*0 + 3*249*FLEN/8, x4, x1, x2)

inst_47098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110000fffffffff; valaddr_reg:x3; val_offset:141294*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141294*0 + 3*250*FLEN/8, x4, x1, x2)

inst_47099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110001fffffffff; valaddr_reg:x3; val_offset:141297*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141297*0 + 3*251*FLEN/8, x4, x1, x2)

inst_47100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110003fffffffff; valaddr_reg:x3; val_offset:141300*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141300*0 + 3*252*FLEN/8, x4, x1, x2)

inst_47101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110007fffffffff; valaddr_reg:x3; val_offset:141303*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141303*0 + 3*253*FLEN/8, x4, x1, x2)

inst_47102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811000ffffffffff; valaddr_reg:x3; val_offset:141306*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141306*0 + 3*254*FLEN/8, x4, x1, x2)

inst_47103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811001ffffffffff; valaddr_reg:x3; val_offset:141309*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141309*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_47104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811003ffffffffff; valaddr_reg:x3; val_offset:141312*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141312*0 + 3*256*FLEN/8, x4, x1, x2)

inst_47105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811007ffffffffff; valaddr_reg:x3; val_offset:141315*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141315*0 + 3*257*FLEN/8, x4, x1, x2)

inst_47106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81100fffffffffff; valaddr_reg:x3; val_offset:141318*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141318*0 + 3*258*FLEN/8, x4, x1, x2)

inst_47107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81101fffffffffff; valaddr_reg:x3; val_offset:141321*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141321*0 + 3*259*FLEN/8, x4, x1, x2)

inst_47108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81103fffffffffff; valaddr_reg:x3; val_offset:141324*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141324*0 + 3*260*FLEN/8, x4, x1, x2)

inst_47109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x81107fffffffffff; valaddr_reg:x3; val_offset:141327*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141327*0 + 3*261*FLEN/8, x4, x1, x2)

inst_47110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8110ffffffffffff; valaddr_reg:x3; val_offset:141330*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141330*0 + 3*262*FLEN/8, x4, x1, x2)

inst_47111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8111ffffffffffff; valaddr_reg:x3; val_offset:141333*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141333*0 + 3*263*FLEN/8, x4, x1, x2)

inst_47112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8113ffffffffffff; valaddr_reg:x3; val_offset:141336*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141336*0 + 3*264*FLEN/8, x4, x1, x2)

inst_47113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8117ffffffffffff; valaddr_reg:x3; val_offset:141339*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141339*0 + 3*265*FLEN/8, x4, x1, x2)

inst_47114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x8118000000000000; valaddr_reg:x3; val_offset:141342*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141342*0 + 3*266*FLEN/8, x4, x1, x2)

inst_47115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811c000000000000; valaddr_reg:x3; val_offset:141345*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141345*0 + 3*267*FLEN/8, x4, x1, x2)

inst_47116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811e000000000000; valaddr_reg:x3; val_offset:141348*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141348*0 + 3*268*FLEN/8, x4, x1, x2)

inst_47117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811f000000000000; valaddr_reg:x3; val_offset:141351*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141351*0 + 3*269*FLEN/8, x4, x1, x2)

inst_47118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811f800000000000; valaddr_reg:x3; val_offset:141354*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141354*0 + 3*270*FLEN/8, x4, x1, x2)

inst_47119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fc00000000000; valaddr_reg:x3; val_offset:141357*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141357*0 + 3*271*FLEN/8, x4, x1, x2)

inst_47120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fe00000000000; valaddr_reg:x3; val_offset:141360*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141360*0 + 3*272*FLEN/8, x4, x1, x2)

inst_47121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ff00000000000; valaddr_reg:x3; val_offset:141363*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141363*0 + 3*273*FLEN/8, x4, x1, x2)

inst_47122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ff80000000000; valaddr_reg:x3; val_offset:141366*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141366*0 + 3*274*FLEN/8, x4, x1, x2)

inst_47123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffc0000000000; valaddr_reg:x3; val_offset:141369*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141369*0 + 3*275*FLEN/8, x4, x1, x2)

inst_47124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffe0000000000; valaddr_reg:x3; val_offset:141372*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141372*0 + 3*276*FLEN/8, x4, x1, x2)

inst_47125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fff0000000000; valaddr_reg:x3; val_offset:141375*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141375*0 + 3*277*FLEN/8, x4, x1, x2)

inst_47126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fff8000000000; valaddr_reg:x3; val_offset:141378*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141378*0 + 3*278*FLEN/8, x4, x1, x2)

inst_47127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffc000000000; valaddr_reg:x3; val_offset:141381*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141381*0 + 3*279*FLEN/8, x4, x1, x2)

inst_47128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffe000000000; valaddr_reg:x3; val_offset:141384*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141384*0 + 3*280*FLEN/8, x4, x1, x2)

inst_47129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffff000000000; valaddr_reg:x3; val_offset:141387*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141387*0 + 3*281*FLEN/8, x4, x1, x2)

inst_47130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffff800000000; valaddr_reg:x3; val_offset:141390*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141390*0 + 3*282*FLEN/8, x4, x1, x2)

inst_47131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffc00000000; valaddr_reg:x3; val_offset:141393*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141393*0 + 3*283*FLEN/8, x4, x1, x2)

inst_47132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffe00000000; valaddr_reg:x3; val_offset:141396*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141396*0 + 3*284*FLEN/8, x4, x1, x2)

inst_47133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffff00000000; valaddr_reg:x3; val_offset:141399*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141399*0 + 3*285*FLEN/8, x4, x1, x2)

inst_47134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffff80000000; valaddr_reg:x3; val_offset:141402*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141402*0 + 3*286*FLEN/8, x4, x1, x2)

inst_47135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffc0000000; valaddr_reg:x3; val_offset:141405*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141405*0 + 3*287*FLEN/8, x4, x1, x2)

inst_47136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffe0000000; valaddr_reg:x3; val_offset:141408*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141408*0 + 3*288*FLEN/8, x4, x1, x2)

inst_47137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffff0000000; valaddr_reg:x3; val_offset:141411*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141411*0 + 3*289*FLEN/8, x4, x1, x2)

inst_47138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffff8000000; valaddr_reg:x3; val_offset:141414*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141414*0 + 3*290*FLEN/8, x4, x1, x2)

inst_47139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffc000000; valaddr_reg:x3; val_offset:141417*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141417*0 + 3*291*FLEN/8, x4, x1, x2)

inst_47140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffe000000; valaddr_reg:x3; val_offset:141420*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141420*0 + 3*292*FLEN/8, x4, x1, x2)

inst_47141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffff000000; valaddr_reg:x3; val_offset:141423*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141423*0 + 3*293*FLEN/8, x4, x1, x2)

inst_47142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffff800000; valaddr_reg:x3; val_offset:141426*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141426*0 + 3*294*FLEN/8, x4, x1, x2)

inst_47143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffc00000; valaddr_reg:x3; val_offset:141429*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141429*0 + 3*295*FLEN/8, x4, x1, x2)

inst_47144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffe00000; valaddr_reg:x3; val_offset:141432*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141432*0 + 3*296*FLEN/8, x4, x1, x2)

inst_47145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffff00000; valaddr_reg:x3; val_offset:141435*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141435*0 + 3*297*FLEN/8, x4, x1, x2)

inst_47146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffff80000; valaddr_reg:x3; val_offset:141438*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141438*0 + 3*298*FLEN/8, x4, x1, x2)

inst_47147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffc0000; valaddr_reg:x3; val_offset:141441*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141441*0 + 3*299*FLEN/8, x4, x1, x2)

inst_47148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffe0000; valaddr_reg:x3; val_offset:141444*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141444*0 + 3*300*FLEN/8, x4, x1, x2)

inst_47149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffff0000; valaddr_reg:x3; val_offset:141447*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141447*0 + 3*301*FLEN/8, x4, x1, x2)

inst_47150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffff8000; valaddr_reg:x3; val_offset:141450*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141450*0 + 3*302*FLEN/8, x4, x1, x2)

inst_47151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffc000; valaddr_reg:x3; val_offset:141453*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141453*0 + 3*303*FLEN/8, x4, x1, x2)

inst_47152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffe000; valaddr_reg:x3; val_offset:141456*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141456*0 + 3*304*FLEN/8, x4, x1, x2)

inst_47153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffff000; valaddr_reg:x3; val_offset:141459*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141459*0 + 3*305*FLEN/8, x4, x1, x2)

inst_47154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffff800; valaddr_reg:x3; val_offset:141462*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141462*0 + 3*306*FLEN/8, x4, x1, x2)

inst_47155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffc00; valaddr_reg:x3; val_offset:141465*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141465*0 + 3*307*FLEN/8, x4, x1, x2)

inst_47156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffe00; valaddr_reg:x3; val_offset:141468*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141468*0 + 3*308*FLEN/8, x4, x1, x2)

inst_47157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffff00; valaddr_reg:x3; val_offset:141471*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141471*0 + 3*309*FLEN/8, x4, x1, x2)

inst_47158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffff80; valaddr_reg:x3; val_offset:141474*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141474*0 + 3*310*FLEN/8, x4, x1, x2)

inst_47159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffffc0; valaddr_reg:x3; val_offset:141477*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141477*0 + 3*311*FLEN/8, x4, x1, x2)

inst_47160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffffe0; valaddr_reg:x3; val_offset:141480*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141480*0 + 3*312*FLEN/8, x4, x1, x2)

inst_47161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffff0; valaddr_reg:x3; val_offset:141483*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141483*0 + 3*313*FLEN/8, x4, x1, x2)

inst_47162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffff8; valaddr_reg:x3; val_offset:141486*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141486*0 + 3*314*FLEN/8, x4, x1, x2)

inst_47163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffffc; valaddr_reg:x3; val_offset:141489*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141489*0 + 3*315*FLEN/8, x4, x1, x2)

inst_47164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811ffffffffffffe; valaddr_reg:x3; val_offset:141492*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141492*0 + 3*316*FLEN/8, x4, x1, x2)

inst_47165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdc92d76506a39 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x011 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dc92d76506a39; op2val:0x8000;
op3val:0x811fffffffffffff; valaddr_reg:x3; val_offset:141495*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141495*0 + 3*317*FLEN/8, x4, x1, x2)

inst_47166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:141498*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141498*0 + 3*318*FLEN/8, x4, x1, x2)

inst_47167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:141501*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141501*0 + 3*319*FLEN/8, x4, x1, x2)

inst_47168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:141504*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141504*0 + 3*320*FLEN/8, x4, x1, x2)

inst_47169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:141507*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141507*0 + 3*321*FLEN/8, x4, x1, x2)

inst_47170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:141510*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141510*0 + 3*322*FLEN/8, x4, x1, x2)

inst_47171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:141513*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141513*0 + 3*323*FLEN/8, x4, x1, x2)

inst_47172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:141516*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141516*0 + 3*324*FLEN/8, x4, x1, x2)

inst_47173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:141519*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141519*0 + 3*325*FLEN/8, x4, x1, x2)

inst_47174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:141522*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141522*0 + 3*326*FLEN/8, x4, x1, x2)

inst_47175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:141525*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141525*0 + 3*327*FLEN/8, x4, x1, x2)

inst_47176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:141528*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141528*0 + 3*328*FLEN/8, x4, x1, x2)

inst_47177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:141531*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141531*0 + 3*329*FLEN/8, x4, x1, x2)

inst_47178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:141534*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141534*0 + 3*330*FLEN/8, x4, x1, x2)

inst_47179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:141537*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141537*0 + 3*331*FLEN/8, x4, x1, x2)

inst_47180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:141540*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141540*0 + 3*332*FLEN/8, x4, x1, x2)

inst_47181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:141543*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141543*0 + 3*333*FLEN/8, x4, x1, x2)

inst_47182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:141546*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141546*0 + 3*334*FLEN/8, x4, x1, x2)

inst_47183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:141549*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141549*0 + 3*335*FLEN/8, x4, x1, x2)

inst_47184:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:141552*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141552*0 + 3*336*FLEN/8, x4, x1, x2)

inst_47185:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:141555*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141555*0 + 3*337*FLEN/8, x4, x1, x2)

inst_47186:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:141558*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141558*0 + 3*338*FLEN/8, x4, x1, x2)

inst_47187:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:141561*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141561*0 + 3*339*FLEN/8, x4, x1, x2)

inst_47188:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000000000; valaddr_reg:x3; val_offset:141564*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141564*0 + 3*340*FLEN/8, x4, x1, x2)

inst_47189:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000000001; valaddr_reg:x3; val_offset:141567*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141567*0 + 3*341*FLEN/8, x4, x1, x2)

inst_47190:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000000003; valaddr_reg:x3; val_offset:141570*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141570*0 + 3*342*FLEN/8, x4, x1, x2)

inst_47191:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000000007; valaddr_reg:x3; val_offset:141573*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141573*0 + 3*343*FLEN/8, x4, x1, x2)

inst_47192:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000000000f; valaddr_reg:x3; val_offset:141576*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141576*0 + 3*344*FLEN/8, x4, x1, x2)

inst_47193:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000000001f; valaddr_reg:x3; val_offset:141579*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141579*0 + 3*345*FLEN/8, x4, x1, x2)

inst_47194:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000000003f; valaddr_reg:x3; val_offset:141582*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141582*0 + 3*346*FLEN/8, x4, x1, x2)

inst_47195:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000000007f; valaddr_reg:x3; val_offset:141585*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141585*0 + 3*347*FLEN/8, x4, x1, x2)

inst_47196:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000000000ff; valaddr_reg:x3; val_offset:141588*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141588*0 + 3*348*FLEN/8, x4, x1, x2)

inst_47197:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000000001ff; valaddr_reg:x3; val_offset:141591*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141591*0 + 3*349*FLEN/8, x4, x1, x2)

inst_47198:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000000003ff; valaddr_reg:x3; val_offset:141594*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141594*0 + 3*350*FLEN/8, x4, x1, x2)

inst_47199:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000000007ff; valaddr_reg:x3; val_offset:141597*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141597*0 + 3*351*FLEN/8, x4, x1, x2)

inst_47200:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000000fff; valaddr_reg:x3; val_offset:141600*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141600*0 + 3*352*FLEN/8, x4, x1, x2)

inst_47201:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000001fff; valaddr_reg:x3; val_offset:141603*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141603*0 + 3*353*FLEN/8, x4, x1, x2)

inst_47202:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000003fff; valaddr_reg:x3; val_offset:141606*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141606*0 + 3*354*FLEN/8, x4, x1, x2)

inst_47203:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000007fff; valaddr_reg:x3; val_offset:141609*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141609*0 + 3*355*FLEN/8, x4, x1, x2)

inst_47204:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000000ffff; valaddr_reg:x3; val_offset:141612*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141612*0 + 3*356*FLEN/8, x4, x1, x2)

inst_47205:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000001ffff; valaddr_reg:x3; val_offset:141615*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141615*0 + 3*357*FLEN/8, x4, x1, x2)

inst_47206:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000003ffff; valaddr_reg:x3; val_offset:141618*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141618*0 + 3*358*FLEN/8, x4, x1, x2)

inst_47207:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000007ffff; valaddr_reg:x3; val_offset:141621*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141621*0 + 3*359*FLEN/8, x4, x1, x2)

inst_47208:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000000fffff; valaddr_reg:x3; val_offset:141624*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141624*0 + 3*360*FLEN/8, x4, x1, x2)

inst_47209:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000001fffff; valaddr_reg:x3; val_offset:141627*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141627*0 + 3*361*FLEN/8, x4, x1, x2)

inst_47210:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000003fffff; valaddr_reg:x3; val_offset:141630*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141630*0 + 3*362*FLEN/8, x4, x1, x2)

inst_47211:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000007fffff; valaddr_reg:x3; val_offset:141633*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141633*0 + 3*363*FLEN/8, x4, x1, x2)

inst_47212:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000000ffffff; valaddr_reg:x3; val_offset:141636*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141636*0 + 3*364*FLEN/8, x4, x1, x2)

inst_47213:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000001ffffff; valaddr_reg:x3; val_offset:141639*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141639*0 + 3*365*FLEN/8, x4, x1, x2)

inst_47214:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000003ffffff; valaddr_reg:x3; val_offset:141642*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141642*0 + 3*366*FLEN/8, x4, x1, x2)

inst_47215:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000007ffffff; valaddr_reg:x3; val_offset:141645*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141645*0 + 3*367*FLEN/8, x4, x1, x2)

inst_47216:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000000fffffff; valaddr_reg:x3; val_offset:141648*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141648*0 + 3*368*FLEN/8, x4, x1, x2)

inst_47217:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000001fffffff; valaddr_reg:x3; val_offset:141651*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141651*0 + 3*369*FLEN/8, x4, x1, x2)

inst_47218:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000003fffffff; valaddr_reg:x3; val_offset:141654*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141654*0 + 3*370*FLEN/8, x4, x1, x2)

inst_47219:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000007fffffff; valaddr_reg:x3; val_offset:141657*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141657*0 + 3*371*FLEN/8, x4, x1, x2)

inst_47220:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300000ffffffff; valaddr_reg:x3; val_offset:141660*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141660*0 + 3*372*FLEN/8, x4, x1, x2)

inst_47221:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300001ffffffff; valaddr_reg:x3; val_offset:141663*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141663*0 + 3*373*FLEN/8, x4, x1, x2)

inst_47222:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300003ffffffff; valaddr_reg:x3; val_offset:141666*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141666*0 + 3*374*FLEN/8, x4, x1, x2)

inst_47223:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300007ffffffff; valaddr_reg:x3; val_offset:141669*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141669*0 + 3*375*FLEN/8, x4, x1, x2)

inst_47224:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330000fffffffff; valaddr_reg:x3; val_offset:141672*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141672*0 + 3*376*FLEN/8, x4, x1, x2)

inst_47225:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330001fffffffff; valaddr_reg:x3; val_offset:141675*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141675*0 + 3*377*FLEN/8, x4, x1, x2)

inst_47226:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330003fffffffff; valaddr_reg:x3; val_offset:141678*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141678*0 + 3*378*FLEN/8, x4, x1, x2)

inst_47227:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330007fffffffff; valaddr_reg:x3; val_offset:141681*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141681*0 + 3*379*FLEN/8, x4, x1, x2)

inst_47228:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833000ffffffffff; valaddr_reg:x3; val_offset:141684*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141684*0 + 3*380*FLEN/8, x4, x1, x2)

inst_47229:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833001ffffffffff; valaddr_reg:x3; val_offset:141687*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141687*0 + 3*381*FLEN/8, x4, x1, x2)

inst_47230:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833003ffffffffff; valaddr_reg:x3; val_offset:141690*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141690*0 + 3*382*FLEN/8, x4, x1, x2)

inst_47231:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833007ffffffffff; valaddr_reg:x3; val_offset:141693*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141693*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_47232:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83300fffffffffff; valaddr_reg:x3; val_offset:141696*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141696*0 + 3*384*FLEN/8, x4, x1, x2)

inst_47233:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83301fffffffffff; valaddr_reg:x3; val_offset:141699*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141699*0 + 3*385*FLEN/8, x4, x1, x2)

inst_47234:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83303fffffffffff; valaddr_reg:x3; val_offset:141702*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141702*0 + 3*386*FLEN/8, x4, x1, x2)

inst_47235:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x83307fffffffffff; valaddr_reg:x3; val_offset:141705*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141705*0 + 3*387*FLEN/8, x4, x1, x2)

inst_47236:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8330ffffffffffff; valaddr_reg:x3; val_offset:141708*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141708*0 + 3*388*FLEN/8, x4, x1, x2)

inst_47237:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8331ffffffffffff; valaddr_reg:x3; val_offset:141711*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141711*0 + 3*389*FLEN/8, x4, x1, x2)

inst_47238:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8333ffffffffffff; valaddr_reg:x3; val_offset:141714*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141714*0 + 3*390*FLEN/8, x4, x1, x2)

inst_47239:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8337ffffffffffff; valaddr_reg:x3; val_offset:141717*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141717*0 + 3*391*FLEN/8, x4, x1, x2)

inst_47240:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x8338000000000000; valaddr_reg:x3; val_offset:141720*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141720*0 + 3*392*FLEN/8, x4, x1, x2)

inst_47241:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833c000000000000; valaddr_reg:x3; val_offset:141723*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141723*0 + 3*393*FLEN/8, x4, x1, x2)

inst_47242:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833e000000000000; valaddr_reg:x3; val_offset:141726*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141726*0 + 3*394*FLEN/8, x4, x1, x2)

inst_47243:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833f000000000000; valaddr_reg:x3; val_offset:141729*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141729*0 + 3*395*FLEN/8, x4, x1, x2)

inst_47244:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833f800000000000; valaddr_reg:x3; val_offset:141732*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141732*0 + 3*396*FLEN/8, x4, x1, x2)

inst_47245:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fc00000000000; valaddr_reg:x3; val_offset:141735*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141735*0 + 3*397*FLEN/8, x4, x1, x2)

inst_47246:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fe00000000000; valaddr_reg:x3; val_offset:141738*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141738*0 + 3*398*FLEN/8, x4, x1, x2)

inst_47247:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ff00000000000; valaddr_reg:x3; val_offset:141741*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141741*0 + 3*399*FLEN/8, x4, x1, x2)

inst_47248:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ff80000000000; valaddr_reg:x3; val_offset:141744*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141744*0 + 3*400*FLEN/8, x4, x1, x2)

inst_47249:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffc0000000000; valaddr_reg:x3; val_offset:141747*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141747*0 + 3*401*FLEN/8, x4, x1, x2)

inst_47250:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffe0000000000; valaddr_reg:x3; val_offset:141750*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141750*0 + 3*402*FLEN/8, x4, x1, x2)

inst_47251:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fff0000000000; valaddr_reg:x3; val_offset:141753*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141753*0 + 3*403*FLEN/8, x4, x1, x2)

inst_47252:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fff8000000000; valaddr_reg:x3; val_offset:141756*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141756*0 + 3*404*FLEN/8, x4, x1, x2)

inst_47253:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffc000000000; valaddr_reg:x3; val_offset:141759*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141759*0 + 3*405*FLEN/8, x4, x1, x2)

inst_47254:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffe000000000; valaddr_reg:x3; val_offset:141762*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141762*0 + 3*406*FLEN/8, x4, x1, x2)

inst_47255:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffff000000000; valaddr_reg:x3; val_offset:141765*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141765*0 + 3*407*FLEN/8, x4, x1, x2)

inst_47256:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffff800000000; valaddr_reg:x3; val_offset:141768*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141768*0 + 3*408*FLEN/8, x4, x1, x2)

inst_47257:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffc00000000; valaddr_reg:x3; val_offset:141771*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141771*0 + 3*409*FLEN/8, x4, x1, x2)

inst_47258:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffe00000000; valaddr_reg:x3; val_offset:141774*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141774*0 + 3*410*FLEN/8, x4, x1, x2)

inst_47259:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffff00000000; valaddr_reg:x3; val_offset:141777*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141777*0 + 3*411*FLEN/8, x4, x1, x2)

inst_47260:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffff80000000; valaddr_reg:x3; val_offset:141780*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141780*0 + 3*412*FLEN/8, x4, x1, x2)

inst_47261:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffc0000000; valaddr_reg:x3; val_offset:141783*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141783*0 + 3*413*FLEN/8, x4, x1, x2)

inst_47262:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffe0000000; valaddr_reg:x3; val_offset:141786*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141786*0 + 3*414*FLEN/8, x4, x1, x2)

inst_47263:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffff0000000; valaddr_reg:x3; val_offset:141789*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141789*0 + 3*415*FLEN/8, x4, x1, x2)

inst_47264:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffff8000000; valaddr_reg:x3; val_offset:141792*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141792*0 + 3*416*FLEN/8, x4, x1, x2)

inst_47265:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffc000000; valaddr_reg:x3; val_offset:141795*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141795*0 + 3*417*FLEN/8, x4, x1, x2)

inst_47266:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffe000000; valaddr_reg:x3; val_offset:141798*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141798*0 + 3*418*FLEN/8, x4, x1, x2)

inst_47267:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffff000000; valaddr_reg:x3; val_offset:141801*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141801*0 + 3*419*FLEN/8, x4, x1, x2)

inst_47268:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffff800000; valaddr_reg:x3; val_offset:141804*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141804*0 + 3*420*FLEN/8, x4, x1, x2)

inst_47269:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffc00000; valaddr_reg:x3; val_offset:141807*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141807*0 + 3*421*FLEN/8, x4, x1, x2)

inst_47270:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffe00000; valaddr_reg:x3; val_offset:141810*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141810*0 + 3*422*FLEN/8, x4, x1, x2)

inst_47271:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffff00000; valaddr_reg:x3; val_offset:141813*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141813*0 + 3*423*FLEN/8, x4, x1, x2)

inst_47272:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffff80000; valaddr_reg:x3; val_offset:141816*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141816*0 + 3*424*FLEN/8, x4, x1, x2)

inst_47273:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffc0000; valaddr_reg:x3; val_offset:141819*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141819*0 + 3*425*FLEN/8, x4, x1, x2)

inst_47274:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffe0000; valaddr_reg:x3; val_offset:141822*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141822*0 + 3*426*FLEN/8, x4, x1, x2)

inst_47275:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffff0000; valaddr_reg:x3; val_offset:141825*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141825*0 + 3*427*FLEN/8, x4, x1, x2)

inst_47276:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffff8000; valaddr_reg:x3; val_offset:141828*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141828*0 + 3*428*FLEN/8, x4, x1, x2)

inst_47277:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffc000; valaddr_reg:x3; val_offset:141831*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141831*0 + 3*429*FLEN/8, x4, x1, x2)

inst_47278:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffe000; valaddr_reg:x3; val_offset:141834*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141834*0 + 3*430*FLEN/8, x4, x1, x2)

inst_47279:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffff000; valaddr_reg:x3; val_offset:141837*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141837*0 + 3*431*FLEN/8, x4, x1, x2)

inst_47280:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffff800; valaddr_reg:x3; val_offset:141840*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141840*0 + 3*432*FLEN/8, x4, x1, x2)

inst_47281:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffc00; valaddr_reg:x3; val_offset:141843*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141843*0 + 3*433*FLEN/8, x4, x1, x2)

inst_47282:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffe00; valaddr_reg:x3; val_offset:141846*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141846*0 + 3*434*FLEN/8, x4, x1, x2)

inst_47283:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffff00; valaddr_reg:x3; val_offset:141849*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141849*0 + 3*435*FLEN/8, x4, x1, x2)

inst_47284:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffff80; valaddr_reg:x3; val_offset:141852*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141852*0 + 3*436*FLEN/8, x4, x1, x2)

inst_47285:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffffc0; valaddr_reg:x3; val_offset:141855*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141855*0 + 3*437*FLEN/8, x4, x1, x2)

inst_47286:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffffe0; valaddr_reg:x3; val_offset:141858*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141858*0 + 3*438*FLEN/8, x4, x1, x2)

inst_47287:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffff0; valaddr_reg:x3; val_offset:141861*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141861*0 + 3*439*FLEN/8, x4, x1, x2)

inst_47288:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffff8; valaddr_reg:x3; val_offset:141864*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141864*0 + 3*440*FLEN/8, x4, x1, x2)

inst_47289:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffffc; valaddr_reg:x3; val_offset:141867*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141867*0 + 3*441*FLEN/8, x4, x1, x2)

inst_47290:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833ffffffffffffe; valaddr_reg:x3; val_offset:141870*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141870*0 + 3*442*FLEN/8, x4, x1, x2)

inst_47291:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdd70c0ad2c58b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x033 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dd70c0ad2c58b; op2val:0x8000;
op3val:0x833fffffffffffff; valaddr_reg:x3; val_offset:141873*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141873*0 + 3*443*FLEN/8, x4, x1, x2)

inst_47292:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:141876*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141876*0 + 3*444*FLEN/8, x4, x1, x2)

inst_47293:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:141879*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141879*0 + 3*445*FLEN/8, x4, x1, x2)

inst_47294:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:141882*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141882*0 + 3*446*FLEN/8, x4, x1, x2)

inst_47295:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:141885*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141885*0 + 3*447*FLEN/8, x4, x1, x2)

inst_47296:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:141888*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141888*0 + 3*448*FLEN/8, x4, x1, x2)

inst_47297:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:141891*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141891*0 + 3*449*FLEN/8, x4, x1, x2)

inst_47298:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:141894*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141894*0 + 3*450*FLEN/8, x4, x1, x2)

inst_47299:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:141897*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141897*0 + 3*451*FLEN/8, x4, x1, x2)

inst_47300:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:141900*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141900*0 + 3*452*FLEN/8, x4, x1, x2)

inst_47301:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:141903*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141903*0 + 3*453*FLEN/8, x4, x1, x2)

inst_47302:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:141906*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141906*0 + 3*454*FLEN/8, x4, x1, x2)

inst_47303:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:141909*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141909*0 + 3*455*FLEN/8, x4, x1, x2)

inst_47304:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:141912*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141912*0 + 3*456*FLEN/8, x4, x1, x2)

inst_47305:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:141915*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141915*0 + 3*457*FLEN/8, x4, x1, x2)

inst_47306:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:141918*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141918*0 + 3*458*FLEN/8, x4, x1, x2)

inst_47307:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:141921*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141921*0 + 3*459*FLEN/8, x4, x1, x2)

inst_47308:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:141924*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141924*0 + 3*460*FLEN/8, x4, x1, x2)

inst_47309:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:141927*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141927*0 + 3*461*FLEN/8, x4, x1, x2)

inst_47310:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:141930*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141930*0 + 3*462*FLEN/8, x4, x1, x2)

inst_47311:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:141933*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141933*0 + 3*463*FLEN/8, x4, x1, x2)

inst_47312:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:141936*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141936*0 + 3*464*FLEN/8, x4, x1, x2)

inst_47313:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:141939*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141939*0 + 3*465*FLEN/8, x4, x1, x2)

inst_47314:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000000000; valaddr_reg:x3; val_offset:141942*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141942*0 + 3*466*FLEN/8, x4, x1, x2)

inst_47315:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000000001; valaddr_reg:x3; val_offset:141945*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141945*0 + 3*467*FLEN/8, x4, x1, x2)

inst_47316:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000000003; valaddr_reg:x3; val_offset:141948*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141948*0 + 3*468*FLEN/8, x4, x1, x2)

inst_47317:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000000007; valaddr_reg:x3; val_offset:141951*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141951*0 + 3*469*FLEN/8, x4, x1, x2)

inst_47318:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000000000f; valaddr_reg:x3; val_offset:141954*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141954*0 + 3*470*FLEN/8, x4, x1, x2)

inst_47319:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000000001f; valaddr_reg:x3; val_offset:141957*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141957*0 + 3*471*FLEN/8, x4, x1, x2)

inst_47320:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000000003f; valaddr_reg:x3; val_offset:141960*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141960*0 + 3*472*FLEN/8, x4, x1, x2)

inst_47321:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000000007f; valaddr_reg:x3; val_offset:141963*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141963*0 + 3*473*FLEN/8, x4, x1, x2)

inst_47322:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000000000ff; valaddr_reg:x3; val_offset:141966*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141966*0 + 3*474*FLEN/8, x4, x1, x2)

inst_47323:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000000001ff; valaddr_reg:x3; val_offset:141969*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141969*0 + 3*475*FLEN/8, x4, x1, x2)

inst_47324:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000000003ff; valaddr_reg:x3; val_offset:141972*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141972*0 + 3*476*FLEN/8, x4, x1, x2)

inst_47325:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000000007ff; valaddr_reg:x3; val_offset:141975*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141975*0 + 3*477*FLEN/8, x4, x1, x2)

inst_47326:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000000fff; valaddr_reg:x3; val_offset:141978*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141978*0 + 3*478*FLEN/8, x4, x1, x2)

inst_47327:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000001fff; valaddr_reg:x3; val_offset:141981*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141981*0 + 3*479*FLEN/8, x4, x1, x2)

inst_47328:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000003fff; valaddr_reg:x3; val_offset:141984*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141984*0 + 3*480*FLEN/8, x4, x1, x2)

inst_47329:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000007fff; valaddr_reg:x3; val_offset:141987*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141987*0 + 3*481*FLEN/8, x4, x1, x2)

inst_47330:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000000ffff; valaddr_reg:x3; val_offset:141990*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141990*0 + 3*482*FLEN/8, x4, x1, x2)

inst_47331:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000001ffff; valaddr_reg:x3; val_offset:141993*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141993*0 + 3*483*FLEN/8, x4, x1, x2)

inst_47332:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000003ffff; valaddr_reg:x3; val_offset:141996*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141996*0 + 3*484*FLEN/8, x4, x1, x2)

inst_47333:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000007ffff; valaddr_reg:x3; val_offset:141999*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 141999*0 + 3*485*FLEN/8, x4, x1, x2)

inst_47334:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000000fffff; valaddr_reg:x3; val_offset:142002*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142002*0 + 3*486*FLEN/8, x4, x1, x2)

inst_47335:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000001fffff; valaddr_reg:x3; val_offset:142005*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142005*0 + 3*487*FLEN/8, x4, x1, x2)

inst_47336:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000003fffff; valaddr_reg:x3; val_offset:142008*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142008*0 + 3*488*FLEN/8, x4, x1, x2)

inst_47337:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000007fffff; valaddr_reg:x3; val_offset:142011*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142011*0 + 3*489*FLEN/8, x4, x1, x2)

inst_47338:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000000ffffff; valaddr_reg:x3; val_offset:142014*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142014*0 + 3*490*FLEN/8, x4, x1, x2)

inst_47339:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000001ffffff; valaddr_reg:x3; val_offset:142017*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142017*0 + 3*491*FLEN/8, x4, x1, x2)

inst_47340:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000003ffffff; valaddr_reg:x3; val_offset:142020*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142020*0 + 3*492*FLEN/8, x4, x1, x2)

inst_47341:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000007ffffff; valaddr_reg:x3; val_offset:142023*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142023*0 + 3*493*FLEN/8, x4, x1, x2)

inst_47342:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000000fffffff; valaddr_reg:x3; val_offset:142026*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142026*0 + 3*494*FLEN/8, x4, x1, x2)

inst_47343:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000001fffffff; valaddr_reg:x3; val_offset:142029*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142029*0 + 3*495*FLEN/8, x4, x1, x2)

inst_47344:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000003fffffff; valaddr_reg:x3; val_offset:142032*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142032*0 + 3*496*FLEN/8, x4, x1, x2)

inst_47345:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000007fffffff; valaddr_reg:x3; val_offset:142035*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142035*0 + 3*497*FLEN/8, x4, x1, x2)

inst_47346:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200000ffffffff; valaddr_reg:x3; val_offset:142038*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142038*0 + 3*498*FLEN/8, x4, x1, x2)

inst_47347:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200001ffffffff; valaddr_reg:x3; val_offset:142041*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142041*0 + 3*499*FLEN/8, x4, x1, x2)

inst_47348:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200003ffffffff; valaddr_reg:x3; val_offset:142044*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142044*0 + 3*500*FLEN/8, x4, x1, x2)

inst_47349:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200007ffffffff; valaddr_reg:x3; val_offset:142047*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142047*0 + 3*501*FLEN/8, x4, x1, x2)

inst_47350:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120000fffffffff; valaddr_reg:x3; val_offset:142050*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142050*0 + 3*502*FLEN/8, x4, x1, x2)

inst_47351:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120001fffffffff; valaddr_reg:x3; val_offset:142053*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142053*0 + 3*503*FLEN/8, x4, x1, x2)

inst_47352:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120003fffffffff; valaddr_reg:x3; val_offset:142056*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142056*0 + 3*504*FLEN/8, x4, x1, x2)

inst_47353:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120007fffffffff; valaddr_reg:x3; val_offset:142059*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142059*0 + 3*505*FLEN/8, x4, x1, x2)

inst_47354:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12000ffffffffff; valaddr_reg:x3; val_offset:142062*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142062*0 + 3*506*FLEN/8, x4, x1, x2)

inst_47355:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12001ffffffffff; valaddr_reg:x3; val_offset:142065*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142065*0 + 3*507*FLEN/8, x4, x1, x2)

inst_47356:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12003ffffffffff; valaddr_reg:x3; val_offset:142068*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142068*0 + 3*508*FLEN/8, x4, x1, x2)

inst_47357:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12007ffffffffff; valaddr_reg:x3; val_offset:142071*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142071*0 + 3*509*FLEN/8, x4, x1, x2)

inst_47358:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1200fffffffffff; valaddr_reg:x3; val_offset:142074*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142074*0 + 3*510*FLEN/8, x4, x1, x2)

inst_47359:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1201fffffffffff; valaddr_reg:x3; val_offset:142077*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142077*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_47360:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1203fffffffffff; valaddr_reg:x3; val_offset:142080*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142080*0 + 3*512*FLEN/8, x4, x1, x2)

inst_47361:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x1207fffffffffff; valaddr_reg:x3; val_offset:142083*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142083*0 + 3*513*FLEN/8, x4, x1, x2)

inst_47362:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x120ffffffffffff; valaddr_reg:x3; val_offset:142086*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142086*0 + 3*514*FLEN/8, x4, x1, x2)

inst_47363:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x121ffffffffffff; valaddr_reg:x3; val_offset:142089*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142089*0 + 3*515*FLEN/8, x4, x1, x2)

inst_47364:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x123ffffffffffff; valaddr_reg:x3; val_offset:142092*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142092*0 + 3*516*FLEN/8, x4, x1, x2)

inst_47365:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x127ffffffffffff; valaddr_reg:x3; val_offset:142095*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142095*0 + 3*517*FLEN/8, x4, x1, x2)

inst_47366:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x128000000000000; valaddr_reg:x3; val_offset:142098*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142098*0 + 3*518*FLEN/8, x4, x1, x2)

inst_47367:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12c000000000000; valaddr_reg:x3; val_offset:142101*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142101*0 + 3*519*FLEN/8, x4, x1, x2)

inst_47368:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12e000000000000; valaddr_reg:x3; val_offset:142104*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142104*0 + 3*520*FLEN/8, x4, x1, x2)

inst_47369:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12f000000000000; valaddr_reg:x3; val_offset:142107*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142107*0 + 3*521*FLEN/8, x4, x1, x2)

inst_47370:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12f800000000000; valaddr_reg:x3; val_offset:142110*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142110*0 + 3*522*FLEN/8, x4, x1, x2)

inst_47371:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fc00000000000; valaddr_reg:x3; val_offset:142113*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142113*0 + 3*523*FLEN/8, x4, x1, x2)

inst_47372:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fe00000000000; valaddr_reg:x3; val_offset:142116*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142116*0 + 3*524*FLEN/8, x4, x1, x2)

inst_47373:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ff00000000000; valaddr_reg:x3; val_offset:142119*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142119*0 + 3*525*FLEN/8, x4, x1, x2)

inst_47374:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ff80000000000; valaddr_reg:x3; val_offset:142122*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142122*0 + 3*526*FLEN/8, x4, x1, x2)

inst_47375:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffc0000000000; valaddr_reg:x3; val_offset:142125*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142125*0 + 3*527*FLEN/8, x4, x1, x2)

inst_47376:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffe0000000000; valaddr_reg:x3; val_offset:142128*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142128*0 + 3*528*FLEN/8, x4, x1, x2)

inst_47377:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fff0000000000; valaddr_reg:x3; val_offset:142131*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142131*0 + 3*529*FLEN/8, x4, x1, x2)

inst_47378:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fff8000000000; valaddr_reg:x3; val_offset:142134*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142134*0 + 3*530*FLEN/8, x4, x1, x2)

inst_47379:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffc000000000; valaddr_reg:x3; val_offset:142137*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142137*0 + 3*531*FLEN/8, x4, x1, x2)

inst_47380:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffe000000000; valaddr_reg:x3; val_offset:142140*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142140*0 + 3*532*FLEN/8, x4, x1, x2)

inst_47381:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffff000000000; valaddr_reg:x3; val_offset:142143*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142143*0 + 3*533*FLEN/8, x4, x1, x2)

inst_47382:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffff800000000; valaddr_reg:x3; val_offset:142146*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142146*0 + 3*534*FLEN/8, x4, x1, x2)

inst_47383:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffc00000000; valaddr_reg:x3; val_offset:142149*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142149*0 + 3*535*FLEN/8, x4, x1, x2)

inst_47384:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffe00000000; valaddr_reg:x3; val_offset:142152*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142152*0 + 3*536*FLEN/8, x4, x1, x2)

inst_47385:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffff00000000; valaddr_reg:x3; val_offset:142155*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142155*0 + 3*537*FLEN/8, x4, x1, x2)

inst_47386:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffff80000000; valaddr_reg:x3; val_offset:142158*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142158*0 + 3*538*FLEN/8, x4, x1, x2)

inst_47387:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffc0000000; valaddr_reg:x3; val_offset:142161*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142161*0 + 3*539*FLEN/8, x4, x1, x2)

inst_47388:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffe0000000; valaddr_reg:x3; val_offset:142164*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142164*0 + 3*540*FLEN/8, x4, x1, x2)

inst_47389:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffff0000000; valaddr_reg:x3; val_offset:142167*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142167*0 + 3*541*FLEN/8, x4, x1, x2)

inst_47390:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffff8000000; valaddr_reg:x3; val_offset:142170*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142170*0 + 3*542*FLEN/8, x4, x1, x2)

inst_47391:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffc000000; valaddr_reg:x3; val_offset:142173*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142173*0 + 3*543*FLEN/8, x4, x1, x2)

inst_47392:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffe000000; valaddr_reg:x3; val_offset:142176*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142176*0 + 3*544*FLEN/8, x4, x1, x2)

inst_47393:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffff000000; valaddr_reg:x3; val_offset:142179*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142179*0 + 3*545*FLEN/8, x4, x1, x2)

inst_47394:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffff800000; valaddr_reg:x3; val_offset:142182*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142182*0 + 3*546*FLEN/8, x4, x1, x2)

inst_47395:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffc00000; valaddr_reg:x3; val_offset:142185*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142185*0 + 3*547*FLEN/8, x4, x1, x2)

inst_47396:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffe00000; valaddr_reg:x3; val_offset:142188*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142188*0 + 3*548*FLEN/8, x4, x1, x2)

inst_47397:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffff00000; valaddr_reg:x3; val_offset:142191*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142191*0 + 3*549*FLEN/8, x4, x1, x2)

inst_47398:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffff80000; valaddr_reg:x3; val_offset:142194*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142194*0 + 3*550*FLEN/8, x4, x1, x2)

inst_47399:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffc0000; valaddr_reg:x3; val_offset:142197*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142197*0 + 3*551*FLEN/8, x4, x1, x2)

inst_47400:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffe0000; valaddr_reg:x3; val_offset:142200*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142200*0 + 3*552*FLEN/8, x4, x1, x2)

inst_47401:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffff0000; valaddr_reg:x3; val_offset:142203*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142203*0 + 3*553*FLEN/8, x4, x1, x2)

inst_47402:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffff8000; valaddr_reg:x3; val_offset:142206*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142206*0 + 3*554*FLEN/8, x4, x1, x2)

inst_47403:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffc000; valaddr_reg:x3; val_offset:142209*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142209*0 + 3*555*FLEN/8, x4, x1, x2)

inst_47404:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffe000; valaddr_reg:x3; val_offset:142212*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142212*0 + 3*556*FLEN/8, x4, x1, x2)

inst_47405:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffff000; valaddr_reg:x3; val_offset:142215*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142215*0 + 3*557*FLEN/8, x4, x1, x2)

inst_47406:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffff800; valaddr_reg:x3; val_offset:142218*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142218*0 + 3*558*FLEN/8, x4, x1, x2)

inst_47407:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffc00; valaddr_reg:x3; val_offset:142221*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142221*0 + 3*559*FLEN/8, x4, x1, x2)

inst_47408:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffe00; valaddr_reg:x3; val_offset:142224*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142224*0 + 3*560*FLEN/8, x4, x1, x2)

inst_47409:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffff00; valaddr_reg:x3; val_offset:142227*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142227*0 + 3*561*FLEN/8, x4, x1, x2)

inst_47410:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffff80; valaddr_reg:x3; val_offset:142230*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142230*0 + 3*562*FLEN/8, x4, x1, x2)

inst_47411:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffffc0; valaddr_reg:x3; val_offset:142233*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142233*0 + 3*563*FLEN/8, x4, x1, x2)

inst_47412:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffffe0; valaddr_reg:x3; val_offset:142236*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142236*0 + 3*564*FLEN/8, x4, x1, x2)

inst_47413:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffff0; valaddr_reg:x3; val_offset:142239*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142239*0 + 3*565*FLEN/8, x4, x1, x2)

inst_47414:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffff8; valaddr_reg:x3; val_offset:142242*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142242*0 + 3*566*FLEN/8, x4, x1, x2)

inst_47415:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffffc; valaddr_reg:x3; val_offset:142245*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142245*0 + 3*567*FLEN/8, x4, x1, x2)

inst_47416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12ffffffffffffe; valaddr_reg:x3; val_offset:142248*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142248*0 + 3*568*FLEN/8, x4, x1, x2)

inst_47417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xdda4a5f2cd6ed and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9dda4a5f2cd6ed; op2val:0x0;
op3val:0x12fffffffffffff; valaddr_reg:x3; val_offset:142251*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142251*0 + 3*569*FLEN/8, x4, x1, x2)

inst_47418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:142254*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142254*0 + 3*570*FLEN/8, x4, x1, x2)

inst_47419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:142257*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142257*0 + 3*571*FLEN/8, x4, x1, x2)

inst_47420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:142260*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142260*0 + 3*572*FLEN/8, x4, x1, x2)

inst_47421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:142263*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142263*0 + 3*573*FLEN/8, x4, x1, x2)

inst_47422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:142266*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142266*0 + 3*574*FLEN/8, x4, x1, x2)

inst_47423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:142269*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142269*0 + 3*575*FLEN/8, x4, x1, x2)

inst_47424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:142272*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142272*0 + 3*576*FLEN/8, x4, x1, x2)

inst_47425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:142275*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142275*0 + 3*577*FLEN/8, x4, x1, x2)

inst_47426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:142278*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142278*0 + 3*578*FLEN/8, x4, x1, x2)

inst_47427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:142281*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142281*0 + 3*579*FLEN/8, x4, x1, x2)

inst_47428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:142284*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142284*0 + 3*580*FLEN/8, x4, x1, x2)

inst_47429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:142287*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142287*0 + 3*581*FLEN/8, x4, x1, x2)

inst_47430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:142290*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142290*0 + 3*582*FLEN/8, x4, x1, x2)

inst_47431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:142293*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142293*0 + 3*583*FLEN/8, x4, x1, x2)

inst_47432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:142296*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142296*0 + 3*584*FLEN/8, x4, x1, x2)

inst_47433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:142299*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142299*0 + 3*585*FLEN/8, x4, x1, x2)

inst_47434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:142302*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142302*0 + 3*586*FLEN/8, x4, x1, x2)

inst_47435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:142305*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142305*0 + 3*587*FLEN/8, x4, x1, x2)

inst_47436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:142308*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142308*0 + 3*588*FLEN/8, x4, x1, x2)

inst_47437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:142311*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142311*0 + 3*589*FLEN/8, x4, x1, x2)

inst_47438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:142314*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142314*0 + 3*590*FLEN/8, x4, x1, x2)

inst_47439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:142317*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142317*0 + 3*591*FLEN/8, x4, x1, x2)

inst_47440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000000000; valaddr_reg:x3; val_offset:142320*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142320*0 + 3*592*FLEN/8, x4, x1, x2)

inst_47441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000000001; valaddr_reg:x3; val_offset:142323*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142323*0 + 3*593*FLEN/8, x4, x1, x2)

inst_47442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000000003; valaddr_reg:x3; val_offset:142326*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142326*0 + 3*594*FLEN/8, x4, x1, x2)

inst_47443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000000007; valaddr_reg:x3; val_offset:142329*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142329*0 + 3*595*FLEN/8, x4, x1, x2)

inst_47444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000000000f; valaddr_reg:x3; val_offset:142332*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142332*0 + 3*596*FLEN/8, x4, x1, x2)

inst_47445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000000001f; valaddr_reg:x3; val_offset:142335*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142335*0 + 3*597*FLEN/8, x4, x1, x2)

inst_47446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000000003f; valaddr_reg:x3; val_offset:142338*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142338*0 + 3*598*FLEN/8, x4, x1, x2)

inst_47447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000000007f; valaddr_reg:x3; val_offset:142341*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142341*0 + 3*599*FLEN/8, x4, x1, x2)

inst_47448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000000000ff; valaddr_reg:x3; val_offset:142344*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142344*0 + 3*600*FLEN/8, x4, x1, x2)

inst_47449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000000001ff; valaddr_reg:x3; val_offset:142347*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142347*0 + 3*601*FLEN/8, x4, x1, x2)

inst_47450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000000003ff; valaddr_reg:x3; val_offset:142350*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142350*0 + 3*602*FLEN/8, x4, x1, x2)

inst_47451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000000007ff; valaddr_reg:x3; val_offset:142353*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142353*0 + 3*603*FLEN/8, x4, x1, x2)

inst_47452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000000fff; valaddr_reg:x3; val_offset:142356*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142356*0 + 3*604*FLEN/8, x4, x1, x2)

inst_47453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000001fff; valaddr_reg:x3; val_offset:142359*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142359*0 + 3*605*FLEN/8, x4, x1, x2)

inst_47454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000003fff; valaddr_reg:x3; val_offset:142362*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142362*0 + 3*606*FLEN/8, x4, x1, x2)

inst_47455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000007fff; valaddr_reg:x3; val_offset:142365*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142365*0 + 3*607*FLEN/8, x4, x1, x2)

inst_47456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000000ffff; valaddr_reg:x3; val_offset:142368*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142368*0 + 3*608*FLEN/8, x4, x1, x2)

inst_47457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000001ffff; valaddr_reg:x3; val_offset:142371*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142371*0 + 3*609*FLEN/8, x4, x1, x2)

inst_47458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000003ffff; valaddr_reg:x3; val_offset:142374*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142374*0 + 3*610*FLEN/8, x4, x1, x2)

inst_47459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000007ffff; valaddr_reg:x3; val_offset:142377*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142377*0 + 3*611*FLEN/8, x4, x1, x2)

inst_47460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000000fffff; valaddr_reg:x3; val_offset:142380*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142380*0 + 3*612*FLEN/8, x4, x1, x2)

inst_47461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000001fffff; valaddr_reg:x3; val_offset:142383*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142383*0 + 3*613*FLEN/8, x4, x1, x2)

inst_47462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000003fffff; valaddr_reg:x3; val_offset:142386*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142386*0 + 3*614*FLEN/8, x4, x1, x2)

inst_47463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000007fffff; valaddr_reg:x3; val_offset:142389*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142389*0 + 3*615*FLEN/8, x4, x1, x2)

inst_47464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000000ffffff; valaddr_reg:x3; val_offset:142392*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142392*0 + 3*616*FLEN/8, x4, x1, x2)

inst_47465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000001ffffff; valaddr_reg:x3; val_offset:142395*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142395*0 + 3*617*FLEN/8, x4, x1, x2)

inst_47466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000003ffffff; valaddr_reg:x3; val_offset:142398*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142398*0 + 3*618*FLEN/8, x4, x1, x2)

inst_47467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000007ffffff; valaddr_reg:x3; val_offset:142401*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142401*0 + 3*619*FLEN/8, x4, x1, x2)

inst_47468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000000fffffff; valaddr_reg:x3; val_offset:142404*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142404*0 + 3*620*FLEN/8, x4, x1, x2)

inst_47469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000001fffffff; valaddr_reg:x3; val_offset:142407*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142407*0 + 3*621*FLEN/8, x4, x1, x2)

inst_47470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000003fffffff; valaddr_reg:x3; val_offset:142410*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142410*0 + 3*622*FLEN/8, x4, x1, x2)

inst_47471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000007fffffff; valaddr_reg:x3; val_offset:142413*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142413*0 + 3*623*FLEN/8, x4, x1, x2)

inst_47472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300000ffffffff; valaddr_reg:x3; val_offset:142416*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142416*0 + 3*624*FLEN/8, x4, x1, x2)

inst_47473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300001ffffffff; valaddr_reg:x3; val_offset:142419*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142419*0 + 3*625*FLEN/8, x4, x1, x2)

inst_47474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300003ffffffff; valaddr_reg:x3; val_offset:142422*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142422*0 + 3*626*FLEN/8, x4, x1, x2)

inst_47475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300007ffffffff; valaddr_reg:x3; val_offset:142425*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142425*0 + 3*627*FLEN/8, x4, x1, x2)

inst_47476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30000fffffffff; valaddr_reg:x3; val_offset:142428*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142428*0 + 3*628*FLEN/8, x4, x1, x2)

inst_47477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30001fffffffff; valaddr_reg:x3; val_offset:142431*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142431*0 + 3*629*FLEN/8, x4, x1, x2)

inst_47478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30003fffffffff; valaddr_reg:x3; val_offset:142434*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142434*0 + 3*630*FLEN/8, x4, x1, x2)

inst_47479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30007fffffffff; valaddr_reg:x3; val_offset:142437*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142437*0 + 3*631*FLEN/8, x4, x1, x2)

inst_47480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3000ffffffffff; valaddr_reg:x3; val_offset:142440*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142440*0 + 3*632*FLEN/8, x4, x1, x2)

inst_47481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3001ffffffffff; valaddr_reg:x3; val_offset:142443*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142443*0 + 3*633*FLEN/8, x4, x1, x2)

inst_47482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3003ffffffffff; valaddr_reg:x3; val_offset:142446*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142446*0 + 3*634*FLEN/8, x4, x1, x2)

inst_47483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3007ffffffffff; valaddr_reg:x3; val_offset:142449*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142449*0 + 3*635*FLEN/8, x4, x1, x2)

inst_47484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x300fffffffffff; valaddr_reg:x3; val_offset:142452*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142452*0 + 3*636*FLEN/8, x4, x1, x2)

inst_47485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x301fffffffffff; valaddr_reg:x3; val_offset:142455*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142455*0 + 3*637*FLEN/8, x4, x1, x2)

inst_47486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x303fffffffffff; valaddr_reg:x3; val_offset:142458*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142458*0 + 3*638*FLEN/8, x4, x1, x2)

inst_47487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x307fffffffffff; valaddr_reg:x3; val_offset:142461*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142461*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_47488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x30ffffffffffff; valaddr_reg:x3; val_offset:142464*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142464*0 + 3*640*FLEN/8, x4, x1, x2)

inst_47489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x31ffffffffffff; valaddr_reg:x3; val_offset:142467*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142467*0 + 3*641*FLEN/8, x4, x1, x2)

inst_47490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x33ffffffffffff; valaddr_reg:x3; val_offset:142470*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142470*0 + 3*642*FLEN/8, x4, x1, x2)

inst_47491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x37ffffffffffff; valaddr_reg:x3; val_offset:142473*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142473*0 + 3*643*FLEN/8, x4, x1, x2)

inst_47492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x38000000000000; valaddr_reg:x3; val_offset:142476*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142476*0 + 3*644*FLEN/8, x4, x1, x2)

inst_47493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3c000000000000; valaddr_reg:x3; val_offset:142479*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142479*0 + 3*645*FLEN/8, x4, x1, x2)

inst_47494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3e000000000000; valaddr_reg:x3; val_offset:142482*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142482*0 + 3*646*FLEN/8, x4, x1, x2)

inst_47495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3f000000000000; valaddr_reg:x3; val_offset:142485*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142485*0 + 3*647*FLEN/8, x4, x1, x2)

inst_47496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3f800000000000; valaddr_reg:x3; val_offset:142488*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142488*0 + 3*648*FLEN/8, x4, x1, x2)

inst_47497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fc00000000000; valaddr_reg:x3; val_offset:142491*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142491*0 + 3*649*FLEN/8, x4, x1, x2)

inst_47498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fe00000000000; valaddr_reg:x3; val_offset:142494*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142494*0 + 3*650*FLEN/8, x4, x1, x2)

inst_47499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ff00000000000; valaddr_reg:x3; val_offset:142497*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142497*0 + 3*651*FLEN/8, x4, x1, x2)

inst_47500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ff80000000000; valaddr_reg:x3; val_offset:142500*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142500*0 + 3*652*FLEN/8, x4, x1, x2)

inst_47501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffc0000000000; valaddr_reg:x3; val_offset:142503*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142503*0 + 3*653*FLEN/8, x4, x1, x2)

inst_47502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffe0000000000; valaddr_reg:x3; val_offset:142506*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142506*0 + 3*654*FLEN/8, x4, x1, x2)

inst_47503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fff0000000000; valaddr_reg:x3; val_offset:142509*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142509*0 + 3*655*FLEN/8, x4, x1, x2)

inst_47504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fff8000000000; valaddr_reg:x3; val_offset:142512*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142512*0 + 3*656*FLEN/8, x4, x1, x2)

inst_47505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffc000000000; valaddr_reg:x3; val_offset:142515*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142515*0 + 3*657*FLEN/8, x4, x1, x2)

inst_47506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffe000000000; valaddr_reg:x3; val_offset:142518*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142518*0 + 3*658*FLEN/8, x4, x1, x2)

inst_47507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffff000000000; valaddr_reg:x3; val_offset:142521*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142521*0 + 3*659*FLEN/8, x4, x1, x2)

inst_47508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffff800000000; valaddr_reg:x3; val_offset:142524*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142524*0 + 3*660*FLEN/8, x4, x1, x2)

inst_47509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffc00000000; valaddr_reg:x3; val_offset:142527*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142527*0 + 3*661*FLEN/8, x4, x1, x2)

inst_47510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffe00000000; valaddr_reg:x3; val_offset:142530*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142530*0 + 3*662*FLEN/8, x4, x1, x2)

inst_47511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffff00000000; valaddr_reg:x3; val_offset:142533*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142533*0 + 3*663*FLEN/8, x4, x1, x2)

inst_47512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffff80000000; valaddr_reg:x3; val_offset:142536*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142536*0 + 3*664*FLEN/8, x4, x1, x2)

inst_47513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffc0000000; valaddr_reg:x3; val_offset:142539*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142539*0 + 3*665*FLEN/8, x4, x1, x2)

inst_47514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffe0000000; valaddr_reg:x3; val_offset:142542*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142542*0 + 3*666*FLEN/8, x4, x1, x2)

inst_47515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffff0000000; valaddr_reg:x3; val_offset:142545*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142545*0 + 3*667*FLEN/8, x4, x1, x2)

inst_47516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffff8000000; valaddr_reg:x3; val_offset:142548*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142548*0 + 3*668*FLEN/8, x4, x1, x2)

inst_47517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffc000000; valaddr_reg:x3; val_offset:142551*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142551*0 + 3*669*FLEN/8, x4, x1, x2)

inst_47518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffe000000; valaddr_reg:x3; val_offset:142554*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142554*0 + 3*670*FLEN/8, x4, x1, x2)

inst_47519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffff000000; valaddr_reg:x3; val_offset:142557*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142557*0 + 3*671*FLEN/8, x4, x1, x2)

inst_47520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffff800000; valaddr_reg:x3; val_offset:142560*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142560*0 + 3*672*FLEN/8, x4, x1, x2)

inst_47521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffc00000; valaddr_reg:x3; val_offset:142563*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142563*0 + 3*673*FLEN/8, x4, x1, x2)

inst_47522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffe00000; valaddr_reg:x3; val_offset:142566*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142566*0 + 3*674*FLEN/8, x4, x1, x2)

inst_47523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffff00000; valaddr_reg:x3; val_offset:142569*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142569*0 + 3*675*FLEN/8, x4, x1, x2)

inst_47524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffff80000; valaddr_reg:x3; val_offset:142572*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142572*0 + 3*676*FLEN/8, x4, x1, x2)

inst_47525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffc0000; valaddr_reg:x3; val_offset:142575*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142575*0 + 3*677*FLEN/8, x4, x1, x2)

inst_47526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffe0000; valaddr_reg:x3; val_offset:142578*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142578*0 + 3*678*FLEN/8, x4, x1, x2)

inst_47527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffff0000; valaddr_reg:x3; val_offset:142581*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142581*0 + 3*679*FLEN/8, x4, x1, x2)

inst_47528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffff8000; valaddr_reg:x3; val_offset:142584*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142584*0 + 3*680*FLEN/8, x4, x1, x2)

inst_47529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffc000; valaddr_reg:x3; val_offset:142587*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142587*0 + 3*681*FLEN/8, x4, x1, x2)

inst_47530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffe000; valaddr_reg:x3; val_offset:142590*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142590*0 + 3*682*FLEN/8, x4, x1, x2)

inst_47531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffff000; valaddr_reg:x3; val_offset:142593*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142593*0 + 3*683*FLEN/8, x4, x1, x2)

inst_47532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffff800; valaddr_reg:x3; val_offset:142596*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142596*0 + 3*684*FLEN/8, x4, x1, x2)

inst_47533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffc00; valaddr_reg:x3; val_offset:142599*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142599*0 + 3*685*FLEN/8, x4, x1, x2)

inst_47534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffe00; valaddr_reg:x3; val_offset:142602*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142602*0 + 3*686*FLEN/8, x4, x1, x2)

inst_47535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffff00; valaddr_reg:x3; val_offset:142605*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142605*0 + 3*687*FLEN/8, x4, x1, x2)

inst_47536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffff80; valaddr_reg:x3; val_offset:142608*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142608*0 + 3*688*FLEN/8, x4, x1, x2)

inst_47537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffffc0; valaddr_reg:x3; val_offset:142611*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142611*0 + 3*689*FLEN/8, x4, x1, x2)

inst_47538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffffe0; valaddr_reg:x3; val_offset:142614*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142614*0 + 3*690*FLEN/8, x4, x1, x2)

inst_47539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffff0; valaddr_reg:x3; val_offset:142617*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142617*0 + 3*691*FLEN/8, x4, x1, x2)

inst_47540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffff8; valaddr_reg:x3; val_offset:142620*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142620*0 + 3*692*FLEN/8, x4, x1, x2)

inst_47541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffffc; valaddr_reg:x3; val_offset:142623*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142623*0 + 3*693*FLEN/8, x4, x1, x2)

inst_47542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3ffffffffffffe; valaddr_reg:x3; val_offset:142626*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142626*0 + 3*694*FLEN/8, x4, x1, x2)

inst_47543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde743a656c90b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de743a656c90b; op2val:0x0;
op3val:0x3fffffffffffff; valaddr_reg:x3; val_offset:142629*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142629*0 + 3*695*FLEN/8, x4, x1, x2)

inst_47544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000000000; valaddr_reg:x3; val_offset:142632*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142632*0 + 3*696*FLEN/8, x4, x1, x2)

inst_47545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000000001; valaddr_reg:x3; val_offset:142635*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142635*0 + 3*697*FLEN/8, x4, x1, x2)

inst_47546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000000003; valaddr_reg:x3; val_offset:142638*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142638*0 + 3*698*FLEN/8, x4, x1, x2)

inst_47547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000000007; valaddr_reg:x3; val_offset:142641*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142641*0 + 3*699*FLEN/8, x4, x1, x2)

inst_47548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000000000f; valaddr_reg:x3; val_offset:142644*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142644*0 + 3*700*FLEN/8, x4, x1, x2)

inst_47549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000000001f; valaddr_reg:x3; val_offset:142647*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142647*0 + 3*701*FLEN/8, x4, x1, x2)

inst_47550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000000003f; valaddr_reg:x3; val_offset:142650*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142650*0 + 3*702*FLEN/8, x4, x1, x2)

inst_47551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000000007f; valaddr_reg:x3; val_offset:142653*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142653*0 + 3*703*FLEN/8, x4, x1, x2)

inst_47552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000000000ff; valaddr_reg:x3; val_offset:142656*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142656*0 + 3*704*FLEN/8, x4, x1, x2)

inst_47553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000000001ff; valaddr_reg:x3; val_offset:142659*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142659*0 + 3*705*FLEN/8, x4, x1, x2)

inst_47554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000000003ff; valaddr_reg:x3; val_offset:142662*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142662*0 + 3*706*FLEN/8, x4, x1, x2)

inst_47555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000000007ff; valaddr_reg:x3; val_offset:142665*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142665*0 + 3*707*FLEN/8, x4, x1, x2)

inst_47556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000000fff; valaddr_reg:x3; val_offset:142668*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142668*0 + 3*708*FLEN/8, x4, x1, x2)

inst_47557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000001fff; valaddr_reg:x3; val_offset:142671*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142671*0 + 3*709*FLEN/8, x4, x1, x2)

inst_47558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000003fff; valaddr_reg:x3; val_offset:142674*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142674*0 + 3*710*FLEN/8, x4, x1, x2)

inst_47559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000007fff; valaddr_reg:x3; val_offset:142677*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142677*0 + 3*711*FLEN/8, x4, x1, x2)

inst_47560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000000ffff; valaddr_reg:x3; val_offset:142680*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142680*0 + 3*712*FLEN/8, x4, x1, x2)

inst_47561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000001ffff; valaddr_reg:x3; val_offset:142683*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142683*0 + 3*713*FLEN/8, x4, x1, x2)

inst_47562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000003ffff; valaddr_reg:x3; val_offset:142686*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142686*0 + 3*714*FLEN/8, x4, x1, x2)

inst_47563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000007ffff; valaddr_reg:x3; val_offset:142689*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142689*0 + 3*715*FLEN/8, x4, x1, x2)

inst_47564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000000fffff; valaddr_reg:x3; val_offset:142692*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142692*0 + 3*716*FLEN/8, x4, x1, x2)

inst_47565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000001fffff; valaddr_reg:x3; val_offset:142695*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142695*0 + 3*717*FLEN/8, x4, x1, x2)

inst_47566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000003fffff; valaddr_reg:x3; val_offset:142698*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142698*0 + 3*718*FLEN/8, x4, x1, x2)

inst_47567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000007fffff; valaddr_reg:x3; val_offset:142701*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142701*0 + 3*719*FLEN/8, x4, x1, x2)

inst_47568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000000ffffff; valaddr_reg:x3; val_offset:142704*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142704*0 + 3*720*FLEN/8, x4, x1, x2)

inst_47569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000001ffffff; valaddr_reg:x3; val_offset:142707*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142707*0 + 3*721*FLEN/8, x4, x1, x2)

inst_47570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000003ffffff; valaddr_reg:x3; val_offset:142710*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142710*0 + 3*722*FLEN/8, x4, x1, x2)

inst_47571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000007ffffff; valaddr_reg:x3; val_offset:142713*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142713*0 + 3*723*FLEN/8, x4, x1, x2)

inst_47572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000000fffffff; valaddr_reg:x3; val_offset:142716*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142716*0 + 3*724*FLEN/8, x4, x1, x2)

inst_47573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000001fffffff; valaddr_reg:x3; val_offset:142719*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142719*0 + 3*725*FLEN/8, x4, x1, x2)

inst_47574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000003fffffff; valaddr_reg:x3; val_offset:142722*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142722*0 + 3*726*FLEN/8, x4, x1, x2)

inst_47575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000007fffffff; valaddr_reg:x3; val_offset:142725*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142725*0 + 3*727*FLEN/8, x4, x1, x2)

inst_47576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600000ffffffff; valaddr_reg:x3; val_offset:142728*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142728*0 + 3*728*FLEN/8, x4, x1, x2)

inst_47577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600001ffffffff; valaddr_reg:x3; val_offset:142731*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142731*0 + 3*729*FLEN/8, x4, x1, x2)

inst_47578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600003ffffffff; valaddr_reg:x3; val_offset:142734*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142734*0 + 3*730*FLEN/8, x4, x1, x2)

inst_47579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600007ffffffff; valaddr_reg:x3; val_offset:142737*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142737*0 + 3*731*FLEN/8, x4, x1, x2)

inst_47580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60000fffffffff; valaddr_reg:x3; val_offset:142740*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142740*0 + 3*732*FLEN/8, x4, x1, x2)

inst_47581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60001fffffffff; valaddr_reg:x3; val_offset:142743*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142743*0 + 3*733*FLEN/8, x4, x1, x2)

inst_47582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60003fffffffff; valaddr_reg:x3; val_offset:142746*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142746*0 + 3*734*FLEN/8, x4, x1, x2)

inst_47583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60007fffffffff; valaddr_reg:x3; val_offset:142749*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142749*0 + 3*735*FLEN/8, x4, x1, x2)

inst_47584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6000ffffffffff; valaddr_reg:x3; val_offset:142752*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142752*0 + 3*736*FLEN/8, x4, x1, x2)

inst_47585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6001ffffffffff; valaddr_reg:x3; val_offset:142755*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142755*0 + 3*737*FLEN/8, x4, x1, x2)

inst_47586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6003ffffffffff; valaddr_reg:x3; val_offset:142758*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142758*0 + 3*738*FLEN/8, x4, x1, x2)

inst_47587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6007ffffffffff; valaddr_reg:x3; val_offset:142761*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142761*0 + 3*739*FLEN/8, x4, x1, x2)

inst_47588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf600fffffffffff; valaddr_reg:x3; val_offset:142764*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142764*0 + 3*740*FLEN/8, x4, x1, x2)

inst_47589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf601fffffffffff; valaddr_reg:x3; val_offset:142767*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142767*0 + 3*741*FLEN/8, x4, x1, x2)

inst_47590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf603fffffffffff; valaddr_reg:x3; val_offset:142770*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142770*0 + 3*742*FLEN/8, x4, x1, x2)

inst_47591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf607fffffffffff; valaddr_reg:x3; val_offset:142773*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142773*0 + 3*743*FLEN/8, x4, x1, x2)

inst_47592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf60ffffffffffff; valaddr_reg:x3; val_offset:142776*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142776*0 + 3*744*FLEN/8, x4, x1, x2)

inst_47593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf61ffffffffffff; valaddr_reg:x3; val_offset:142779*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142779*0 + 3*745*FLEN/8, x4, x1, x2)

inst_47594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf63ffffffffffff; valaddr_reg:x3; val_offset:142782*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142782*0 + 3*746*FLEN/8, x4, x1, x2)

inst_47595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf67ffffffffffff; valaddr_reg:x3; val_offset:142785*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142785*0 + 3*747*FLEN/8, x4, x1, x2)

inst_47596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf68000000000000; valaddr_reg:x3; val_offset:142788*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142788*0 + 3*748*FLEN/8, x4, x1, x2)

inst_47597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6c000000000000; valaddr_reg:x3; val_offset:142791*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142791*0 + 3*749*FLEN/8, x4, x1, x2)

inst_47598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6e000000000000; valaddr_reg:x3; val_offset:142794*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142794*0 + 3*750*FLEN/8, x4, x1, x2)

inst_47599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6f000000000000; valaddr_reg:x3; val_offset:142797*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142797*0 + 3*751*FLEN/8, x4, x1, x2)

inst_47600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6f800000000000; valaddr_reg:x3; val_offset:142800*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142800*0 + 3*752*FLEN/8, x4, x1, x2)

inst_47601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fc00000000000; valaddr_reg:x3; val_offset:142803*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142803*0 + 3*753*FLEN/8, x4, x1, x2)

inst_47602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fe00000000000; valaddr_reg:x3; val_offset:142806*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142806*0 + 3*754*FLEN/8, x4, x1, x2)

inst_47603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ff00000000000; valaddr_reg:x3; val_offset:142809*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142809*0 + 3*755*FLEN/8, x4, x1, x2)

inst_47604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ff80000000000; valaddr_reg:x3; val_offset:142812*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142812*0 + 3*756*FLEN/8, x4, x1, x2)

inst_47605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffc0000000000; valaddr_reg:x3; val_offset:142815*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142815*0 + 3*757*FLEN/8, x4, x1, x2)

inst_47606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffe0000000000; valaddr_reg:x3; val_offset:142818*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142818*0 + 3*758*FLEN/8, x4, x1, x2)

inst_47607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fff0000000000; valaddr_reg:x3; val_offset:142821*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142821*0 + 3*759*FLEN/8, x4, x1, x2)

inst_47608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fff8000000000; valaddr_reg:x3; val_offset:142824*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142824*0 + 3*760*FLEN/8, x4, x1, x2)

inst_47609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fffc000000000; valaddr_reg:x3; val_offset:142827*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142827*0 + 3*761*FLEN/8, x4, x1, x2)

inst_47610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fffe000000000; valaddr_reg:x3; val_offset:142830*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142830*0 + 3*762*FLEN/8, x4, x1, x2)

inst_47611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffff000000000; valaddr_reg:x3; val_offset:142833*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142833*0 + 3*763*FLEN/8, x4, x1, x2)

inst_47612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffff800000000; valaddr_reg:x3; val_offset:142836*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142836*0 + 3*764*FLEN/8, x4, x1, x2)

inst_47613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffffc00000000; valaddr_reg:x3; val_offset:142839*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142839*0 + 3*765*FLEN/8, x4, x1, x2)

inst_47614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6ffffe00000000; valaddr_reg:x3; val_offset:142842*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142842*0 + 3*766*FLEN/8, x4, x1, x2)

inst_47615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xde9cd9749822d and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x11dbb18a19bc9 and fs3 == 1 and fe3 == 0x3f6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9de9cd9749822d; op2val:0x9fd11dbb18a19bc9;
op3val:0xbf6fffff00000000; valaddr_reg:x3; val_offset:142845*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 142845*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321638901668904960,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321643299715416064,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321645498738671616,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321646598250299392,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647148006113280,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647422884020224,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647560322973696,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647629042450432,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647663402188800,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647680582057984,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647689171992576,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647693466959872,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647695614443520,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647696688185344,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697225056256,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697493491712,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697627709440,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697694818304,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697728372736,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697745149952,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697753538560,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697757732864,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697759830016,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697760878592,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761402880,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761665024,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761796096,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761861632,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761894400,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761910784,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761918976,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761923072,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761925120,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761926144,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761926656,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761926912,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927040,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927104,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927136,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927152,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927160,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927164,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927166,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13321647697761927167,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6889861491450069477,64,FLEN)
NAN_BOXED(11516052166969995224,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043264,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043265,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043267,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043271,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043279,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043295,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043327,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043391,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043519,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964043775,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964044287,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964045311,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964047359,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964051455,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964059647,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964076031,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964108799,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964174335,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964305407,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051964567551,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051965091839,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051966140415,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051968237567,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051972431871,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051980820479,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362051997597695,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362052031152127,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362052098260991,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362052232478719,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362052500914175,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362053037785087,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362054111526911,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362056259010559,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362060553977855,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362069143912447,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362086323781631,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362120683519999,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362189402996735,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362326841950207,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206362601719857151,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206363151475671039,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206364250987298815,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206366450010554367,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206370848057065471,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206379644150087679,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206397236336132095,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206432420708220927,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206502789452398591,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206643526940753919,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4206925001917464575,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4207487951870885887,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4208613851777728511,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4208613851777728512,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4209739751684571136,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210302701637992448,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210584176614703104,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210724914103058432,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210795282847236096,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210830467219324928,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210848059405369344,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210856855498391552,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210861253544902656,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210863452568158208,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210864552079785984,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865101835599872,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865376713506816,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865514152460288,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865582871937024,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865617231675392,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865634411544576,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865643001479168,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865647296446464,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865649443930112,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865650517671936,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651054542848,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651322978304,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651457196032,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651524304896,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651557859328,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651574636544,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651583025152,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651587219456,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651589316608,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651590365184,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651590889472,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591151616,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591282688,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591348224,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591380992,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591397376,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591405568,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591409664,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591411712,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591412736,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413248,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413504,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413632,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413696,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413728,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413744,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413752,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413756,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413758,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4210865651591413759,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6889871896230581603,64,FLEN)
NAN_BOXED(2324199297763511768,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074240,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074241,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074243,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074247,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074255,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074271,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074303,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074367,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074495,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074751,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520075263,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520076287,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520078335,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520082431,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520090623,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520107007,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520139775,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520205311,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520336383,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520598527,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230521122815,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230522171391,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230524268543,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230528462847,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230536851455,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230553628671,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230587183103,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230654291967,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230788509695,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231056945151,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933231593816063,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933232667557887,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933234815041535,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933239110008831,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933247699943423,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933264879812607,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933299239550975,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933367959027711,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933505397981183,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933780275888127,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299934330031702015,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299935429543329791,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299937628566585343,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299942026613096447,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299950822706118655,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299968414892163071,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300003599264251903,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300073968008429567,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300214705496784895,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9300496180473495551,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9301059130426916863,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759487,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9302185030333759488,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303310930240602112,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9303873880194023424,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304155355170734080,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304296092659089408,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304366461403267072,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304401645775355904,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304419237961400320,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304428034054422528,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304432432100933632,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304434631124189184,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304435730635816960,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436280391630848,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436555269537792,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436692708491264,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436761427968000,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436795787706368,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436812967575552,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436821557510144,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436825852477440,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436827999961088,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829073702912,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829610573824,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436829879009280,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830013227008,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830080335872,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830113890304,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830130667520,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830139056128,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830143250432,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830145347584,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146396160,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830146920448,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147182592,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147313664,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147379200,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147411968,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147428352,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147436544,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147440640,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147442688,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147443712,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444224,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444480,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444608,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444672,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444704,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444720,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444728,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444732,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444734,64,FLEN)
NAN_BOXED(6889884202042419769,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444735,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671104,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671105,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671107,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671111,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671119,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671135,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671167,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671231,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671359,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671615,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850672127,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850673151,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850675199,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850679295,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850687487,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850703871,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850736639,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850802175,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850933247,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851195391,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617851719679,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617852768255,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617854865407,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617859059711,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617867448319,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617884225535,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617917779967,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617984888831,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618119106559,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618387542015,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055618924412927,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055619998154751,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055622145638399,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055626440605695,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055635030540287,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055652210409471,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055686570147839,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055755289624575,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055892728578047,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056167606484991,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453056717362298879,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453057816873926655,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453060015897182207,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453064413943693311,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453073210036715519,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453090802222759935,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453125986594848767,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453196355339026431,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453337092827381759,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453618567804092415,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9454181517757513727,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356351,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9455307417664356352,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456433317571198976,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9456996267524620288,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457277742501330944,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457418479989686272,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457488848733863936,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457524033105952768,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457541625291997184,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457550421385019392,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457554819431530496,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457557018454786048,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558117966413824,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558667722227712,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457558942600134656,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559080039088128,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559148758564864,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559183118303232,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559200298172416,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559208888107008,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559213183074304,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559215330557952,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216404299776,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559216941170688,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217209606144,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217343823872,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217410932736,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217444487168,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217461264384,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217469652992,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217473847296,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217475944448,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217476993024,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477517312,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477779456,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477910528,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217477976064,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478008832,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478025216,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478033408,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478037504,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478039552,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478040576,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041088,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041344,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041472,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041536,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041568,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041584,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041592,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041596,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041598,64,FLEN)
NAN_BOXED(6889899451667891595,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9457559217478041599,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668928,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668929,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668931,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668935,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668943,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668959,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292668991,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669055,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669183,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669439,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292669951,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292670975,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292673023,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292677119,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292685311,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292701695,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292734463,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292799999,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793292931071,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293193215,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793293717503,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793294766079,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793296863231,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793301057535,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793309446143,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793326223359,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793359777791,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793426886655,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793561104383,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064793829539839,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064794366410751,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064795440152575,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064797587636223,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064801882603519,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064810472538111,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064827652407295,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064862012145663,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81064930731622399,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065068170575871,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065343048482815,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81065892804296703,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81066992315924479,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81069191339180031,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81073589385691135,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81082385478713343,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81099977664757759,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81135162036846591,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81205530781024255,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81346268269379583,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(81627743246090239,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(82190693199511551,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354175,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(83316593106354176,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(84442493013196800,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85005442966618112,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85286917943328768,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85427655431684096,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85498024175861760,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85533208547950592,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85550800733995008,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85559596827017216,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85563994873528320,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85566193896783872,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567293408411648,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85567843164225536,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568118042132480,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568255481085952,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568324200562688,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568358560301056,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568375740170240,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568384330104832,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568388625072128,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568390772555776,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568391846297600,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392383168512,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392651603968,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392785821696,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392852930560,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392886484992,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392903262208,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392911650816,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392915845120,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392917942272,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392918990848,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919515136,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919777280,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919908352,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392919973888,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920006656,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920023040,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920031232,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920035328,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920037376,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038400,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920038912,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039168,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039296,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039360,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039392,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039408,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039416,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039420,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039422,64,FLEN)
NAN_BOXED(6889903017905936109,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(85568392920039423,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111488,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111489,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111491,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111495,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111503,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111519,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111551,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111615,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111743,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111999,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882112511,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882113535,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882115583,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882119679,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882127871,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882144255,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882177023,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882242559,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882373631,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882635775,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798883160063,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798884208639,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798886305791,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798890500095,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798898888703,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798915665919,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798949220351,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799016329215,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799150546943,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799418982399,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510799955853311,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510801029595135,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510803177078783,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510807472046079,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510816061980671,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510833241849855,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510867601588223,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510936321064959,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511073760018431,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511348637925375,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13511898393739263,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13512997905367039,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13515196928622591,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13519594975133695,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13528391068155903,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13545983254200319,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13581167626289151,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13651536370466815,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13792273858822143,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14073748835532799,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(14636698788954111,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796735,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15762598695796736,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16888498602639360,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17451448556060672,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17732923532771328,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17873661021126656,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17944029765304320,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17979214137393152,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17996806323437568,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18005602416459776,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18010000462970880,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18012199486226432,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013298997854208,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18013848753668096,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014123631575040,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014261070528512,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014329790005248,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014364149743616,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014381329612800,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014389919547392,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014394214514688,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014396361998336,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397435740160,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014397972611072,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398241046528,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398375264256,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398442373120,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398475927552,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398492704768,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398501093376,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398505287680,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398507384832,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508433408,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398508957696,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509219840,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509350912,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509416448,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509449216,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509465600,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509473792,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509477888,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509479936,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509480960,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481472,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481728,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481856,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481920,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481952,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481968,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481976,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481980,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481982,64,FLEN)
NAN_BOXED(6889917282686257419,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481983,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458752,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458753,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458755,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458759,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458767,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458783,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458815,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008458879,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008459007,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008459263,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008459775,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008460799,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008462847,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008466943,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008475135,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008491519,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008524287,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008589823,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008720895,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059008983039,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059009507327,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059010555903,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059012653055,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059016847359,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059025235967,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059042013183,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059075567615,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059142676479,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059276894207,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022059545329663,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022060082200575,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022061155942399,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022063303426047,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022067598393343,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022076188327935,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022093368197119,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022127727935487,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022196447412223,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022333886365695,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790022608764272639,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790023158520086527,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790024258031714303,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790026457054969855,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790030855101480959,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790039651194503167,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790057243380547583,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790092427752636415,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790162796496814079,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790303533985169407,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13790585008961880063,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13791147958915301375,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13792273858822143999,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13792273858822144000,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13793399758728986624,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13793962708682407936,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794244183659118592,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794384921147473920,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794455289891651584,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794490474263740416,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794508066449784832,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794516862542807040,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794521260589318144,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794523459612573696,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794524559124201472,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525108880015360,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525383757922304,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525521196875776,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525589916352512,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525624276090880,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525641455960064,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525650045894656,64,FLEN)
NAN_BOXED(6889920074162471469,64,FLEN)
NAN_BOXED(11516018411572403145,64,FLEN)
NAN_BOXED(13794525654340861952,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
