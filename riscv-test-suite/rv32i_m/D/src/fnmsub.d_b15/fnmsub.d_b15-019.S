
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffff800000; valaddr_reg:x3; val_offset:41472*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41472*0 + 3*0*FLEN/8, x4, x1, x2)

inst_13825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffc00000; valaddr_reg:x3; val_offset:41475*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41475*0 + 3*1*FLEN/8, x4, x1, x2)

inst_13826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffe00000; valaddr_reg:x3; val_offset:41478*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41478*0 + 3*2*FLEN/8, x4, x1, x2)

inst_13827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffff00000; valaddr_reg:x3; val_offset:41481*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41481*0 + 3*3*FLEN/8, x4, x1, x2)

inst_13828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffff80000; valaddr_reg:x3; val_offset:41484*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41484*0 + 3*4*FLEN/8, x4, x1, x2)

inst_13829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffc0000; valaddr_reg:x3; val_offset:41487*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41487*0 + 3*5*FLEN/8, x4, x1, x2)

inst_13830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffe0000; valaddr_reg:x3; val_offset:41490*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41490*0 + 3*6*FLEN/8, x4, x1, x2)

inst_13831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffff0000; valaddr_reg:x3; val_offset:41493*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41493*0 + 3*7*FLEN/8, x4, x1, x2)

inst_13832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffff8000; valaddr_reg:x3; val_offset:41496*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41496*0 + 3*8*FLEN/8, x4, x1, x2)

inst_13833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffc000; valaddr_reg:x3; val_offset:41499*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41499*0 + 3*9*FLEN/8, x4, x1, x2)

inst_13834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffe000; valaddr_reg:x3; val_offset:41502*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41502*0 + 3*10*FLEN/8, x4, x1, x2)

inst_13835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffff000; valaddr_reg:x3; val_offset:41505*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41505*0 + 3*11*FLEN/8, x4, x1, x2)

inst_13836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffff800; valaddr_reg:x3; val_offset:41508*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41508*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffc00; valaddr_reg:x3; val_offset:41511*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41511*0 + 3*13*FLEN/8, x4, x1, x2)

inst_13838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffe00; valaddr_reg:x3; val_offset:41514*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41514*0 + 3*14*FLEN/8, x4, x1, x2)

inst_13839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffff00; valaddr_reg:x3; val_offset:41517*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41517*0 + 3*15*FLEN/8, x4, x1, x2)

inst_13840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffff80; valaddr_reg:x3; val_offset:41520*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41520*0 + 3*16*FLEN/8, x4, x1, x2)

inst_13841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:41523*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41523*0 + 3*17*FLEN/8, x4, x1, x2)

inst_13842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:41526*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41526*0 + 3*18*FLEN/8, x4, x1, x2)

inst_13843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:41529*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41529*0 + 3*19*FLEN/8, x4, x1, x2)

inst_13844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:41532*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41532*0 + 3*20*FLEN/8, x4, x1, x2)

inst_13845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:41535*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41535*0 + 3*21*FLEN/8, x4, x1, x2)

inst_13846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:41538*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41538*0 + 3*22*FLEN/8, x4, x1, x2)

inst_13847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffffffffff; valaddr_reg:x3; val_offset:41541*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41541*0 + 3*23*FLEN/8, x4, x1, x2)

inst_13848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:41544*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41544*0 + 3*24*FLEN/8, x4, x1, x2)

inst_13849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:41547*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41547*0 + 3*25*FLEN/8, x4, x1, x2)

inst_13850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:41550*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41550*0 + 3*26*FLEN/8, x4, x1, x2)

inst_13851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:41553*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41553*0 + 3*27*FLEN/8, x4, x1, x2)

inst_13852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:41556*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41556*0 + 3*28*FLEN/8, x4, x1, x2)

inst_13853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:41559*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41559*0 + 3*29*FLEN/8, x4, x1, x2)

inst_13854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:41562*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41562*0 + 3*30*FLEN/8, x4, x1, x2)

inst_13855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:41565*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41565*0 + 3*31*FLEN/8, x4, x1, x2)

inst_13856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:41568*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41568*0 + 3*32*FLEN/8, x4, x1, x2)

inst_13857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:41571*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41571*0 + 3*33*FLEN/8, x4, x1, x2)

inst_13858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:41574*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41574*0 + 3*34*FLEN/8, x4, x1, x2)

inst_13859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:41577*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41577*0 + 3*35*FLEN/8, x4, x1, x2)

inst_13860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:41580*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41580*0 + 3*36*FLEN/8, x4, x1, x2)

inst_13861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:41583*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41583*0 + 3*37*FLEN/8, x4, x1, x2)

inst_13862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:41586*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41586*0 + 3*38*FLEN/8, x4, x1, x2)

inst_13863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:41589*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41589*0 + 3*39*FLEN/8, x4, x1, x2)

inst_13864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:41592*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41592*0 + 3*40*FLEN/8, x4, x1, x2)

inst_13865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:41595*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41595*0 + 3*41*FLEN/8, x4, x1, x2)

inst_13866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:41598*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41598*0 + 3*42*FLEN/8, x4, x1, x2)

inst_13867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:41601*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41601*0 + 3*43*FLEN/8, x4, x1, x2)

inst_13868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:41604*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41604*0 + 3*44*FLEN/8, x4, x1, x2)

inst_13869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:41607*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41607*0 + 3*45*FLEN/8, x4, x1, x2)

inst_13870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:41610*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41610*0 + 3*46*FLEN/8, x4, x1, x2)

inst_13871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:41613*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41613*0 + 3*47*FLEN/8, x4, x1, x2)

inst_13872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:41616*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41616*0 + 3*48*FLEN/8, x4, x1, x2)

inst_13873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:41619*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41619*0 + 3*49*FLEN/8, x4, x1, x2)

inst_13874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:41622*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41622*0 + 3*50*FLEN/8, x4, x1, x2)

inst_13875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:41625*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41625*0 + 3*51*FLEN/8, x4, x1, x2)

inst_13876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:41628*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41628*0 + 3*52*FLEN/8, x4, x1, x2)

inst_13877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:41631*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41631*0 + 3*53*FLEN/8, x4, x1, x2)

inst_13878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:41634*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41634*0 + 3*54*FLEN/8, x4, x1, x2)

inst_13879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:41637*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41637*0 + 3*55*FLEN/8, x4, x1, x2)

inst_13880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:41640*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41640*0 + 3*56*FLEN/8, x4, x1, x2)

inst_13881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:41643*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41643*0 + 3*57*FLEN/8, x4, x1, x2)

inst_13882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:41646*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41646*0 + 3*58*FLEN/8, x4, x1, x2)

inst_13883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:41649*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41649*0 + 3*59*FLEN/8, x4, x1, x2)

inst_13884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:41652*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41652*0 + 3*60*FLEN/8, x4, x1, x2)

inst_13885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:41655*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41655*0 + 3*61*FLEN/8, x4, x1, x2)

inst_13886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:41658*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41658*0 + 3*62*FLEN/8, x4, x1, x2)

inst_13887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:41661*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41661*0 + 3*63*FLEN/8, x4, x1, x2)

inst_13888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:41664*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41664*0 + 3*64*FLEN/8, x4, x1, x2)

inst_13889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:41667*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41667*0 + 3*65*FLEN/8, x4, x1, x2)

inst_13890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:41670*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41670*0 + 3*66*FLEN/8, x4, x1, x2)

inst_13891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:41673*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41673*0 + 3*67*FLEN/8, x4, x1, x2)

inst_13892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:41676*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41676*0 + 3*68*FLEN/8, x4, x1, x2)

inst_13893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:41679*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41679*0 + 3*69*FLEN/8, x4, x1, x2)

inst_13894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:41682*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41682*0 + 3*70*FLEN/8, x4, x1, x2)

inst_13895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:41685*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41685*0 + 3*71*FLEN/8, x4, x1, x2)

inst_13896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:41688*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41688*0 + 3*72*FLEN/8, x4, x1, x2)

inst_13897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:41691*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41691*0 + 3*73*FLEN/8, x4, x1, x2)

inst_13898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:41694*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41694*0 + 3*74*FLEN/8, x4, x1, x2)

inst_13899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:41697*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41697*0 + 3*75*FLEN/8, x4, x1, x2)

inst_13900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:41700*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41700*0 + 3*76*FLEN/8, x4, x1, x2)

inst_13901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:41703*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41703*0 + 3*77*FLEN/8, x4, x1, x2)

inst_13902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:41706*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41706*0 + 3*78*FLEN/8, x4, x1, x2)

inst_13903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:41709*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41709*0 + 3*79*FLEN/8, x4, x1, x2)

inst_13904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:41712*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41712*0 + 3*80*FLEN/8, x4, x1, x2)

inst_13905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:41715*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41715*0 + 3*81*FLEN/8, x4, x1, x2)

inst_13906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:41718*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41718*0 + 3*82*FLEN/8, x4, x1, x2)

inst_13907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:41721*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41721*0 + 3*83*FLEN/8, x4, x1, x2)

inst_13908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:41724*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41724*0 + 3*84*FLEN/8, x4, x1, x2)

inst_13909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:41727*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41727*0 + 3*85*FLEN/8, x4, x1, x2)

inst_13910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:41730*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41730*0 + 3*86*FLEN/8, x4, x1, x2)

inst_13911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:41733*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41733*0 + 3*87*FLEN/8, x4, x1, x2)

inst_13912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:41736*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41736*0 + 3*88*FLEN/8, x4, x1, x2)

inst_13913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:41739*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41739*0 + 3*89*FLEN/8, x4, x1, x2)

inst_13914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:41742*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41742*0 + 3*90*FLEN/8, x4, x1, x2)

inst_13915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:41745*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41745*0 + 3*91*FLEN/8, x4, x1, x2)

inst_13916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:41748*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41748*0 + 3*92*FLEN/8, x4, x1, x2)

inst_13917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:41751*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41751*0 + 3*93*FLEN/8, x4, x1, x2)

inst_13918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:41754*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41754*0 + 3*94*FLEN/8, x4, x1, x2)

inst_13919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:41757*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41757*0 + 3*95*FLEN/8, x4, x1, x2)

inst_13920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:41760*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41760*0 + 3*96*FLEN/8, x4, x1, x2)

inst_13921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:41763*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41763*0 + 3*97*FLEN/8, x4, x1, x2)

inst_13922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:41766*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41766*0 + 3*98*FLEN/8, x4, x1, x2)

inst_13923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:41769*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41769*0 + 3*99*FLEN/8, x4, x1, x2)

inst_13924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:41772*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41772*0 + 3*100*FLEN/8, x4, x1, x2)

inst_13925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:41775*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41775*0 + 3*101*FLEN/8, x4, x1, x2)

inst_13926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:41778*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41778*0 + 3*102*FLEN/8, x4, x1, x2)

inst_13927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:41781*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41781*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:41784*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41784*0 + 3*104*FLEN/8, x4, x1, x2)

inst_13929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:41787*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41787*0 + 3*105*FLEN/8, x4, x1, x2)

inst_13930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:41790*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41790*0 + 3*106*FLEN/8, x4, x1, x2)

inst_13931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:41793*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41793*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:41796*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41796*0 + 3*108*FLEN/8, x4, x1, x2)

inst_13933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:41799*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41799*0 + 3*109*FLEN/8, x4, x1, x2)

inst_13934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:41802*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41802*0 + 3*110*FLEN/8, x4, x1, x2)

inst_13935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:41805*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41805*0 + 3*111*FLEN/8, x4, x1, x2)

inst_13936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:41808*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41808*0 + 3*112*FLEN/8, x4, x1, x2)

inst_13937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:41811*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41811*0 + 3*113*FLEN/8, x4, x1, x2)

inst_13938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:41814*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41814*0 + 3*114*FLEN/8, x4, x1, x2)

inst_13939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:41817*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41817*0 + 3*115*FLEN/8, x4, x1, x2)

inst_13940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:41820*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41820*0 + 3*116*FLEN/8, x4, x1, x2)

inst_13941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:41823*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41823*0 + 3*117*FLEN/8, x4, x1, x2)

inst_13942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:41826*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41826*0 + 3*118*FLEN/8, x4, x1, x2)

inst_13943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:41829*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41829*0 + 3*119*FLEN/8, x4, x1, x2)

inst_13944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:41832*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41832*0 + 3*120*FLEN/8, x4, x1, x2)

inst_13945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:41835*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41835*0 + 3*121*FLEN/8, x4, x1, x2)

inst_13946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:41838*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41838*0 + 3*122*FLEN/8, x4, x1, x2)

inst_13947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:41841*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41841*0 + 3*123*FLEN/8, x4, x1, x2)

inst_13948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:41844*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41844*0 + 3*124*FLEN/8, x4, x1, x2)

inst_13949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:41847*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41847*0 + 3*125*FLEN/8, x4, x1, x2)

inst_13950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:41850*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41850*0 + 3*126*FLEN/8, x4, x1, x2)

inst_13951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:41853*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41853*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:41856*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41856*0 + 3*128*FLEN/8, x4, x1, x2)

inst_13953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:41859*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41859*0 + 3*129*FLEN/8, x4, x1, x2)

inst_13954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:41862*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41862*0 + 3*130*FLEN/8, x4, x1, x2)

inst_13955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:41865*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41865*0 + 3*131*FLEN/8, x4, x1, x2)

inst_13956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:41868*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41868*0 + 3*132*FLEN/8, x4, x1, x2)

inst_13957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:41871*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41871*0 + 3*133*FLEN/8, x4, x1, x2)

inst_13958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:41874*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41874*0 + 3*134*FLEN/8, x4, x1, x2)

inst_13959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:41877*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41877*0 + 3*135*FLEN/8, x4, x1, x2)

inst_13960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:41880*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41880*0 + 3*136*FLEN/8, x4, x1, x2)

inst_13961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:41883*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41883*0 + 3*137*FLEN/8, x4, x1, x2)

inst_13962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:41886*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41886*0 + 3*138*FLEN/8, x4, x1, x2)

inst_13963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:41889*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41889*0 + 3*139*FLEN/8, x4, x1, x2)

inst_13964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:41892*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41892*0 + 3*140*FLEN/8, x4, x1, x2)

inst_13965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:41895*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41895*0 + 3*141*FLEN/8, x4, x1, x2)

inst_13966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:41898*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41898*0 + 3*142*FLEN/8, x4, x1, x2)

inst_13967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:41901*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41901*0 + 3*143*FLEN/8, x4, x1, x2)

inst_13968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:41904*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41904*0 + 3*144*FLEN/8, x4, x1, x2)

inst_13969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:41907*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41907*0 + 3*145*FLEN/8, x4, x1, x2)

inst_13970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:41910*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41910*0 + 3*146*FLEN/8, x4, x1, x2)

inst_13971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:41913*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41913*0 + 3*147*FLEN/8, x4, x1, x2)

inst_13972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:41916*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41916*0 + 3*148*FLEN/8, x4, x1, x2)

inst_13973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe331ee2f6ed07 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e331ee2f6ed07; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:41919*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41919*0 + 3*149*FLEN/8, x4, x1, x2)

inst_13974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000000000; valaddr_reg:x3; val_offset:41922*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41922*0 + 3*150*FLEN/8, x4, x1, x2)

inst_13975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000000001; valaddr_reg:x3; val_offset:41925*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41925*0 + 3*151*FLEN/8, x4, x1, x2)

inst_13976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000000003; valaddr_reg:x3; val_offset:41928*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41928*0 + 3*152*FLEN/8, x4, x1, x2)

inst_13977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000000007; valaddr_reg:x3; val_offset:41931*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41931*0 + 3*153*FLEN/8, x4, x1, x2)

inst_13978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000000000f; valaddr_reg:x3; val_offset:41934*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41934*0 + 3*154*FLEN/8, x4, x1, x2)

inst_13979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000000001f; valaddr_reg:x3; val_offset:41937*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41937*0 + 3*155*FLEN/8, x4, x1, x2)

inst_13980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000000003f; valaddr_reg:x3; val_offset:41940*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41940*0 + 3*156*FLEN/8, x4, x1, x2)

inst_13981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000000007f; valaddr_reg:x3; val_offset:41943*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41943*0 + 3*157*FLEN/8, x4, x1, x2)

inst_13982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000000000ff; valaddr_reg:x3; val_offset:41946*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41946*0 + 3*158*FLEN/8, x4, x1, x2)

inst_13983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000000001ff; valaddr_reg:x3; val_offset:41949*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41949*0 + 3*159*FLEN/8, x4, x1, x2)

inst_13984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000000003ff; valaddr_reg:x3; val_offset:41952*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41952*0 + 3*160*FLEN/8, x4, x1, x2)

inst_13985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000000007ff; valaddr_reg:x3; val_offset:41955*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41955*0 + 3*161*FLEN/8, x4, x1, x2)

inst_13986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000000fff; valaddr_reg:x3; val_offset:41958*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41958*0 + 3*162*FLEN/8, x4, x1, x2)

inst_13987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000001fff; valaddr_reg:x3; val_offset:41961*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41961*0 + 3*163*FLEN/8, x4, x1, x2)

inst_13988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000003fff; valaddr_reg:x3; val_offset:41964*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41964*0 + 3*164*FLEN/8, x4, x1, x2)

inst_13989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000007fff; valaddr_reg:x3; val_offset:41967*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41967*0 + 3*165*FLEN/8, x4, x1, x2)

inst_13990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000000ffff; valaddr_reg:x3; val_offset:41970*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41970*0 + 3*166*FLEN/8, x4, x1, x2)

inst_13991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000001ffff; valaddr_reg:x3; val_offset:41973*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41973*0 + 3*167*FLEN/8, x4, x1, x2)

inst_13992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000003ffff; valaddr_reg:x3; val_offset:41976*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41976*0 + 3*168*FLEN/8, x4, x1, x2)

inst_13993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000007ffff; valaddr_reg:x3; val_offset:41979*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41979*0 + 3*169*FLEN/8, x4, x1, x2)

inst_13994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000000fffff; valaddr_reg:x3; val_offset:41982*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41982*0 + 3*170*FLEN/8, x4, x1, x2)

inst_13995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000001fffff; valaddr_reg:x3; val_offset:41985*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41985*0 + 3*171*FLEN/8, x4, x1, x2)

inst_13996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000003fffff; valaddr_reg:x3; val_offset:41988*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41988*0 + 3*172*FLEN/8, x4, x1, x2)

inst_13997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000007fffff; valaddr_reg:x3; val_offset:41991*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41991*0 + 3*173*FLEN/8, x4, x1, x2)

inst_13998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000000ffffff; valaddr_reg:x3; val_offset:41994*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41994*0 + 3*174*FLEN/8, x4, x1, x2)

inst_13999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000001ffffff; valaddr_reg:x3; val_offset:41997*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41997*0 + 3*175*FLEN/8, x4, x1, x2)

inst_14000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000003ffffff; valaddr_reg:x3; val_offset:42000*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42000*0 + 3*176*FLEN/8, x4, x1, x2)

inst_14001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000007ffffff; valaddr_reg:x3; val_offset:42003*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42003*0 + 3*177*FLEN/8, x4, x1, x2)

inst_14002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000000fffffff; valaddr_reg:x3; val_offset:42006*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42006*0 + 3*178*FLEN/8, x4, x1, x2)

inst_14003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000001fffffff; valaddr_reg:x3; val_offset:42009*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42009*0 + 3*179*FLEN/8, x4, x1, x2)

inst_14004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000003fffffff; valaddr_reg:x3; val_offset:42012*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42012*0 + 3*180*FLEN/8, x4, x1, x2)

inst_14005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000007fffffff; valaddr_reg:x3; val_offset:42015*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42015*0 + 3*181*FLEN/8, x4, x1, x2)

inst_14006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800000ffffffff; valaddr_reg:x3; val_offset:42018*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42018*0 + 3*182*FLEN/8, x4, x1, x2)

inst_14007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800001ffffffff; valaddr_reg:x3; val_offset:42021*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42021*0 + 3*183*FLEN/8, x4, x1, x2)

inst_14008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800003ffffffff; valaddr_reg:x3; val_offset:42024*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42024*0 + 3*184*FLEN/8, x4, x1, x2)

inst_14009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800007ffffffff; valaddr_reg:x3; val_offset:42027*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42027*0 + 3*185*FLEN/8, x4, x1, x2)

inst_14010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80000fffffffff; valaddr_reg:x3; val_offset:42030*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42030*0 + 3*186*FLEN/8, x4, x1, x2)

inst_14011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80001fffffffff; valaddr_reg:x3; val_offset:42033*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42033*0 + 3*187*FLEN/8, x4, x1, x2)

inst_14012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80003fffffffff; valaddr_reg:x3; val_offset:42036*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42036*0 + 3*188*FLEN/8, x4, x1, x2)

inst_14013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80007fffffffff; valaddr_reg:x3; val_offset:42039*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42039*0 + 3*189*FLEN/8, x4, x1, x2)

inst_14014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8000ffffffffff; valaddr_reg:x3; val_offset:42042*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42042*0 + 3*190*FLEN/8, x4, x1, x2)

inst_14015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8001ffffffffff; valaddr_reg:x3; val_offset:42045*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42045*0 + 3*191*FLEN/8, x4, x1, x2)

inst_14016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8003ffffffffff; valaddr_reg:x3; val_offset:42048*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42048*0 + 3*192*FLEN/8, x4, x1, x2)

inst_14017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8007ffffffffff; valaddr_reg:x3; val_offset:42051*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42051*0 + 3*193*FLEN/8, x4, x1, x2)

inst_14018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d800fffffffffff; valaddr_reg:x3; val_offset:42054*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42054*0 + 3*194*FLEN/8, x4, x1, x2)

inst_14019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d801fffffffffff; valaddr_reg:x3; val_offset:42057*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42057*0 + 3*195*FLEN/8, x4, x1, x2)

inst_14020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d803fffffffffff; valaddr_reg:x3; val_offset:42060*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42060*0 + 3*196*FLEN/8, x4, x1, x2)

inst_14021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d807fffffffffff; valaddr_reg:x3; val_offset:42063*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42063*0 + 3*197*FLEN/8, x4, x1, x2)

inst_14022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d80ffffffffffff; valaddr_reg:x3; val_offset:42066*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42066*0 + 3*198*FLEN/8, x4, x1, x2)

inst_14023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d81ffffffffffff; valaddr_reg:x3; val_offset:42069*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42069*0 + 3*199*FLEN/8, x4, x1, x2)

inst_14024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d83ffffffffffff; valaddr_reg:x3; val_offset:42072*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42072*0 + 3*200*FLEN/8, x4, x1, x2)

inst_14025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d87ffffffffffff; valaddr_reg:x3; val_offset:42075*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42075*0 + 3*201*FLEN/8, x4, x1, x2)

inst_14026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d88000000000000; valaddr_reg:x3; val_offset:42078*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42078*0 + 3*202*FLEN/8, x4, x1, x2)

inst_14027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8c000000000000; valaddr_reg:x3; val_offset:42081*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42081*0 + 3*203*FLEN/8, x4, x1, x2)

inst_14028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8e000000000000; valaddr_reg:x3; val_offset:42084*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42084*0 + 3*204*FLEN/8, x4, x1, x2)

inst_14029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8f000000000000; valaddr_reg:x3; val_offset:42087*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42087*0 + 3*205*FLEN/8, x4, x1, x2)

inst_14030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8f800000000000; valaddr_reg:x3; val_offset:42090*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42090*0 + 3*206*FLEN/8, x4, x1, x2)

inst_14031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fc00000000000; valaddr_reg:x3; val_offset:42093*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42093*0 + 3*207*FLEN/8, x4, x1, x2)

inst_14032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fe00000000000; valaddr_reg:x3; val_offset:42096*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42096*0 + 3*208*FLEN/8, x4, x1, x2)

inst_14033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ff00000000000; valaddr_reg:x3; val_offset:42099*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42099*0 + 3*209*FLEN/8, x4, x1, x2)

inst_14034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ff80000000000; valaddr_reg:x3; val_offset:42102*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42102*0 + 3*210*FLEN/8, x4, x1, x2)

inst_14035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffc0000000000; valaddr_reg:x3; val_offset:42105*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42105*0 + 3*211*FLEN/8, x4, x1, x2)

inst_14036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffe0000000000; valaddr_reg:x3; val_offset:42108*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42108*0 + 3*212*FLEN/8, x4, x1, x2)

inst_14037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fff0000000000; valaddr_reg:x3; val_offset:42111*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42111*0 + 3*213*FLEN/8, x4, x1, x2)

inst_14038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fff8000000000; valaddr_reg:x3; val_offset:42114*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42114*0 + 3*214*FLEN/8, x4, x1, x2)

inst_14039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffc000000000; valaddr_reg:x3; val_offset:42117*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42117*0 + 3*215*FLEN/8, x4, x1, x2)

inst_14040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffe000000000; valaddr_reg:x3; val_offset:42120*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42120*0 + 3*216*FLEN/8, x4, x1, x2)

inst_14041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffff000000000; valaddr_reg:x3; val_offset:42123*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42123*0 + 3*217*FLEN/8, x4, x1, x2)

inst_14042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffff800000000; valaddr_reg:x3; val_offset:42126*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42126*0 + 3*218*FLEN/8, x4, x1, x2)

inst_14043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffc00000000; valaddr_reg:x3; val_offset:42129*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42129*0 + 3*219*FLEN/8, x4, x1, x2)

inst_14044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffe00000000; valaddr_reg:x3; val_offset:42132*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42132*0 + 3*220*FLEN/8, x4, x1, x2)

inst_14045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffff00000000; valaddr_reg:x3; val_offset:42135*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42135*0 + 3*221*FLEN/8, x4, x1, x2)

inst_14046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffff80000000; valaddr_reg:x3; val_offset:42138*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42138*0 + 3*222*FLEN/8, x4, x1, x2)

inst_14047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffc0000000; valaddr_reg:x3; val_offset:42141*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42141*0 + 3*223*FLEN/8, x4, x1, x2)

inst_14048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffe0000000; valaddr_reg:x3; val_offset:42144*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42144*0 + 3*224*FLEN/8, x4, x1, x2)

inst_14049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffff0000000; valaddr_reg:x3; val_offset:42147*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42147*0 + 3*225*FLEN/8, x4, x1, x2)

inst_14050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffff8000000; valaddr_reg:x3; val_offset:42150*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42150*0 + 3*226*FLEN/8, x4, x1, x2)

inst_14051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffc000000; valaddr_reg:x3; val_offset:42153*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42153*0 + 3*227*FLEN/8, x4, x1, x2)

inst_14052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffe000000; valaddr_reg:x3; val_offset:42156*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42156*0 + 3*228*FLEN/8, x4, x1, x2)

inst_14053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffff000000; valaddr_reg:x3; val_offset:42159*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42159*0 + 3*229*FLEN/8, x4, x1, x2)

inst_14054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffff800000; valaddr_reg:x3; val_offset:42162*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42162*0 + 3*230*FLEN/8, x4, x1, x2)

inst_14055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffc00000; valaddr_reg:x3; val_offset:42165*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42165*0 + 3*231*FLEN/8, x4, x1, x2)

inst_14056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffe00000; valaddr_reg:x3; val_offset:42168*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42168*0 + 3*232*FLEN/8, x4, x1, x2)

inst_14057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffff00000; valaddr_reg:x3; val_offset:42171*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42171*0 + 3*233*FLEN/8, x4, x1, x2)

inst_14058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffff80000; valaddr_reg:x3; val_offset:42174*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42174*0 + 3*234*FLEN/8, x4, x1, x2)

inst_14059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffc0000; valaddr_reg:x3; val_offset:42177*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42177*0 + 3*235*FLEN/8, x4, x1, x2)

inst_14060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffe0000; valaddr_reg:x3; val_offset:42180*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42180*0 + 3*236*FLEN/8, x4, x1, x2)

inst_14061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffff0000; valaddr_reg:x3; val_offset:42183*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42183*0 + 3*237*FLEN/8, x4, x1, x2)

inst_14062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffff8000; valaddr_reg:x3; val_offset:42186*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42186*0 + 3*238*FLEN/8, x4, x1, x2)

inst_14063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffc000; valaddr_reg:x3; val_offset:42189*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42189*0 + 3*239*FLEN/8, x4, x1, x2)

inst_14064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffe000; valaddr_reg:x3; val_offset:42192*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42192*0 + 3*240*FLEN/8, x4, x1, x2)

inst_14065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffff000; valaddr_reg:x3; val_offset:42195*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42195*0 + 3*241*FLEN/8, x4, x1, x2)

inst_14066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffff800; valaddr_reg:x3; val_offset:42198*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42198*0 + 3*242*FLEN/8, x4, x1, x2)

inst_14067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffc00; valaddr_reg:x3; val_offset:42201*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42201*0 + 3*243*FLEN/8, x4, x1, x2)

inst_14068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffe00; valaddr_reg:x3; val_offset:42204*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42204*0 + 3*244*FLEN/8, x4, x1, x2)

inst_14069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffff00; valaddr_reg:x3; val_offset:42207*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42207*0 + 3*245*FLEN/8, x4, x1, x2)

inst_14070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffff80; valaddr_reg:x3; val_offset:42210*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42210*0 + 3*246*FLEN/8, x4, x1, x2)

inst_14071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffffc0; valaddr_reg:x3; val_offset:42213*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42213*0 + 3*247*FLEN/8, x4, x1, x2)

inst_14072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffffe0; valaddr_reg:x3; val_offset:42216*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42216*0 + 3*248*FLEN/8, x4, x1, x2)

inst_14073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffff0; valaddr_reg:x3; val_offset:42219*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42219*0 + 3*249*FLEN/8, x4, x1, x2)

inst_14074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffff8; valaddr_reg:x3; val_offset:42222*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42222*0 + 3*250*FLEN/8, x4, x1, x2)

inst_14075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffffc; valaddr_reg:x3; val_offset:42225*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42225*0 + 3*251*FLEN/8, x4, x1, x2)

inst_14076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8ffffffffffffe; valaddr_reg:x3; val_offset:42228*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42228*0 + 3*252*FLEN/8, x4, x1, x2)

inst_14077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3d8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3d8fffffffffffff; valaddr_reg:x3; val_offset:42231*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42231*0 + 3*253*FLEN/8, x4, x1, x2)

inst_14078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:42234*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42234*0 + 3*254*FLEN/8, x4, x1, x2)

inst_14079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:42237*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42237*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_14080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:42240*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42240*0 + 3*256*FLEN/8, x4, x1, x2)

inst_14081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:42243*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42243*0 + 3*257*FLEN/8, x4, x1, x2)

inst_14082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:42246*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42246*0 + 3*258*FLEN/8, x4, x1, x2)

inst_14083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:42249*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42249*0 + 3*259*FLEN/8, x4, x1, x2)

inst_14084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:42252*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42252*0 + 3*260*FLEN/8, x4, x1, x2)

inst_14085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:42255*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42255*0 + 3*261*FLEN/8, x4, x1, x2)

inst_14086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:42258*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42258*0 + 3*262*FLEN/8, x4, x1, x2)

inst_14087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:42261*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42261*0 + 3*263*FLEN/8, x4, x1, x2)

inst_14088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:42264*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42264*0 + 3*264*FLEN/8, x4, x1, x2)

inst_14089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:42267*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42267*0 + 3*265*FLEN/8, x4, x1, x2)

inst_14090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:42270*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42270*0 + 3*266*FLEN/8, x4, x1, x2)

inst_14091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:42273*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42273*0 + 3*267*FLEN/8, x4, x1, x2)

inst_14092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:42276*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42276*0 + 3*268*FLEN/8, x4, x1, x2)

inst_14093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:42279*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42279*0 + 3*269*FLEN/8, x4, x1, x2)

inst_14094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:42282*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42282*0 + 3*270*FLEN/8, x4, x1, x2)

inst_14095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:42285*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42285*0 + 3*271*FLEN/8, x4, x1, x2)

inst_14096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:42288*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42288*0 + 3*272*FLEN/8, x4, x1, x2)

inst_14097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:42291*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42291*0 + 3*273*FLEN/8, x4, x1, x2)

inst_14098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:42294*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42294*0 + 3*274*FLEN/8, x4, x1, x2)

inst_14099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xe8494857b4edf and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0c6ec589bb2d5 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7e8494857b4edf; op2val:0x2060c6ec589bb2d5;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:42297*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42297*0 + 3*275*FLEN/8, x4, x1, x2)

inst_14100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000000000; valaddr_reg:x3; val_offset:42300*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42300*0 + 3*276*FLEN/8, x4, x1, x2)

inst_14101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000000001; valaddr_reg:x3; val_offset:42303*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42303*0 + 3*277*FLEN/8, x4, x1, x2)

inst_14102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000000003; valaddr_reg:x3; val_offset:42306*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42306*0 + 3*278*FLEN/8, x4, x1, x2)

inst_14103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000000007; valaddr_reg:x3; val_offset:42309*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42309*0 + 3*279*FLEN/8, x4, x1, x2)

inst_14104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000000000f; valaddr_reg:x3; val_offset:42312*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42312*0 + 3*280*FLEN/8, x4, x1, x2)

inst_14105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000000001f; valaddr_reg:x3; val_offset:42315*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42315*0 + 3*281*FLEN/8, x4, x1, x2)

inst_14106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000000003f; valaddr_reg:x3; val_offset:42318*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42318*0 + 3*282*FLEN/8, x4, x1, x2)

inst_14107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000000007f; valaddr_reg:x3; val_offset:42321*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42321*0 + 3*283*FLEN/8, x4, x1, x2)

inst_14108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000000000ff; valaddr_reg:x3; val_offset:42324*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42324*0 + 3*284*FLEN/8, x4, x1, x2)

inst_14109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000000001ff; valaddr_reg:x3; val_offset:42327*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42327*0 + 3*285*FLEN/8, x4, x1, x2)

inst_14110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000000003ff; valaddr_reg:x3; val_offset:42330*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42330*0 + 3*286*FLEN/8, x4, x1, x2)

inst_14111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000000007ff; valaddr_reg:x3; val_offset:42333*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42333*0 + 3*287*FLEN/8, x4, x1, x2)

inst_14112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000000fff; valaddr_reg:x3; val_offset:42336*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42336*0 + 3*288*FLEN/8, x4, x1, x2)

inst_14113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000001fff; valaddr_reg:x3; val_offset:42339*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42339*0 + 3*289*FLEN/8, x4, x1, x2)

inst_14114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000003fff; valaddr_reg:x3; val_offset:42342*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42342*0 + 3*290*FLEN/8, x4, x1, x2)

inst_14115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000007fff; valaddr_reg:x3; val_offset:42345*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42345*0 + 3*291*FLEN/8, x4, x1, x2)

inst_14116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000000ffff; valaddr_reg:x3; val_offset:42348*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42348*0 + 3*292*FLEN/8, x4, x1, x2)

inst_14117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000001ffff; valaddr_reg:x3; val_offset:42351*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42351*0 + 3*293*FLEN/8, x4, x1, x2)

inst_14118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000003ffff; valaddr_reg:x3; val_offset:42354*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42354*0 + 3*294*FLEN/8, x4, x1, x2)

inst_14119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000007ffff; valaddr_reg:x3; val_offset:42357*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42357*0 + 3*295*FLEN/8, x4, x1, x2)

inst_14120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000000fffff; valaddr_reg:x3; val_offset:42360*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42360*0 + 3*296*FLEN/8, x4, x1, x2)

inst_14121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000001fffff; valaddr_reg:x3; val_offset:42363*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42363*0 + 3*297*FLEN/8, x4, x1, x2)

inst_14122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000003fffff; valaddr_reg:x3; val_offset:42366*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42366*0 + 3*298*FLEN/8, x4, x1, x2)

inst_14123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000007fffff; valaddr_reg:x3; val_offset:42369*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42369*0 + 3*299*FLEN/8, x4, x1, x2)

inst_14124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000000ffffff; valaddr_reg:x3; val_offset:42372*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42372*0 + 3*300*FLEN/8, x4, x1, x2)

inst_14125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000001ffffff; valaddr_reg:x3; val_offset:42375*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42375*0 + 3*301*FLEN/8, x4, x1, x2)

inst_14126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000003ffffff; valaddr_reg:x3; val_offset:42378*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42378*0 + 3*302*FLEN/8, x4, x1, x2)

inst_14127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000007ffffff; valaddr_reg:x3; val_offset:42381*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42381*0 + 3*303*FLEN/8, x4, x1, x2)

inst_14128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000000fffffff; valaddr_reg:x3; val_offset:42384*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42384*0 + 3*304*FLEN/8, x4, x1, x2)

inst_14129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000001fffffff; valaddr_reg:x3; val_offset:42387*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42387*0 + 3*305*FLEN/8, x4, x1, x2)

inst_14130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000003fffffff; valaddr_reg:x3; val_offset:42390*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42390*0 + 3*306*FLEN/8, x4, x1, x2)

inst_14131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000007fffffff; valaddr_reg:x3; val_offset:42393*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42393*0 + 3*307*FLEN/8, x4, x1, x2)

inst_14132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00000ffffffff; valaddr_reg:x3; val_offset:42396*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42396*0 + 3*308*FLEN/8, x4, x1, x2)

inst_14133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00001ffffffff; valaddr_reg:x3; val_offset:42399*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42399*0 + 3*309*FLEN/8, x4, x1, x2)

inst_14134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00003ffffffff; valaddr_reg:x3; val_offset:42402*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42402*0 + 3*310*FLEN/8, x4, x1, x2)

inst_14135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00007ffffffff; valaddr_reg:x3; val_offset:42405*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42405*0 + 3*311*FLEN/8, x4, x1, x2)

inst_14136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0000fffffffff; valaddr_reg:x3; val_offset:42408*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42408*0 + 3*312*FLEN/8, x4, x1, x2)

inst_14137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0001fffffffff; valaddr_reg:x3; val_offset:42411*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42411*0 + 3*313*FLEN/8, x4, x1, x2)

inst_14138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0003fffffffff; valaddr_reg:x3; val_offset:42414*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42414*0 + 3*314*FLEN/8, x4, x1, x2)

inst_14139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0007fffffffff; valaddr_reg:x3; val_offset:42417*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42417*0 + 3*315*FLEN/8, x4, x1, x2)

inst_14140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be000ffffffffff; valaddr_reg:x3; val_offset:42420*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42420*0 + 3*316*FLEN/8, x4, x1, x2)

inst_14141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be001ffffffffff; valaddr_reg:x3; val_offset:42423*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42423*0 + 3*317*FLEN/8, x4, x1, x2)

inst_14142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be003ffffffffff; valaddr_reg:x3; val_offset:42426*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42426*0 + 3*318*FLEN/8, x4, x1, x2)

inst_14143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be007ffffffffff; valaddr_reg:x3; val_offset:42429*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42429*0 + 3*319*FLEN/8, x4, x1, x2)

inst_14144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be00fffffffffff; valaddr_reg:x3; val_offset:42432*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42432*0 + 3*320*FLEN/8, x4, x1, x2)

inst_14145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be01fffffffffff; valaddr_reg:x3; val_offset:42435*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42435*0 + 3*321*FLEN/8, x4, x1, x2)

inst_14146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be03fffffffffff; valaddr_reg:x3; val_offset:42438*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42438*0 + 3*322*FLEN/8, x4, x1, x2)

inst_14147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be07fffffffffff; valaddr_reg:x3; val_offset:42441*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42441*0 + 3*323*FLEN/8, x4, x1, x2)

inst_14148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be0ffffffffffff; valaddr_reg:x3; val_offset:42444*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42444*0 + 3*324*FLEN/8, x4, x1, x2)

inst_14149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be1ffffffffffff; valaddr_reg:x3; val_offset:42447*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42447*0 + 3*325*FLEN/8, x4, x1, x2)

inst_14150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be3ffffffffffff; valaddr_reg:x3; val_offset:42450*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42450*0 + 3*326*FLEN/8, x4, x1, x2)

inst_14151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be7ffffffffffff; valaddr_reg:x3; val_offset:42453*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42453*0 + 3*327*FLEN/8, x4, x1, x2)

inst_14152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3be8000000000000; valaddr_reg:x3; val_offset:42456*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42456*0 + 3*328*FLEN/8, x4, x1, x2)

inst_14153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3bec000000000000; valaddr_reg:x3; val_offset:42459*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42459*0 + 3*329*FLEN/8, x4, x1, x2)

inst_14154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3bee000000000000; valaddr_reg:x3; val_offset:42462*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42462*0 + 3*330*FLEN/8, x4, x1, x2)

inst_14155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3bef000000000000; valaddr_reg:x3; val_offset:42465*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42465*0 + 3*331*FLEN/8, x4, x1, x2)

inst_14156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3bef800000000000; valaddr_reg:x3; val_offset:42468*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42468*0 + 3*332*FLEN/8, x4, x1, x2)

inst_14157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befc00000000000; valaddr_reg:x3; val_offset:42471*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42471*0 + 3*333*FLEN/8, x4, x1, x2)

inst_14158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befe00000000000; valaddr_reg:x3; val_offset:42474*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42474*0 + 3*334*FLEN/8, x4, x1, x2)

inst_14159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beff00000000000; valaddr_reg:x3; val_offset:42477*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42477*0 + 3*335*FLEN/8, x4, x1, x2)

inst_14160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beff80000000000; valaddr_reg:x3; val_offset:42480*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42480*0 + 3*336*FLEN/8, x4, x1, x2)

inst_14161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffc0000000000; valaddr_reg:x3; val_offset:42483*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42483*0 + 3*337*FLEN/8, x4, x1, x2)

inst_14162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffe0000000000; valaddr_reg:x3; val_offset:42486*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42486*0 + 3*338*FLEN/8, x4, x1, x2)

inst_14163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befff0000000000; valaddr_reg:x3; val_offset:42489*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42489*0 + 3*339*FLEN/8, x4, x1, x2)

inst_14164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befff8000000000; valaddr_reg:x3; val_offset:42492*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42492*0 + 3*340*FLEN/8, x4, x1, x2)

inst_14165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffc000000000; valaddr_reg:x3; val_offset:42495*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42495*0 + 3*341*FLEN/8, x4, x1, x2)

inst_14166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffe000000000; valaddr_reg:x3; val_offset:42498*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42498*0 + 3*342*FLEN/8, x4, x1, x2)

inst_14167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffff000000000; valaddr_reg:x3; val_offset:42501*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42501*0 + 3*343*FLEN/8, x4, x1, x2)

inst_14168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffff800000000; valaddr_reg:x3; val_offset:42504*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42504*0 + 3*344*FLEN/8, x4, x1, x2)

inst_14169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffc00000000; valaddr_reg:x3; val_offset:42507*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42507*0 + 3*345*FLEN/8, x4, x1, x2)

inst_14170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffe00000000; valaddr_reg:x3; val_offset:42510*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42510*0 + 3*346*FLEN/8, x4, x1, x2)

inst_14171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffff00000000; valaddr_reg:x3; val_offset:42513*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42513*0 + 3*347*FLEN/8, x4, x1, x2)

inst_14172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffff80000000; valaddr_reg:x3; val_offset:42516*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42516*0 + 3*348*FLEN/8, x4, x1, x2)

inst_14173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffc0000000; valaddr_reg:x3; val_offset:42519*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42519*0 + 3*349*FLEN/8, x4, x1, x2)

inst_14174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffe0000000; valaddr_reg:x3; val_offset:42522*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42522*0 + 3*350*FLEN/8, x4, x1, x2)

inst_14175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffff0000000; valaddr_reg:x3; val_offset:42525*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42525*0 + 3*351*FLEN/8, x4, x1, x2)

inst_14176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffff8000000; valaddr_reg:x3; val_offset:42528*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42528*0 + 3*352*FLEN/8, x4, x1, x2)

inst_14177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffc000000; valaddr_reg:x3; val_offset:42531*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42531*0 + 3*353*FLEN/8, x4, x1, x2)

inst_14178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffe000000; valaddr_reg:x3; val_offset:42534*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42534*0 + 3*354*FLEN/8, x4, x1, x2)

inst_14179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffff000000; valaddr_reg:x3; val_offset:42537*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42537*0 + 3*355*FLEN/8, x4, x1, x2)

inst_14180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffff800000; valaddr_reg:x3; val_offset:42540*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42540*0 + 3*356*FLEN/8, x4, x1, x2)

inst_14181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffc00000; valaddr_reg:x3; val_offset:42543*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42543*0 + 3*357*FLEN/8, x4, x1, x2)

inst_14182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffe00000; valaddr_reg:x3; val_offset:42546*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42546*0 + 3*358*FLEN/8, x4, x1, x2)

inst_14183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffff00000; valaddr_reg:x3; val_offset:42549*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42549*0 + 3*359*FLEN/8, x4, x1, x2)

inst_14184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffff80000; valaddr_reg:x3; val_offset:42552*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42552*0 + 3*360*FLEN/8, x4, x1, x2)

inst_14185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffc0000; valaddr_reg:x3; val_offset:42555*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42555*0 + 3*361*FLEN/8, x4, x1, x2)

inst_14186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffe0000; valaddr_reg:x3; val_offset:42558*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42558*0 + 3*362*FLEN/8, x4, x1, x2)

inst_14187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffff0000; valaddr_reg:x3; val_offset:42561*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42561*0 + 3*363*FLEN/8, x4, x1, x2)

inst_14188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffff8000; valaddr_reg:x3; val_offset:42564*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42564*0 + 3*364*FLEN/8, x4, x1, x2)

inst_14189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffc000; valaddr_reg:x3; val_offset:42567*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42567*0 + 3*365*FLEN/8, x4, x1, x2)

inst_14190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffe000; valaddr_reg:x3; val_offset:42570*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42570*0 + 3*366*FLEN/8, x4, x1, x2)

inst_14191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffff000; valaddr_reg:x3; val_offset:42573*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42573*0 + 3*367*FLEN/8, x4, x1, x2)

inst_14192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffff800; valaddr_reg:x3; val_offset:42576*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42576*0 + 3*368*FLEN/8, x4, x1, x2)

inst_14193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffc00; valaddr_reg:x3; val_offset:42579*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42579*0 + 3*369*FLEN/8, x4, x1, x2)

inst_14194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffe00; valaddr_reg:x3; val_offset:42582*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42582*0 + 3*370*FLEN/8, x4, x1, x2)

inst_14195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffff00; valaddr_reg:x3; val_offset:42585*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42585*0 + 3*371*FLEN/8, x4, x1, x2)

inst_14196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffff80; valaddr_reg:x3; val_offset:42588*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42588*0 + 3*372*FLEN/8, x4, x1, x2)

inst_14197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffffc0; valaddr_reg:x3; val_offset:42591*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42591*0 + 3*373*FLEN/8, x4, x1, x2)

inst_14198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffffe0; valaddr_reg:x3; val_offset:42594*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42594*0 + 3*374*FLEN/8, x4, x1, x2)

inst_14199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffff0; valaddr_reg:x3; val_offset:42597*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42597*0 + 3*375*FLEN/8, x4, x1, x2)

inst_14200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffff8; valaddr_reg:x3; val_offset:42600*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42600*0 + 3*376*FLEN/8, x4, x1, x2)

inst_14201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffffc; valaddr_reg:x3; val_offset:42603*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42603*0 + 3*377*FLEN/8, x4, x1, x2)

inst_14202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3beffffffffffffe; valaddr_reg:x3; val_offset:42606*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42606*0 + 3*378*FLEN/8, x4, x1, x2)

inst_14203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3be and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3befffffffffffff; valaddr_reg:x3; val_offset:42609*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42609*0 + 3*379*FLEN/8, x4, x1, x2)

inst_14204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:42612*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42612*0 + 3*380*FLEN/8, x4, x1, x2)

inst_14205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:42615*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42615*0 + 3*381*FLEN/8, x4, x1, x2)

inst_14206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:42618*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42618*0 + 3*382*FLEN/8, x4, x1, x2)

inst_14207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:42621*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42621*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_14208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:42624*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42624*0 + 3*384*FLEN/8, x4, x1, x2)

inst_14209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:42627*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42627*0 + 3*385*FLEN/8, x4, x1, x2)

inst_14210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:42630*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42630*0 + 3*386*FLEN/8, x4, x1, x2)

inst_14211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:42633*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42633*0 + 3*387*FLEN/8, x4, x1, x2)

inst_14212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:42636*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42636*0 + 3*388*FLEN/8, x4, x1, x2)

inst_14213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:42639*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42639*0 + 3*389*FLEN/8, x4, x1, x2)

inst_14214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:42642*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42642*0 + 3*390*FLEN/8, x4, x1, x2)

inst_14215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:42645*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42645*0 + 3*391*FLEN/8, x4, x1, x2)

inst_14216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:42648*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42648*0 + 3*392*FLEN/8, x4, x1, x2)

inst_14217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:42651*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42651*0 + 3*393*FLEN/8, x4, x1, x2)

inst_14218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:42654*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42654*0 + 3*394*FLEN/8, x4, x1, x2)

inst_14219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:42657*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42657*0 + 3*395*FLEN/8, x4, x1, x2)

inst_14220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:42660*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42660*0 + 3*396*FLEN/8, x4, x1, x2)

inst_14221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:42663*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42663*0 + 3*397*FLEN/8, x4, x1, x2)

inst_14222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:42666*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42666*0 + 3*398*FLEN/8, x4, x1, x2)

inst_14223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:42669*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42669*0 + 3*399*FLEN/8, x4, x1, x2)

inst_14224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:42672*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42672*0 + 3*400*FLEN/8, x4, x1, x2)

inst_14225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeb81439ed177f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x0aacc23809708 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eb81439ed177f; op2val:0x2060aacc23809708;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:42675*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42675*0 + 3*401*FLEN/8, x4, x1, x2)

inst_14226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000000000; valaddr_reg:x3; val_offset:42678*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42678*0 + 3*402*FLEN/8, x4, x1, x2)

inst_14227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000000001; valaddr_reg:x3; val_offset:42681*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42681*0 + 3*403*FLEN/8, x4, x1, x2)

inst_14228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000000003; valaddr_reg:x3; val_offset:42684*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42684*0 + 3*404*FLEN/8, x4, x1, x2)

inst_14229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000000007; valaddr_reg:x3; val_offset:42687*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42687*0 + 3*405*FLEN/8, x4, x1, x2)

inst_14230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000000000f; valaddr_reg:x3; val_offset:42690*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42690*0 + 3*406*FLEN/8, x4, x1, x2)

inst_14231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000000001f; valaddr_reg:x3; val_offset:42693*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42693*0 + 3*407*FLEN/8, x4, x1, x2)

inst_14232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000000003f; valaddr_reg:x3; val_offset:42696*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42696*0 + 3*408*FLEN/8, x4, x1, x2)

inst_14233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000000007f; valaddr_reg:x3; val_offset:42699*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42699*0 + 3*409*FLEN/8, x4, x1, x2)

inst_14234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000000000ff; valaddr_reg:x3; val_offset:42702*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42702*0 + 3*410*FLEN/8, x4, x1, x2)

inst_14235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000000001ff; valaddr_reg:x3; val_offset:42705*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42705*0 + 3*411*FLEN/8, x4, x1, x2)

inst_14236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000000003ff; valaddr_reg:x3; val_offset:42708*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42708*0 + 3*412*FLEN/8, x4, x1, x2)

inst_14237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000000007ff; valaddr_reg:x3; val_offset:42711*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42711*0 + 3*413*FLEN/8, x4, x1, x2)

inst_14238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000000fff; valaddr_reg:x3; val_offset:42714*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42714*0 + 3*414*FLEN/8, x4, x1, x2)

inst_14239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000001fff; valaddr_reg:x3; val_offset:42717*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42717*0 + 3*415*FLEN/8, x4, x1, x2)

inst_14240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000003fff; valaddr_reg:x3; val_offset:42720*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42720*0 + 3*416*FLEN/8, x4, x1, x2)

inst_14241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000007fff; valaddr_reg:x3; val_offset:42723*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42723*0 + 3*417*FLEN/8, x4, x1, x2)

inst_14242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000000ffff; valaddr_reg:x3; val_offset:42726*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42726*0 + 3*418*FLEN/8, x4, x1, x2)

inst_14243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000001ffff; valaddr_reg:x3; val_offset:42729*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42729*0 + 3*419*FLEN/8, x4, x1, x2)

inst_14244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000003ffff; valaddr_reg:x3; val_offset:42732*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42732*0 + 3*420*FLEN/8, x4, x1, x2)

inst_14245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000007ffff; valaddr_reg:x3; val_offset:42735*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42735*0 + 3*421*FLEN/8, x4, x1, x2)

inst_14246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000000fffff; valaddr_reg:x3; val_offset:42738*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42738*0 + 3*422*FLEN/8, x4, x1, x2)

inst_14247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000001fffff; valaddr_reg:x3; val_offset:42741*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42741*0 + 3*423*FLEN/8, x4, x1, x2)

inst_14248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000003fffff; valaddr_reg:x3; val_offset:42744*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42744*0 + 3*424*FLEN/8, x4, x1, x2)

inst_14249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000007fffff; valaddr_reg:x3; val_offset:42747*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42747*0 + 3*425*FLEN/8, x4, x1, x2)

inst_14250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000000ffffff; valaddr_reg:x3; val_offset:42750*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42750*0 + 3*426*FLEN/8, x4, x1, x2)

inst_14251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000001ffffff; valaddr_reg:x3; val_offset:42753*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42753*0 + 3*427*FLEN/8, x4, x1, x2)

inst_14252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000003ffffff; valaddr_reg:x3; val_offset:42756*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42756*0 + 3*428*FLEN/8, x4, x1, x2)

inst_14253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000007ffffff; valaddr_reg:x3; val_offset:42759*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42759*0 + 3*429*FLEN/8, x4, x1, x2)

inst_14254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000000fffffff; valaddr_reg:x3; val_offset:42762*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42762*0 + 3*430*FLEN/8, x4, x1, x2)

inst_14255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000001fffffff; valaddr_reg:x3; val_offset:42765*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42765*0 + 3*431*FLEN/8, x4, x1, x2)

inst_14256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000003fffffff; valaddr_reg:x3; val_offset:42768*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42768*0 + 3*432*FLEN/8, x4, x1, x2)

inst_14257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000007fffffff; valaddr_reg:x3; val_offset:42771*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42771*0 + 3*433*FLEN/8, x4, x1, x2)

inst_14258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800000ffffffff; valaddr_reg:x3; val_offset:42774*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42774*0 + 3*434*FLEN/8, x4, x1, x2)

inst_14259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800001ffffffff; valaddr_reg:x3; val_offset:42777*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42777*0 + 3*435*FLEN/8, x4, x1, x2)

inst_14260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800003ffffffff; valaddr_reg:x3; val_offset:42780*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42780*0 + 3*436*FLEN/8, x4, x1, x2)

inst_14261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800007ffffffff; valaddr_reg:x3; val_offset:42783*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42783*0 + 3*437*FLEN/8, x4, x1, x2)

inst_14262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80000fffffffff; valaddr_reg:x3; val_offset:42786*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42786*0 + 3*438*FLEN/8, x4, x1, x2)

inst_14263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80001fffffffff; valaddr_reg:x3; val_offset:42789*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42789*0 + 3*439*FLEN/8, x4, x1, x2)

inst_14264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80003fffffffff; valaddr_reg:x3; val_offset:42792*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42792*0 + 3*440*FLEN/8, x4, x1, x2)

inst_14265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80007fffffffff; valaddr_reg:x3; val_offset:42795*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42795*0 + 3*441*FLEN/8, x4, x1, x2)

inst_14266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8000ffffffffff; valaddr_reg:x3; val_offset:42798*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42798*0 + 3*442*FLEN/8, x4, x1, x2)

inst_14267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8001ffffffffff; valaddr_reg:x3; val_offset:42801*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42801*0 + 3*443*FLEN/8, x4, x1, x2)

inst_14268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8003ffffffffff; valaddr_reg:x3; val_offset:42804*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42804*0 + 3*444*FLEN/8, x4, x1, x2)

inst_14269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8007ffffffffff; valaddr_reg:x3; val_offset:42807*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42807*0 + 3*445*FLEN/8, x4, x1, x2)

inst_14270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c800fffffffffff; valaddr_reg:x3; val_offset:42810*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42810*0 + 3*446*FLEN/8, x4, x1, x2)

inst_14271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c801fffffffffff; valaddr_reg:x3; val_offset:42813*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42813*0 + 3*447*FLEN/8, x4, x1, x2)

inst_14272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c803fffffffffff; valaddr_reg:x3; val_offset:42816*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42816*0 + 3*448*FLEN/8, x4, x1, x2)

inst_14273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c807fffffffffff; valaddr_reg:x3; val_offset:42819*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42819*0 + 3*449*FLEN/8, x4, x1, x2)

inst_14274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c80ffffffffffff; valaddr_reg:x3; val_offset:42822*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42822*0 + 3*450*FLEN/8, x4, x1, x2)

inst_14275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c81ffffffffffff; valaddr_reg:x3; val_offset:42825*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42825*0 + 3*451*FLEN/8, x4, x1, x2)

inst_14276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c83ffffffffffff; valaddr_reg:x3; val_offset:42828*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42828*0 + 3*452*FLEN/8, x4, x1, x2)

inst_14277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c87ffffffffffff; valaddr_reg:x3; val_offset:42831*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42831*0 + 3*453*FLEN/8, x4, x1, x2)

inst_14278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c88000000000000; valaddr_reg:x3; val_offset:42834*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42834*0 + 3*454*FLEN/8, x4, x1, x2)

inst_14279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8c000000000000; valaddr_reg:x3; val_offset:42837*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42837*0 + 3*455*FLEN/8, x4, x1, x2)

inst_14280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8e000000000000; valaddr_reg:x3; val_offset:42840*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42840*0 + 3*456*FLEN/8, x4, x1, x2)

inst_14281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8f000000000000; valaddr_reg:x3; val_offset:42843*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42843*0 + 3*457*FLEN/8, x4, x1, x2)

inst_14282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8f800000000000; valaddr_reg:x3; val_offset:42846*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42846*0 + 3*458*FLEN/8, x4, x1, x2)

inst_14283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fc00000000000; valaddr_reg:x3; val_offset:42849*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42849*0 + 3*459*FLEN/8, x4, x1, x2)

inst_14284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fe00000000000; valaddr_reg:x3; val_offset:42852*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42852*0 + 3*460*FLEN/8, x4, x1, x2)

inst_14285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ff00000000000; valaddr_reg:x3; val_offset:42855*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42855*0 + 3*461*FLEN/8, x4, x1, x2)

inst_14286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ff80000000000; valaddr_reg:x3; val_offset:42858*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42858*0 + 3*462*FLEN/8, x4, x1, x2)

inst_14287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffc0000000000; valaddr_reg:x3; val_offset:42861*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42861*0 + 3*463*FLEN/8, x4, x1, x2)

inst_14288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffe0000000000; valaddr_reg:x3; val_offset:42864*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42864*0 + 3*464*FLEN/8, x4, x1, x2)

inst_14289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fff0000000000; valaddr_reg:x3; val_offset:42867*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42867*0 + 3*465*FLEN/8, x4, x1, x2)

inst_14290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fff8000000000; valaddr_reg:x3; val_offset:42870*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42870*0 + 3*466*FLEN/8, x4, x1, x2)

inst_14291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffc000000000; valaddr_reg:x3; val_offset:42873*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42873*0 + 3*467*FLEN/8, x4, x1, x2)

inst_14292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffe000000000; valaddr_reg:x3; val_offset:42876*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42876*0 + 3*468*FLEN/8, x4, x1, x2)

inst_14293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffff000000000; valaddr_reg:x3; val_offset:42879*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42879*0 + 3*469*FLEN/8, x4, x1, x2)

inst_14294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffff800000000; valaddr_reg:x3; val_offset:42882*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42882*0 + 3*470*FLEN/8, x4, x1, x2)

inst_14295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffc00000000; valaddr_reg:x3; val_offset:42885*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42885*0 + 3*471*FLEN/8, x4, x1, x2)

inst_14296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffe00000000; valaddr_reg:x3; val_offset:42888*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42888*0 + 3*472*FLEN/8, x4, x1, x2)

inst_14297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffff00000000; valaddr_reg:x3; val_offset:42891*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42891*0 + 3*473*FLEN/8, x4, x1, x2)

inst_14298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffff80000000; valaddr_reg:x3; val_offset:42894*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42894*0 + 3*474*FLEN/8, x4, x1, x2)

inst_14299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffc0000000; valaddr_reg:x3; val_offset:42897*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42897*0 + 3*475*FLEN/8, x4, x1, x2)

inst_14300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffe0000000; valaddr_reg:x3; val_offset:42900*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42900*0 + 3*476*FLEN/8, x4, x1, x2)

inst_14301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffff0000000; valaddr_reg:x3; val_offset:42903*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42903*0 + 3*477*FLEN/8, x4, x1, x2)

inst_14302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffff8000000; valaddr_reg:x3; val_offset:42906*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42906*0 + 3*478*FLEN/8, x4, x1, x2)

inst_14303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffc000000; valaddr_reg:x3; val_offset:42909*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42909*0 + 3*479*FLEN/8, x4, x1, x2)

inst_14304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffe000000; valaddr_reg:x3; val_offset:42912*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42912*0 + 3*480*FLEN/8, x4, x1, x2)

inst_14305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffff000000; valaddr_reg:x3; val_offset:42915*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42915*0 + 3*481*FLEN/8, x4, x1, x2)

inst_14306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffff800000; valaddr_reg:x3; val_offset:42918*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42918*0 + 3*482*FLEN/8, x4, x1, x2)

inst_14307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffc00000; valaddr_reg:x3; val_offset:42921*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42921*0 + 3*483*FLEN/8, x4, x1, x2)

inst_14308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffe00000; valaddr_reg:x3; val_offset:42924*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42924*0 + 3*484*FLEN/8, x4, x1, x2)

inst_14309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffff00000; valaddr_reg:x3; val_offset:42927*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42927*0 + 3*485*FLEN/8, x4, x1, x2)

inst_14310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffff80000; valaddr_reg:x3; val_offset:42930*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42930*0 + 3*486*FLEN/8, x4, x1, x2)

inst_14311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffc0000; valaddr_reg:x3; val_offset:42933*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42933*0 + 3*487*FLEN/8, x4, x1, x2)

inst_14312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffe0000; valaddr_reg:x3; val_offset:42936*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42936*0 + 3*488*FLEN/8, x4, x1, x2)

inst_14313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffff0000; valaddr_reg:x3; val_offset:42939*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42939*0 + 3*489*FLEN/8, x4, x1, x2)

inst_14314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffff8000; valaddr_reg:x3; val_offset:42942*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42942*0 + 3*490*FLEN/8, x4, x1, x2)

inst_14315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffc000; valaddr_reg:x3; val_offset:42945*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42945*0 + 3*491*FLEN/8, x4, x1, x2)

inst_14316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffe000; valaddr_reg:x3; val_offset:42948*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42948*0 + 3*492*FLEN/8, x4, x1, x2)

inst_14317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffff000; valaddr_reg:x3; val_offset:42951*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42951*0 + 3*493*FLEN/8, x4, x1, x2)

inst_14318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffff800; valaddr_reg:x3; val_offset:42954*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42954*0 + 3*494*FLEN/8, x4, x1, x2)

inst_14319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffc00; valaddr_reg:x3; val_offset:42957*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42957*0 + 3*495*FLEN/8, x4, x1, x2)

inst_14320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffe00; valaddr_reg:x3; val_offset:42960*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42960*0 + 3*496*FLEN/8, x4, x1, x2)

inst_14321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffff00; valaddr_reg:x3; val_offset:42963*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42963*0 + 3*497*FLEN/8, x4, x1, x2)

inst_14322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffff80; valaddr_reg:x3; val_offset:42966*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42966*0 + 3*498*FLEN/8, x4, x1, x2)

inst_14323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffffc0; valaddr_reg:x3; val_offset:42969*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42969*0 + 3*499*FLEN/8, x4, x1, x2)

inst_14324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffffe0; valaddr_reg:x3; val_offset:42972*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42972*0 + 3*500*FLEN/8, x4, x1, x2)

inst_14325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffff0; valaddr_reg:x3; val_offset:42975*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42975*0 + 3*501*FLEN/8, x4, x1, x2)

inst_14326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffff8; valaddr_reg:x3; val_offset:42978*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42978*0 + 3*502*FLEN/8, x4, x1, x2)

inst_14327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffffc; valaddr_reg:x3; val_offset:42981*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42981*0 + 3*503*FLEN/8, x4, x1, x2)

inst_14328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8ffffffffffffe; valaddr_reg:x3; val_offset:42984*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42984*0 + 3*504*FLEN/8, x4, x1, x2)

inst_14329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3c8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3c8fffffffffffff; valaddr_reg:x3; val_offset:42987*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42987*0 + 3*505*FLEN/8, x4, x1, x2)

inst_14330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:42990*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42990*0 + 3*506*FLEN/8, x4, x1, x2)

inst_14331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:42993*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42993*0 + 3*507*FLEN/8, x4, x1, x2)

inst_14332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:42996*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42996*0 + 3*508*FLEN/8, x4, x1, x2)

inst_14333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:42999*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 42999*0 + 3*509*FLEN/8, x4, x1, x2)

inst_14334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:43002*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43002*0 + 3*510*FLEN/8, x4, x1, x2)

inst_14335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:43005*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43005*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_14336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:43008*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43008*0 + 3*512*FLEN/8, x4, x1, x2)

inst_14337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:43011*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43011*0 + 3*513*FLEN/8, x4, x1, x2)

inst_14338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:43014*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43014*0 + 3*514*FLEN/8, x4, x1, x2)

inst_14339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:43017*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43017*0 + 3*515*FLEN/8, x4, x1, x2)

inst_14340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:43020*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43020*0 + 3*516*FLEN/8, x4, x1, x2)

inst_14341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:43023*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43023*0 + 3*517*FLEN/8, x4, x1, x2)

inst_14342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:43026*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43026*0 + 3*518*FLEN/8, x4, x1, x2)

inst_14343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:43029*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43029*0 + 3*519*FLEN/8, x4, x1, x2)

inst_14344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:43032*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43032*0 + 3*520*FLEN/8, x4, x1, x2)

inst_14345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:43035*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43035*0 + 3*521*FLEN/8, x4, x1, x2)

inst_14346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:43038*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43038*0 + 3*522*FLEN/8, x4, x1, x2)

inst_14347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:43041*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43041*0 + 3*523*FLEN/8, x4, x1, x2)

inst_14348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:43044*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43044*0 + 3*524*FLEN/8, x4, x1, x2)

inst_14349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:43047*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43047*0 + 3*525*FLEN/8, x4, x1, x2)

inst_14350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:43050*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43050*0 + 3*526*FLEN/8, x4, x1, x2)

inst_14351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xeeda9857f8ff7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x08debf1097e3f and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7eeda9857f8ff7; op2val:0x20608debf1097e3f;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:43053*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43053*0 + 3*527*FLEN/8, x4, x1, x2)

inst_14352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000000000; valaddr_reg:x3; val_offset:43056*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43056*0 + 3*528*FLEN/8, x4, x1, x2)

inst_14353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000000001; valaddr_reg:x3; val_offset:43059*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43059*0 + 3*529*FLEN/8, x4, x1, x2)

inst_14354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000000003; valaddr_reg:x3; val_offset:43062*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43062*0 + 3*530*FLEN/8, x4, x1, x2)

inst_14355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000000007; valaddr_reg:x3; val_offset:43065*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43065*0 + 3*531*FLEN/8, x4, x1, x2)

inst_14356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000000000f; valaddr_reg:x3; val_offset:43068*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43068*0 + 3*532*FLEN/8, x4, x1, x2)

inst_14357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000000001f; valaddr_reg:x3; val_offset:43071*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43071*0 + 3*533*FLEN/8, x4, x1, x2)

inst_14358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000000003f; valaddr_reg:x3; val_offset:43074*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43074*0 + 3*534*FLEN/8, x4, x1, x2)

inst_14359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000000007f; valaddr_reg:x3; val_offset:43077*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43077*0 + 3*535*FLEN/8, x4, x1, x2)

inst_14360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000000000ff; valaddr_reg:x3; val_offset:43080*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43080*0 + 3*536*FLEN/8, x4, x1, x2)

inst_14361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000000001ff; valaddr_reg:x3; val_offset:43083*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43083*0 + 3*537*FLEN/8, x4, x1, x2)

inst_14362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000000003ff; valaddr_reg:x3; val_offset:43086*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43086*0 + 3*538*FLEN/8, x4, x1, x2)

inst_14363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000000007ff; valaddr_reg:x3; val_offset:43089*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43089*0 + 3*539*FLEN/8, x4, x1, x2)

inst_14364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000000fff; valaddr_reg:x3; val_offset:43092*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43092*0 + 3*540*FLEN/8, x4, x1, x2)

inst_14365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000001fff; valaddr_reg:x3; val_offset:43095*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43095*0 + 3*541*FLEN/8, x4, x1, x2)

inst_14366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000003fff; valaddr_reg:x3; val_offset:43098*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43098*0 + 3*542*FLEN/8, x4, x1, x2)

inst_14367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000007fff; valaddr_reg:x3; val_offset:43101*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43101*0 + 3*543*FLEN/8, x4, x1, x2)

inst_14368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000000ffff; valaddr_reg:x3; val_offset:43104*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43104*0 + 3*544*FLEN/8, x4, x1, x2)

inst_14369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000001ffff; valaddr_reg:x3; val_offset:43107*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43107*0 + 3*545*FLEN/8, x4, x1, x2)

inst_14370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000003ffff; valaddr_reg:x3; val_offset:43110*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43110*0 + 3*546*FLEN/8, x4, x1, x2)

inst_14371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000007ffff; valaddr_reg:x3; val_offset:43113*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43113*0 + 3*547*FLEN/8, x4, x1, x2)

inst_14372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000000fffff; valaddr_reg:x3; val_offset:43116*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43116*0 + 3*548*FLEN/8, x4, x1, x2)

inst_14373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000001fffff; valaddr_reg:x3; val_offset:43119*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43119*0 + 3*549*FLEN/8, x4, x1, x2)

inst_14374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000003fffff; valaddr_reg:x3; val_offset:43122*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43122*0 + 3*550*FLEN/8, x4, x1, x2)

inst_14375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000007fffff; valaddr_reg:x3; val_offset:43125*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43125*0 + 3*551*FLEN/8, x4, x1, x2)

inst_14376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000000ffffff; valaddr_reg:x3; val_offset:43128*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43128*0 + 3*552*FLEN/8, x4, x1, x2)

inst_14377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000001ffffff; valaddr_reg:x3; val_offset:43131*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43131*0 + 3*553*FLEN/8, x4, x1, x2)

inst_14378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000003ffffff; valaddr_reg:x3; val_offset:43134*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43134*0 + 3*554*FLEN/8, x4, x1, x2)

inst_14379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000007ffffff; valaddr_reg:x3; val_offset:43137*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43137*0 + 3*555*FLEN/8, x4, x1, x2)

inst_14380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000000fffffff; valaddr_reg:x3; val_offset:43140*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43140*0 + 3*556*FLEN/8, x4, x1, x2)

inst_14381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000001fffffff; valaddr_reg:x3; val_offset:43143*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43143*0 + 3*557*FLEN/8, x4, x1, x2)

inst_14382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000003fffffff; valaddr_reg:x3; val_offset:43146*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43146*0 + 3*558*FLEN/8, x4, x1, x2)

inst_14383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000007fffffff; valaddr_reg:x3; val_offset:43149*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43149*0 + 3*559*FLEN/8, x4, x1, x2)

inst_14384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200000ffffffff; valaddr_reg:x3; val_offset:43152*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43152*0 + 3*560*FLEN/8, x4, x1, x2)

inst_14385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200001ffffffff; valaddr_reg:x3; val_offset:43155*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43155*0 + 3*561*FLEN/8, x4, x1, x2)

inst_14386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200003ffffffff; valaddr_reg:x3; val_offset:43158*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43158*0 + 3*562*FLEN/8, x4, x1, x2)

inst_14387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200007ffffffff; valaddr_reg:x3; val_offset:43161*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43161*0 + 3*563*FLEN/8, x4, x1, x2)

inst_14388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20000fffffffff; valaddr_reg:x3; val_offset:43164*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43164*0 + 3*564*FLEN/8, x4, x1, x2)

inst_14389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20001fffffffff; valaddr_reg:x3; val_offset:43167*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43167*0 + 3*565*FLEN/8, x4, x1, x2)

inst_14390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20003fffffffff; valaddr_reg:x3; val_offset:43170*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43170*0 + 3*566*FLEN/8, x4, x1, x2)

inst_14391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20007fffffffff; valaddr_reg:x3; val_offset:43173*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43173*0 + 3*567*FLEN/8, x4, x1, x2)

inst_14392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2000ffffffffff; valaddr_reg:x3; val_offset:43176*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43176*0 + 3*568*FLEN/8, x4, x1, x2)

inst_14393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2001ffffffffff; valaddr_reg:x3; val_offset:43179*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43179*0 + 3*569*FLEN/8, x4, x1, x2)

inst_14394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2003ffffffffff; valaddr_reg:x3; val_offset:43182*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43182*0 + 3*570*FLEN/8, x4, x1, x2)

inst_14395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2007ffffffffff; valaddr_reg:x3; val_offset:43185*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43185*0 + 3*571*FLEN/8, x4, x1, x2)

inst_14396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba200fffffffffff; valaddr_reg:x3; val_offset:43188*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43188*0 + 3*572*FLEN/8, x4, x1, x2)

inst_14397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba201fffffffffff; valaddr_reg:x3; val_offset:43191*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43191*0 + 3*573*FLEN/8, x4, x1, x2)

inst_14398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba203fffffffffff; valaddr_reg:x3; val_offset:43194*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43194*0 + 3*574*FLEN/8, x4, x1, x2)

inst_14399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba207fffffffffff; valaddr_reg:x3; val_offset:43197*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43197*0 + 3*575*FLEN/8, x4, x1, x2)

inst_14400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba20ffffffffffff; valaddr_reg:x3; val_offset:43200*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43200*0 + 3*576*FLEN/8, x4, x1, x2)

inst_14401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba21ffffffffffff; valaddr_reg:x3; val_offset:43203*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43203*0 + 3*577*FLEN/8, x4, x1, x2)

inst_14402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba23ffffffffffff; valaddr_reg:x3; val_offset:43206*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43206*0 + 3*578*FLEN/8, x4, x1, x2)

inst_14403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba27ffffffffffff; valaddr_reg:x3; val_offset:43209*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43209*0 + 3*579*FLEN/8, x4, x1, x2)

inst_14404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba28000000000000; valaddr_reg:x3; val_offset:43212*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43212*0 + 3*580*FLEN/8, x4, x1, x2)

inst_14405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2c000000000000; valaddr_reg:x3; val_offset:43215*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43215*0 + 3*581*FLEN/8, x4, x1, x2)

inst_14406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2e000000000000; valaddr_reg:x3; val_offset:43218*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43218*0 + 3*582*FLEN/8, x4, x1, x2)

inst_14407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2f000000000000; valaddr_reg:x3; val_offset:43221*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43221*0 + 3*583*FLEN/8, x4, x1, x2)

inst_14408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2f800000000000; valaddr_reg:x3; val_offset:43224*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43224*0 + 3*584*FLEN/8, x4, x1, x2)

inst_14409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fc00000000000; valaddr_reg:x3; val_offset:43227*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43227*0 + 3*585*FLEN/8, x4, x1, x2)

inst_14410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fe00000000000; valaddr_reg:x3; val_offset:43230*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43230*0 + 3*586*FLEN/8, x4, x1, x2)

inst_14411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ff00000000000; valaddr_reg:x3; val_offset:43233*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43233*0 + 3*587*FLEN/8, x4, x1, x2)

inst_14412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ff80000000000; valaddr_reg:x3; val_offset:43236*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43236*0 + 3*588*FLEN/8, x4, x1, x2)

inst_14413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffc0000000000; valaddr_reg:x3; val_offset:43239*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43239*0 + 3*589*FLEN/8, x4, x1, x2)

inst_14414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffe0000000000; valaddr_reg:x3; val_offset:43242*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43242*0 + 3*590*FLEN/8, x4, x1, x2)

inst_14415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fff0000000000; valaddr_reg:x3; val_offset:43245*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43245*0 + 3*591*FLEN/8, x4, x1, x2)

inst_14416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fff8000000000; valaddr_reg:x3; val_offset:43248*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43248*0 + 3*592*FLEN/8, x4, x1, x2)

inst_14417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffc000000000; valaddr_reg:x3; val_offset:43251*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43251*0 + 3*593*FLEN/8, x4, x1, x2)

inst_14418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffe000000000; valaddr_reg:x3; val_offset:43254*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43254*0 + 3*594*FLEN/8, x4, x1, x2)

inst_14419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffff000000000; valaddr_reg:x3; val_offset:43257*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43257*0 + 3*595*FLEN/8, x4, x1, x2)

inst_14420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffff800000000; valaddr_reg:x3; val_offset:43260*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43260*0 + 3*596*FLEN/8, x4, x1, x2)

inst_14421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffc00000000; valaddr_reg:x3; val_offset:43263*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43263*0 + 3*597*FLEN/8, x4, x1, x2)

inst_14422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffe00000000; valaddr_reg:x3; val_offset:43266*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43266*0 + 3*598*FLEN/8, x4, x1, x2)

inst_14423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffff00000000; valaddr_reg:x3; val_offset:43269*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43269*0 + 3*599*FLEN/8, x4, x1, x2)

inst_14424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffff80000000; valaddr_reg:x3; val_offset:43272*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43272*0 + 3*600*FLEN/8, x4, x1, x2)

inst_14425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffc0000000; valaddr_reg:x3; val_offset:43275*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43275*0 + 3*601*FLEN/8, x4, x1, x2)

inst_14426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffe0000000; valaddr_reg:x3; val_offset:43278*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43278*0 + 3*602*FLEN/8, x4, x1, x2)

inst_14427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffff0000000; valaddr_reg:x3; val_offset:43281*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43281*0 + 3*603*FLEN/8, x4, x1, x2)

inst_14428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffff8000000; valaddr_reg:x3; val_offset:43284*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43284*0 + 3*604*FLEN/8, x4, x1, x2)

inst_14429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffc000000; valaddr_reg:x3; val_offset:43287*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43287*0 + 3*605*FLEN/8, x4, x1, x2)

inst_14430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffe000000; valaddr_reg:x3; val_offset:43290*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43290*0 + 3*606*FLEN/8, x4, x1, x2)

inst_14431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffff000000; valaddr_reg:x3; val_offset:43293*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43293*0 + 3*607*FLEN/8, x4, x1, x2)

inst_14432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffff800000; valaddr_reg:x3; val_offset:43296*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43296*0 + 3*608*FLEN/8, x4, x1, x2)

inst_14433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffc00000; valaddr_reg:x3; val_offset:43299*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43299*0 + 3*609*FLEN/8, x4, x1, x2)

inst_14434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffe00000; valaddr_reg:x3; val_offset:43302*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43302*0 + 3*610*FLEN/8, x4, x1, x2)

inst_14435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffff00000; valaddr_reg:x3; val_offset:43305*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43305*0 + 3*611*FLEN/8, x4, x1, x2)

inst_14436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffff80000; valaddr_reg:x3; val_offset:43308*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43308*0 + 3*612*FLEN/8, x4, x1, x2)

inst_14437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffc0000; valaddr_reg:x3; val_offset:43311*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43311*0 + 3*613*FLEN/8, x4, x1, x2)

inst_14438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffe0000; valaddr_reg:x3; val_offset:43314*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43314*0 + 3*614*FLEN/8, x4, x1, x2)

inst_14439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffff0000; valaddr_reg:x3; val_offset:43317*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43317*0 + 3*615*FLEN/8, x4, x1, x2)

inst_14440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffff8000; valaddr_reg:x3; val_offset:43320*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43320*0 + 3*616*FLEN/8, x4, x1, x2)

inst_14441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffc000; valaddr_reg:x3; val_offset:43323*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43323*0 + 3*617*FLEN/8, x4, x1, x2)

inst_14442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffe000; valaddr_reg:x3; val_offset:43326*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43326*0 + 3*618*FLEN/8, x4, x1, x2)

inst_14443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffff000; valaddr_reg:x3; val_offset:43329*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43329*0 + 3*619*FLEN/8, x4, x1, x2)

inst_14444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffff800; valaddr_reg:x3; val_offset:43332*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43332*0 + 3*620*FLEN/8, x4, x1, x2)

inst_14445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffc00; valaddr_reg:x3; val_offset:43335*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43335*0 + 3*621*FLEN/8, x4, x1, x2)

inst_14446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffe00; valaddr_reg:x3; val_offset:43338*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43338*0 + 3*622*FLEN/8, x4, x1, x2)

inst_14447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffff00; valaddr_reg:x3; val_offset:43341*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43341*0 + 3*623*FLEN/8, x4, x1, x2)

inst_14448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffff80; valaddr_reg:x3; val_offset:43344*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43344*0 + 3*624*FLEN/8, x4, x1, x2)

inst_14449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffffc0; valaddr_reg:x3; val_offset:43347*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43347*0 + 3*625*FLEN/8, x4, x1, x2)

inst_14450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffffe0; valaddr_reg:x3; val_offset:43350*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43350*0 + 3*626*FLEN/8, x4, x1, x2)

inst_14451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffff0; valaddr_reg:x3; val_offset:43353*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43353*0 + 3*627*FLEN/8, x4, x1, x2)

inst_14452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffff8; valaddr_reg:x3; val_offset:43356*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43356*0 + 3*628*FLEN/8, x4, x1, x2)

inst_14453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffffc; valaddr_reg:x3; val_offset:43359*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43359*0 + 3*629*FLEN/8, x4, x1, x2)

inst_14454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2ffffffffffffe; valaddr_reg:x3; val_offset:43362*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43362*0 + 3*630*FLEN/8, x4, x1, x2)

inst_14455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xba2fffffffffffff; valaddr_reg:x3; val_offset:43365*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43365*0 + 3*631*FLEN/8, x4, x1, x2)

inst_14456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:43368*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43368*0 + 3*632*FLEN/8, x4, x1, x2)

inst_14457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:43371*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43371*0 + 3*633*FLEN/8, x4, x1, x2)

inst_14458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:43374*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43374*0 + 3*634*FLEN/8, x4, x1, x2)

inst_14459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:43377*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43377*0 + 3*635*FLEN/8, x4, x1, x2)

inst_14460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:43380*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43380*0 + 3*636*FLEN/8, x4, x1, x2)

inst_14461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:43383*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43383*0 + 3*637*FLEN/8, x4, x1, x2)

inst_14462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:43386*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43386*0 + 3*638*FLEN/8, x4, x1, x2)

inst_14463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:43389*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43389*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_14464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:43392*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43392*0 + 3*640*FLEN/8, x4, x1, x2)

inst_14465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:43395*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43395*0 + 3*641*FLEN/8, x4, x1, x2)

inst_14466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:43398*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43398*0 + 3*642*FLEN/8, x4, x1, x2)

inst_14467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:43401*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43401*0 + 3*643*FLEN/8, x4, x1, x2)

inst_14468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:43404*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43404*0 + 3*644*FLEN/8, x4, x1, x2)

inst_14469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:43407*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43407*0 + 3*645*FLEN/8, x4, x1, x2)

inst_14470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:43410*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43410*0 + 3*646*FLEN/8, x4, x1, x2)

inst_14471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:43413*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43413*0 + 3*647*FLEN/8, x4, x1, x2)

inst_14472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:43416*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43416*0 + 3*648*FLEN/8, x4, x1, x2)

inst_14473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:43419*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43419*0 + 3*649*FLEN/8, x4, x1, x2)

inst_14474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:43422*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43422*0 + 3*650*FLEN/8, x4, x1, x2)

inst_14475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:43425*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43425*0 + 3*651*FLEN/8, x4, x1, x2)

inst_14476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:43428*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43428*0 + 3*652*FLEN/8, x4, x1, x2)

inst_14477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf0c6f00d0a117 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x07d83d98dfd29 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f0c6f00d0a117; op2val:0x9ff07d83d98dfd29;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:43431*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43431*0 + 3*653*FLEN/8, x4, x1, x2)

inst_14478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000000000; valaddr_reg:x3; val_offset:43434*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43434*0 + 3*654*FLEN/8, x4, x1, x2)

inst_14479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000000001; valaddr_reg:x3; val_offset:43437*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43437*0 + 3*655*FLEN/8, x4, x1, x2)

inst_14480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000000003; valaddr_reg:x3; val_offset:43440*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43440*0 + 3*656*FLEN/8, x4, x1, x2)

inst_14481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000000007; valaddr_reg:x3; val_offset:43443*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43443*0 + 3*657*FLEN/8, x4, x1, x2)

inst_14482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000000000f; valaddr_reg:x3; val_offset:43446*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43446*0 + 3*658*FLEN/8, x4, x1, x2)

inst_14483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000000001f; valaddr_reg:x3; val_offset:43449*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43449*0 + 3*659*FLEN/8, x4, x1, x2)

inst_14484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000000003f; valaddr_reg:x3; val_offset:43452*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43452*0 + 3*660*FLEN/8, x4, x1, x2)

inst_14485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000000007f; valaddr_reg:x3; val_offset:43455*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43455*0 + 3*661*FLEN/8, x4, x1, x2)

inst_14486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000000000ff; valaddr_reg:x3; val_offset:43458*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43458*0 + 3*662*FLEN/8, x4, x1, x2)

inst_14487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000000001ff; valaddr_reg:x3; val_offset:43461*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43461*0 + 3*663*FLEN/8, x4, x1, x2)

inst_14488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000000003ff; valaddr_reg:x3; val_offset:43464*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43464*0 + 3*664*FLEN/8, x4, x1, x2)

inst_14489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000000007ff; valaddr_reg:x3; val_offset:43467*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43467*0 + 3*665*FLEN/8, x4, x1, x2)

inst_14490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000000fff; valaddr_reg:x3; val_offset:43470*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43470*0 + 3*666*FLEN/8, x4, x1, x2)

inst_14491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000001fff; valaddr_reg:x3; val_offset:43473*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43473*0 + 3*667*FLEN/8, x4, x1, x2)

inst_14492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000003fff; valaddr_reg:x3; val_offset:43476*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43476*0 + 3*668*FLEN/8, x4, x1, x2)

inst_14493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000007fff; valaddr_reg:x3; val_offset:43479*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43479*0 + 3*669*FLEN/8, x4, x1, x2)

inst_14494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000000ffff; valaddr_reg:x3; val_offset:43482*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43482*0 + 3*670*FLEN/8, x4, x1, x2)

inst_14495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000001ffff; valaddr_reg:x3; val_offset:43485*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43485*0 + 3*671*FLEN/8, x4, x1, x2)

inst_14496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000003ffff; valaddr_reg:x3; val_offset:43488*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43488*0 + 3*672*FLEN/8, x4, x1, x2)

inst_14497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000007ffff; valaddr_reg:x3; val_offset:43491*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43491*0 + 3*673*FLEN/8, x4, x1, x2)

inst_14498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000000fffff; valaddr_reg:x3; val_offset:43494*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43494*0 + 3*674*FLEN/8, x4, x1, x2)

inst_14499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000001fffff; valaddr_reg:x3; val_offset:43497*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43497*0 + 3*675*FLEN/8, x4, x1, x2)

inst_14500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000003fffff; valaddr_reg:x3; val_offset:43500*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43500*0 + 3*676*FLEN/8, x4, x1, x2)

inst_14501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000007fffff; valaddr_reg:x3; val_offset:43503*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43503*0 + 3*677*FLEN/8, x4, x1, x2)

inst_14502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000000ffffff; valaddr_reg:x3; val_offset:43506*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43506*0 + 3*678*FLEN/8, x4, x1, x2)

inst_14503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000001ffffff; valaddr_reg:x3; val_offset:43509*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43509*0 + 3*679*FLEN/8, x4, x1, x2)

inst_14504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000003ffffff; valaddr_reg:x3; val_offset:43512*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43512*0 + 3*680*FLEN/8, x4, x1, x2)

inst_14505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000007ffffff; valaddr_reg:x3; val_offset:43515*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43515*0 + 3*681*FLEN/8, x4, x1, x2)

inst_14506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000000fffffff; valaddr_reg:x3; val_offset:43518*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43518*0 + 3*682*FLEN/8, x4, x1, x2)

inst_14507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000001fffffff; valaddr_reg:x3; val_offset:43521*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43521*0 + 3*683*FLEN/8, x4, x1, x2)

inst_14508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000003fffffff; valaddr_reg:x3; val_offset:43524*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43524*0 + 3*684*FLEN/8, x4, x1, x2)

inst_14509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000007fffffff; valaddr_reg:x3; val_offset:43527*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43527*0 + 3*685*FLEN/8, x4, x1, x2)

inst_14510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600000ffffffff; valaddr_reg:x3; val_offset:43530*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43530*0 + 3*686*FLEN/8, x4, x1, x2)

inst_14511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600001ffffffff; valaddr_reg:x3; val_offset:43533*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43533*0 + 3*687*FLEN/8, x4, x1, x2)

inst_14512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600003ffffffff; valaddr_reg:x3; val_offset:43536*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43536*0 + 3*688*FLEN/8, x4, x1, x2)

inst_14513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600007ffffffff; valaddr_reg:x3; val_offset:43539*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43539*0 + 3*689*FLEN/8, x4, x1, x2)

inst_14514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60000fffffffff; valaddr_reg:x3; val_offset:43542*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43542*0 + 3*690*FLEN/8, x4, x1, x2)

inst_14515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60001fffffffff; valaddr_reg:x3; val_offset:43545*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43545*0 + 3*691*FLEN/8, x4, x1, x2)

inst_14516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60003fffffffff; valaddr_reg:x3; val_offset:43548*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43548*0 + 3*692*FLEN/8, x4, x1, x2)

inst_14517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60007fffffffff; valaddr_reg:x3; val_offset:43551*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43551*0 + 3*693*FLEN/8, x4, x1, x2)

inst_14518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6000ffffffffff; valaddr_reg:x3; val_offset:43554*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43554*0 + 3*694*FLEN/8, x4, x1, x2)

inst_14519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6001ffffffffff; valaddr_reg:x3; val_offset:43557*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43557*0 + 3*695*FLEN/8, x4, x1, x2)

inst_14520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6003ffffffffff; valaddr_reg:x3; val_offset:43560*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43560*0 + 3*696*FLEN/8, x4, x1, x2)

inst_14521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6007ffffffffff; valaddr_reg:x3; val_offset:43563*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43563*0 + 3*697*FLEN/8, x4, x1, x2)

inst_14522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d600fffffffffff; valaddr_reg:x3; val_offset:43566*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43566*0 + 3*698*FLEN/8, x4, x1, x2)

inst_14523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d601fffffffffff; valaddr_reg:x3; val_offset:43569*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43569*0 + 3*699*FLEN/8, x4, x1, x2)

inst_14524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d603fffffffffff; valaddr_reg:x3; val_offset:43572*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43572*0 + 3*700*FLEN/8, x4, x1, x2)

inst_14525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d607fffffffffff; valaddr_reg:x3; val_offset:43575*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43575*0 + 3*701*FLEN/8, x4, x1, x2)

inst_14526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d60ffffffffffff; valaddr_reg:x3; val_offset:43578*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43578*0 + 3*702*FLEN/8, x4, x1, x2)

inst_14527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d61ffffffffffff; valaddr_reg:x3; val_offset:43581*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43581*0 + 3*703*FLEN/8, x4, x1, x2)

inst_14528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d63ffffffffffff; valaddr_reg:x3; val_offset:43584*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43584*0 + 3*704*FLEN/8, x4, x1, x2)

inst_14529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d67ffffffffffff; valaddr_reg:x3; val_offset:43587*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43587*0 + 3*705*FLEN/8, x4, x1, x2)

inst_14530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d68000000000000; valaddr_reg:x3; val_offset:43590*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43590*0 + 3*706*FLEN/8, x4, x1, x2)

inst_14531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6c000000000000; valaddr_reg:x3; val_offset:43593*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43593*0 + 3*707*FLEN/8, x4, x1, x2)

inst_14532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6e000000000000; valaddr_reg:x3; val_offset:43596*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43596*0 + 3*708*FLEN/8, x4, x1, x2)

inst_14533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6f000000000000; valaddr_reg:x3; val_offset:43599*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43599*0 + 3*709*FLEN/8, x4, x1, x2)

inst_14534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6f800000000000; valaddr_reg:x3; val_offset:43602*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43602*0 + 3*710*FLEN/8, x4, x1, x2)

inst_14535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fc00000000000; valaddr_reg:x3; val_offset:43605*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43605*0 + 3*711*FLEN/8, x4, x1, x2)

inst_14536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fe00000000000; valaddr_reg:x3; val_offset:43608*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43608*0 + 3*712*FLEN/8, x4, x1, x2)

inst_14537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ff00000000000; valaddr_reg:x3; val_offset:43611*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43611*0 + 3*713*FLEN/8, x4, x1, x2)

inst_14538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ff80000000000; valaddr_reg:x3; val_offset:43614*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43614*0 + 3*714*FLEN/8, x4, x1, x2)

inst_14539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffc0000000000; valaddr_reg:x3; val_offset:43617*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43617*0 + 3*715*FLEN/8, x4, x1, x2)

inst_14540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffe0000000000; valaddr_reg:x3; val_offset:43620*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43620*0 + 3*716*FLEN/8, x4, x1, x2)

inst_14541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fff0000000000; valaddr_reg:x3; val_offset:43623*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43623*0 + 3*717*FLEN/8, x4, x1, x2)

inst_14542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fff8000000000; valaddr_reg:x3; val_offset:43626*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43626*0 + 3*718*FLEN/8, x4, x1, x2)

inst_14543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffc000000000; valaddr_reg:x3; val_offset:43629*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43629*0 + 3*719*FLEN/8, x4, x1, x2)

inst_14544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffe000000000; valaddr_reg:x3; val_offset:43632*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43632*0 + 3*720*FLEN/8, x4, x1, x2)

inst_14545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffff000000000; valaddr_reg:x3; val_offset:43635*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43635*0 + 3*721*FLEN/8, x4, x1, x2)

inst_14546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffff800000000; valaddr_reg:x3; val_offset:43638*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43638*0 + 3*722*FLEN/8, x4, x1, x2)

inst_14547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffc00000000; valaddr_reg:x3; val_offset:43641*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43641*0 + 3*723*FLEN/8, x4, x1, x2)

inst_14548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffe00000000; valaddr_reg:x3; val_offset:43644*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43644*0 + 3*724*FLEN/8, x4, x1, x2)

inst_14549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffff00000000; valaddr_reg:x3; val_offset:43647*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43647*0 + 3*725*FLEN/8, x4, x1, x2)

inst_14550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffff80000000; valaddr_reg:x3; val_offset:43650*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43650*0 + 3*726*FLEN/8, x4, x1, x2)

inst_14551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffc0000000; valaddr_reg:x3; val_offset:43653*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43653*0 + 3*727*FLEN/8, x4, x1, x2)

inst_14552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffe0000000; valaddr_reg:x3; val_offset:43656*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43656*0 + 3*728*FLEN/8, x4, x1, x2)

inst_14553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffff0000000; valaddr_reg:x3; val_offset:43659*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43659*0 + 3*729*FLEN/8, x4, x1, x2)

inst_14554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffff8000000; valaddr_reg:x3; val_offset:43662*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43662*0 + 3*730*FLEN/8, x4, x1, x2)

inst_14555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffc000000; valaddr_reg:x3; val_offset:43665*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43665*0 + 3*731*FLEN/8, x4, x1, x2)

inst_14556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffe000000; valaddr_reg:x3; val_offset:43668*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43668*0 + 3*732*FLEN/8, x4, x1, x2)

inst_14557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffff000000; valaddr_reg:x3; val_offset:43671*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43671*0 + 3*733*FLEN/8, x4, x1, x2)

inst_14558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffff800000; valaddr_reg:x3; val_offset:43674*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43674*0 + 3*734*FLEN/8, x4, x1, x2)

inst_14559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffc00000; valaddr_reg:x3; val_offset:43677*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43677*0 + 3*735*FLEN/8, x4, x1, x2)

inst_14560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffe00000; valaddr_reg:x3; val_offset:43680*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43680*0 + 3*736*FLEN/8, x4, x1, x2)

inst_14561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffff00000; valaddr_reg:x3; val_offset:43683*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43683*0 + 3*737*FLEN/8, x4, x1, x2)

inst_14562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffff80000; valaddr_reg:x3; val_offset:43686*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43686*0 + 3*738*FLEN/8, x4, x1, x2)

inst_14563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffc0000; valaddr_reg:x3; val_offset:43689*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43689*0 + 3*739*FLEN/8, x4, x1, x2)

inst_14564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffe0000; valaddr_reg:x3; val_offset:43692*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43692*0 + 3*740*FLEN/8, x4, x1, x2)

inst_14565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffff0000; valaddr_reg:x3; val_offset:43695*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43695*0 + 3*741*FLEN/8, x4, x1, x2)

inst_14566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffff8000; valaddr_reg:x3; val_offset:43698*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43698*0 + 3*742*FLEN/8, x4, x1, x2)

inst_14567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffc000; valaddr_reg:x3; val_offset:43701*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43701*0 + 3*743*FLEN/8, x4, x1, x2)

inst_14568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffe000; valaddr_reg:x3; val_offset:43704*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43704*0 + 3*744*FLEN/8, x4, x1, x2)

inst_14569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffff000; valaddr_reg:x3; val_offset:43707*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43707*0 + 3*745*FLEN/8, x4, x1, x2)

inst_14570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffff800; valaddr_reg:x3; val_offset:43710*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43710*0 + 3*746*FLEN/8, x4, x1, x2)

inst_14571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffc00; valaddr_reg:x3; val_offset:43713*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43713*0 + 3*747*FLEN/8, x4, x1, x2)

inst_14572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffe00; valaddr_reg:x3; val_offset:43716*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43716*0 + 3*748*FLEN/8, x4, x1, x2)

inst_14573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffff00; valaddr_reg:x3; val_offset:43719*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43719*0 + 3*749*FLEN/8, x4, x1, x2)

inst_14574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffff80; valaddr_reg:x3; val_offset:43722*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43722*0 + 3*750*FLEN/8, x4, x1, x2)

inst_14575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffffc0; valaddr_reg:x3; val_offset:43725*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43725*0 + 3*751*FLEN/8, x4, x1, x2)

inst_14576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffffe0; valaddr_reg:x3; val_offset:43728*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43728*0 + 3*752*FLEN/8, x4, x1, x2)

inst_14577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffff0; valaddr_reg:x3; val_offset:43731*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43731*0 + 3*753*FLEN/8, x4, x1, x2)

inst_14578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffff8; valaddr_reg:x3; val_offset:43734*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43734*0 + 3*754*FLEN/8, x4, x1, x2)

inst_14579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffffc; valaddr_reg:x3; val_offset:43737*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43737*0 + 3*755*FLEN/8, x4, x1, x2)

inst_14580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6ffffffffffffe; valaddr_reg:x3; val_offset:43740*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43740*0 + 3*756*FLEN/8, x4, x1, x2)

inst_14581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3d6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3d6fffffffffffff; valaddr_reg:x3; val_offset:43743*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43743*0 + 3*757*FLEN/8, x4, x1, x2)

inst_14582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:43746*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43746*0 + 3*758*FLEN/8, x4, x1, x2)

inst_14583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:43749*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43749*0 + 3*759*FLEN/8, x4, x1, x2)

inst_14584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:43752*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43752*0 + 3*760*FLEN/8, x4, x1, x2)

inst_14585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:43755*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43755*0 + 3*761*FLEN/8, x4, x1, x2)

inst_14586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:43758*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43758*0 + 3*762*FLEN/8, x4, x1, x2)

inst_14587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:43761*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43761*0 + 3*763*FLEN/8, x4, x1, x2)

inst_14588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:43764*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43764*0 + 3*764*FLEN/8, x4, x1, x2)

inst_14589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:43767*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43767*0 + 3*765*FLEN/8, x4, x1, x2)

inst_14590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:43770*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43770*0 + 3*766*FLEN/8, x4, x1, x2)

inst_14591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xf49e0911bbf1f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x05d21c2f253e4 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7f49e0911bbf1f; op2val:0x20605d21c2f253e4;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:43773*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 43773*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236101128192,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236105322496,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236107419648,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108468224,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236108992512,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109254656,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109385728,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109451264,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109484032,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109500416,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109508608,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109512704,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109514752,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109515776,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516288,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516544,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516672,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516799,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6880993488418565383,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568064,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568065,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568067,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568071,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568079,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568095,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568127,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568191,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568319,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332568575,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332569087,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332570111,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332572159,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332576255,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332584447,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332600831,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332633599,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332699135,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033332830207,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033333092351,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033333616639,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033334665215,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033336762367,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033340956671,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033349345279,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033366122495,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033399676927,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033466785791,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033601003519,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542033869438975,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542034406309887,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542035480051711,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542037627535359,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542041922502655,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542050512437247,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542067692306431,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542102052044799,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542170771521535,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542308210475007,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431542583088381951,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431543132844195839,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431544232355823615,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431546431379079167,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431550829425590271,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431559625518612479,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431577217704656895,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431612402076745727,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431682770820923391,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4431823508309278719,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4432104983285989375,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4432667933239410687,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4433793833146253311,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4433793833146253312,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4434919733053095936,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4435482683006517248,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4435764157983227904,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4435904895471583232,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4435975264215760896,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436010448587849728,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436028040773894144,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436036836866916352,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436041234913427456,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436043433936683008,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436044533448310784,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045083204124672,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045358082031616,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045495520985088,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045564240461824,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045598600200192,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045615780069376,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045624370003968,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045628664971264,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045630812454912,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045631886196736,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632423067648,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632691503104,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632825720832,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632892829696,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632926384128,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632943161344,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632951549952,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632955744256,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632957841408,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632958889984,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959414272,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959676416,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959807488,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959873024,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959905792,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959922176,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959930368,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959934464,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959936512,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959937536,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938048,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938304,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938432,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938496,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938528,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938544,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938552,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938556,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938558,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4436045632959938559,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6881083054098173663,64,FLEN)
NAN_BOXED(2333083325379097301,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935168,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935169,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935171,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935175,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935183,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935199,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935231,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935295,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935423,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020935679,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020936191,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020937215,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020939263,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020943359,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020951551,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443020967935,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443021000703,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443021066239,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443021197311,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443021459455,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443021983743,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443023032319,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443025129471,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443029323775,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443037712383,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443054489599,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443088044031,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443155152895,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443289370623,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448443557806079,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448444094676991,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448445168418815,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448447315902463,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448451610869759,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448460200804351,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448477380673535,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448511740411903,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448580459888639,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448717898842111,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314448992776749055,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314449542532562943,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314450642044190719,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314452841067446271,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314457239113957375,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314466035206979583,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314483627393023999,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314518811765112831,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314589180509290495,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4314729917997645823,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4315011392974356479,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4315574342927777791,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4316700242834620415,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4316700242834620416,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4317826142741463040,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318389092694884352,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318670567671595008,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318811305159950336,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318881673904128000,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318916858276216832,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318934450462261248,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318943246555283456,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318947644601794560,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318949843625050112,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318950943136677888,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318951492892491776,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318951767770398720,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318951905209352192,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318951973928828928,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952008288567296,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952025468436480,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952034058371072,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952038353338368,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952040500822016,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952041574563840,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042111434752,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042379870208,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042514087936,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042581196800,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042614751232,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042631528448,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042639917056,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042644111360,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042646208512,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042647257088,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042647781376,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648043520,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648174592,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648240128,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648272896,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648289280,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648297472,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648301568,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648303616,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648304640,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305152,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305408,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305536,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305600,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305632,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305648,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305656,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305660,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305662,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4318952042648305663,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6881139677679392639,64,FLEN)
NAN_BOXED(2333052400723597064,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640128,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640129,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640131,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640135,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640143,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640159,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640191,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640255,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640383,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294640639,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294641151,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294642175,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294644223,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294648319,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294656511,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294672895,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294705663,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294771199,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439294902271,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439295164415,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439295688703,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439296737279,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439298834431,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439303028735,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439311417343,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439328194559,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439361748991,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439428857855,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439563075583,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484439831511039,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484440368381951,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484441442123775,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484443589607423,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484447884574719,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484456474509311,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484473654378495,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484508014116863,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484576733593599,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484714172547071,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359484989050454015,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359485538806267903,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359486638317895679,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359488837341151231,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359493235387662335,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359502031480684543,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359519623666728959,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359554808038817791,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359625176782995455,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4359765914271350783,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4360047389248061439,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4360610339201482751,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4361736239108325375,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4361736239108325376,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4362862139015168000,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363425088968589312,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363706563945299968,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363847301433655296,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363917670177832960,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363952854549921792,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363970446735966208,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363979242828988416,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363983640875499520,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363985839898755072,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363986939410382848,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363987489166196736,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363987764044103680,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363987901483057152,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363987970202533888,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988004562272256,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988021742141440,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988030332076032,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988034627043328,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988036774526976,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988037848268800,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038385139712,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038653575168,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038787792896,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038854901760,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038888456192,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038905233408,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038913622016,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038917816320,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038919913472,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038920962048,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921486336,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921748480,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921879552,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921945088,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921977856,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038921994240,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922002432,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922006528,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922008576,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922009600,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010112,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010368,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010496,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010560,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010592,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010608,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010616,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010620,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010622,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4363988038922010623,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6881198593013682167,64,FLEN)
NAN_BOXED(2333020651478679103,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337088,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337089,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337091,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337095,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337103,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337119,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337151,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337215,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337343,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309337599,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309338111,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309339135,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309341183,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309345279,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309353471,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309369855,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309402623,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309468159,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309599231,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690309861375,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690310385663,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690311434239,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690313531391,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690317725695,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690326114303,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690342891519,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690376445951,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690443554815,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690577772543,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719690846207999,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719691383078911,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719692456820735,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719694604304383,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719698899271679,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719707489206271,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719724669075455,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719759028813823,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719827748290559,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411719965187244031,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411720240065150975,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411720789820964863,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411721889332592639,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411724088355848191,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411728486402359295,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411737282495381503,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411754874681425919,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411790059053514751,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13411860427797692415,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13412001165286047743,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13412282640262758399,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13412845590216179711,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13413971490123022335,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13413971490123022336,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13415097390029864960,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13415660339983286272,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13415941814959996928,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416082552448352256,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416152921192529920,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416188105564618752,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416205697750663168,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416214493843685376,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416218891890196480,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416221090913452032,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416222190425079808,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416222740180893696,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223015058800640,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223152497754112,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223221217230848,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223255576969216,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223272756838400,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223281346772992,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223285641740288,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223287789223936,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223288862965760,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289399836672,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289668272128,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289802489856,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289869598720,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289903153152,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289919930368,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289928318976,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289932513280,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289934610432,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289935659008,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936183296,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936445440,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936576512,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936642048,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936674816,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936691200,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936699392,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936703488,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936705536,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936706560,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707072,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707328,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707456,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707520,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707552,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707568,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707576,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707580,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707582,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13416223289936707583,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6881232426539983127,64,FLEN)
NAN_BOXED(11524849451685248297,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827072,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827073,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827075,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827079,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827087,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827103,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827135,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827199,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827327,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077827583,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077828095,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077829119,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077831167,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077835263,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077843455,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077859839,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077892607,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834077958143,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834078089215,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834078351359,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834078875647,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834079924223,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834082021375,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834086215679,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834094604287,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834111381503,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834144935935,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834212044799,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834346262527,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534834614697983,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534835151568895,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534836225310719,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534838372794367,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534842667761663,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534851257696255,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534868437565439,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534902797303807,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422534971516780543,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422535108955734015,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422535383833640959,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422535933589454847,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422537033101082623,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422539232124338175,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422543630170849279,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422552426263871487,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422570018449915903,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422605202822004735,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422675571566182399,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4422816309054537727,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4423097784031248383,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4423660733984669695,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4424786633891512319,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4424786633891512320,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4425912533798354944,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4426475483751776256,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4426756958728486912,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4426897696216842240,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4426968064961019904,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427003249333108736,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427020841519153152,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427029637612175360,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427034035658686464,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427036234681942016,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427037334193569792,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427037883949383680,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038158827290624,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038296266244096,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038364985720832,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038399345459200,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038416525328384,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038425115262976,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038429410230272,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038431557713920,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038432631455744,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433168326656,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433436762112,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433570979840,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433638088704,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433671643136,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433688420352,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433696808960,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433701003264,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433703100416,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433704148992,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433704673280,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433704935424,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705066496,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705132032,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705164800,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705181184,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705189376,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705193472,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705195520,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705196544,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197056,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197312,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197440,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197504,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197536,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197552,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197560,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197564,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197566,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4427038433705197567,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6881299984501423903,64,FLEN)
NAN_BOXED(2332967006563881956,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
