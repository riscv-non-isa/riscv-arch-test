
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_101376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:304128*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304128*0 + 3*0*FLEN/8, x4, x1, x2)

inst_101377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:304131*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304131*0 + 3*1*FLEN/8, x4, x1, x2)

inst_101378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:304134*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304134*0 + 3*2*FLEN/8, x4, x1, x2)

inst_101379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:304137*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304137*0 + 3*3*FLEN/8, x4, x1, x2)

inst_101380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:304140*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304140*0 + 3*4*FLEN/8, x4, x1, x2)

inst_101381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:304143*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304143*0 + 3*5*FLEN/8, x4, x1, x2)

inst_101382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:304146*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304146*0 + 3*6*FLEN/8, x4, x1, x2)

inst_101383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:304149*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304149*0 + 3*7*FLEN/8, x4, x1, x2)

inst_101384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:304152*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304152*0 + 3*8*FLEN/8, x4, x1, x2)

inst_101385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:304155*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304155*0 + 3*9*FLEN/8, x4, x1, x2)

inst_101386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000000000; valaddr_reg:x3; val_offset:304158*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304158*0 + 3*10*FLEN/8, x4, x1, x2)

inst_101387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000000001; valaddr_reg:x3; val_offset:304161*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304161*0 + 3*11*FLEN/8, x4, x1, x2)

inst_101388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000000003; valaddr_reg:x3; val_offset:304164*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304164*0 + 3*12*FLEN/8, x4, x1, x2)

inst_101389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000000007; valaddr_reg:x3; val_offset:304167*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304167*0 + 3*13*FLEN/8, x4, x1, x2)

inst_101390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000000000f; valaddr_reg:x3; val_offset:304170*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304170*0 + 3*14*FLEN/8, x4, x1, x2)

inst_101391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000000001f; valaddr_reg:x3; val_offset:304173*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304173*0 + 3*15*FLEN/8, x4, x1, x2)

inst_101392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000000003f; valaddr_reg:x3; val_offset:304176*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304176*0 + 3*16*FLEN/8, x4, x1, x2)

inst_101393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000000007f; valaddr_reg:x3; val_offset:304179*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304179*0 + 3*17*FLEN/8, x4, x1, x2)

inst_101394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000000000ff; valaddr_reg:x3; val_offset:304182*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304182*0 + 3*18*FLEN/8, x4, x1, x2)

inst_101395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000000001ff; valaddr_reg:x3; val_offset:304185*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304185*0 + 3*19*FLEN/8, x4, x1, x2)

inst_101396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000000003ff; valaddr_reg:x3; val_offset:304188*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304188*0 + 3*20*FLEN/8, x4, x1, x2)

inst_101397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000000007ff; valaddr_reg:x3; val_offset:304191*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304191*0 + 3*21*FLEN/8, x4, x1, x2)

inst_101398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000000fff; valaddr_reg:x3; val_offset:304194*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304194*0 + 3*22*FLEN/8, x4, x1, x2)

inst_101399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000001fff; valaddr_reg:x3; val_offset:304197*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304197*0 + 3*23*FLEN/8, x4, x1, x2)

inst_101400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000003fff; valaddr_reg:x3; val_offset:304200*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304200*0 + 3*24*FLEN/8, x4, x1, x2)

inst_101401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000007fff; valaddr_reg:x3; val_offset:304203*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304203*0 + 3*25*FLEN/8, x4, x1, x2)

inst_101402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000000ffff; valaddr_reg:x3; val_offset:304206*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304206*0 + 3*26*FLEN/8, x4, x1, x2)

inst_101403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000001ffff; valaddr_reg:x3; val_offset:304209*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304209*0 + 3*27*FLEN/8, x4, x1, x2)

inst_101404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000003ffff; valaddr_reg:x3; val_offset:304212*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304212*0 + 3*28*FLEN/8, x4, x1, x2)

inst_101405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000007ffff; valaddr_reg:x3; val_offset:304215*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304215*0 + 3*29*FLEN/8, x4, x1, x2)

inst_101406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000000fffff; valaddr_reg:x3; val_offset:304218*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304218*0 + 3*30*FLEN/8, x4, x1, x2)

inst_101407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000001fffff; valaddr_reg:x3; val_offset:304221*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304221*0 + 3*31*FLEN/8, x4, x1, x2)

inst_101408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000003fffff; valaddr_reg:x3; val_offset:304224*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304224*0 + 3*32*FLEN/8, x4, x1, x2)

inst_101409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000007fffff; valaddr_reg:x3; val_offset:304227*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304227*0 + 3*33*FLEN/8, x4, x1, x2)

inst_101410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000000ffffff; valaddr_reg:x3; val_offset:304230*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304230*0 + 3*34*FLEN/8, x4, x1, x2)

inst_101411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000001ffffff; valaddr_reg:x3; val_offset:304233*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304233*0 + 3*35*FLEN/8, x4, x1, x2)

inst_101412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000003ffffff; valaddr_reg:x3; val_offset:304236*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304236*0 + 3*36*FLEN/8, x4, x1, x2)

inst_101413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000007ffffff; valaddr_reg:x3; val_offset:304239*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304239*0 + 3*37*FLEN/8, x4, x1, x2)

inst_101414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000000fffffff; valaddr_reg:x3; val_offset:304242*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304242*0 + 3*38*FLEN/8, x4, x1, x2)

inst_101415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000001fffffff; valaddr_reg:x3; val_offset:304245*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304245*0 + 3*39*FLEN/8, x4, x1, x2)

inst_101416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000003fffffff; valaddr_reg:x3; val_offset:304248*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304248*0 + 3*40*FLEN/8, x4, x1, x2)

inst_101417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000007fffffff; valaddr_reg:x3; val_offset:304251*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304251*0 + 3*41*FLEN/8, x4, x1, x2)

inst_101418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400000ffffffff; valaddr_reg:x3; val_offset:304254*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304254*0 + 3*42*FLEN/8, x4, x1, x2)

inst_101419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400001ffffffff; valaddr_reg:x3; val_offset:304257*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304257*0 + 3*43*FLEN/8, x4, x1, x2)

inst_101420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400003ffffffff; valaddr_reg:x3; val_offset:304260*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304260*0 + 3*44*FLEN/8, x4, x1, x2)

inst_101421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400007ffffffff; valaddr_reg:x3; val_offset:304263*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304263*0 + 3*45*FLEN/8, x4, x1, x2)

inst_101422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140000fffffffff; valaddr_reg:x3; val_offset:304266*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304266*0 + 3*46*FLEN/8, x4, x1, x2)

inst_101423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140001fffffffff; valaddr_reg:x3; val_offset:304269*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304269*0 + 3*47*FLEN/8, x4, x1, x2)

inst_101424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140003fffffffff; valaddr_reg:x3; val_offset:304272*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304272*0 + 3*48*FLEN/8, x4, x1, x2)

inst_101425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140007fffffffff; valaddr_reg:x3; val_offset:304275*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304275*0 + 3*49*FLEN/8, x4, x1, x2)

inst_101426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14000ffffffffff; valaddr_reg:x3; val_offset:304278*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304278*0 + 3*50*FLEN/8, x4, x1, x2)

inst_101427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14001ffffffffff; valaddr_reg:x3; val_offset:304281*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304281*0 + 3*51*FLEN/8, x4, x1, x2)

inst_101428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14003ffffffffff; valaddr_reg:x3; val_offset:304284*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304284*0 + 3*52*FLEN/8, x4, x1, x2)

inst_101429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14007ffffffffff; valaddr_reg:x3; val_offset:304287*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304287*0 + 3*53*FLEN/8, x4, x1, x2)

inst_101430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1400fffffffffff; valaddr_reg:x3; val_offset:304290*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304290*0 + 3*54*FLEN/8, x4, x1, x2)

inst_101431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1401fffffffffff; valaddr_reg:x3; val_offset:304293*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304293*0 + 3*55*FLEN/8, x4, x1, x2)

inst_101432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1403fffffffffff; valaddr_reg:x3; val_offset:304296*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304296*0 + 3*56*FLEN/8, x4, x1, x2)

inst_101433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x1407fffffffffff; valaddr_reg:x3; val_offset:304299*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304299*0 + 3*57*FLEN/8, x4, x1, x2)

inst_101434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x140ffffffffffff; valaddr_reg:x3; val_offset:304302*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304302*0 + 3*58*FLEN/8, x4, x1, x2)

inst_101435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x141ffffffffffff; valaddr_reg:x3; val_offset:304305*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304305*0 + 3*59*FLEN/8, x4, x1, x2)

inst_101436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x143ffffffffffff; valaddr_reg:x3; val_offset:304308*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304308*0 + 3*60*FLEN/8, x4, x1, x2)

inst_101437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x147ffffffffffff; valaddr_reg:x3; val_offset:304311*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304311*0 + 3*61*FLEN/8, x4, x1, x2)

inst_101438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x148000000000000; valaddr_reg:x3; val_offset:304314*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304314*0 + 3*62*FLEN/8, x4, x1, x2)

inst_101439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14c000000000000; valaddr_reg:x3; val_offset:304317*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304317*0 + 3*63*FLEN/8, x4, x1, x2)

inst_101440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14e000000000000; valaddr_reg:x3; val_offset:304320*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304320*0 + 3*64*FLEN/8, x4, x1, x2)

inst_101441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14f000000000000; valaddr_reg:x3; val_offset:304323*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304323*0 + 3*65*FLEN/8, x4, x1, x2)

inst_101442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14f800000000000; valaddr_reg:x3; val_offset:304326*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304326*0 + 3*66*FLEN/8, x4, x1, x2)

inst_101443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fc00000000000; valaddr_reg:x3; val_offset:304329*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304329*0 + 3*67*FLEN/8, x4, x1, x2)

inst_101444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fe00000000000; valaddr_reg:x3; val_offset:304332*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304332*0 + 3*68*FLEN/8, x4, x1, x2)

inst_101445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ff00000000000; valaddr_reg:x3; val_offset:304335*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304335*0 + 3*69*FLEN/8, x4, x1, x2)

inst_101446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ff80000000000; valaddr_reg:x3; val_offset:304338*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304338*0 + 3*70*FLEN/8, x4, x1, x2)

inst_101447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffc0000000000; valaddr_reg:x3; val_offset:304341*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304341*0 + 3*71*FLEN/8, x4, x1, x2)

inst_101448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffe0000000000; valaddr_reg:x3; val_offset:304344*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304344*0 + 3*72*FLEN/8, x4, x1, x2)

inst_101449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fff0000000000; valaddr_reg:x3; val_offset:304347*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304347*0 + 3*73*FLEN/8, x4, x1, x2)

inst_101450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fff8000000000; valaddr_reg:x3; val_offset:304350*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304350*0 + 3*74*FLEN/8, x4, x1, x2)

inst_101451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffc000000000; valaddr_reg:x3; val_offset:304353*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304353*0 + 3*75*FLEN/8, x4, x1, x2)

inst_101452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffe000000000; valaddr_reg:x3; val_offset:304356*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304356*0 + 3*76*FLEN/8, x4, x1, x2)

inst_101453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffff000000000; valaddr_reg:x3; val_offset:304359*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304359*0 + 3*77*FLEN/8, x4, x1, x2)

inst_101454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffff800000000; valaddr_reg:x3; val_offset:304362*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304362*0 + 3*78*FLEN/8, x4, x1, x2)

inst_101455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffc00000000; valaddr_reg:x3; val_offset:304365*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304365*0 + 3*79*FLEN/8, x4, x1, x2)

inst_101456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffe00000000; valaddr_reg:x3; val_offset:304368*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304368*0 + 3*80*FLEN/8, x4, x1, x2)

inst_101457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffff00000000; valaddr_reg:x3; val_offset:304371*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304371*0 + 3*81*FLEN/8, x4, x1, x2)

inst_101458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffff80000000; valaddr_reg:x3; val_offset:304374*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304374*0 + 3*82*FLEN/8, x4, x1, x2)

inst_101459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffc0000000; valaddr_reg:x3; val_offset:304377*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304377*0 + 3*83*FLEN/8, x4, x1, x2)

inst_101460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffe0000000; valaddr_reg:x3; val_offset:304380*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304380*0 + 3*84*FLEN/8, x4, x1, x2)

inst_101461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffff0000000; valaddr_reg:x3; val_offset:304383*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304383*0 + 3*85*FLEN/8, x4, x1, x2)

inst_101462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffff8000000; valaddr_reg:x3; val_offset:304386*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304386*0 + 3*86*FLEN/8, x4, x1, x2)

inst_101463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffc000000; valaddr_reg:x3; val_offset:304389*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304389*0 + 3*87*FLEN/8, x4, x1, x2)

inst_101464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffe000000; valaddr_reg:x3; val_offset:304392*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304392*0 + 3*88*FLEN/8, x4, x1, x2)

inst_101465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffff000000; valaddr_reg:x3; val_offset:304395*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304395*0 + 3*89*FLEN/8, x4, x1, x2)

inst_101466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffff800000; valaddr_reg:x3; val_offset:304398*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304398*0 + 3*90*FLEN/8, x4, x1, x2)

inst_101467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffc00000; valaddr_reg:x3; val_offset:304401*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304401*0 + 3*91*FLEN/8, x4, x1, x2)

inst_101468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffe00000; valaddr_reg:x3; val_offset:304404*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304404*0 + 3*92*FLEN/8, x4, x1, x2)

inst_101469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffff00000; valaddr_reg:x3; val_offset:304407*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304407*0 + 3*93*FLEN/8, x4, x1, x2)

inst_101470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffff80000; valaddr_reg:x3; val_offset:304410*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304410*0 + 3*94*FLEN/8, x4, x1, x2)

inst_101471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffc0000; valaddr_reg:x3; val_offset:304413*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304413*0 + 3*95*FLEN/8, x4, x1, x2)

inst_101472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffe0000; valaddr_reg:x3; val_offset:304416*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304416*0 + 3*96*FLEN/8, x4, x1, x2)

inst_101473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffff0000; valaddr_reg:x3; val_offset:304419*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304419*0 + 3*97*FLEN/8, x4, x1, x2)

inst_101474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffff8000; valaddr_reg:x3; val_offset:304422*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304422*0 + 3*98*FLEN/8, x4, x1, x2)

inst_101475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffc000; valaddr_reg:x3; val_offset:304425*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304425*0 + 3*99*FLEN/8, x4, x1, x2)

inst_101476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffe000; valaddr_reg:x3; val_offset:304428*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304428*0 + 3*100*FLEN/8, x4, x1, x2)

inst_101477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffff000; valaddr_reg:x3; val_offset:304431*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304431*0 + 3*101*FLEN/8, x4, x1, x2)

inst_101478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffff800; valaddr_reg:x3; val_offset:304434*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304434*0 + 3*102*FLEN/8, x4, x1, x2)

inst_101479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffc00; valaddr_reg:x3; val_offset:304437*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304437*0 + 3*103*FLEN/8, x4, x1, x2)

inst_101480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffe00; valaddr_reg:x3; val_offset:304440*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304440*0 + 3*104*FLEN/8, x4, x1, x2)

inst_101481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffff00; valaddr_reg:x3; val_offset:304443*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304443*0 + 3*105*FLEN/8, x4, x1, x2)

inst_101482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffff80; valaddr_reg:x3; val_offset:304446*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304446*0 + 3*106*FLEN/8, x4, x1, x2)

inst_101483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffffc0; valaddr_reg:x3; val_offset:304449*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304449*0 + 3*107*FLEN/8, x4, x1, x2)

inst_101484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffffe0; valaddr_reg:x3; val_offset:304452*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304452*0 + 3*108*FLEN/8, x4, x1, x2)

inst_101485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffff0; valaddr_reg:x3; val_offset:304455*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304455*0 + 3*109*FLEN/8, x4, x1, x2)

inst_101486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffff8; valaddr_reg:x3; val_offset:304458*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304458*0 + 3*110*FLEN/8, x4, x1, x2)

inst_101487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffffc; valaddr_reg:x3; val_offset:304461*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304461*0 + 3*111*FLEN/8, x4, x1, x2)

inst_101488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14ffffffffffffe; valaddr_reg:x3; val_offset:304464*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304464*0 + 3*112*FLEN/8, x4, x1, x2)

inst_101489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfcff7895fd6cd and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafcff7895fd6cd; op2val:0x0;
op3val:0x14fffffffffffff; valaddr_reg:x3; val_offset:304467*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304467*0 + 3*113*FLEN/8, x4, x1, x2)

inst_101490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:304470*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304470*0 + 3*114*FLEN/8, x4, x1, x2)

inst_101491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:304473*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304473*0 + 3*115*FLEN/8, x4, x1, x2)

inst_101492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:304476*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304476*0 + 3*116*FLEN/8, x4, x1, x2)

inst_101493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:304479*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304479*0 + 3*117*FLEN/8, x4, x1, x2)

inst_101494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:304482*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304482*0 + 3*118*FLEN/8, x4, x1, x2)

inst_101495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:304485*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304485*0 + 3*119*FLEN/8, x4, x1, x2)

inst_101496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:304488*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304488*0 + 3*120*FLEN/8, x4, x1, x2)

inst_101497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:304491*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304491*0 + 3*121*FLEN/8, x4, x1, x2)

inst_101498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:304494*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304494*0 + 3*122*FLEN/8, x4, x1, x2)

inst_101499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:304497*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304497*0 + 3*123*FLEN/8, x4, x1, x2)

inst_101500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:304500*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304500*0 + 3*124*FLEN/8, x4, x1, x2)

inst_101501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:304503*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304503*0 + 3*125*FLEN/8, x4, x1, x2)

inst_101502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:304506*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304506*0 + 3*126*FLEN/8, x4, x1, x2)

inst_101503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:304509*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304509*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_101504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:304512*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304512*0 + 3*128*FLEN/8, x4, x1, x2)

inst_101505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:304515*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304515*0 + 3*129*FLEN/8, x4, x1, x2)

inst_101506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:304518*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304518*0 + 3*130*FLEN/8, x4, x1, x2)

inst_101507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:304521*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304521*0 + 3*131*FLEN/8, x4, x1, x2)

inst_101508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:304524*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304524*0 + 3*132*FLEN/8, x4, x1, x2)

inst_101509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:304527*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304527*0 + 3*133*FLEN/8, x4, x1, x2)

inst_101510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:304530*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304530*0 + 3*134*FLEN/8, x4, x1, x2)

inst_101511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:304533*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304533*0 + 3*135*FLEN/8, x4, x1, x2)

inst_101512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:304536*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304536*0 + 3*136*FLEN/8, x4, x1, x2)

inst_101513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:304539*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304539*0 + 3*137*FLEN/8, x4, x1, x2)

inst_101514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:304542*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304542*0 + 3*138*FLEN/8, x4, x1, x2)

inst_101515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:304545*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304545*0 + 3*139*FLEN/8, x4, x1, x2)

inst_101516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:304548*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304548*0 + 3*140*FLEN/8, x4, x1, x2)

inst_101517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:304551*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304551*0 + 3*141*FLEN/8, x4, x1, x2)

inst_101518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:304554*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304554*0 + 3*142*FLEN/8, x4, x1, x2)

inst_101519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:304557*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304557*0 + 3*143*FLEN/8, x4, x1, x2)

inst_101520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:304560*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304560*0 + 3*144*FLEN/8, x4, x1, x2)

inst_101521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:304563*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304563*0 + 3*145*FLEN/8, x4, x1, x2)

inst_101522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:304566*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304566*0 + 3*146*FLEN/8, x4, x1, x2)

inst_101523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:304569*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304569*0 + 3*147*FLEN/8, x4, x1, x2)

inst_101524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:304572*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304572*0 + 3*148*FLEN/8, x4, x1, x2)

inst_101525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:304575*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304575*0 + 3*149*FLEN/8, x4, x1, x2)

inst_101526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:304578*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304578*0 + 3*150*FLEN/8, x4, x1, x2)

inst_101527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:304581*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304581*0 + 3*151*FLEN/8, x4, x1, x2)

inst_101528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:304584*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304584*0 + 3*152*FLEN/8, x4, x1, x2)

inst_101529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:304587*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304587*0 + 3*153*FLEN/8, x4, x1, x2)

inst_101530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:304590*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304590*0 + 3*154*FLEN/8, x4, x1, x2)

inst_101531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:304593*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304593*0 + 3*155*FLEN/8, x4, x1, x2)

inst_101532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:304596*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304596*0 + 3*156*FLEN/8, x4, x1, x2)

inst_101533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:304599*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304599*0 + 3*157*FLEN/8, x4, x1, x2)

inst_101534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:304602*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304602*0 + 3*158*FLEN/8, x4, x1, x2)

inst_101535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:304605*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304605*0 + 3*159*FLEN/8, x4, x1, x2)

inst_101536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:304608*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304608*0 + 3*160*FLEN/8, x4, x1, x2)

inst_101537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:304611*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304611*0 + 3*161*FLEN/8, x4, x1, x2)

inst_101538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:304614*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304614*0 + 3*162*FLEN/8, x4, x1, x2)

inst_101539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:304617*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304617*0 + 3*163*FLEN/8, x4, x1, x2)

inst_101540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:304620*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304620*0 + 3*164*FLEN/8, x4, x1, x2)

inst_101541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:304623*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304623*0 + 3*165*FLEN/8, x4, x1, x2)

inst_101542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:304626*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304626*0 + 3*166*FLEN/8, x4, x1, x2)

inst_101543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:304629*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304629*0 + 3*167*FLEN/8, x4, x1, x2)

inst_101544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:304632*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304632*0 + 3*168*FLEN/8, x4, x1, x2)

inst_101545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:304635*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304635*0 + 3*169*FLEN/8, x4, x1, x2)

inst_101546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:304638*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304638*0 + 3*170*FLEN/8, x4, x1, x2)

inst_101547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:304641*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304641*0 + 3*171*FLEN/8, x4, x1, x2)

inst_101548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:304644*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304644*0 + 3*172*FLEN/8, x4, x1, x2)

inst_101549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:304647*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304647*0 + 3*173*FLEN/8, x4, x1, x2)

inst_101550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:304650*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304650*0 + 3*174*FLEN/8, x4, x1, x2)

inst_101551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:304653*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304653*0 + 3*175*FLEN/8, x4, x1, x2)

inst_101552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:304656*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304656*0 + 3*176*FLEN/8, x4, x1, x2)

inst_101553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:304659*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304659*0 + 3*177*FLEN/8, x4, x1, x2)

inst_101554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:304662*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304662*0 + 3*178*FLEN/8, x4, x1, x2)

inst_101555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:304665*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304665*0 + 3*179*FLEN/8, x4, x1, x2)

inst_101556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1500fffffffffff; valaddr_reg:x3; val_offset:304668*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304668*0 + 3*180*FLEN/8, x4, x1, x2)

inst_101557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1501fffffffffff; valaddr_reg:x3; val_offset:304671*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304671*0 + 3*181*FLEN/8, x4, x1, x2)

inst_101558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1503fffffffffff; valaddr_reg:x3; val_offset:304674*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304674*0 + 3*182*FLEN/8, x4, x1, x2)

inst_101559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x1507fffffffffff; valaddr_reg:x3; val_offset:304677*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304677*0 + 3*183*FLEN/8, x4, x1, x2)

inst_101560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x150ffffffffffff; valaddr_reg:x3; val_offset:304680*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304680*0 + 3*184*FLEN/8, x4, x1, x2)

inst_101561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x151ffffffffffff; valaddr_reg:x3; val_offset:304683*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304683*0 + 3*185*FLEN/8, x4, x1, x2)

inst_101562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:304686*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304686*0 + 3*186*FLEN/8, x4, x1, x2)

inst_101563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:304689*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304689*0 + 3*187*FLEN/8, x4, x1, x2)

inst_101564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:304692*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304692*0 + 3*188*FLEN/8, x4, x1, x2)

inst_101565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:304695*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304695*0 + 3*189*FLEN/8, x4, x1, x2)

inst_101566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:304698*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304698*0 + 3*190*FLEN/8, x4, x1, x2)

inst_101567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:304701*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304701*0 + 3*191*FLEN/8, x4, x1, x2)

inst_101568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:304704*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304704*0 + 3*192*FLEN/8, x4, x1, x2)

inst_101569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:304707*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304707*0 + 3*193*FLEN/8, x4, x1, x2)

inst_101570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:304710*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304710*0 + 3*194*FLEN/8, x4, x1, x2)

inst_101571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:304713*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304713*0 + 3*195*FLEN/8, x4, x1, x2)

inst_101572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:304716*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304716*0 + 3*196*FLEN/8, x4, x1, x2)

inst_101573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:304719*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304719*0 + 3*197*FLEN/8, x4, x1, x2)

inst_101574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:304722*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304722*0 + 3*198*FLEN/8, x4, x1, x2)

inst_101575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:304725*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304725*0 + 3*199*FLEN/8, x4, x1, x2)

inst_101576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:304728*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304728*0 + 3*200*FLEN/8, x4, x1, x2)

inst_101577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:304731*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304731*0 + 3*201*FLEN/8, x4, x1, x2)

inst_101578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:304734*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304734*0 + 3*202*FLEN/8, x4, x1, x2)

inst_101579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:304737*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304737*0 + 3*203*FLEN/8, x4, x1, x2)

inst_101580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:304740*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304740*0 + 3*204*FLEN/8, x4, x1, x2)

inst_101581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:304743*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304743*0 + 3*205*FLEN/8, x4, x1, x2)

inst_101582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:304746*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304746*0 + 3*206*FLEN/8, x4, x1, x2)

inst_101583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:304749*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304749*0 + 3*207*FLEN/8, x4, x1, x2)

inst_101584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:304752*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304752*0 + 3*208*FLEN/8, x4, x1, x2)

inst_101585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:304755*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304755*0 + 3*209*FLEN/8, x4, x1, x2)

inst_101586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:304758*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304758*0 + 3*210*FLEN/8, x4, x1, x2)

inst_101587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:304761*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304761*0 + 3*211*FLEN/8, x4, x1, x2)

inst_101588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:304764*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304764*0 + 3*212*FLEN/8, x4, x1, x2)

inst_101589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:304767*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304767*0 + 3*213*FLEN/8, x4, x1, x2)

inst_101590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:304770*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304770*0 + 3*214*FLEN/8, x4, x1, x2)

inst_101591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:304773*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304773*0 + 3*215*FLEN/8, x4, x1, x2)

inst_101592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:304776*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304776*0 + 3*216*FLEN/8, x4, x1, x2)

inst_101593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:304779*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304779*0 + 3*217*FLEN/8, x4, x1, x2)

inst_101594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:304782*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304782*0 + 3*218*FLEN/8, x4, x1, x2)

inst_101595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:304785*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304785*0 + 3*219*FLEN/8, x4, x1, x2)

inst_101596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:304788*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304788*0 + 3*220*FLEN/8, x4, x1, x2)

inst_101597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:304791*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304791*0 + 3*221*FLEN/8, x4, x1, x2)

inst_101598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:304794*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304794*0 + 3*222*FLEN/8, x4, x1, x2)

inst_101599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:304797*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304797*0 + 3*223*FLEN/8, x4, x1, x2)

inst_101600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:304800*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304800*0 + 3*224*FLEN/8, x4, x1, x2)

inst_101601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:304803*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304803*0 + 3*225*FLEN/8, x4, x1, x2)

inst_101602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:304806*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304806*0 + 3*226*FLEN/8, x4, x1, x2)

inst_101603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:304809*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304809*0 + 3*227*FLEN/8, x4, x1, x2)

inst_101604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:304812*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304812*0 + 3*228*FLEN/8, x4, x1, x2)

inst_101605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:304815*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304815*0 + 3*229*FLEN/8, x4, x1, x2)

inst_101606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:304818*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304818*0 + 3*230*FLEN/8, x4, x1, x2)

inst_101607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:304821*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304821*0 + 3*231*FLEN/8, x4, x1, x2)

inst_101608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:304824*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304824*0 + 3*232*FLEN/8, x4, x1, x2)

inst_101609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:304827*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304827*0 + 3*233*FLEN/8, x4, x1, x2)

inst_101610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:304830*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304830*0 + 3*234*FLEN/8, x4, x1, x2)

inst_101611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:304833*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304833*0 + 3*235*FLEN/8, x4, x1, x2)

inst_101612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:304836*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304836*0 + 3*236*FLEN/8, x4, x1, x2)

inst_101613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:304839*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304839*0 + 3*237*FLEN/8, x4, x1, x2)

inst_101614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:304842*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304842*0 + 3*238*FLEN/8, x4, x1, x2)

inst_101615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfe6f3fd7af9ac and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafe6f3fd7af9ac; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:304845*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304845*0 + 3*239*FLEN/8, x4, x1, x2)

inst_101616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:304848*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304848*0 + 3*240*FLEN/8, x4, x1, x2)

inst_101617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:304851*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304851*0 + 3*241*FLEN/8, x4, x1, x2)

inst_101618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:304854*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304854*0 + 3*242*FLEN/8, x4, x1, x2)

inst_101619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:304857*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304857*0 + 3*243*FLEN/8, x4, x1, x2)

inst_101620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:304860*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304860*0 + 3*244*FLEN/8, x4, x1, x2)

inst_101621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:304863*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304863*0 + 3*245*FLEN/8, x4, x1, x2)

inst_101622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:304866*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304866*0 + 3*246*FLEN/8, x4, x1, x2)

inst_101623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:304869*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304869*0 + 3*247*FLEN/8, x4, x1, x2)

inst_101624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:304872*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304872*0 + 3*248*FLEN/8, x4, x1, x2)

inst_101625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:304875*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304875*0 + 3*249*FLEN/8, x4, x1, x2)

inst_101626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:304878*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304878*0 + 3*250*FLEN/8, x4, x1, x2)

inst_101627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:304881*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304881*0 + 3*251*FLEN/8, x4, x1, x2)

inst_101628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:304884*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304884*0 + 3*252*FLEN/8, x4, x1, x2)

inst_101629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:304887*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304887*0 + 3*253*FLEN/8, x4, x1, x2)

inst_101630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:304890*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304890*0 + 3*254*FLEN/8, x4, x1, x2)

inst_101631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:304893*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304893*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_101632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:304896*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304896*0 + 3*256*FLEN/8, x4, x1, x2)

inst_101633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:304899*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304899*0 + 3*257*FLEN/8, x4, x1, x2)

inst_101634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:304902*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304902*0 + 3*258*FLEN/8, x4, x1, x2)

inst_101635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:304905*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304905*0 + 3*259*FLEN/8, x4, x1, x2)

inst_101636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:304908*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304908*0 + 3*260*FLEN/8, x4, x1, x2)

inst_101637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:304911*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304911*0 + 3*261*FLEN/8, x4, x1, x2)

inst_101638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000000000; valaddr_reg:x3; val_offset:304914*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304914*0 + 3*262*FLEN/8, x4, x1, x2)

inst_101639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000000001; valaddr_reg:x3; val_offset:304917*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304917*0 + 3*263*FLEN/8, x4, x1, x2)

inst_101640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000000003; valaddr_reg:x3; val_offset:304920*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304920*0 + 3*264*FLEN/8, x4, x1, x2)

inst_101641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000000007; valaddr_reg:x3; val_offset:304923*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304923*0 + 3*265*FLEN/8, x4, x1, x2)

inst_101642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000000000f; valaddr_reg:x3; val_offset:304926*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304926*0 + 3*266*FLEN/8, x4, x1, x2)

inst_101643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000000001f; valaddr_reg:x3; val_offset:304929*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304929*0 + 3*267*FLEN/8, x4, x1, x2)

inst_101644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000000003f; valaddr_reg:x3; val_offset:304932*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304932*0 + 3*268*FLEN/8, x4, x1, x2)

inst_101645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000000007f; valaddr_reg:x3; val_offset:304935*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304935*0 + 3*269*FLEN/8, x4, x1, x2)

inst_101646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000000000ff; valaddr_reg:x3; val_offset:304938*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304938*0 + 3*270*FLEN/8, x4, x1, x2)

inst_101647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000000001ff; valaddr_reg:x3; val_offset:304941*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304941*0 + 3*271*FLEN/8, x4, x1, x2)

inst_101648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000000003ff; valaddr_reg:x3; val_offset:304944*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304944*0 + 3*272*FLEN/8, x4, x1, x2)

inst_101649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000000007ff; valaddr_reg:x3; val_offset:304947*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304947*0 + 3*273*FLEN/8, x4, x1, x2)

inst_101650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000000fff; valaddr_reg:x3; val_offset:304950*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304950*0 + 3*274*FLEN/8, x4, x1, x2)

inst_101651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000001fff; valaddr_reg:x3; val_offset:304953*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304953*0 + 3*275*FLEN/8, x4, x1, x2)

inst_101652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000003fff; valaddr_reg:x3; val_offset:304956*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304956*0 + 3*276*FLEN/8, x4, x1, x2)

inst_101653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000007fff; valaddr_reg:x3; val_offset:304959*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304959*0 + 3*277*FLEN/8, x4, x1, x2)

inst_101654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000000ffff; valaddr_reg:x3; val_offset:304962*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304962*0 + 3*278*FLEN/8, x4, x1, x2)

inst_101655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000001ffff; valaddr_reg:x3; val_offset:304965*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304965*0 + 3*279*FLEN/8, x4, x1, x2)

inst_101656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000003ffff; valaddr_reg:x3; val_offset:304968*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304968*0 + 3*280*FLEN/8, x4, x1, x2)

inst_101657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000007ffff; valaddr_reg:x3; val_offset:304971*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304971*0 + 3*281*FLEN/8, x4, x1, x2)

inst_101658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000000fffff; valaddr_reg:x3; val_offset:304974*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304974*0 + 3*282*FLEN/8, x4, x1, x2)

inst_101659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000001fffff; valaddr_reg:x3; val_offset:304977*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304977*0 + 3*283*FLEN/8, x4, x1, x2)

inst_101660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000003fffff; valaddr_reg:x3; val_offset:304980*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304980*0 + 3*284*FLEN/8, x4, x1, x2)

inst_101661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000007fffff; valaddr_reg:x3; val_offset:304983*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304983*0 + 3*285*FLEN/8, x4, x1, x2)

inst_101662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000000ffffff; valaddr_reg:x3; val_offset:304986*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304986*0 + 3*286*FLEN/8, x4, x1, x2)

inst_101663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000001ffffff; valaddr_reg:x3; val_offset:304989*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304989*0 + 3*287*FLEN/8, x4, x1, x2)

inst_101664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000003ffffff; valaddr_reg:x3; val_offset:304992*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304992*0 + 3*288*FLEN/8, x4, x1, x2)

inst_101665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000007ffffff; valaddr_reg:x3; val_offset:304995*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304995*0 + 3*289*FLEN/8, x4, x1, x2)

inst_101666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000000fffffff; valaddr_reg:x3; val_offset:304998*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 304998*0 + 3*290*FLEN/8, x4, x1, x2)

inst_101667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000001fffffff; valaddr_reg:x3; val_offset:305001*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305001*0 + 3*291*FLEN/8, x4, x1, x2)

inst_101668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000003fffffff; valaddr_reg:x3; val_offset:305004*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305004*0 + 3*292*FLEN/8, x4, x1, x2)

inst_101669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000007fffffff; valaddr_reg:x3; val_offset:305007*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305007*0 + 3*293*FLEN/8, x4, x1, x2)

inst_101670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500000ffffffff; valaddr_reg:x3; val_offset:305010*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305010*0 + 3*294*FLEN/8, x4, x1, x2)

inst_101671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500001ffffffff; valaddr_reg:x3; val_offset:305013*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305013*0 + 3*295*FLEN/8, x4, x1, x2)

inst_101672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500003ffffffff; valaddr_reg:x3; val_offset:305016*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305016*0 + 3*296*FLEN/8, x4, x1, x2)

inst_101673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500007ffffffff; valaddr_reg:x3; val_offset:305019*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305019*0 + 3*297*FLEN/8, x4, x1, x2)

inst_101674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150000fffffffff; valaddr_reg:x3; val_offset:305022*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305022*0 + 3*298*FLEN/8, x4, x1, x2)

inst_101675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150001fffffffff; valaddr_reg:x3; val_offset:305025*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305025*0 + 3*299*FLEN/8, x4, x1, x2)

inst_101676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150003fffffffff; valaddr_reg:x3; val_offset:305028*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305028*0 + 3*300*FLEN/8, x4, x1, x2)

inst_101677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150007fffffffff; valaddr_reg:x3; val_offset:305031*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305031*0 + 3*301*FLEN/8, x4, x1, x2)

inst_101678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15000ffffffffff; valaddr_reg:x3; val_offset:305034*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305034*0 + 3*302*FLEN/8, x4, x1, x2)

inst_101679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15001ffffffffff; valaddr_reg:x3; val_offset:305037*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305037*0 + 3*303*FLEN/8, x4, x1, x2)

inst_101680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15003ffffffffff; valaddr_reg:x3; val_offset:305040*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305040*0 + 3*304*FLEN/8, x4, x1, x2)

inst_101681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15007ffffffffff; valaddr_reg:x3; val_offset:305043*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305043*0 + 3*305*FLEN/8, x4, x1, x2)

inst_101682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1500fffffffffff; valaddr_reg:x3; val_offset:305046*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305046*0 + 3*306*FLEN/8, x4, x1, x2)

inst_101683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1501fffffffffff; valaddr_reg:x3; val_offset:305049*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305049*0 + 3*307*FLEN/8, x4, x1, x2)

inst_101684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1503fffffffffff; valaddr_reg:x3; val_offset:305052*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305052*0 + 3*308*FLEN/8, x4, x1, x2)

inst_101685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x1507fffffffffff; valaddr_reg:x3; val_offset:305055*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305055*0 + 3*309*FLEN/8, x4, x1, x2)

inst_101686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x150ffffffffffff; valaddr_reg:x3; val_offset:305058*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305058*0 + 3*310*FLEN/8, x4, x1, x2)

inst_101687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x151ffffffffffff; valaddr_reg:x3; val_offset:305061*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305061*0 + 3*311*FLEN/8, x4, x1, x2)

inst_101688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x153ffffffffffff; valaddr_reg:x3; val_offset:305064*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305064*0 + 3*312*FLEN/8, x4, x1, x2)

inst_101689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x157ffffffffffff; valaddr_reg:x3; val_offset:305067*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305067*0 + 3*313*FLEN/8, x4, x1, x2)

inst_101690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x158000000000000; valaddr_reg:x3; val_offset:305070*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305070*0 + 3*314*FLEN/8, x4, x1, x2)

inst_101691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15c000000000000; valaddr_reg:x3; val_offset:305073*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305073*0 + 3*315*FLEN/8, x4, x1, x2)

inst_101692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15e000000000000; valaddr_reg:x3; val_offset:305076*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305076*0 + 3*316*FLEN/8, x4, x1, x2)

inst_101693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15f000000000000; valaddr_reg:x3; val_offset:305079*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305079*0 + 3*317*FLEN/8, x4, x1, x2)

inst_101694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15f800000000000; valaddr_reg:x3; val_offset:305082*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305082*0 + 3*318*FLEN/8, x4, x1, x2)

inst_101695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fc00000000000; valaddr_reg:x3; val_offset:305085*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305085*0 + 3*319*FLEN/8, x4, x1, x2)

inst_101696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fe00000000000; valaddr_reg:x3; val_offset:305088*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305088*0 + 3*320*FLEN/8, x4, x1, x2)

inst_101697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ff00000000000; valaddr_reg:x3; val_offset:305091*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305091*0 + 3*321*FLEN/8, x4, x1, x2)

inst_101698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ff80000000000; valaddr_reg:x3; val_offset:305094*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305094*0 + 3*322*FLEN/8, x4, x1, x2)

inst_101699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffc0000000000; valaddr_reg:x3; val_offset:305097*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305097*0 + 3*323*FLEN/8, x4, x1, x2)

inst_101700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffe0000000000; valaddr_reg:x3; val_offset:305100*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305100*0 + 3*324*FLEN/8, x4, x1, x2)

inst_101701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fff0000000000; valaddr_reg:x3; val_offset:305103*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305103*0 + 3*325*FLEN/8, x4, x1, x2)

inst_101702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fff8000000000; valaddr_reg:x3; val_offset:305106*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305106*0 + 3*326*FLEN/8, x4, x1, x2)

inst_101703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffc000000000; valaddr_reg:x3; val_offset:305109*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305109*0 + 3*327*FLEN/8, x4, x1, x2)

inst_101704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffe000000000; valaddr_reg:x3; val_offset:305112*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305112*0 + 3*328*FLEN/8, x4, x1, x2)

inst_101705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffff000000000; valaddr_reg:x3; val_offset:305115*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305115*0 + 3*329*FLEN/8, x4, x1, x2)

inst_101706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffff800000000; valaddr_reg:x3; val_offset:305118*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305118*0 + 3*330*FLEN/8, x4, x1, x2)

inst_101707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffc00000000; valaddr_reg:x3; val_offset:305121*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305121*0 + 3*331*FLEN/8, x4, x1, x2)

inst_101708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffe00000000; valaddr_reg:x3; val_offset:305124*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305124*0 + 3*332*FLEN/8, x4, x1, x2)

inst_101709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffff00000000; valaddr_reg:x3; val_offset:305127*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305127*0 + 3*333*FLEN/8, x4, x1, x2)

inst_101710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffff80000000; valaddr_reg:x3; val_offset:305130*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305130*0 + 3*334*FLEN/8, x4, x1, x2)

inst_101711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffc0000000; valaddr_reg:x3; val_offset:305133*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305133*0 + 3*335*FLEN/8, x4, x1, x2)

inst_101712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffe0000000; valaddr_reg:x3; val_offset:305136*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305136*0 + 3*336*FLEN/8, x4, x1, x2)

inst_101713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffff0000000; valaddr_reg:x3; val_offset:305139*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305139*0 + 3*337*FLEN/8, x4, x1, x2)

inst_101714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffff8000000; valaddr_reg:x3; val_offset:305142*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305142*0 + 3*338*FLEN/8, x4, x1, x2)

inst_101715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffc000000; valaddr_reg:x3; val_offset:305145*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305145*0 + 3*339*FLEN/8, x4, x1, x2)

inst_101716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffe000000; valaddr_reg:x3; val_offset:305148*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305148*0 + 3*340*FLEN/8, x4, x1, x2)

inst_101717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffff000000; valaddr_reg:x3; val_offset:305151*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305151*0 + 3*341*FLEN/8, x4, x1, x2)

inst_101718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffff800000; valaddr_reg:x3; val_offset:305154*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305154*0 + 3*342*FLEN/8, x4, x1, x2)

inst_101719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffc00000; valaddr_reg:x3; val_offset:305157*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305157*0 + 3*343*FLEN/8, x4, x1, x2)

inst_101720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffe00000; valaddr_reg:x3; val_offset:305160*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305160*0 + 3*344*FLEN/8, x4, x1, x2)

inst_101721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffff00000; valaddr_reg:x3; val_offset:305163*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305163*0 + 3*345*FLEN/8, x4, x1, x2)

inst_101722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffff80000; valaddr_reg:x3; val_offset:305166*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305166*0 + 3*346*FLEN/8, x4, x1, x2)

inst_101723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffc0000; valaddr_reg:x3; val_offset:305169*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305169*0 + 3*347*FLEN/8, x4, x1, x2)

inst_101724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffe0000; valaddr_reg:x3; val_offset:305172*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305172*0 + 3*348*FLEN/8, x4, x1, x2)

inst_101725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffff0000; valaddr_reg:x3; val_offset:305175*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305175*0 + 3*349*FLEN/8, x4, x1, x2)

inst_101726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffff8000; valaddr_reg:x3; val_offset:305178*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305178*0 + 3*350*FLEN/8, x4, x1, x2)

inst_101727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffc000; valaddr_reg:x3; val_offset:305181*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305181*0 + 3*351*FLEN/8, x4, x1, x2)

inst_101728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffe000; valaddr_reg:x3; val_offset:305184*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305184*0 + 3*352*FLEN/8, x4, x1, x2)

inst_101729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffff000; valaddr_reg:x3; val_offset:305187*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305187*0 + 3*353*FLEN/8, x4, x1, x2)

inst_101730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffff800; valaddr_reg:x3; val_offset:305190*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305190*0 + 3*354*FLEN/8, x4, x1, x2)

inst_101731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffc00; valaddr_reg:x3; val_offset:305193*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305193*0 + 3*355*FLEN/8, x4, x1, x2)

inst_101732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffe00; valaddr_reg:x3; val_offset:305196*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305196*0 + 3*356*FLEN/8, x4, x1, x2)

inst_101733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffff00; valaddr_reg:x3; val_offset:305199*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305199*0 + 3*357*FLEN/8, x4, x1, x2)

inst_101734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffff80; valaddr_reg:x3; val_offset:305202*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305202*0 + 3*358*FLEN/8, x4, x1, x2)

inst_101735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffffc0; valaddr_reg:x3; val_offset:305205*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305205*0 + 3*359*FLEN/8, x4, x1, x2)

inst_101736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffffe0; valaddr_reg:x3; val_offset:305208*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305208*0 + 3*360*FLEN/8, x4, x1, x2)

inst_101737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffff0; valaddr_reg:x3; val_offset:305211*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305211*0 + 3*361*FLEN/8, x4, x1, x2)

inst_101738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffff8; valaddr_reg:x3; val_offset:305214*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305214*0 + 3*362*FLEN/8, x4, x1, x2)

inst_101739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffffc; valaddr_reg:x3; val_offset:305217*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305217*0 + 3*363*FLEN/8, x4, x1, x2)

inst_101740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15ffffffffffffe; valaddr_reg:x3; val_offset:305220*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305220*0 + 3*364*FLEN/8, x4, x1, x2)

inst_101741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xfee700f3a0a66 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fafee700f3a0a66; op2val:0x0;
op3val:0x15fffffffffffff; valaddr_reg:x3; val_offset:305223*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305223*0 + 3*365*FLEN/8, x4, x1, x2)

inst_101742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:305226*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305226*0 + 3*366*FLEN/8, x4, x1, x2)

inst_101743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:305229*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305229*0 + 3*367*FLEN/8, x4, x1, x2)

inst_101744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:305232*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305232*0 + 3*368*FLEN/8, x4, x1, x2)

inst_101745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:305235*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305235*0 + 3*369*FLEN/8, x4, x1, x2)

inst_101746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:305238*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305238*0 + 3*370*FLEN/8, x4, x1, x2)

inst_101747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:305241*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305241*0 + 3*371*FLEN/8, x4, x1, x2)

inst_101748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:305244*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305244*0 + 3*372*FLEN/8, x4, x1, x2)

inst_101749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:305247*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305247*0 + 3*373*FLEN/8, x4, x1, x2)

inst_101750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:305250*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305250*0 + 3*374*FLEN/8, x4, x1, x2)

inst_101751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:305253*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305253*0 + 3*375*FLEN/8, x4, x1, x2)

inst_101752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:305256*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305256*0 + 3*376*FLEN/8, x4, x1, x2)

inst_101753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:305259*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305259*0 + 3*377*FLEN/8, x4, x1, x2)

inst_101754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:305262*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305262*0 + 3*378*FLEN/8, x4, x1, x2)

inst_101755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:305265*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305265*0 + 3*379*FLEN/8, x4, x1, x2)

inst_101756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:305268*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305268*0 + 3*380*FLEN/8, x4, x1, x2)

inst_101757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:305271*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305271*0 + 3*381*FLEN/8, x4, x1, x2)

inst_101758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:305274*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305274*0 + 3*382*FLEN/8, x4, x1, x2)

inst_101759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:305277*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305277*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_101760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:305280*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305280*0 + 3*384*FLEN/8, x4, x1, x2)

inst_101761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:305283*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305283*0 + 3*385*FLEN/8, x4, x1, x2)

inst_101762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:305286*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305286*0 + 3*386*FLEN/8, x4, x1, x2)

inst_101763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:305289*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305289*0 + 3*387*FLEN/8, x4, x1, x2)

inst_101764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000000000; valaddr_reg:x3; val_offset:305292*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305292*0 + 3*388*FLEN/8, x4, x1, x2)

inst_101765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000000001; valaddr_reg:x3; val_offset:305295*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305295*0 + 3*389*FLEN/8, x4, x1, x2)

inst_101766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000000003; valaddr_reg:x3; val_offset:305298*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305298*0 + 3*390*FLEN/8, x4, x1, x2)

inst_101767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000000007; valaddr_reg:x3; val_offset:305301*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305301*0 + 3*391*FLEN/8, x4, x1, x2)

inst_101768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000000000f; valaddr_reg:x3; val_offset:305304*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305304*0 + 3*392*FLEN/8, x4, x1, x2)

inst_101769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000000001f; valaddr_reg:x3; val_offset:305307*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305307*0 + 3*393*FLEN/8, x4, x1, x2)

inst_101770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000000003f; valaddr_reg:x3; val_offset:305310*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305310*0 + 3*394*FLEN/8, x4, x1, x2)

inst_101771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000000007f; valaddr_reg:x3; val_offset:305313*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305313*0 + 3*395*FLEN/8, x4, x1, x2)

inst_101772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000000000ff; valaddr_reg:x3; val_offset:305316*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305316*0 + 3*396*FLEN/8, x4, x1, x2)

inst_101773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000000001ff; valaddr_reg:x3; val_offset:305319*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305319*0 + 3*397*FLEN/8, x4, x1, x2)

inst_101774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000000003ff; valaddr_reg:x3; val_offset:305322*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305322*0 + 3*398*FLEN/8, x4, x1, x2)

inst_101775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000000007ff; valaddr_reg:x3; val_offset:305325*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305325*0 + 3*399*FLEN/8, x4, x1, x2)

inst_101776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000000fff; valaddr_reg:x3; val_offset:305328*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305328*0 + 3*400*FLEN/8, x4, x1, x2)

inst_101777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000001fff; valaddr_reg:x3; val_offset:305331*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305331*0 + 3*401*FLEN/8, x4, x1, x2)

inst_101778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000003fff; valaddr_reg:x3; val_offset:305334*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305334*0 + 3*402*FLEN/8, x4, x1, x2)

inst_101779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000007fff; valaddr_reg:x3; val_offset:305337*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305337*0 + 3*403*FLEN/8, x4, x1, x2)

inst_101780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000000ffff; valaddr_reg:x3; val_offset:305340*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305340*0 + 3*404*FLEN/8, x4, x1, x2)

inst_101781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000001ffff; valaddr_reg:x3; val_offset:305343*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305343*0 + 3*405*FLEN/8, x4, x1, x2)

inst_101782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000003ffff; valaddr_reg:x3; val_offset:305346*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305346*0 + 3*406*FLEN/8, x4, x1, x2)

inst_101783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000007ffff; valaddr_reg:x3; val_offset:305349*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305349*0 + 3*407*FLEN/8, x4, x1, x2)

inst_101784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000000fffff; valaddr_reg:x3; val_offset:305352*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305352*0 + 3*408*FLEN/8, x4, x1, x2)

inst_101785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000001fffff; valaddr_reg:x3; val_offset:305355*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305355*0 + 3*409*FLEN/8, x4, x1, x2)

inst_101786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000003fffff; valaddr_reg:x3; val_offset:305358*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305358*0 + 3*410*FLEN/8, x4, x1, x2)

inst_101787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000007fffff; valaddr_reg:x3; val_offset:305361*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305361*0 + 3*411*FLEN/8, x4, x1, x2)

inst_101788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000000ffffff; valaddr_reg:x3; val_offset:305364*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305364*0 + 3*412*FLEN/8, x4, x1, x2)

inst_101789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000001ffffff; valaddr_reg:x3; val_offset:305367*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305367*0 + 3*413*FLEN/8, x4, x1, x2)

inst_101790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000003ffffff; valaddr_reg:x3; val_offset:305370*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305370*0 + 3*414*FLEN/8, x4, x1, x2)

inst_101791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000007ffffff; valaddr_reg:x3; val_offset:305373*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305373*0 + 3*415*FLEN/8, x4, x1, x2)

inst_101792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000000fffffff; valaddr_reg:x3; val_offset:305376*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305376*0 + 3*416*FLEN/8, x4, x1, x2)

inst_101793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000001fffffff; valaddr_reg:x3; val_offset:305379*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305379*0 + 3*417*FLEN/8, x4, x1, x2)

inst_101794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000003fffffff; valaddr_reg:x3; val_offset:305382*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305382*0 + 3*418*FLEN/8, x4, x1, x2)

inst_101795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000007fffffff; valaddr_reg:x3; val_offset:305385*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305385*0 + 3*419*FLEN/8, x4, x1, x2)

inst_101796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00000ffffffff; valaddr_reg:x3; val_offset:305388*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305388*0 + 3*420*FLEN/8, x4, x1, x2)

inst_101797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00001ffffffff; valaddr_reg:x3; val_offset:305391*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305391*0 + 3*421*FLEN/8, x4, x1, x2)

inst_101798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00003ffffffff; valaddr_reg:x3; val_offset:305394*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305394*0 + 3*422*FLEN/8, x4, x1, x2)

inst_101799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00007ffffffff; valaddr_reg:x3; val_offset:305397*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305397*0 + 3*423*FLEN/8, x4, x1, x2)

inst_101800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0000fffffffff; valaddr_reg:x3; val_offset:305400*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305400*0 + 3*424*FLEN/8, x4, x1, x2)

inst_101801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0001fffffffff; valaddr_reg:x3; val_offset:305403*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305403*0 + 3*425*FLEN/8, x4, x1, x2)

inst_101802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0003fffffffff; valaddr_reg:x3; val_offset:305406*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305406*0 + 3*426*FLEN/8, x4, x1, x2)

inst_101803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0007fffffffff; valaddr_reg:x3; val_offset:305409*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305409*0 + 3*427*FLEN/8, x4, x1, x2)

inst_101804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d000ffffffffff; valaddr_reg:x3; val_offset:305412*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305412*0 + 3*428*FLEN/8, x4, x1, x2)

inst_101805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d001ffffffffff; valaddr_reg:x3; val_offset:305415*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305415*0 + 3*429*FLEN/8, x4, x1, x2)

inst_101806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d003ffffffffff; valaddr_reg:x3; val_offset:305418*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305418*0 + 3*430*FLEN/8, x4, x1, x2)

inst_101807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d007ffffffffff; valaddr_reg:x3; val_offset:305421*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305421*0 + 3*431*FLEN/8, x4, x1, x2)

inst_101808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d00fffffffffff; valaddr_reg:x3; val_offset:305424*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305424*0 + 3*432*FLEN/8, x4, x1, x2)

inst_101809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d01fffffffffff; valaddr_reg:x3; val_offset:305427*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305427*0 + 3*433*FLEN/8, x4, x1, x2)

inst_101810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d03fffffffffff; valaddr_reg:x3; val_offset:305430*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305430*0 + 3*434*FLEN/8, x4, x1, x2)

inst_101811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d07fffffffffff; valaddr_reg:x3; val_offset:305433*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305433*0 + 3*435*FLEN/8, x4, x1, x2)

inst_101812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d0ffffffffffff; valaddr_reg:x3; val_offset:305436*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305436*0 + 3*436*FLEN/8, x4, x1, x2)

inst_101813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d1ffffffffffff; valaddr_reg:x3; val_offset:305439*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305439*0 + 3*437*FLEN/8, x4, x1, x2)

inst_101814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d3ffffffffffff; valaddr_reg:x3; val_offset:305442*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305442*0 + 3*438*FLEN/8, x4, x1, x2)

inst_101815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d7ffffffffffff; valaddr_reg:x3; val_offset:305445*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305445*0 + 3*439*FLEN/8, x4, x1, x2)

inst_101816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80d8000000000000; valaddr_reg:x3; val_offset:305448*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305448*0 + 3*440*FLEN/8, x4, x1, x2)

inst_101817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dc000000000000; valaddr_reg:x3; val_offset:305451*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305451*0 + 3*441*FLEN/8, x4, x1, x2)

inst_101818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80de000000000000; valaddr_reg:x3; val_offset:305454*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305454*0 + 3*442*FLEN/8, x4, x1, x2)

inst_101819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80df000000000000; valaddr_reg:x3; val_offset:305457*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305457*0 + 3*443*FLEN/8, x4, x1, x2)

inst_101820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80df800000000000; valaddr_reg:x3; val_offset:305460*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305460*0 + 3*444*FLEN/8, x4, x1, x2)

inst_101821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfc00000000000; valaddr_reg:x3; val_offset:305463*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305463*0 + 3*445*FLEN/8, x4, x1, x2)

inst_101822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfe00000000000; valaddr_reg:x3; val_offset:305466*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305466*0 + 3*446*FLEN/8, x4, x1, x2)

inst_101823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dff00000000000; valaddr_reg:x3; val_offset:305469*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305469*0 + 3*447*FLEN/8, x4, x1, x2)

inst_101824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dff80000000000; valaddr_reg:x3; val_offset:305472*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305472*0 + 3*448*FLEN/8, x4, x1, x2)

inst_101825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffc0000000000; valaddr_reg:x3; val_offset:305475*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305475*0 + 3*449*FLEN/8, x4, x1, x2)

inst_101826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffe0000000000; valaddr_reg:x3; val_offset:305478*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305478*0 + 3*450*FLEN/8, x4, x1, x2)

inst_101827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfff0000000000; valaddr_reg:x3; val_offset:305481*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305481*0 + 3*451*FLEN/8, x4, x1, x2)

inst_101828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfff8000000000; valaddr_reg:x3; val_offset:305484*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305484*0 + 3*452*FLEN/8, x4, x1, x2)

inst_101829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffc000000000; valaddr_reg:x3; val_offset:305487*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305487*0 + 3*453*FLEN/8, x4, x1, x2)

inst_101830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffe000000000; valaddr_reg:x3; val_offset:305490*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305490*0 + 3*454*FLEN/8, x4, x1, x2)

inst_101831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffff000000000; valaddr_reg:x3; val_offset:305493*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305493*0 + 3*455*FLEN/8, x4, x1, x2)

inst_101832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffff800000000; valaddr_reg:x3; val_offset:305496*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305496*0 + 3*456*FLEN/8, x4, x1, x2)

inst_101833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffc00000000; valaddr_reg:x3; val_offset:305499*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305499*0 + 3*457*FLEN/8, x4, x1, x2)

inst_101834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffe00000000; valaddr_reg:x3; val_offset:305502*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305502*0 + 3*458*FLEN/8, x4, x1, x2)

inst_101835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffff00000000; valaddr_reg:x3; val_offset:305505*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305505*0 + 3*459*FLEN/8, x4, x1, x2)

inst_101836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffff80000000; valaddr_reg:x3; val_offset:305508*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305508*0 + 3*460*FLEN/8, x4, x1, x2)

inst_101837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffc0000000; valaddr_reg:x3; val_offset:305511*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305511*0 + 3*461*FLEN/8, x4, x1, x2)

inst_101838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffe0000000; valaddr_reg:x3; val_offset:305514*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305514*0 + 3*462*FLEN/8, x4, x1, x2)

inst_101839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffff0000000; valaddr_reg:x3; val_offset:305517*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305517*0 + 3*463*FLEN/8, x4, x1, x2)

inst_101840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffff8000000; valaddr_reg:x3; val_offset:305520*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305520*0 + 3*464*FLEN/8, x4, x1, x2)

inst_101841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffc000000; valaddr_reg:x3; val_offset:305523*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305523*0 + 3*465*FLEN/8, x4, x1, x2)

inst_101842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffe000000; valaddr_reg:x3; val_offset:305526*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305526*0 + 3*466*FLEN/8, x4, x1, x2)

inst_101843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffff000000; valaddr_reg:x3; val_offset:305529*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305529*0 + 3*467*FLEN/8, x4, x1, x2)

inst_101844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffff800000; valaddr_reg:x3; val_offset:305532*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305532*0 + 3*468*FLEN/8, x4, x1, x2)

inst_101845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffc00000; valaddr_reg:x3; val_offset:305535*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305535*0 + 3*469*FLEN/8, x4, x1, x2)

inst_101846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffe00000; valaddr_reg:x3; val_offset:305538*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305538*0 + 3*470*FLEN/8, x4, x1, x2)

inst_101847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffff00000; valaddr_reg:x3; val_offset:305541*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305541*0 + 3*471*FLEN/8, x4, x1, x2)

inst_101848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffff80000; valaddr_reg:x3; val_offset:305544*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305544*0 + 3*472*FLEN/8, x4, x1, x2)

inst_101849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffc0000; valaddr_reg:x3; val_offset:305547*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305547*0 + 3*473*FLEN/8, x4, x1, x2)

inst_101850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffe0000; valaddr_reg:x3; val_offset:305550*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305550*0 + 3*474*FLEN/8, x4, x1, x2)

inst_101851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffff0000; valaddr_reg:x3; val_offset:305553*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305553*0 + 3*475*FLEN/8, x4, x1, x2)

inst_101852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffff8000; valaddr_reg:x3; val_offset:305556*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305556*0 + 3*476*FLEN/8, x4, x1, x2)

inst_101853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffc000; valaddr_reg:x3; val_offset:305559*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305559*0 + 3*477*FLEN/8, x4, x1, x2)

inst_101854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffe000; valaddr_reg:x3; val_offset:305562*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305562*0 + 3*478*FLEN/8, x4, x1, x2)

inst_101855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffff000; valaddr_reg:x3; val_offset:305565*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305565*0 + 3*479*FLEN/8, x4, x1, x2)

inst_101856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffff800; valaddr_reg:x3; val_offset:305568*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305568*0 + 3*480*FLEN/8, x4, x1, x2)

inst_101857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffc00; valaddr_reg:x3; val_offset:305571*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305571*0 + 3*481*FLEN/8, x4, x1, x2)

inst_101858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffe00; valaddr_reg:x3; val_offset:305574*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305574*0 + 3*482*FLEN/8, x4, x1, x2)

inst_101859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffff00; valaddr_reg:x3; val_offset:305577*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305577*0 + 3*483*FLEN/8, x4, x1, x2)

inst_101860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffff80; valaddr_reg:x3; val_offset:305580*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305580*0 + 3*484*FLEN/8, x4, x1, x2)

inst_101861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffffc0; valaddr_reg:x3; val_offset:305583*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305583*0 + 3*485*FLEN/8, x4, x1, x2)

inst_101862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffffe0; valaddr_reg:x3; val_offset:305586*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305586*0 + 3*486*FLEN/8, x4, x1, x2)

inst_101863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffff0; valaddr_reg:x3; val_offset:305589*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305589*0 + 3*487*FLEN/8, x4, x1, x2)

inst_101864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffff8; valaddr_reg:x3; val_offset:305592*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305592*0 + 3*488*FLEN/8, x4, x1, x2)

inst_101865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffffc; valaddr_reg:x3; val_offset:305595*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305595*0 + 3*489*FLEN/8, x4, x1, x2)

inst_101866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dffffffffffffe; valaddr_reg:x3; val_offset:305598*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305598*0 + 3*490*FLEN/8, x4, x1, x2)

inst_101867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff3c90824e08b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff3c90824e08b; op2val:0x8000;
op3val:0x80dfffffffffffff; valaddr_reg:x3; val_offset:305601*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305601*0 + 3*491*FLEN/8, x4, x1, x2)

inst_101868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000000000; valaddr_reg:x3; val_offset:305604*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305604*0 + 3*492*FLEN/8, x4, x1, x2)

inst_101869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:305607*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305607*0 + 3*493*FLEN/8, x4, x1, x2)

inst_101870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:305610*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305610*0 + 3*494*FLEN/8, x4, x1, x2)

inst_101871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:305613*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305613*0 + 3*495*FLEN/8, x4, x1, x2)

inst_101872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:305616*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305616*0 + 3*496*FLEN/8, x4, x1, x2)

inst_101873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:305619*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305619*0 + 3*497*FLEN/8, x4, x1, x2)

inst_101874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:305622*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305622*0 + 3*498*FLEN/8, x4, x1, x2)

inst_101875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000000007f; valaddr_reg:x3; val_offset:305625*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305625*0 + 3*499*FLEN/8, x4, x1, x2)

inst_101876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000000000ff; valaddr_reg:x3; val_offset:305628*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305628*0 + 3*500*FLEN/8, x4, x1, x2)

inst_101877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000000001ff; valaddr_reg:x3; val_offset:305631*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305631*0 + 3*501*FLEN/8, x4, x1, x2)

inst_101878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000000003ff; valaddr_reg:x3; val_offset:305634*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305634*0 + 3*502*FLEN/8, x4, x1, x2)

inst_101879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000000007ff; valaddr_reg:x3; val_offset:305637*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305637*0 + 3*503*FLEN/8, x4, x1, x2)

inst_101880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000000fff; valaddr_reg:x3; val_offset:305640*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305640*0 + 3*504*FLEN/8, x4, x1, x2)

inst_101881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000001fff; valaddr_reg:x3; val_offset:305643*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305643*0 + 3*505*FLEN/8, x4, x1, x2)

inst_101882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000003fff; valaddr_reg:x3; val_offset:305646*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305646*0 + 3*506*FLEN/8, x4, x1, x2)

inst_101883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000007fff; valaddr_reg:x3; val_offset:305649*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305649*0 + 3*507*FLEN/8, x4, x1, x2)

inst_101884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000000ffff; valaddr_reg:x3; val_offset:305652*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305652*0 + 3*508*FLEN/8, x4, x1, x2)

inst_101885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000001ffff; valaddr_reg:x3; val_offset:305655*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305655*0 + 3*509*FLEN/8, x4, x1, x2)

inst_101886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000003ffff; valaddr_reg:x3; val_offset:305658*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305658*0 + 3*510*FLEN/8, x4, x1, x2)

inst_101887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000007ffff; valaddr_reg:x3; val_offset:305661*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305661*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_101888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000000fffff; valaddr_reg:x3; val_offset:305664*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305664*0 + 3*512*FLEN/8, x4, x1, x2)

inst_101889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000001fffff; valaddr_reg:x3; val_offset:305667*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305667*0 + 3*513*FLEN/8, x4, x1, x2)

inst_101890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000003fffff; valaddr_reg:x3; val_offset:305670*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305670*0 + 3*514*FLEN/8, x4, x1, x2)

inst_101891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000007fffff; valaddr_reg:x3; val_offset:305673*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305673*0 + 3*515*FLEN/8, x4, x1, x2)

inst_101892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000000ffffff; valaddr_reg:x3; val_offset:305676*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305676*0 + 3*516*FLEN/8, x4, x1, x2)

inst_101893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000001ffffff; valaddr_reg:x3; val_offset:305679*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305679*0 + 3*517*FLEN/8, x4, x1, x2)

inst_101894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000003ffffff; valaddr_reg:x3; val_offset:305682*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305682*0 + 3*518*FLEN/8, x4, x1, x2)

inst_101895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000007ffffff; valaddr_reg:x3; val_offset:305685*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305685*0 + 3*519*FLEN/8, x4, x1, x2)

inst_101896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000000fffffff; valaddr_reg:x3; val_offset:305688*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305688*0 + 3*520*FLEN/8, x4, x1, x2)

inst_101897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000001fffffff; valaddr_reg:x3; val_offset:305691*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305691*0 + 3*521*FLEN/8, x4, x1, x2)

inst_101898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000003fffffff; valaddr_reg:x3; val_offset:305694*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305694*0 + 3*522*FLEN/8, x4, x1, x2)

inst_101899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000007fffffff; valaddr_reg:x3; val_offset:305697*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305697*0 + 3*523*FLEN/8, x4, x1, x2)

inst_101900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00000ffffffff; valaddr_reg:x3; val_offset:305700*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305700*0 + 3*524*FLEN/8, x4, x1, x2)

inst_101901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00001ffffffff; valaddr_reg:x3; val_offset:305703*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305703*0 + 3*525*FLEN/8, x4, x1, x2)

inst_101902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00003ffffffff; valaddr_reg:x3; val_offset:305706*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305706*0 + 3*526*FLEN/8, x4, x1, x2)

inst_101903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00007ffffffff; valaddr_reg:x3; val_offset:305709*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305709*0 + 3*527*FLEN/8, x4, x1, x2)

inst_101904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0000fffffffff; valaddr_reg:x3; val_offset:305712*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305712*0 + 3*528*FLEN/8, x4, x1, x2)

inst_101905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0001fffffffff; valaddr_reg:x3; val_offset:305715*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305715*0 + 3*529*FLEN/8, x4, x1, x2)

inst_101906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0003fffffffff; valaddr_reg:x3; val_offset:305718*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305718*0 + 3*530*FLEN/8, x4, x1, x2)

inst_101907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0007fffffffff; valaddr_reg:x3; val_offset:305721*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305721*0 + 3*531*FLEN/8, x4, x1, x2)

inst_101908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff000ffffffffff; valaddr_reg:x3; val_offset:305724*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305724*0 + 3*532*FLEN/8, x4, x1, x2)

inst_101909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff001ffffffffff; valaddr_reg:x3; val_offset:305727*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305727*0 + 3*533*FLEN/8, x4, x1, x2)

inst_101910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff003ffffffffff; valaddr_reg:x3; val_offset:305730*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305730*0 + 3*534*FLEN/8, x4, x1, x2)

inst_101911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff007ffffffffff; valaddr_reg:x3; val_offset:305733*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305733*0 + 3*535*FLEN/8, x4, x1, x2)

inst_101912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff00fffffffffff; valaddr_reg:x3; val_offset:305736*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305736*0 + 3*536*FLEN/8, x4, x1, x2)

inst_101913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff01fffffffffff; valaddr_reg:x3; val_offset:305739*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305739*0 + 3*537*FLEN/8, x4, x1, x2)

inst_101914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff03fffffffffff; valaddr_reg:x3; val_offset:305742*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305742*0 + 3*538*FLEN/8, x4, x1, x2)

inst_101915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff07fffffffffff; valaddr_reg:x3; val_offset:305745*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305745*0 + 3*539*FLEN/8, x4, x1, x2)

inst_101916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff0ffffffffffff; valaddr_reg:x3; val_offset:305748*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305748*0 + 3*540*FLEN/8, x4, x1, x2)

inst_101917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff1ffffffffffff; valaddr_reg:x3; val_offset:305751*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305751*0 + 3*541*FLEN/8, x4, x1, x2)

inst_101918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff3ffffffffffff; valaddr_reg:x3; val_offset:305754*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305754*0 + 3*542*FLEN/8, x4, x1, x2)

inst_101919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff7ffffffffffff; valaddr_reg:x3; val_offset:305757*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305757*0 + 3*543*FLEN/8, x4, x1, x2)

inst_101920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ff8000000000000; valaddr_reg:x3; val_offset:305760*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305760*0 + 3*544*FLEN/8, x4, x1, x2)

inst_101921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffc000000000000; valaddr_reg:x3; val_offset:305763*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305763*0 + 3*545*FLEN/8, x4, x1, x2)

inst_101922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffe000000000000; valaddr_reg:x3; val_offset:305766*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305766*0 + 3*546*FLEN/8, x4, x1, x2)

inst_101923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fff000000000000; valaddr_reg:x3; val_offset:305769*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305769*0 + 3*547*FLEN/8, x4, x1, x2)

inst_101924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fff800000000000; valaddr_reg:x3; val_offset:305772*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305772*0 + 3*548*FLEN/8, x4, x1, x2)

inst_101925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffc00000000000; valaddr_reg:x3; val_offset:305775*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305775*0 + 3*549*FLEN/8, x4, x1, x2)

inst_101926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffe00000000000; valaddr_reg:x3; val_offset:305778*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305778*0 + 3*550*FLEN/8, x4, x1, x2)

inst_101927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffff00000000000; valaddr_reg:x3; val_offset:305781*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305781*0 + 3*551*FLEN/8, x4, x1, x2)

inst_101928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffff80000000000; valaddr_reg:x3; val_offset:305784*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305784*0 + 3*552*FLEN/8, x4, x1, x2)

inst_101929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffc0000000000; valaddr_reg:x3; val_offset:305787*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305787*0 + 3*553*FLEN/8, x4, x1, x2)

inst_101930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffe0000000000; valaddr_reg:x3; val_offset:305790*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305790*0 + 3*554*FLEN/8, x4, x1, x2)

inst_101931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffff0000000000; valaddr_reg:x3; val_offset:305793*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305793*0 + 3*555*FLEN/8, x4, x1, x2)

inst_101932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffff8000000000; valaddr_reg:x3; val_offset:305796*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305796*0 + 3*556*FLEN/8, x4, x1, x2)

inst_101933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffc000000000; valaddr_reg:x3; val_offset:305799*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305799*0 + 3*557*FLEN/8, x4, x1, x2)

inst_101934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffe000000000; valaddr_reg:x3; val_offset:305802*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305802*0 + 3*558*FLEN/8, x4, x1, x2)

inst_101935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffff000000000; valaddr_reg:x3; val_offset:305805*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305805*0 + 3*559*FLEN/8, x4, x1, x2)

inst_101936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffff800000000; valaddr_reg:x3; val_offset:305808*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305808*0 + 3*560*FLEN/8, x4, x1, x2)

inst_101937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffc00000000; valaddr_reg:x3; val_offset:305811*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305811*0 + 3*561*FLEN/8, x4, x1, x2)

inst_101938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffe00000000; valaddr_reg:x3; val_offset:305814*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305814*0 + 3*562*FLEN/8, x4, x1, x2)

inst_101939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffff00000000; valaddr_reg:x3; val_offset:305817*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305817*0 + 3*563*FLEN/8, x4, x1, x2)

inst_101940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffff80000000; valaddr_reg:x3; val_offset:305820*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305820*0 + 3*564*FLEN/8, x4, x1, x2)

inst_101941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffc0000000; valaddr_reg:x3; val_offset:305823*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305823*0 + 3*565*FLEN/8, x4, x1, x2)

inst_101942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffe0000000; valaddr_reg:x3; val_offset:305826*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305826*0 + 3*566*FLEN/8, x4, x1, x2)

inst_101943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffff0000000; valaddr_reg:x3; val_offset:305829*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305829*0 + 3*567*FLEN/8, x4, x1, x2)

inst_101944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffff8000000; valaddr_reg:x3; val_offset:305832*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305832*0 + 3*568*FLEN/8, x4, x1, x2)

inst_101945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffc000000; valaddr_reg:x3; val_offset:305835*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305835*0 + 3*569*FLEN/8, x4, x1, x2)

inst_101946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffe000000; valaddr_reg:x3; val_offset:305838*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305838*0 + 3*570*FLEN/8, x4, x1, x2)

inst_101947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffff000000; valaddr_reg:x3; val_offset:305841*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305841*0 + 3*571*FLEN/8, x4, x1, x2)

inst_101948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffff800000; valaddr_reg:x3; val_offset:305844*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305844*0 + 3*572*FLEN/8, x4, x1, x2)

inst_101949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffc00000; valaddr_reg:x3; val_offset:305847*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305847*0 + 3*573*FLEN/8, x4, x1, x2)

inst_101950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffe00000; valaddr_reg:x3; val_offset:305850*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305850*0 + 3*574*FLEN/8, x4, x1, x2)

inst_101951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffff00000; valaddr_reg:x3; val_offset:305853*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305853*0 + 3*575*FLEN/8, x4, x1, x2)

inst_101952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffff80000; valaddr_reg:x3; val_offset:305856*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305856*0 + 3*576*FLEN/8, x4, x1, x2)

inst_101953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffc0000; valaddr_reg:x3; val_offset:305859*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305859*0 + 3*577*FLEN/8, x4, x1, x2)

inst_101954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffe0000; valaddr_reg:x3; val_offset:305862*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305862*0 + 3*578*FLEN/8, x4, x1, x2)

inst_101955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffff0000; valaddr_reg:x3; val_offset:305865*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305865*0 + 3*579*FLEN/8, x4, x1, x2)

inst_101956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffff8000; valaddr_reg:x3; val_offset:305868*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305868*0 + 3*580*FLEN/8, x4, x1, x2)

inst_101957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffc000; valaddr_reg:x3; val_offset:305871*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305871*0 + 3*581*FLEN/8, x4, x1, x2)

inst_101958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffe000; valaddr_reg:x3; val_offset:305874*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305874*0 + 3*582*FLEN/8, x4, x1, x2)

inst_101959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffff000; valaddr_reg:x3; val_offset:305877*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305877*0 + 3*583*FLEN/8, x4, x1, x2)

inst_101960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffff800; valaddr_reg:x3; val_offset:305880*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305880*0 + 3*584*FLEN/8, x4, x1, x2)

inst_101961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffc00; valaddr_reg:x3; val_offset:305883*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305883*0 + 3*585*FLEN/8, x4, x1, x2)

inst_101962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffe00; valaddr_reg:x3; val_offset:305886*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305886*0 + 3*586*FLEN/8, x4, x1, x2)

inst_101963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffff00; valaddr_reg:x3; val_offset:305889*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305889*0 + 3*587*FLEN/8, x4, x1, x2)

inst_101964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffff80; valaddr_reg:x3; val_offset:305892*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305892*0 + 3*588*FLEN/8, x4, x1, x2)

inst_101965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:305895*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305895*0 + 3*589*FLEN/8, x4, x1, x2)

inst_101966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:305898*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305898*0 + 3*590*FLEN/8, x4, x1, x2)

inst_101967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:305901*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305901*0 + 3*591*FLEN/8, x4, x1, x2)

inst_101968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:305904*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305904*0 + 3*592*FLEN/8, x4, x1, x2)

inst_101969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:305907*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305907*0 + 3*593*FLEN/8, x4, x1, x2)

inst_101970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:305910*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305910*0 + 3*594*FLEN/8, x4, x1, x2)

inst_101971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x3fffffffffffffff; valaddr_reg:x3; val_offset:305913*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305913*0 + 3*595*FLEN/8, x4, x1, x2)

inst_101972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe0000000000001; valaddr_reg:x3; val_offset:305916*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305916*0 + 3*596*FLEN/8, x4, x1, x2)

inst_101973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe0000000000003; valaddr_reg:x3; val_offset:305919*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305919*0 + 3*597*FLEN/8, x4, x1, x2)

inst_101974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe0000000000007; valaddr_reg:x3; val_offset:305922*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305922*0 + 3*598*FLEN/8, x4, x1, x2)

inst_101975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe000000000000f; valaddr_reg:x3; val_offset:305925*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305925*0 + 3*599*FLEN/8, x4, x1, x2)

inst_101976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe000000000001f; valaddr_reg:x3; val_offset:305928*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305928*0 + 3*600*FLEN/8, x4, x1, x2)

inst_101977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe000000000003f; valaddr_reg:x3; val_offset:305931*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305931*0 + 3*601*FLEN/8, x4, x1, x2)

inst_101978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe3333333333333; valaddr_reg:x3; val_offset:305934*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305934*0 + 3*602*FLEN/8, x4, x1, x2)

inst_101979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe4924924924924; valaddr_reg:x3; val_offset:305937*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305937*0 + 3*603*FLEN/8, x4, x1, x2)

inst_101980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe6666666666666; valaddr_reg:x3; val_offset:305940*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305940*0 + 3*604*FLEN/8, x4, x1, x2)

inst_101981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe6db6db6db6db6; valaddr_reg:x3; val_offset:305943*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305943*0 + 3*605*FLEN/8, x4, x1, x2)

inst_101982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe7777777777777; valaddr_reg:x3; val_offset:305946*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305946*0 + 3*606*FLEN/8, x4, x1, x2)

inst_101983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe8888888888888; valaddr_reg:x3; val_offset:305949*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305949*0 + 3*607*FLEN/8, x4, x1, x2)

inst_101984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fe9999999999999; valaddr_reg:x3; val_offset:305952*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305952*0 + 3*608*FLEN/8, x4, x1, x2)

inst_101985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feb6db6db6db6db; valaddr_reg:x3; val_offset:305955*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305955*0 + 3*609*FLEN/8, x4, x1, x2)

inst_101986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feccccccccccccc; valaddr_reg:x3; val_offset:305958*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305958*0 + 3*610*FLEN/8, x4, x1, x2)

inst_101987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fedb6db6db6db6d; valaddr_reg:x3; val_offset:305961*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305961*0 + 3*611*FLEN/8, x4, x1, x2)

inst_101988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fefffffffffffc0; valaddr_reg:x3; val_offset:305964*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305964*0 + 3*612*FLEN/8, x4, x1, x2)

inst_101989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7fefffffffffffe0; valaddr_reg:x3; val_offset:305967*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305967*0 + 3*613*FLEN/8, x4, x1, x2)

inst_101990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feffffffffffff0; valaddr_reg:x3; val_offset:305970*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305970*0 + 3*614*FLEN/8, x4, x1, x2)

inst_101991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feffffffffffff8; valaddr_reg:x3; val_offset:305973*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305973*0 + 3*615*FLEN/8, x4, x1, x2)

inst_101992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feffffffffffffc; valaddr_reg:x3; val_offset:305976*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305976*0 + 3*616*FLEN/8, x4, x1, x2)

inst_101993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xff4574e2b156c and fs2 == 0 and fe2 == 0x603 and fm2 == 0x005d6796aa088 and fs3 == 0 and fe3 == 0x7fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5faff4574e2b156c; op2val:0x603005d6796aa088;
op3val:0x7feffffffffffffe; valaddr_reg:x3; val_offset:305979*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305979*0 + 3*617*FLEN/8, x4, x1, x2)

inst_101994:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:305982*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305982*0 + 3*618*FLEN/8, x4, x1, x2)

inst_101995:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:305985*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305985*0 + 3*619*FLEN/8, x4, x1, x2)

inst_101996:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:305988*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305988*0 + 3*620*FLEN/8, x4, x1, x2)

inst_101997:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:305991*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305991*0 + 3*621*FLEN/8, x4, x1, x2)

inst_101998:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:305994*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305994*0 + 3*622*FLEN/8, x4, x1, x2)

inst_101999:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:305997*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 305997*0 + 3*623*FLEN/8, x4, x1, x2)

inst_102000:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:306000*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306000*0 + 3*624*FLEN/8, x4, x1, x2)

inst_102001:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:306003*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306003*0 + 3*625*FLEN/8, x4, x1, x2)

inst_102002:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:306006*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306006*0 + 3*626*FLEN/8, x4, x1, x2)

inst_102003:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:306009*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306009*0 + 3*627*FLEN/8, x4, x1, x2)

inst_102004:
// fs1 == 0 and fe1 == 0x5f1 and fm1 == 0xb4df0939283ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f1b4df0939283ff; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:306012*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 306012*0 + 3*628*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409920,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409921,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409923,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409927,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409935,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409951,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547409983,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410047,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410175,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410431,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547410943,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547411967,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547414015,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547418111,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547426303,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547442687,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547475455,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547540991,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547672063,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992547934207,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992548458495,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992549507071,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992551604223,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992555798527,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992564187135,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992580964351,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992614518783,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992681627647,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071992815845375,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993084280831,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071993621151743,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071994694893567,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90071996842377215,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072001137344511,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072009727279103,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072026907148287,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072061266886655,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072129986363391,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072267425316863,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90072542303223807,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90073092059037695,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90074191570665471,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90076390593921023,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90080788640432127,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90089584733454335,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90107176919498751,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90142361291587583,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90212730035765247,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90353467524120575,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(90634942500831231,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(91197892454252543,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095167,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(92323792361095168,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(93449692267937792,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94012642221359104,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94294117198069760,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94434854686425088,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94505223430602752,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94540407802691584,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94557999988736000,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94566796081758208,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94571194128269312,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94573393151524864,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94574492663152640,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575042418966528,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575317296873472,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575454735826944,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575523455303680,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575557815042048,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575574994911232,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575583584845824,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575587879813120,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575590027296768,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591101038592,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591637909504,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575591906344960,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592040562688,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592107671552,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592141225984,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592158003200,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592166391808,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592170586112,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592172683264,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592173731840,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174256128,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174518272,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174649344,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174714880,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174747648,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174764032,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174772224,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174776320,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174778368,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779392,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174779904,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780160,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780288,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780352,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780384,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780400,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780408,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780412,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780414,64,FLEN)
NAN_BOXED(6894958216596149965,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780415,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94593184360824831,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94610776546869247,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94645960918958079,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94716329663135743,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94857067151491071,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95138542128201727,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6894983490131655084,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780416,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780417,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780419,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780423,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780431,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780447,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780479,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780543,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780671,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174780927,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174781439,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174782463,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174784511,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174788607,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174796799,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174813183,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174845951,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592174911487,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175042559,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175304703,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592175828991,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592176877567,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592178974719,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592183169023,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592191557631,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592208334847,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592241889279,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592308998143,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592443215871,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575592711651327,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575593248522239,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575594322264063,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575596469747711,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575600764715007,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575609354649599,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575626534518783,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575660894257151,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575729613733887,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94575867052687359,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576141930594303,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94576691686408191,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94577791198035967,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94579990221291519,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94584388267802623,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94593184360824831,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94610776546869247,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94645960918958079,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94716329663135743,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(94857067151491071,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95138542128201727,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(95701492081623039,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465663,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(96827391988465664,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(97953291895308288,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98516241848729600,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98797716825440256,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(98938454313795584,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99008823057973248,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99044007430062080,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99061599616106496,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99070395709128704,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99074793755639808,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99076992778895360,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078092290523136,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078642046337024,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99078916924243968,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079054363197440,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079123082674176,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079157442412544,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079174622281728,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079183212216320,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079187507183616,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079189654667264,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079190728409088,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191265280000,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191533715456,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191667933184,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191735042048,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191768596480,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191785373696,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191793762304,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191797956608,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191800053760,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801102336,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801626624,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191801888768,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802019840,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802085376,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802118144,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802134528,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802142720,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802146816,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802148864,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802149888,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150400,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150656,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150784,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150848,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150880,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150896,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150904,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150908,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150910,64,FLEN)
NAN_BOXED(6894991719586728550,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(99079191802150911,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592256,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592257,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592259,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592263,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592271,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592287,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592319,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592383,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592511,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592767,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010593279,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010594303,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010596351,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010600447,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010608639,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010625023,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010657791,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010723327,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010854399,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011116543,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832011640831,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832012689407,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832014786559,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832018980863,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832027369471,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832044146687,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832077701119,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832144809983,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832279027711,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832547463167,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918833084334079,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918834158075903,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918836305559551,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918840600526847,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918849190461439,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918866370330623,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918900730068991,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918969449545727,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919106888499199,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919381766406143,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281919931522220031,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281921031033847807,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281923230057103359,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281927628103614463,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281936424196636671,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281954016382681087,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281989200754769919,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282059569498947583,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282200306987302911,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9282481781964013567,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9283044731917434879,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277503,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9284170631824277504,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285296531731120128,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9285859481684541440,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286140956661252096,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286281694149607424,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286352062893785088,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286387247265873920,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286404839451918336,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286413635544940544,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286418033591451648,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286420232614707200,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421332126334976,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286421881882148864,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422156760055808,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422294199009280,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422362918486016,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422397278224384,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422414458093568,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422423048028160,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422427342995456,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422429490479104,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422430564220928,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431101091840,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431369527296,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431503745024,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431570853888,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431604408320,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431621185536,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431629574144,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431633768448,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431635865600,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431636914176,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637438464,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637700608,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637831680,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637897216,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637929984,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637946368,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637954560,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637958656,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637960704,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637961728,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962240,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962496,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962624,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962688,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962720,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962736,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962744,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962748,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962750,64,FLEN)
NAN_BOXED(6894997599278129291,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9286422431637962751,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017408,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017535,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017663,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800017919,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800018431,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800019455,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800021503,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800025599,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800033791,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800050175,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800082943,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800148479,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800279551,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418800541695,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418801065983,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418802114559,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418804211711,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418808406015,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418816794623,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418833571839,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418867126271,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182418934235135,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182419068452863,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182419336888319,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182419873759231,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182420947501055,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182423094984703,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182427389951999,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182435979886591,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182453159755775,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182487519494143,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182556238970879,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182693677924351,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607182968555831295,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607183518311645183,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607184617823272959,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607186816846528511,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607191214893039615,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607200010986061823,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607217603172106239,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607252787544195071,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607323156288372735,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607463893776728063,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4607745368753438719,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4608308318706860031,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4609434218613702655,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4609434218613702656,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4610560118520545280,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611123068473966592,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611404543450677248,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611545280939032576,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611615649683210240,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611650834055299072,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611668426241343488,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611677222334365696,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611681620380876800,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611683819404132352,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611684918915760128,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611685468671574016,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611685743549480960,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611685880988434432,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611685949707911168,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611685984067649536,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686001247518720,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686009837453312,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686014132420608,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686016279904256,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686017353646080,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686017890516992,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018158952448,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018293170176,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018360279040,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018393833472,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018410610688,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018418999296,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018423193600,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018425290752,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018426339328,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018426863616,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427125760,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427256832,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427322368,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427355136,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427371520,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427379712,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427383808,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427385856,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427386880,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387392,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387648,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387776,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(4611686018427387903,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034817,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034819,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034823,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034831,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034847,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9214364837600034879,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9215265557525508915,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9215651580350712100,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9216166277450983014,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9216294951726050742,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9216466517426141047,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9216766757401299080,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9217066997376457113,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9217581694476728027,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9217967717301931212,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218225065852066669,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405248,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405280,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405296,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405304,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405308,64,FLEN)
NAN_BOXED(6894998210338297196,64,FLEN)
NAN_BOXED(6931046245241364616,64,FLEN)
NAN_BOXED(9218868437227405310,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6853156953637684223,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
