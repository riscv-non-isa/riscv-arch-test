
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_77568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffe0000000; valaddr_reg:x3; val_offset:232704*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232704*0 + 3*0*FLEN/8, x4, x1, x2)

inst_77569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffff0000000; valaddr_reg:x3; val_offset:232707*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232707*0 + 3*1*FLEN/8, x4, x1, x2)

inst_77570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffff8000000; valaddr_reg:x3; val_offset:232710*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232710*0 + 3*2*FLEN/8, x4, x1, x2)

inst_77571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffc000000; valaddr_reg:x3; val_offset:232713*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232713*0 + 3*3*FLEN/8, x4, x1, x2)

inst_77572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffe000000; valaddr_reg:x3; val_offset:232716*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232716*0 + 3*4*FLEN/8, x4, x1, x2)

inst_77573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffff000000; valaddr_reg:x3; val_offset:232719*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232719*0 + 3*5*FLEN/8, x4, x1, x2)

inst_77574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffff800000; valaddr_reg:x3; val_offset:232722*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232722*0 + 3*6*FLEN/8, x4, x1, x2)

inst_77575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffc00000; valaddr_reg:x3; val_offset:232725*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232725*0 + 3*7*FLEN/8, x4, x1, x2)

inst_77576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffe00000; valaddr_reg:x3; val_offset:232728*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232728*0 + 3*8*FLEN/8, x4, x1, x2)

inst_77577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffff00000; valaddr_reg:x3; val_offset:232731*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232731*0 + 3*9*FLEN/8, x4, x1, x2)

inst_77578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffff80000; valaddr_reg:x3; val_offset:232734*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232734*0 + 3*10*FLEN/8, x4, x1, x2)

inst_77579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffc0000; valaddr_reg:x3; val_offset:232737*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232737*0 + 3*11*FLEN/8, x4, x1, x2)

inst_77580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffe0000; valaddr_reg:x3; val_offset:232740*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232740*0 + 3*12*FLEN/8, x4, x1, x2)

inst_77581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffff0000; valaddr_reg:x3; val_offset:232743*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232743*0 + 3*13*FLEN/8, x4, x1, x2)

inst_77582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffff8000; valaddr_reg:x3; val_offset:232746*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232746*0 + 3*14*FLEN/8, x4, x1, x2)

inst_77583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffc000; valaddr_reg:x3; val_offset:232749*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232749*0 + 3*15*FLEN/8, x4, x1, x2)

inst_77584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffe000; valaddr_reg:x3; val_offset:232752*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232752*0 + 3*16*FLEN/8, x4, x1, x2)

inst_77585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffff000; valaddr_reg:x3; val_offset:232755*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232755*0 + 3*17*FLEN/8, x4, x1, x2)

inst_77586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffff800; valaddr_reg:x3; val_offset:232758*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232758*0 + 3*18*FLEN/8, x4, x1, x2)

inst_77587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffc00; valaddr_reg:x3; val_offset:232761*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232761*0 + 3*19*FLEN/8, x4, x1, x2)

inst_77588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffe00; valaddr_reg:x3; val_offset:232764*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232764*0 + 3*20*FLEN/8, x4, x1, x2)

inst_77589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffff00; valaddr_reg:x3; val_offset:232767*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232767*0 + 3*21*FLEN/8, x4, x1, x2)

inst_77590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffff80; valaddr_reg:x3; val_offset:232770*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232770*0 + 3*22*FLEN/8, x4, x1, x2)

inst_77591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffffc0; valaddr_reg:x3; val_offset:232773*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232773*0 + 3*23*FLEN/8, x4, x1, x2)

inst_77592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffffe0; valaddr_reg:x3; val_offset:232776*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232776*0 + 3*24*FLEN/8, x4, x1, x2)

inst_77593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffff0; valaddr_reg:x3; val_offset:232779*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232779*0 + 3*25*FLEN/8, x4, x1, x2)

inst_77594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffff8; valaddr_reg:x3; val_offset:232782*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232782*0 + 3*26*FLEN/8, x4, x1, x2)

inst_77595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffffc; valaddr_reg:x3; val_offset:232785*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232785*0 + 3*27*FLEN/8, x4, x1, x2)

inst_77596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81effffffffffffe; valaddr_reg:x3; val_offset:232788*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232788*0 + 3*28*FLEN/8, x4, x1, x2)

inst_77597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f55a94838f42 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f55a94838f42; op2val:0x8000;
op3val:0x81efffffffffffff; valaddr_reg:x3; val_offset:232791*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232791*0 + 3*29*FLEN/8, x4, x1, x2)

inst_77598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000000000; valaddr_reg:x3; val_offset:232794*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232794*0 + 3*30*FLEN/8, x4, x1, x2)

inst_77599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000000001; valaddr_reg:x3; val_offset:232797*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232797*0 + 3*31*FLEN/8, x4, x1, x2)

inst_77600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000000003; valaddr_reg:x3; val_offset:232800*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232800*0 + 3*32*FLEN/8, x4, x1, x2)

inst_77601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000000007; valaddr_reg:x3; val_offset:232803*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232803*0 + 3*33*FLEN/8, x4, x1, x2)

inst_77602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000000000f; valaddr_reg:x3; val_offset:232806*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232806*0 + 3*34*FLEN/8, x4, x1, x2)

inst_77603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000000001f; valaddr_reg:x3; val_offset:232809*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232809*0 + 3*35*FLEN/8, x4, x1, x2)

inst_77604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000000003f; valaddr_reg:x3; val_offset:232812*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232812*0 + 3*36*FLEN/8, x4, x1, x2)

inst_77605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000000007f; valaddr_reg:x3; val_offset:232815*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232815*0 + 3*37*FLEN/8, x4, x1, x2)

inst_77606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000000000ff; valaddr_reg:x3; val_offset:232818*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232818*0 + 3*38*FLEN/8, x4, x1, x2)

inst_77607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000000001ff; valaddr_reg:x3; val_offset:232821*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232821*0 + 3*39*FLEN/8, x4, x1, x2)

inst_77608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000000003ff; valaddr_reg:x3; val_offset:232824*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232824*0 + 3*40*FLEN/8, x4, x1, x2)

inst_77609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000000007ff; valaddr_reg:x3; val_offset:232827*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232827*0 + 3*41*FLEN/8, x4, x1, x2)

inst_77610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000000fff; valaddr_reg:x3; val_offset:232830*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232830*0 + 3*42*FLEN/8, x4, x1, x2)

inst_77611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000001fff; valaddr_reg:x3; val_offset:232833*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232833*0 + 3*43*FLEN/8, x4, x1, x2)

inst_77612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000003fff; valaddr_reg:x3; val_offset:232836*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232836*0 + 3*44*FLEN/8, x4, x1, x2)

inst_77613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000007fff; valaddr_reg:x3; val_offset:232839*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232839*0 + 3*45*FLEN/8, x4, x1, x2)

inst_77614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000000ffff; valaddr_reg:x3; val_offset:232842*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232842*0 + 3*46*FLEN/8, x4, x1, x2)

inst_77615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000001ffff; valaddr_reg:x3; val_offset:232845*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232845*0 + 3*47*FLEN/8, x4, x1, x2)

inst_77616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000003ffff; valaddr_reg:x3; val_offset:232848*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232848*0 + 3*48*FLEN/8, x4, x1, x2)

inst_77617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000007ffff; valaddr_reg:x3; val_offset:232851*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232851*0 + 3*49*FLEN/8, x4, x1, x2)

inst_77618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000000fffff; valaddr_reg:x3; val_offset:232854*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232854*0 + 3*50*FLEN/8, x4, x1, x2)

inst_77619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000001fffff; valaddr_reg:x3; val_offset:232857*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232857*0 + 3*51*FLEN/8, x4, x1, x2)

inst_77620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000003fffff; valaddr_reg:x3; val_offset:232860*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232860*0 + 3*52*FLEN/8, x4, x1, x2)

inst_77621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000007fffff; valaddr_reg:x3; val_offset:232863*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232863*0 + 3*53*FLEN/8, x4, x1, x2)

inst_77622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000000ffffff; valaddr_reg:x3; val_offset:232866*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232866*0 + 3*54*FLEN/8, x4, x1, x2)

inst_77623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000001ffffff; valaddr_reg:x3; val_offset:232869*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232869*0 + 3*55*FLEN/8, x4, x1, x2)

inst_77624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000003ffffff; valaddr_reg:x3; val_offset:232872*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232872*0 + 3*56*FLEN/8, x4, x1, x2)

inst_77625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000007ffffff; valaddr_reg:x3; val_offset:232875*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232875*0 + 3*57*FLEN/8, x4, x1, x2)

inst_77626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000000fffffff; valaddr_reg:x3; val_offset:232878*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232878*0 + 3*58*FLEN/8, x4, x1, x2)

inst_77627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000001fffffff; valaddr_reg:x3; val_offset:232881*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232881*0 + 3*59*FLEN/8, x4, x1, x2)

inst_77628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000003fffffff; valaddr_reg:x3; val_offset:232884*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232884*0 + 3*60*FLEN/8, x4, x1, x2)

inst_77629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000007fffffff; valaddr_reg:x3; val_offset:232887*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232887*0 + 3*61*FLEN/8, x4, x1, x2)

inst_77630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00000ffffffff; valaddr_reg:x3; val_offset:232890*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232890*0 + 3*62*FLEN/8, x4, x1, x2)

inst_77631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00001ffffffff; valaddr_reg:x3; val_offset:232893*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232893*0 + 3*63*FLEN/8, x4, x1, x2)

inst_77632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00003ffffffff; valaddr_reg:x3; val_offset:232896*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232896*0 + 3*64*FLEN/8, x4, x1, x2)

inst_77633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00007ffffffff; valaddr_reg:x3; val_offset:232899*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232899*0 + 3*65*FLEN/8, x4, x1, x2)

inst_77634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0000fffffffff; valaddr_reg:x3; val_offset:232902*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232902*0 + 3*66*FLEN/8, x4, x1, x2)

inst_77635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0001fffffffff; valaddr_reg:x3; val_offset:232905*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232905*0 + 3*67*FLEN/8, x4, x1, x2)

inst_77636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0003fffffffff; valaddr_reg:x3; val_offset:232908*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232908*0 + 3*68*FLEN/8, x4, x1, x2)

inst_77637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0007fffffffff; valaddr_reg:x3; val_offset:232911*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232911*0 + 3*69*FLEN/8, x4, x1, x2)

inst_77638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae000ffffffffff; valaddr_reg:x3; val_offset:232914*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232914*0 + 3*70*FLEN/8, x4, x1, x2)

inst_77639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae001ffffffffff; valaddr_reg:x3; val_offset:232917*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232917*0 + 3*71*FLEN/8, x4, x1, x2)

inst_77640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae003ffffffffff; valaddr_reg:x3; val_offset:232920*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232920*0 + 3*72*FLEN/8, x4, x1, x2)

inst_77641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae007ffffffffff; valaddr_reg:x3; val_offset:232923*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232923*0 + 3*73*FLEN/8, x4, x1, x2)

inst_77642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae00fffffffffff; valaddr_reg:x3; val_offset:232926*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232926*0 + 3*74*FLEN/8, x4, x1, x2)

inst_77643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae01fffffffffff; valaddr_reg:x3; val_offset:232929*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232929*0 + 3*75*FLEN/8, x4, x1, x2)

inst_77644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae03fffffffffff; valaddr_reg:x3; val_offset:232932*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232932*0 + 3*76*FLEN/8, x4, x1, x2)

inst_77645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae07fffffffffff; valaddr_reg:x3; val_offset:232935*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232935*0 + 3*77*FLEN/8, x4, x1, x2)

inst_77646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae0ffffffffffff; valaddr_reg:x3; val_offset:232938*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232938*0 + 3*78*FLEN/8, x4, x1, x2)

inst_77647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae1ffffffffffff; valaddr_reg:x3; val_offset:232941*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232941*0 + 3*79*FLEN/8, x4, x1, x2)

inst_77648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae3ffffffffffff; valaddr_reg:x3; val_offset:232944*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232944*0 + 3*80*FLEN/8, x4, x1, x2)

inst_77649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae7ffffffffffff; valaddr_reg:x3; val_offset:232947*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232947*0 + 3*81*FLEN/8, x4, x1, x2)

inst_77650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbae8000000000000; valaddr_reg:x3; val_offset:232950*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232950*0 + 3*82*FLEN/8, x4, x1, x2)

inst_77651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaec000000000000; valaddr_reg:x3; val_offset:232953*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232953*0 + 3*83*FLEN/8, x4, x1, x2)

inst_77652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaee000000000000; valaddr_reg:x3; val_offset:232956*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232956*0 + 3*84*FLEN/8, x4, x1, x2)

inst_77653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaef000000000000; valaddr_reg:x3; val_offset:232959*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232959*0 + 3*85*FLEN/8, x4, x1, x2)

inst_77654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaef800000000000; valaddr_reg:x3; val_offset:232962*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232962*0 + 3*86*FLEN/8, x4, x1, x2)

inst_77655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefc00000000000; valaddr_reg:x3; val_offset:232965*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232965*0 + 3*87*FLEN/8, x4, x1, x2)

inst_77656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefe00000000000; valaddr_reg:x3; val_offset:232968*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232968*0 + 3*88*FLEN/8, x4, x1, x2)

inst_77657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeff00000000000; valaddr_reg:x3; val_offset:232971*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232971*0 + 3*89*FLEN/8, x4, x1, x2)

inst_77658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeff80000000000; valaddr_reg:x3; val_offset:232974*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232974*0 + 3*90*FLEN/8, x4, x1, x2)

inst_77659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffc0000000000; valaddr_reg:x3; val_offset:232977*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232977*0 + 3*91*FLEN/8, x4, x1, x2)

inst_77660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffe0000000000; valaddr_reg:x3; val_offset:232980*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232980*0 + 3*92*FLEN/8, x4, x1, x2)

inst_77661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefff0000000000; valaddr_reg:x3; val_offset:232983*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232983*0 + 3*93*FLEN/8, x4, x1, x2)

inst_77662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefff8000000000; valaddr_reg:x3; val_offset:232986*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232986*0 + 3*94*FLEN/8, x4, x1, x2)

inst_77663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffc000000000; valaddr_reg:x3; val_offset:232989*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232989*0 + 3*95*FLEN/8, x4, x1, x2)

inst_77664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffe000000000; valaddr_reg:x3; val_offset:232992*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232992*0 + 3*96*FLEN/8, x4, x1, x2)

inst_77665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffff000000000; valaddr_reg:x3; val_offset:232995*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232995*0 + 3*97*FLEN/8, x4, x1, x2)

inst_77666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffff800000000; valaddr_reg:x3; val_offset:232998*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 232998*0 + 3*98*FLEN/8, x4, x1, x2)

inst_77667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffc00000000; valaddr_reg:x3; val_offset:233001*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233001*0 + 3*99*FLEN/8, x4, x1, x2)

inst_77668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffe00000000; valaddr_reg:x3; val_offset:233004*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233004*0 + 3*100*FLEN/8, x4, x1, x2)

inst_77669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffff00000000; valaddr_reg:x3; val_offset:233007*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233007*0 + 3*101*FLEN/8, x4, x1, x2)

inst_77670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffff80000000; valaddr_reg:x3; val_offset:233010*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233010*0 + 3*102*FLEN/8, x4, x1, x2)

inst_77671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffc0000000; valaddr_reg:x3; val_offset:233013*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233013*0 + 3*103*FLEN/8, x4, x1, x2)

inst_77672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffe0000000; valaddr_reg:x3; val_offset:233016*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233016*0 + 3*104*FLEN/8, x4, x1, x2)

inst_77673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffff0000000; valaddr_reg:x3; val_offset:233019*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233019*0 + 3*105*FLEN/8, x4, x1, x2)

inst_77674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffff8000000; valaddr_reg:x3; val_offset:233022*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233022*0 + 3*106*FLEN/8, x4, x1, x2)

inst_77675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffc000000; valaddr_reg:x3; val_offset:233025*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233025*0 + 3*107*FLEN/8, x4, x1, x2)

inst_77676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffe000000; valaddr_reg:x3; val_offset:233028*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233028*0 + 3*108*FLEN/8, x4, x1, x2)

inst_77677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffff000000; valaddr_reg:x3; val_offset:233031*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233031*0 + 3*109*FLEN/8, x4, x1, x2)

inst_77678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffff800000; valaddr_reg:x3; val_offset:233034*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233034*0 + 3*110*FLEN/8, x4, x1, x2)

inst_77679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffc00000; valaddr_reg:x3; val_offset:233037*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233037*0 + 3*111*FLEN/8, x4, x1, x2)

inst_77680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffe00000; valaddr_reg:x3; val_offset:233040*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233040*0 + 3*112*FLEN/8, x4, x1, x2)

inst_77681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffff00000; valaddr_reg:x3; val_offset:233043*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233043*0 + 3*113*FLEN/8, x4, x1, x2)

inst_77682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffff80000; valaddr_reg:x3; val_offset:233046*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233046*0 + 3*114*FLEN/8, x4, x1, x2)

inst_77683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffc0000; valaddr_reg:x3; val_offset:233049*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233049*0 + 3*115*FLEN/8, x4, x1, x2)

inst_77684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffe0000; valaddr_reg:x3; val_offset:233052*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233052*0 + 3*116*FLEN/8, x4, x1, x2)

inst_77685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffff0000; valaddr_reg:x3; val_offset:233055*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233055*0 + 3*117*FLEN/8, x4, x1, x2)

inst_77686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffff8000; valaddr_reg:x3; val_offset:233058*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233058*0 + 3*118*FLEN/8, x4, x1, x2)

inst_77687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffc000; valaddr_reg:x3; val_offset:233061*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233061*0 + 3*119*FLEN/8, x4, x1, x2)

inst_77688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffe000; valaddr_reg:x3; val_offset:233064*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233064*0 + 3*120*FLEN/8, x4, x1, x2)

inst_77689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffff000; valaddr_reg:x3; val_offset:233067*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233067*0 + 3*121*FLEN/8, x4, x1, x2)

inst_77690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffff800; valaddr_reg:x3; val_offset:233070*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233070*0 + 3*122*FLEN/8, x4, x1, x2)

inst_77691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffc00; valaddr_reg:x3; val_offset:233073*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233073*0 + 3*123*FLEN/8, x4, x1, x2)

inst_77692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffe00; valaddr_reg:x3; val_offset:233076*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233076*0 + 3*124*FLEN/8, x4, x1, x2)

inst_77693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffff00; valaddr_reg:x3; val_offset:233079*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233079*0 + 3*125*FLEN/8, x4, x1, x2)

inst_77694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffff80; valaddr_reg:x3; val_offset:233082*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233082*0 + 3*126*FLEN/8, x4, x1, x2)

inst_77695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffffc0; valaddr_reg:x3; val_offset:233085*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233085*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_77696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffffe0; valaddr_reg:x3; val_offset:233088*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233088*0 + 3*128*FLEN/8, x4, x1, x2)

inst_77697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffff0; valaddr_reg:x3; val_offset:233091*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233091*0 + 3*129*FLEN/8, x4, x1, x2)

inst_77698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffff8; valaddr_reg:x3; val_offset:233094*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233094*0 + 3*130*FLEN/8, x4, x1, x2)

inst_77699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffffc; valaddr_reg:x3; val_offset:233097*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233097*0 + 3*131*FLEN/8, x4, x1, x2)

inst_77700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaeffffffffffffe; valaddr_reg:x3; val_offset:233100*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233100*0 + 3*132*FLEN/8, x4, x1, x2)

inst_77701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3ae and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbaefffffffffffff; valaddr_reg:x3; val_offset:233103*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233103*0 + 3*133*FLEN/8, x4, x1, x2)

inst_77702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:233106*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233106*0 + 3*134*FLEN/8, x4, x1, x2)

inst_77703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:233109*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233109*0 + 3*135*FLEN/8, x4, x1, x2)

inst_77704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:233112*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233112*0 + 3*136*FLEN/8, x4, x1, x2)

inst_77705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:233115*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233115*0 + 3*137*FLEN/8, x4, x1, x2)

inst_77706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:233118*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233118*0 + 3*138*FLEN/8, x4, x1, x2)

inst_77707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:233121*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233121*0 + 3*139*FLEN/8, x4, x1, x2)

inst_77708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:233124*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233124*0 + 3*140*FLEN/8, x4, x1, x2)

inst_77709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:233127*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233127*0 + 3*141*FLEN/8, x4, x1, x2)

inst_77710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:233130*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233130*0 + 3*142*FLEN/8, x4, x1, x2)

inst_77711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:233133*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233133*0 + 3*143*FLEN/8, x4, x1, x2)

inst_77712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:233136*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233136*0 + 3*144*FLEN/8, x4, x1, x2)

inst_77713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:233139*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233139*0 + 3*145*FLEN/8, x4, x1, x2)

inst_77714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:233142*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233142*0 + 3*146*FLEN/8, x4, x1, x2)

inst_77715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:233145*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233145*0 + 3*147*FLEN/8, x4, x1, x2)

inst_77716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:233148*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233148*0 + 3*148*FLEN/8, x4, x1, x2)

inst_77717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:233151*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233151*0 + 3*149*FLEN/8, x4, x1, x2)

inst_77718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:233154*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233154*0 + 3*150*FLEN/8, x4, x1, x2)

inst_77719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:233157*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233157*0 + 3*151*FLEN/8, x4, x1, x2)

inst_77720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:233160*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233160*0 + 3*152*FLEN/8, x4, x1, x2)

inst_77721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:233163*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233163*0 + 3*153*FLEN/8, x4, x1, x2)

inst_77722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:233166*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233166*0 + 3*154*FLEN/8, x4, x1, x2)

inst_77723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7f78548664fb5 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x55ce186bf06a5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7f78548664fb5; op2val:0x9fc55ce186bf06a5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:233169*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233169*0 + 3*155*FLEN/8, x4, x1, x2)

inst_77724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:233172*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233172*0 + 3*156*FLEN/8, x4, x1, x2)

inst_77725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:233175*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233175*0 + 3*157*FLEN/8, x4, x1, x2)

inst_77726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:233178*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233178*0 + 3*158*FLEN/8, x4, x1, x2)

inst_77727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:233181*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233181*0 + 3*159*FLEN/8, x4, x1, x2)

inst_77728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:233184*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233184*0 + 3*160*FLEN/8, x4, x1, x2)

inst_77729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:233187*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233187*0 + 3*161*FLEN/8, x4, x1, x2)

inst_77730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:233190*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233190*0 + 3*162*FLEN/8, x4, x1, x2)

inst_77731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:233193*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233193*0 + 3*163*FLEN/8, x4, x1, x2)

inst_77732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:233196*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233196*0 + 3*164*FLEN/8, x4, x1, x2)

inst_77733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:233199*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233199*0 + 3*165*FLEN/8, x4, x1, x2)

inst_77734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:233202*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233202*0 + 3*166*FLEN/8, x4, x1, x2)

inst_77735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:233205*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233205*0 + 3*167*FLEN/8, x4, x1, x2)

inst_77736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:233208*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233208*0 + 3*168*FLEN/8, x4, x1, x2)

inst_77737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:233211*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233211*0 + 3*169*FLEN/8, x4, x1, x2)

inst_77738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:233214*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233214*0 + 3*170*FLEN/8, x4, x1, x2)

inst_77739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:233217*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233217*0 + 3*171*FLEN/8, x4, x1, x2)

inst_77740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:233220*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233220*0 + 3*172*FLEN/8, x4, x1, x2)

inst_77741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:233223*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233223*0 + 3*173*FLEN/8, x4, x1, x2)

inst_77742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:233226*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233226*0 + 3*174*FLEN/8, x4, x1, x2)

inst_77743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:233229*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233229*0 + 3*175*FLEN/8, x4, x1, x2)

inst_77744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:233232*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233232*0 + 3*176*FLEN/8, x4, x1, x2)

inst_77745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:233235*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233235*0 + 3*177*FLEN/8, x4, x1, x2)

inst_77746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000000000; valaddr_reg:x3; val_offset:233238*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233238*0 + 3*178*FLEN/8, x4, x1, x2)

inst_77747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000000001; valaddr_reg:x3; val_offset:233241*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233241*0 + 3*179*FLEN/8, x4, x1, x2)

inst_77748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000000003; valaddr_reg:x3; val_offset:233244*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233244*0 + 3*180*FLEN/8, x4, x1, x2)

inst_77749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000000007; valaddr_reg:x3; val_offset:233247*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233247*0 + 3*181*FLEN/8, x4, x1, x2)

inst_77750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000000000f; valaddr_reg:x3; val_offset:233250*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233250*0 + 3*182*FLEN/8, x4, x1, x2)

inst_77751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000000001f; valaddr_reg:x3; val_offset:233253*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233253*0 + 3*183*FLEN/8, x4, x1, x2)

inst_77752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000000003f; valaddr_reg:x3; val_offset:233256*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233256*0 + 3*184*FLEN/8, x4, x1, x2)

inst_77753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000000007f; valaddr_reg:x3; val_offset:233259*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233259*0 + 3*185*FLEN/8, x4, x1, x2)

inst_77754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000000000ff; valaddr_reg:x3; val_offset:233262*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233262*0 + 3*186*FLEN/8, x4, x1, x2)

inst_77755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000000001ff; valaddr_reg:x3; val_offset:233265*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233265*0 + 3*187*FLEN/8, x4, x1, x2)

inst_77756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000000003ff; valaddr_reg:x3; val_offset:233268*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233268*0 + 3*188*FLEN/8, x4, x1, x2)

inst_77757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000000007ff; valaddr_reg:x3; val_offset:233271*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233271*0 + 3*189*FLEN/8, x4, x1, x2)

inst_77758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000000fff; valaddr_reg:x3; val_offset:233274*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233274*0 + 3*190*FLEN/8, x4, x1, x2)

inst_77759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000001fff; valaddr_reg:x3; val_offset:233277*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233277*0 + 3*191*FLEN/8, x4, x1, x2)

inst_77760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000003fff; valaddr_reg:x3; val_offset:233280*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233280*0 + 3*192*FLEN/8, x4, x1, x2)

inst_77761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000007fff; valaddr_reg:x3; val_offset:233283*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233283*0 + 3*193*FLEN/8, x4, x1, x2)

inst_77762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000000ffff; valaddr_reg:x3; val_offset:233286*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233286*0 + 3*194*FLEN/8, x4, x1, x2)

inst_77763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000001ffff; valaddr_reg:x3; val_offset:233289*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233289*0 + 3*195*FLEN/8, x4, x1, x2)

inst_77764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000003ffff; valaddr_reg:x3; val_offset:233292*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233292*0 + 3*196*FLEN/8, x4, x1, x2)

inst_77765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000007ffff; valaddr_reg:x3; val_offset:233295*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233295*0 + 3*197*FLEN/8, x4, x1, x2)

inst_77766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000000fffff; valaddr_reg:x3; val_offset:233298*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233298*0 + 3*198*FLEN/8, x4, x1, x2)

inst_77767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000001fffff; valaddr_reg:x3; val_offset:233301*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233301*0 + 3*199*FLEN/8, x4, x1, x2)

inst_77768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000003fffff; valaddr_reg:x3; val_offset:233304*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233304*0 + 3*200*FLEN/8, x4, x1, x2)

inst_77769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000007fffff; valaddr_reg:x3; val_offset:233307*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233307*0 + 3*201*FLEN/8, x4, x1, x2)

inst_77770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000000ffffff; valaddr_reg:x3; val_offset:233310*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233310*0 + 3*202*FLEN/8, x4, x1, x2)

inst_77771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000001ffffff; valaddr_reg:x3; val_offset:233313*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233313*0 + 3*203*FLEN/8, x4, x1, x2)

inst_77772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000003ffffff; valaddr_reg:x3; val_offset:233316*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233316*0 + 3*204*FLEN/8, x4, x1, x2)

inst_77773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000007ffffff; valaddr_reg:x3; val_offset:233319*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233319*0 + 3*205*FLEN/8, x4, x1, x2)

inst_77774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000000fffffff; valaddr_reg:x3; val_offset:233322*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233322*0 + 3*206*FLEN/8, x4, x1, x2)

inst_77775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000001fffffff; valaddr_reg:x3; val_offset:233325*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233325*0 + 3*207*FLEN/8, x4, x1, x2)

inst_77776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000003fffffff; valaddr_reg:x3; val_offset:233328*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233328*0 + 3*208*FLEN/8, x4, x1, x2)

inst_77777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000007fffffff; valaddr_reg:x3; val_offset:233331*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233331*0 + 3*209*FLEN/8, x4, x1, x2)

inst_77778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500000ffffffff; valaddr_reg:x3; val_offset:233334*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233334*0 + 3*210*FLEN/8, x4, x1, x2)

inst_77779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500001ffffffff; valaddr_reg:x3; val_offset:233337*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233337*0 + 3*211*FLEN/8, x4, x1, x2)

inst_77780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500003ffffffff; valaddr_reg:x3; val_offset:233340*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233340*0 + 3*212*FLEN/8, x4, x1, x2)

inst_77781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500007ffffffff; valaddr_reg:x3; val_offset:233343*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233343*0 + 3*213*FLEN/8, x4, x1, x2)

inst_77782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150000fffffffff; valaddr_reg:x3; val_offset:233346*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233346*0 + 3*214*FLEN/8, x4, x1, x2)

inst_77783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150001fffffffff; valaddr_reg:x3; val_offset:233349*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233349*0 + 3*215*FLEN/8, x4, x1, x2)

inst_77784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150003fffffffff; valaddr_reg:x3; val_offset:233352*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233352*0 + 3*216*FLEN/8, x4, x1, x2)

inst_77785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150007fffffffff; valaddr_reg:x3; val_offset:233355*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233355*0 + 3*217*FLEN/8, x4, x1, x2)

inst_77786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815000ffffffffff; valaddr_reg:x3; val_offset:233358*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233358*0 + 3*218*FLEN/8, x4, x1, x2)

inst_77787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815001ffffffffff; valaddr_reg:x3; val_offset:233361*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233361*0 + 3*219*FLEN/8, x4, x1, x2)

inst_77788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815003ffffffffff; valaddr_reg:x3; val_offset:233364*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233364*0 + 3*220*FLEN/8, x4, x1, x2)

inst_77789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815007ffffffffff; valaddr_reg:x3; val_offset:233367*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233367*0 + 3*221*FLEN/8, x4, x1, x2)

inst_77790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81500fffffffffff; valaddr_reg:x3; val_offset:233370*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233370*0 + 3*222*FLEN/8, x4, x1, x2)

inst_77791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81501fffffffffff; valaddr_reg:x3; val_offset:233373*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233373*0 + 3*223*FLEN/8, x4, x1, x2)

inst_77792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81503fffffffffff; valaddr_reg:x3; val_offset:233376*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233376*0 + 3*224*FLEN/8, x4, x1, x2)

inst_77793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x81507fffffffffff; valaddr_reg:x3; val_offset:233379*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233379*0 + 3*225*FLEN/8, x4, x1, x2)

inst_77794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8150ffffffffffff; valaddr_reg:x3; val_offset:233382*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233382*0 + 3*226*FLEN/8, x4, x1, x2)

inst_77795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8151ffffffffffff; valaddr_reg:x3; val_offset:233385*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233385*0 + 3*227*FLEN/8, x4, x1, x2)

inst_77796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8153ffffffffffff; valaddr_reg:x3; val_offset:233388*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233388*0 + 3*228*FLEN/8, x4, x1, x2)

inst_77797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8157ffffffffffff; valaddr_reg:x3; val_offset:233391*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233391*0 + 3*229*FLEN/8, x4, x1, x2)

inst_77798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x8158000000000000; valaddr_reg:x3; val_offset:233394*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233394*0 + 3*230*FLEN/8, x4, x1, x2)

inst_77799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815c000000000000; valaddr_reg:x3; val_offset:233397*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233397*0 + 3*231*FLEN/8, x4, x1, x2)

inst_77800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815e000000000000; valaddr_reg:x3; val_offset:233400*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233400*0 + 3*232*FLEN/8, x4, x1, x2)

inst_77801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815f000000000000; valaddr_reg:x3; val_offset:233403*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233403*0 + 3*233*FLEN/8, x4, x1, x2)

inst_77802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815f800000000000; valaddr_reg:x3; val_offset:233406*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233406*0 + 3*234*FLEN/8, x4, x1, x2)

inst_77803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fc00000000000; valaddr_reg:x3; val_offset:233409*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233409*0 + 3*235*FLEN/8, x4, x1, x2)

inst_77804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fe00000000000; valaddr_reg:x3; val_offset:233412*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233412*0 + 3*236*FLEN/8, x4, x1, x2)

inst_77805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ff00000000000; valaddr_reg:x3; val_offset:233415*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233415*0 + 3*237*FLEN/8, x4, x1, x2)

inst_77806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ff80000000000; valaddr_reg:x3; val_offset:233418*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233418*0 + 3*238*FLEN/8, x4, x1, x2)

inst_77807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffc0000000000; valaddr_reg:x3; val_offset:233421*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233421*0 + 3*239*FLEN/8, x4, x1, x2)

inst_77808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffe0000000000; valaddr_reg:x3; val_offset:233424*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233424*0 + 3*240*FLEN/8, x4, x1, x2)

inst_77809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fff0000000000; valaddr_reg:x3; val_offset:233427*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233427*0 + 3*241*FLEN/8, x4, x1, x2)

inst_77810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fff8000000000; valaddr_reg:x3; val_offset:233430*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233430*0 + 3*242*FLEN/8, x4, x1, x2)

inst_77811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffc000000000; valaddr_reg:x3; val_offset:233433*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233433*0 + 3*243*FLEN/8, x4, x1, x2)

inst_77812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffe000000000; valaddr_reg:x3; val_offset:233436*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233436*0 + 3*244*FLEN/8, x4, x1, x2)

inst_77813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffff000000000; valaddr_reg:x3; val_offset:233439*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233439*0 + 3*245*FLEN/8, x4, x1, x2)

inst_77814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffff800000000; valaddr_reg:x3; val_offset:233442*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233442*0 + 3*246*FLEN/8, x4, x1, x2)

inst_77815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffc00000000; valaddr_reg:x3; val_offset:233445*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233445*0 + 3*247*FLEN/8, x4, x1, x2)

inst_77816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffe00000000; valaddr_reg:x3; val_offset:233448*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233448*0 + 3*248*FLEN/8, x4, x1, x2)

inst_77817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffff00000000; valaddr_reg:x3; val_offset:233451*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233451*0 + 3*249*FLEN/8, x4, x1, x2)

inst_77818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffff80000000; valaddr_reg:x3; val_offset:233454*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233454*0 + 3*250*FLEN/8, x4, x1, x2)

inst_77819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffc0000000; valaddr_reg:x3; val_offset:233457*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233457*0 + 3*251*FLEN/8, x4, x1, x2)

inst_77820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffe0000000; valaddr_reg:x3; val_offset:233460*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233460*0 + 3*252*FLEN/8, x4, x1, x2)

inst_77821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffff0000000; valaddr_reg:x3; val_offset:233463*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233463*0 + 3*253*FLEN/8, x4, x1, x2)

inst_77822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffff8000000; valaddr_reg:x3; val_offset:233466*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233466*0 + 3*254*FLEN/8, x4, x1, x2)

inst_77823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffc000000; valaddr_reg:x3; val_offset:233469*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233469*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_77824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffe000000; valaddr_reg:x3; val_offset:233472*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233472*0 + 3*256*FLEN/8, x4, x1, x2)

inst_77825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffff000000; valaddr_reg:x3; val_offset:233475*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233475*0 + 3*257*FLEN/8, x4, x1, x2)

inst_77826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffff800000; valaddr_reg:x3; val_offset:233478*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233478*0 + 3*258*FLEN/8, x4, x1, x2)

inst_77827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffc00000; valaddr_reg:x3; val_offset:233481*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233481*0 + 3*259*FLEN/8, x4, x1, x2)

inst_77828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffe00000; valaddr_reg:x3; val_offset:233484*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233484*0 + 3*260*FLEN/8, x4, x1, x2)

inst_77829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffff00000; valaddr_reg:x3; val_offset:233487*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233487*0 + 3*261*FLEN/8, x4, x1, x2)

inst_77830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffff80000; valaddr_reg:x3; val_offset:233490*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233490*0 + 3*262*FLEN/8, x4, x1, x2)

inst_77831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffc0000; valaddr_reg:x3; val_offset:233493*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233493*0 + 3*263*FLEN/8, x4, x1, x2)

inst_77832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffe0000; valaddr_reg:x3; val_offset:233496*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233496*0 + 3*264*FLEN/8, x4, x1, x2)

inst_77833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffff0000; valaddr_reg:x3; val_offset:233499*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233499*0 + 3*265*FLEN/8, x4, x1, x2)

inst_77834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffff8000; valaddr_reg:x3; val_offset:233502*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233502*0 + 3*266*FLEN/8, x4, x1, x2)

inst_77835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffc000; valaddr_reg:x3; val_offset:233505*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233505*0 + 3*267*FLEN/8, x4, x1, x2)

inst_77836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffe000; valaddr_reg:x3; val_offset:233508*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233508*0 + 3*268*FLEN/8, x4, x1, x2)

inst_77837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffff000; valaddr_reg:x3; val_offset:233511*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233511*0 + 3*269*FLEN/8, x4, x1, x2)

inst_77838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffff800; valaddr_reg:x3; val_offset:233514*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233514*0 + 3*270*FLEN/8, x4, x1, x2)

inst_77839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffc00; valaddr_reg:x3; val_offset:233517*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233517*0 + 3*271*FLEN/8, x4, x1, x2)

inst_77840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffe00; valaddr_reg:x3; val_offset:233520*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233520*0 + 3*272*FLEN/8, x4, x1, x2)

inst_77841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffff00; valaddr_reg:x3; val_offset:233523*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233523*0 + 3*273*FLEN/8, x4, x1, x2)

inst_77842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffff80; valaddr_reg:x3; val_offset:233526*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233526*0 + 3*274*FLEN/8, x4, x1, x2)

inst_77843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffffc0; valaddr_reg:x3; val_offset:233529*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233529*0 + 3*275*FLEN/8, x4, x1, x2)

inst_77844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffffe0; valaddr_reg:x3; val_offset:233532*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233532*0 + 3*276*FLEN/8, x4, x1, x2)

inst_77845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffff0; valaddr_reg:x3; val_offset:233535*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233535*0 + 3*277*FLEN/8, x4, x1, x2)

inst_77846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffff8; valaddr_reg:x3; val_offset:233538*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233538*0 + 3*278*FLEN/8, x4, x1, x2)

inst_77847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffffc; valaddr_reg:x3; val_offset:233541*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233541*0 + 3*279*FLEN/8, x4, x1, x2)

inst_77848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815ffffffffffffe; valaddr_reg:x3; val_offset:233544*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233544*0 + 3*280*FLEN/8, x4, x1, x2)

inst_77849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x7fc334fb946a3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa7fc334fb946a3; op2val:0x8000;
op3val:0x815fffffffffffff; valaddr_reg:x3; val_offset:233547*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233547*0 + 3*281*FLEN/8, x4, x1, x2)

inst_77850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:233550*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233550*0 + 3*282*FLEN/8, x4, x1, x2)

inst_77851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:233553*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233553*0 + 3*283*FLEN/8, x4, x1, x2)

inst_77852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:233556*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233556*0 + 3*284*FLEN/8, x4, x1, x2)

inst_77853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:233559*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233559*0 + 3*285*FLEN/8, x4, x1, x2)

inst_77854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:233562*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233562*0 + 3*286*FLEN/8, x4, x1, x2)

inst_77855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:233565*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233565*0 + 3*287*FLEN/8, x4, x1, x2)

inst_77856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:233568*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233568*0 + 3*288*FLEN/8, x4, x1, x2)

inst_77857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:233571*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233571*0 + 3*289*FLEN/8, x4, x1, x2)

inst_77858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:233574*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233574*0 + 3*290*FLEN/8, x4, x1, x2)

inst_77859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:233577*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233577*0 + 3*291*FLEN/8, x4, x1, x2)

inst_77860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:233580*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233580*0 + 3*292*FLEN/8, x4, x1, x2)

inst_77861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:233583*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233583*0 + 3*293*FLEN/8, x4, x1, x2)

inst_77862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:233586*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233586*0 + 3*294*FLEN/8, x4, x1, x2)

inst_77863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:233589*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233589*0 + 3*295*FLEN/8, x4, x1, x2)

inst_77864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:233592*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233592*0 + 3*296*FLEN/8, x4, x1, x2)

inst_77865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:233595*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233595*0 + 3*297*FLEN/8, x4, x1, x2)

inst_77866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:233598*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233598*0 + 3*298*FLEN/8, x4, x1, x2)

inst_77867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:233601*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233601*0 + 3*299*FLEN/8, x4, x1, x2)

inst_77868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:233604*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233604*0 + 3*300*FLEN/8, x4, x1, x2)

inst_77869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:233607*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233607*0 + 3*301*FLEN/8, x4, x1, x2)

inst_77870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:233610*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233610*0 + 3*302*FLEN/8, x4, x1, x2)

inst_77871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:233613*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233613*0 + 3*303*FLEN/8, x4, x1, x2)

inst_77872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000000000; valaddr_reg:x3; val_offset:233616*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233616*0 + 3*304*FLEN/8, x4, x1, x2)

inst_77873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000000001; valaddr_reg:x3; val_offset:233619*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233619*0 + 3*305*FLEN/8, x4, x1, x2)

inst_77874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000000003; valaddr_reg:x3; val_offset:233622*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233622*0 + 3*306*FLEN/8, x4, x1, x2)

inst_77875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000000007; valaddr_reg:x3; val_offset:233625*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233625*0 + 3*307*FLEN/8, x4, x1, x2)

inst_77876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000000000f; valaddr_reg:x3; val_offset:233628*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233628*0 + 3*308*FLEN/8, x4, x1, x2)

inst_77877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000000001f; valaddr_reg:x3; val_offset:233631*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233631*0 + 3*309*FLEN/8, x4, x1, x2)

inst_77878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000000003f; valaddr_reg:x3; val_offset:233634*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233634*0 + 3*310*FLEN/8, x4, x1, x2)

inst_77879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000000007f; valaddr_reg:x3; val_offset:233637*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233637*0 + 3*311*FLEN/8, x4, x1, x2)

inst_77880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000000000ff; valaddr_reg:x3; val_offset:233640*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233640*0 + 3*312*FLEN/8, x4, x1, x2)

inst_77881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000000001ff; valaddr_reg:x3; val_offset:233643*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233643*0 + 3*313*FLEN/8, x4, x1, x2)

inst_77882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000000003ff; valaddr_reg:x3; val_offset:233646*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233646*0 + 3*314*FLEN/8, x4, x1, x2)

inst_77883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000000007ff; valaddr_reg:x3; val_offset:233649*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233649*0 + 3*315*FLEN/8, x4, x1, x2)

inst_77884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000000fff; valaddr_reg:x3; val_offset:233652*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233652*0 + 3*316*FLEN/8, x4, x1, x2)

inst_77885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000001fff; valaddr_reg:x3; val_offset:233655*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233655*0 + 3*317*FLEN/8, x4, x1, x2)

inst_77886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000003fff; valaddr_reg:x3; val_offset:233658*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233658*0 + 3*318*FLEN/8, x4, x1, x2)

inst_77887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000007fff; valaddr_reg:x3; val_offset:233661*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233661*0 + 3*319*FLEN/8, x4, x1, x2)

inst_77888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000000ffff; valaddr_reg:x3; val_offset:233664*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233664*0 + 3*320*FLEN/8, x4, x1, x2)

inst_77889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000001ffff; valaddr_reg:x3; val_offset:233667*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233667*0 + 3*321*FLEN/8, x4, x1, x2)

inst_77890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000003ffff; valaddr_reg:x3; val_offset:233670*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233670*0 + 3*322*FLEN/8, x4, x1, x2)

inst_77891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000007ffff; valaddr_reg:x3; val_offset:233673*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233673*0 + 3*323*FLEN/8, x4, x1, x2)

inst_77892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000000fffff; valaddr_reg:x3; val_offset:233676*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233676*0 + 3*324*FLEN/8, x4, x1, x2)

inst_77893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000001fffff; valaddr_reg:x3; val_offset:233679*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233679*0 + 3*325*FLEN/8, x4, x1, x2)

inst_77894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000003fffff; valaddr_reg:x3; val_offset:233682*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233682*0 + 3*326*FLEN/8, x4, x1, x2)

inst_77895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000007fffff; valaddr_reg:x3; val_offset:233685*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233685*0 + 3*327*FLEN/8, x4, x1, x2)

inst_77896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000000ffffff; valaddr_reg:x3; val_offset:233688*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233688*0 + 3*328*FLEN/8, x4, x1, x2)

inst_77897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000001ffffff; valaddr_reg:x3; val_offset:233691*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233691*0 + 3*329*FLEN/8, x4, x1, x2)

inst_77898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000003ffffff; valaddr_reg:x3; val_offset:233694*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233694*0 + 3*330*FLEN/8, x4, x1, x2)

inst_77899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000007ffffff; valaddr_reg:x3; val_offset:233697*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233697*0 + 3*331*FLEN/8, x4, x1, x2)

inst_77900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000000fffffff; valaddr_reg:x3; val_offset:233700*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233700*0 + 3*332*FLEN/8, x4, x1, x2)

inst_77901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000001fffffff; valaddr_reg:x3; val_offset:233703*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233703*0 + 3*333*FLEN/8, x4, x1, x2)

inst_77902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000003fffffff; valaddr_reg:x3; val_offset:233706*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233706*0 + 3*334*FLEN/8, x4, x1, x2)

inst_77903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000007fffffff; valaddr_reg:x3; val_offset:233709*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233709*0 + 3*335*FLEN/8, x4, x1, x2)

inst_77904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700000ffffffff; valaddr_reg:x3; val_offset:233712*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233712*0 + 3*336*FLEN/8, x4, x1, x2)

inst_77905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700001ffffffff; valaddr_reg:x3; val_offset:233715*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233715*0 + 3*337*FLEN/8, x4, x1, x2)

inst_77906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700003ffffffff; valaddr_reg:x3; val_offset:233718*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233718*0 + 3*338*FLEN/8, x4, x1, x2)

inst_77907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700007ffffffff; valaddr_reg:x3; val_offset:233721*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233721*0 + 3*339*FLEN/8, x4, x1, x2)

inst_77908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70000fffffffff; valaddr_reg:x3; val_offset:233724*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233724*0 + 3*340*FLEN/8, x4, x1, x2)

inst_77909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70001fffffffff; valaddr_reg:x3; val_offset:233727*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233727*0 + 3*341*FLEN/8, x4, x1, x2)

inst_77910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70003fffffffff; valaddr_reg:x3; val_offset:233730*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233730*0 + 3*342*FLEN/8, x4, x1, x2)

inst_77911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70007fffffffff; valaddr_reg:x3; val_offset:233733*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233733*0 + 3*343*FLEN/8, x4, x1, x2)

inst_77912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7000ffffffffff; valaddr_reg:x3; val_offset:233736*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233736*0 + 3*344*FLEN/8, x4, x1, x2)

inst_77913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7001ffffffffff; valaddr_reg:x3; val_offset:233739*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233739*0 + 3*345*FLEN/8, x4, x1, x2)

inst_77914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7003ffffffffff; valaddr_reg:x3; val_offset:233742*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233742*0 + 3*346*FLEN/8, x4, x1, x2)

inst_77915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7007ffffffffff; valaddr_reg:x3; val_offset:233745*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233745*0 + 3*347*FLEN/8, x4, x1, x2)

inst_77916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x700fffffffffff; valaddr_reg:x3; val_offset:233748*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233748*0 + 3*348*FLEN/8, x4, x1, x2)

inst_77917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x701fffffffffff; valaddr_reg:x3; val_offset:233751*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233751*0 + 3*349*FLEN/8, x4, x1, x2)

inst_77918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x703fffffffffff; valaddr_reg:x3; val_offset:233754*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233754*0 + 3*350*FLEN/8, x4, x1, x2)

inst_77919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x707fffffffffff; valaddr_reg:x3; val_offset:233757*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233757*0 + 3*351*FLEN/8, x4, x1, x2)

inst_77920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x70ffffffffffff; valaddr_reg:x3; val_offset:233760*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233760*0 + 3*352*FLEN/8, x4, x1, x2)

inst_77921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x71ffffffffffff; valaddr_reg:x3; val_offset:233763*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233763*0 + 3*353*FLEN/8, x4, x1, x2)

inst_77922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x73ffffffffffff; valaddr_reg:x3; val_offset:233766*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233766*0 + 3*354*FLEN/8, x4, x1, x2)

inst_77923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x77ffffffffffff; valaddr_reg:x3; val_offset:233769*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233769*0 + 3*355*FLEN/8, x4, x1, x2)

inst_77924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x78000000000000; valaddr_reg:x3; val_offset:233772*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233772*0 + 3*356*FLEN/8, x4, x1, x2)

inst_77925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7c000000000000; valaddr_reg:x3; val_offset:233775*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233775*0 + 3*357*FLEN/8, x4, x1, x2)

inst_77926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7e000000000000; valaddr_reg:x3; val_offset:233778*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233778*0 + 3*358*FLEN/8, x4, x1, x2)

inst_77927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7f000000000000; valaddr_reg:x3; val_offset:233781*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233781*0 + 3*359*FLEN/8, x4, x1, x2)

inst_77928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7f800000000000; valaddr_reg:x3; val_offset:233784*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233784*0 + 3*360*FLEN/8, x4, x1, x2)

inst_77929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fc00000000000; valaddr_reg:x3; val_offset:233787*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233787*0 + 3*361*FLEN/8, x4, x1, x2)

inst_77930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fe00000000000; valaddr_reg:x3; val_offset:233790*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233790*0 + 3*362*FLEN/8, x4, x1, x2)

inst_77931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ff00000000000; valaddr_reg:x3; val_offset:233793*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233793*0 + 3*363*FLEN/8, x4, x1, x2)

inst_77932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ff80000000000; valaddr_reg:x3; val_offset:233796*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233796*0 + 3*364*FLEN/8, x4, x1, x2)

inst_77933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffc0000000000; valaddr_reg:x3; val_offset:233799*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233799*0 + 3*365*FLEN/8, x4, x1, x2)

inst_77934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffe0000000000; valaddr_reg:x3; val_offset:233802*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233802*0 + 3*366*FLEN/8, x4, x1, x2)

inst_77935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fff0000000000; valaddr_reg:x3; val_offset:233805*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233805*0 + 3*367*FLEN/8, x4, x1, x2)

inst_77936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fff8000000000; valaddr_reg:x3; val_offset:233808*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233808*0 + 3*368*FLEN/8, x4, x1, x2)

inst_77937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffc000000000; valaddr_reg:x3; val_offset:233811*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233811*0 + 3*369*FLEN/8, x4, x1, x2)

inst_77938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffe000000000; valaddr_reg:x3; val_offset:233814*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233814*0 + 3*370*FLEN/8, x4, x1, x2)

inst_77939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffff000000000; valaddr_reg:x3; val_offset:233817*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233817*0 + 3*371*FLEN/8, x4, x1, x2)

inst_77940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffff800000000; valaddr_reg:x3; val_offset:233820*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233820*0 + 3*372*FLEN/8, x4, x1, x2)

inst_77941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffc00000000; valaddr_reg:x3; val_offset:233823*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233823*0 + 3*373*FLEN/8, x4, x1, x2)

inst_77942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffe00000000; valaddr_reg:x3; val_offset:233826*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233826*0 + 3*374*FLEN/8, x4, x1, x2)

inst_77943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffff00000000; valaddr_reg:x3; val_offset:233829*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233829*0 + 3*375*FLEN/8, x4, x1, x2)

inst_77944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffff80000000; valaddr_reg:x3; val_offset:233832*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233832*0 + 3*376*FLEN/8, x4, x1, x2)

inst_77945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffc0000000; valaddr_reg:x3; val_offset:233835*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233835*0 + 3*377*FLEN/8, x4, x1, x2)

inst_77946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffe0000000; valaddr_reg:x3; val_offset:233838*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233838*0 + 3*378*FLEN/8, x4, x1, x2)

inst_77947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffff0000000; valaddr_reg:x3; val_offset:233841*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233841*0 + 3*379*FLEN/8, x4, x1, x2)

inst_77948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffff8000000; valaddr_reg:x3; val_offset:233844*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233844*0 + 3*380*FLEN/8, x4, x1, x2)

inst_77949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffc000000; valaddr_reg:x3; val_offset:233847*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233847*0 + 3*381*FLEN/8, x4, x1, x2)

inst_77950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffe000000; valaddr_reg:x3; val_offset:233850*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233850*0 + 3*382*FLEN/8, x4, x1, x2)

inst_77951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffff000000; valaddr_reg:x3; val_offset:233853*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233853*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_77952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffff800000; valaddr_reg:x3; val_offset:233856*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233856*0 + 3*384*FLEN/8, x4, x1, x2)

inst_77953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffc00000; valaddr_reg:x3; val_offset:233859*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233859*0 + 3*385*FLEN/8, x4, x1, x2)

inst_77954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffe00000; valaddr_reg:x3; val_offset:233862*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233862*0 + 3*386*FLEN/8, x4, x1, x2)

inst_77955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffff00000; valaddr_reg:x3; val_offset:233865*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233865*0 + 3*387*FLEN/8, x4, x1, x2)

inst_77956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffff80000; valaddr_reg:x3; val_offset:233868*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233868*0 + 3*388*FLEN/8, x4, x1, x2)

inst_77957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffc0000; valaddr_reg:x3; val_offset:233871*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233871*0 + 3*389*FLEN/8, x4, x1, x2)

inst_77958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffe0000; valaddr_reg:x3; val_offset:233874*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233874*0 + 3*390*FLEN/8, x4, x1, x2)

inst_77959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffff0000; valaddr_reg:x3; val_offset:233877*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233877*0 + 3*391*FLEN/8, x4, x1, x2)

inst_77960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffff8000; valaddr_reg:x3; val_offset:233880*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233880*0 + 3*392*FLEN/8, x4, x1, x2)

inst_77961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffc000; valaddr_reg:x3; val_offset:233883*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233883*0 + 3*393*FLEN/8, x4, x1, x2)

inst_77962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffe000; valaddr_reg:x3; val_offset:233886*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233886*0 + 3*394*FLEN/8, x4, x1, x2)

inst_77963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffff000; valaddr_reg:x3; val_offset:233889*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233889*0 + 3*395*FLEN/8, x4, x1, x2)

inst_77964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffff800; valaddr_reg:x3; val_offset:233892*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233892*0 + 3*396*FLEN/8, x4, x1, x2)

inst_77965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffc00; valaddr_reg:x3; val_offset:233895*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233895*0 + 3*397*FLEN/8, x4, x1, x2)

inst_77966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffe00; valaddr_reg:x3; val_offset:233898*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233898*0 + 3*398*FLEN/8, x4, x1, x2)

inst_77967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffff00; valaddr_reg:x3; val_offset:233901*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233901*0 + 3*399*FLEN/8, x4, x1, x2)

inst_77968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffff80; valaddr_reg:x3; val_offset:233904*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233904*0 + 3*400*FLEN/8, x4, x1, x2)

inst_77969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffffc0; valaddr_reg:x3; val_offset:233907*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233907*0 + 3*401*FLEN/8, x4, x1, x2)

inst_77970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffffe0; valaddr_reg:x3; val_offset:233910*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233910*0 + 3*402*FLEN/8, x4, x1, x2)

inst_77971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffff0; valaddr_reg:x3; val_offset:233913*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233913*0 + 3*403*FLEN/8, x4, x1, x2)

inst_77972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffff8; valaddr_reg:x3; val_offset:233916*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233916*0 + 3*404*FLEN/8, x4, x1, x2)

inst_77973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffffc; valaddr_reg:x3; val_offset:233919*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233919*0 + 3*405*FLEN/8, x4, x1, x2)

inst_77974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7ffffffffffffe; valaddr_reg:x3; val_offset:233922*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233922*0 + 3*406*FLEN/8, x4, x1, x2)

inst_77975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x80da378178127 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x007 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa80da378178127; op2val:0x0;
op3val:0x7fffffffffffff; valaddr_reg:x3; val_offset:233925*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233925*0 + 3*407*FLEN/8, x4, x1, x2)

inst_77976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000000000; valaddr_reg:x3; val_offset:233928*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233928*0 + 3*408*FLEN/8, x4, x1, x2)

inst_77977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:233931*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233931*0 + 3*409*FLEN/8, x4, x1, x2)

inst_77978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:233934*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233934*0 + 3*410*FLEN/8, x4, x1, x2)

inst_77979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:233937*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233937*0 + 3*411*FLEN/8, x4, x1, x2)

inst_77980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:233940*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233940*0 + 3*412*FLEN/8, x4, x1, x2)

inst_77981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:233943*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233943*0 + 3*413*FLEN/8, x4, x1, x2)

inst_77982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:233946*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233946*0 + 3*414*FLEN/8, x4, x1, x2)

inst_77983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000000007f; valaddr_reg:x3; val_offset:233949*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233949*0 + 3*415*FLEN/8, x4, x1, x2)

inst_77984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000000000ff; valaddr_reg:x3; val_offset:233952*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233952*0 + 3*416*FLEN/8, x4, x1, x2)

inst_77985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000000001ff; valaddr_reg:x3; val_offset:233955*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233955*0 + 3*417*FLEN/8, x4, x1, x2)

inst_77986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000000003ff; valaddr_reg:x3; val_offset:233958*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233958*0 + 3*418*FLEN/8, x4, x1, x2)

inst_77987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000000007ff; valaddr_reg:x3; val_offset:233961*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233961*0 + 3*419*FLEN/8, x4, x1, x2)

inst_77988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000000fff; valaddr_reg:x3; val_offset:233964*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233964*0 + 3*420*FLEN/8, x4, x1, x2)

inst_77989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000001fff; valaddr_reg:x3; val_offset:233967*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233967*0 + 3*421*FLEN/8, x4, x1, x2)

inst_77990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000003fff; valaddr_reg:x3; val_offset:233970*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233970*0 + 3*422*FLEN/8, x4, x1, x2)

inst_77991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000007fff; valaddr_reg:x3; val_offset:233973*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233973*0 + 3*423*FLEN/8, x4, x1, x2)

inst_77992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000000ffff; valaddr_reg:x3; val_offset:233976*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233976*0 + 3*424*FLEN/8, x4, x1, x2)

inst_77993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000001ffff; valaddr_reg:x3; val_offset:233979*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233979*0 + 3*425*FLEN/8, x4, x1, x2)

inst_77994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000003ffff; valaddr_reg:x3; val_offset:233982*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233982*0 + 3*426*FLEN/8, x4, x1, x2)

inst_77995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000007ffff; valaddr_reg:x3; val_offset:233985*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233985*0 + 3*427*FLEN/8, x4, x1, x2)

inst_77996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000000fffff; valaddr_reg:x3; val_offset:233988*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233988*0 + 3*428*FLEN/8, x4, x1, x2)

inst_77997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000001fffff; valaddr_reg:x3; val_offset:233991*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233991*0 + 3*429*FLEN/8, x4, x1, x2)

inst_77998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000003fffff; valaddr_reg:x3; val_offset:233994*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233994*0 + 3*430*FLEN/8, x4, x1, x2)

inst_77999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000007fffff; valaddr_reg:x3; val_offset:233997*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 233997*0 + 3*431*FLEN/8, x4, x1, x2)

inst_78000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000000ffffff; valaddr_reg:x3; val_offset:234000*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234000*0 + 3*432*FLEN/8, x4, x1, x2)

inst_78001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000001ffffff; valaddr_reg:x3; val_offset:234003*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234003*0 + 3*433*FLEN/8, x4, x1, x2)

inst_78002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000003ffffff; valaddr_reg:x3; val_offset:234006*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234006*0 + 3*434*FLEN/8, x4, x1, x2)

inst_78003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000007ffffff; valaddr_reg:x3; val_offset:234009*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234009*0 + 3*435*FLEN/8, x4, x1, x2)

inst_78004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000000fffffff; valaddr_reg:x3; val_offset:234012*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234012*0 + 3*436*FLEN/8, x4, x1, x2)

inst_78005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000001fffffff; valaddr_reg:x3; val_offset:234015*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234015*0 + 3*437*FLEN/8, x4, x1, x2)

inst_78006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000003fffffff; valaddr_reg:x3; val_offset:234018*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234018*0 + 3*438*FLEN/8, x4, x1, x2)

inst_78007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000007fffffff; valaddr_reg:x3; val_offset:234021*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234021*0 + 3*439*FLEN/8, x4, x1, x2)

inst_78008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100000ffffffff; valaddr_reg:x3; val_offset:234024*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234024*0 + 3*440*FLEN/8, x4, x1, x2)

inst_78009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100001ffffffff; valaddr_reg:x3; val_offset:234027*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234027*0 + 3*441*FLEN/8, x4, x1, x2)

inst_78010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100003ffffffff; valaddr_reg:x3; val_offset:234030*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234030*0 + 3*442*FLEN/8, x4, x1, x2)

inst_78011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100007ffffffff; valaddr_reg:x3; val_offset:234033*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234033*0 + 3*443*FLEN/8, x4, x1, x2)

inst_78012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10000fffffffff; valaddr_reg:x3; val_offset:234036*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234036*0 + 3*444*FLEN/8, x4, x1, x2)

inst_78013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10001fffffffff; valaddr_reg:x3; val_offset:234039*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234039*0 + 3*445*FLEN/8, x4, x1, x2)

inst_78014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10003fffffffff; valaddr_reg:x3; val_offset:234042*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234042*0 + 3*446*FLEN/8, x4, x1, x2)

inst_78015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10007fffffffff; valaddr_reg:x3; val_offset:234045*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234045*0 + 3*447*FLEN/8, x4, x1, x2)

inst_78016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1000ffffffffff; valaddr_reg:x3; val_offset:234048*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234048*0 + 3*448*FLEN/8, x4, x1, x2)

inst_78017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1001ffffffffff; valaddr_reg:x3; val_offset:234051*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234051*0 + 3*449*FLEN/8, x4, x1, x2)

inst_78018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1003ffffffffff; valaddr_reg:x3; val_offset:234054*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234054*0 + 3*450*FLEN/8, x4, x1, x2)

inst_78019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1007ffffffffff; valaddr_reg:x3; val_offset:234057*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234057*0 + 3*451*FLEN/8, x4, x1, x2)

inst_78020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x100fffffffffff; valaddr_reg:x3; val_offset:234060*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234060*0 + 3*452*FLEN/8, x4, x1, x2)

inst_78021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x101fffffffffff; valaddr_reg:x3; val_offset:234063*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234063*0 + 3*453*FLEN/8, x4, x1, x2)

inst_78022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x103fffffffffff; valaddr_reg:x3; val_offset:234066*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234066*0 + 3*454*FLEN/8, x4, x1, x2)

inst_78023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x107fffffffffff; valaddr_reg:x3; val_offset:234069*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234069*0 + 3*455*FLEN/8, x4, x1, x2)

inst_78024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x10ffffffffffff; valaddr_reg:x3; val_offset:234072*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234072*0 + 3*456*FLEN/8, x4, x1, x2)

inst_78025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x11ffffffffffff; valaddr_reg:x3; val_offset:234075*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234075*0 + 3*457*FLEN/8, x4, x1, x2)

inst_78026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:234078*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234078*0 + 3*458*FLEN/8, x4, x1, x2)

inst_78027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x13ffffffffffff; valaddr_reg:x3; val_offset:234081*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234081*0 + 3*459*FLEN/8, x4, x1, x2)

inst_78028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:234084*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234084*0 + 3*460*FLEN/8, x4, x1, x2)

inst_78029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:234087*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234087*0 + 3*461*FLEN/8, x4, x1, x2)

inst_78030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:234090*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234090*0 + 3*462*FLEN/8, x4, x1, x2)

inst_78031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:234093*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234093*0 + 3*463*FLEN/8, x4, x1, x2)

inst_78032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x17ffffffffffff; valaddr_reg:x3; val_offset:234096*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234096*0 + 3*464*FLEN/8, x4, x1, x2)

inst_78033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x18000000000000; valaddr_reg:x3; val_offset:234099*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234099*0 + 3*465*FLEN/8, x4, x1, x2)

inst_78034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:234102*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234102*0 + 3*466*FLEN/8, x4, x1, x2)

inst_78035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:234105*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234105*0 + 3*467*FLEN/8, x4, x1, x2)

inst_78036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:234108*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234108*0 + 3*468*FLEN/8, x4, x1, x2)

inst_78037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1c000000000000; valaddr_reg:x3; val_offset:234111*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234111*0 + 3*469*FLEN/8, x4, x1, x2)

inst_78038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:234114*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234114*0 + 3*470*FLEN/8, x4, x1, x2)

inst_78039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:234117*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234117*0 + 3*471*FLEN/8, x4, x1, x2)

inst_78040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1e000000000000; valaddr_reg:x3; val_offset:234120*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234120*0 + 3*472*FLEN/8, x4, x1, x2)

inst_78041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1f000000000000; valaddr_reg:x3; val_offset:234123*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234123*0 + 3*473*FLEN/8, x4, x1, x2)

inst_78042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1f800000000000; valaddr_reg:x3; val_offset:234126*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234126*0 + 3*474*FLEN/8, x4, x1, x2)

inst_78043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fc00000000000; valaddr_reg:x3; val_offset:234129*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234129*0 + 3*475*FLEN/8, x4, x1, x2)

inst_78044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fe00000000000; valaddr_reg:x3; val_offset:234132*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234132*0 + 3*476*FLEN/8, x4, x1, x2)

inst_78045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ff00000000000; valaddr_reg:x3; val_offset:234135*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234135*0 + 3*477*FLEN/8, x4, x1, x2)

inst_78046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ff80000000000; valaddr_reg:x3; val_offset:234138*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234138*0 + 3*478*FLEN/8, x4, x1, x2)

inst_78047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffc0000000000; valaddr_reg:x3; val_offset:234141*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234141*0 + 3*479*FLEN/8, x4, x1, x2)

inst_78048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffe0000000000; valaddr_reg:x3; val_offset:234144*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234144*0 + 3*480*FLEN/8, x4, x1, x2)

inst_78049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fff0000000000; valaddr_reg:x3; val_offset:234147*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234147*0 + 3*481*FLEN/8, x4, x1, x2)

inst_78050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fff8000000000; valaddr_reg:x3; val_offset:234150*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234150*0 + 3*482*FLEN/8, x4, x1, x2)

inst_78051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffc000000000; valaddr_reg:x3; val_offset:234153*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234153*0 + 3*483*FLEN/8, x4, x1, x2)

inst_78052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffe000000000; valaddr_reg:x3; val_offset:234156*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234156*0 + 3*484*FLEN/8, x4, x1, x2)

inst_78053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffff000000000; valaddr_reg:x3; val_offset:234159*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234159*0 + 3*485*FLEN/8, x4, x1, x2)

inst_78054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffff800000000; valaddr_reg:x3; val_offset:234162*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234162*0 + 3*486*FLEN/8, x4, x1, x2)

inst_78055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffc00000000; valaddr_reg:x3; val_offset:234165*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234165*0 + 3*487*FLEN/8, x4, x1, x2)

inst_78056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffe00000000; valaddr_reg:x3; val_offset:234168*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234168*0 + 3*488*FLEN/8, x4, x1, x2)

inst_78057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffff00000000; valaddr_reg:x3; val_offset:234171*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234171*0 + 3*489*FLEN/8, x4, x1, x2)

inst_78058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffff80000000; valaddr_reg:x3; val_offset:234174*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234174*0 + 3*490*FLEN/8, x4, x1, x2)

inst_78059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffc0000000; valaddr_reg:x3; val_offset:234177*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234177*0 + 3*491*FLEN/8, x4, x1, x2)

inst_78060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffe0000000; valaddr_reg:x3; val_offset:234180*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234180*0 + 3*492*FLEN/8, x4, x1, x2)

inst_78061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffff0000000; valaddr_reg:x3; val_offset:234183*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234183*0 + 3*493*FLEN/8, x4, x1, x2)

inst_78062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffff8000000; valaddr_reg:x3; val_offset:234186*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234186*0 + 3*494*FLEN/8, x4, x1, x2)

inst_78063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffc000000; valaddr_reg:x3; val_offset:234189*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234189*0 + 3*495*FLEN/8, x4, x1, x2)

inst_78064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffe000000; valaddr_reg:x3; val_offset:234192*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234192*0 + 3*496*FLEN/8, x4, x1, x2)

inst_78065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffff000000; valaddr_reg:x3; val_offset:234195*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234195*0 + 3*497*FLEN/8, x4, x1, x2)

inst_78066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffff800000; valaddr_reg:x3; val_offset:234198*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234198*0 + 3*498*FLEN/8, x4, x1, x2)

inst_78067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffc00000; valaddr_reg:x3; val_offset:234201*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234201*0 + 3*499*FLEN/8, x4, x1, x2)

inst_78068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffe00000; valaddr_reg:x3; val_offset:234204*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234204*0 + 3*500*FLEN/8, x4, x1, x2)

inst_78069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffff00000; valaddr_reg:x3; val_offset:234207*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234207*0 + 3*501*FLEN/8, x4, x1, x2)

inst_78070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffff80000; valaddr_reg:x3; val_offset:234210*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234210*0 + 3*502*FLEN/8, x4, x1, x2)

inst_78071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffc0000; valaddr_reg:x3; val_offset:234213*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234213*0 + 3*503*FLEN/8, x4, x1, x2)

inst_78072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffe0000; valaddr_reg:x3; val_offset:234216*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234216*0 + 3*504*FLEN/8, x4, x1, x2)

inst_78073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffff0000; valaddr_reg:x3; val_offset:234219*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234219*0 + 3*505*FLEN/8, x4, x1, x2)

inst_78074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffff8000; valaddr_reg:x3; val_offset:234222*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234222*0 + 3*506*FLEN/8, x4, x1, x2)

inst_78075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffc000; valaddr_reg:x3; val_offset:234225*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234225*0 + 3*507*FLEN/8, x4, x1, x2)

inst_78076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffe000; valaddr_reg:x3; val_offset:234228*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234228*0 + 3*508*FLEN/8, x4, x1, x2)

inst_78077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffff000; valaddr_reg:x3; val_offset:234231*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234231*0 + 3*509*FLEN/8, x4, x1, x2)

inst_78078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffff800; valaddr_reg:x3; val_offset:234234*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234234*0 + 3*510*FLEN/8, x4, x1, x2)

inst_78079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffc00; valaddr_reg:x3; val_offset:234237*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234237*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_78080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffe00; valaddr_reg:x3; val_offset:234240*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234240*0 + 3*512*FLEN/8, x4, x1, x2)

inst_78081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffff00; valaddr_reg:x3; val_offset:234243*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234243*0 + 3*513*FLEN/8, x4, x1, x2)

inst_78082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffff80; valaddr_reg:x3; val_offset:234246*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234246*0 + 3*514*FLEN/8, x4, x1, x2)

inst_78083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:234249*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234249*0 + 3*515*FLEN/8, x4, x1, x2)

inst_78084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:234252*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234252*0 + 3*516*FLEN/8, x4, x1, x2)

inst_78085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:234255*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234255*0 + 3*517*FLEN/8, x4, x1, x2)

inst_78086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:234258*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234258*0 + 3*518*FLEN/8, x4, x1, x2)

inst_78087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:234261*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234261*0 + 3*519*FLEN/8, x4, x1, x2)

inst_78088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:234264*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234264*0 + 3*520*FLEN/8, x4, x1, x2)

inst_78089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x816785a6c3dd5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa816785a6c3dd5; op2val:0x0;
op3val:0x1fffffffffffff; valaddr_reg:x3; val_offset:234267*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234267*0 + 3*521*FLEN/8, x4, x1, x2)

inst_78090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000000000; valaddr_reg:x3; val_offset:234270*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234270*0 + 3*522*FLEN/8, x4, x1, x2)

inst_78091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000000001; valaddr_reg:x3; val_offset:234273*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234273*0 + 3*523*FLEN/8, x4, x1, x2)

inst_78092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000000003; valaddr_reg:x3; val_offset:234276*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234276*0 + 3*524*FLEN/8, x4, x1, x2)

inst_78093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000000007; valaddr_reg:x3; val_offset:234279*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234279*0 + 3*525*FLEN/8, x4, x1, x2)

inst_78094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000000000f; valaddr_reg:x3; val_offset:234282*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234282*0 + 3*526*FLEN/8, x4, x1, x2)

inst_78095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000000001f; valaddr_reg:x3; val_offset:234285*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234285*0 + 3*527*FLEN/8, x4, x1, x2)

inst_78096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000000003f; valaddr_reg:x3; val_offset:234288*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234288*0 + 3*528*FLEN/8, x4, x1, x2)

inst_78097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000000007f; valaddr_reg:x3; val_offset:234291*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234291*0 + 3*529*FLEN/8, x4, x1, x2)

inst_78098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000000000ff; valaddr_reg:x3; val_offset:234294*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234294*0 + 3*530*FLEN/8, x4, x1, x2)

inst_78099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000000001ff; valaddr_reg:x3; val_offset:234297*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234297*0 + 3*531*FLEN/8, x4, x1, x2)

inst_78100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000000003ff; valaddr_reg:x3; val_offset:234300*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234300*0 + 3*532*FLEN/8, x4, x1, x2)

inst_78101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000000007ff; valaddr_reg:x3; val_offset:234303*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234303*0 + 3*533*FLEN/8, x4, x1, x2)

inst_78102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000000fff; valaddr_reg:x3; val_offset:234306*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234306*0 + 3*534*FLEN/8, x4, x1, x2)

inst_78103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000001fff; valaddr_reg:x3; val_offset:234309*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234309*0 + 3*535*FLEN/8, x4, x1, x2)

inst_78104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000003fff; valaddr_reg:x3; val_offset:234312*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234312*0 + 3*536*FLEN/8, x4, x1, x2)

inst_78105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000007fff; valaddr_reg:x3; val_offset:234315*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234315*0 + 3*537*FLEN/8, x4, x1, x2)

inst_78106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000000ffff; valaddr_reg:x3; val_offset:234318*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234318*0 + 3*538*FLEN/8, x4, x1, x2)

inst_78107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000001ffff; valaddr_reg:x3; val_offset:234321*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234321*0 + 3*539*FLEN/8, x4, x1, x2)

inst_78108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000003ffff; valaddr_reg:x3; val_offset:234324*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234324*0 + 3*540*FLEN/8, x4, x1, x2)

inst_78109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000007ffff; valaddr_reg:x3; val_offset:234327*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234327*0 + 3*541*FLEN/8, x4, x1, x2)

inst_78110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000000fffff; valaddr_reg:x3; val_offset:234330*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234330*0 + 3*542*FLEN/8, x4, x1, x2)

inst_78111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000001fffff; valaddr_reg:x3; val_offset:234333*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234333*0 + 3*543*FLEN/8, x4, x1, x2)

inst_78112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000003fffff; valaddr_reg:x3; val_offset:234336*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234336*0 + 3*544*FLEN/8, x4, x1, x2)

inst_78113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000007fffff; valaddr_reg:x3; val_offset:234339*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234339*0 + 3*545*FLEN/8, x4, x1, x2)

inst_78114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000000ffffff; valaddr_reg:x3; val_offset:234342*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234342*0 + 3*546*FLEN/8, x4, x1, x2)

inst_78115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000001ffffff; valaddr_reg:x3; val_offset:234345*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234345*0 + 3*547*FLEN/8, x4, x1, x2)

inst_78116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000003ffffff; valaddr_reg:x3; val_offset:234348*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234348*0 + 3*548*FLEN/8, x4, x1, x2)

inst_78117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000007ffffff; valaddr_reg:x3; val_offset:234351*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234351*0 + 3*549*FLEN/8, x4, x1, x2)

inst_78118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000000fffffff; valaddr_reg:x3; val_offset:234354*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234354*0 + 3*550*FLEN/8, x4, x1, x2)

inst_78119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000001fffffff; valaddr_reg:x3; val_offset:234357*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234357*0 + 3*551*FLEN/8, x4, x1, x2)

inst_78120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000003fffffff; valaddr_reg:x3; val_offset:234360*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234360*0 + 3*552*FLEN/8, x4, x1, x2)

inst_78121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000007fffffff; valaddr_reg:x3; val_offset:234363*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234363*0 + 3*553*FLEN/8, x4, x1, x2)

inst_78122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600000ffffffff; valaddr_reg:x3; val_offset:234366*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234366*0 + 3*554*FLEN/8, x4, x1, x2)

inst_78123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600001ffffffff; valaddr_reg:x3; val_offset:234369*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234369*0 + 3*555*FLEN/8, x4, x1, x2)

inst_78124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600003ffffffff; valaddr_reg:x3; val_offset:234372*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234372*0 + 3*556*FLEN/8, x4, x1, x2)

inst_78125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600007ffffffff; valaddr_reg:x3; val_offset:234375*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234375*0 + 3*557*FLEN/8, x4, x1, x2)

inst_78126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60000fffffffff; valaddr_reg:x3; val_offset:234378*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234378*0 + 3*558*FLEN/8, x4, x1, x2)

inst_78127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60001fffffffff; valaddr_reg:x3; val_offset:234381*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234381*0 + 3*559*FLEN/8, x4, x1, x2)

inst_78128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60003fffffffff; valaddr_reg:x3; val_offset:234384*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234384*0 + 3*560*FLEN/8, x4, x1, x2)

inst_78129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60007fffffffff; valaddr_reg:x3; val_offset:234387*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234387*0 + 3*561*FLEN/8, x4, x1, x2)

inst_78130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6000ffffffffff; valaddr_reg:x3; val_offset:234390*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234390*0 + 3*562*FLEN/8, x4, x1, x2)

inst_78131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6001ffffffffff; valaddr_reg:x3; val_offset:234393*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234393*0 + 3*563*FLEN/8, x4, x1, x2)

inst_78132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6003ffffffffff; valaddr_reg:x3; val_offset:234396*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234396*0 + 3*564*FLEN/8, x4, x1, x2)

inst_78133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6007ffffffffff; valaddr_reg:x3; val_offset:234399*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234399*0 + 3*565*FLEN/8, x4, x1, x2)

inst_78134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b600fffffffffff; valaddr_reg:x3; val_offset:234402*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234402*0 + 3*566*FLEN/8, x4, x1, x2)

inst_78135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b601fffffffffff; valaddr_reg:x3; val_offset:234405*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234405*0 + 3*567*FLEN/8, x4, x1, x2)

inst_78136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b603fffffffffff; valaddr_reg:x3; val_offset:234408*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234408*0 + 3*568*FLEN/8, x4, x1, x2)

inst_78137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b607fffffffffff; valaddr_reg:x3; val_offset:234411*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234411*0 + 3*569*FLEN/8, x4, x1, x2)

inst_78138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b60ffffffffffff; valaddr_reg:x3; val_offset:234414*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234414*0 + 3*570*FLEN/8, x4, x1, x2)

inst_78139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b61ffffffffffff; valaddr_reg:x3; val_offset:234417*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234417*0 + 3*571*FLEN/8, x4, x1, x2)

inst_78140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b63ffffffffffff; valaddr_reg:x3; val_offset:234420*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234420*0 + 3*572*FLEN/8, x4, x1, x2)

inst_78141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b67ffffffffffff; valaddr_reg:x3; val_offset:234423*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234423*0 + 3*573*FLEN/8, x4, x1, x2)

inst_78142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b68000000000000; valaddr_reg:x3; val_offset:234426*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234426*0 + 3*574*FLEN/8, x4, x1, x2)

inst_78143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6c000000000000; valaddr_reg:x3; val_offset:234429*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234429*0 + 3*575*FLEN/8, x4, x1, x2)

inst_78144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6e000000000000; valaddr_reg:x3; val_offset:234432*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234432*0 + 3*576*FLEN/8, x4, x1, x2)

inst_78145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6f000000000000; valaddr_reg:x3; val_offset:234435*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234435*0 + 3*577*FLEN/8, x4, x1, x2)

inst_78146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6f800000000000; valaddr_reg:x3; val_offset:234438*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234438*0 + 3*578*FLEN/8, x4, x1, x2)

inst_78147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fc00000000000; valaddr_reg:x3; val_offset:234441*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234441*0 + 3*579*FLEN/8, x4, x1, x2)

inst_78148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fe00000000000; valaddr_reg:x3; val_offset:234444*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234444*0 + 3*580*FLEN/8, x4, x1, x2)

inst_78149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ff00000000000; valaddr_reg:x3; val_offset:234447*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234447*0 + 3*581*FLEN/8, x4, x1, x2)

inst_78150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ff80000000000; valaddr_reg:x3; val_offset:234450*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234450*0 + 3*582*FLEN/8, x4, x1, x2)

inst_78151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffc0000000000; valaddr_reg:x3; val_offset:234453*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234453*0 + 3*583*FLEN/8, x4, x1, x2)

inst_78152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffe0000000000; valaddr_reg:x3; val_offset:234456*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234456*0 + 3*584*FLEN/8, x4, x1, x2)

inst_78153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fff0000000000; valaddr_reg:x3; val_offset:234459*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234459*0 + 3*585*FLEN/8, x4, x1, x2)

inst_78154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fff8000000000; valaddr_reg:x3; val_offset:234462*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234462*0 + 3*586*FLEN/8, x4, x1, x2)

inst_78155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffc000000000; valaddr_reg:x3; val_offset:234465*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234465*0 + 3*587*FLEN/8, x4, x1, x2)

inst_78156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffe000000000; valaddr_reg:x3; val_offset:234468*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234468*0 + 3*588*FLEN/8, x4, x1, x2)

inst_78157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffff000000000; valaddr_reg:x3; val_offset:234471*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234471*0 + 3*589*FLEN/8, x4, x1, x2)

inst_78158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffff800000000; valaddr_reg:x3; val_offset:234474*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234474*0 + 3*590*FLEN/8, x4, x1, x2)

inst_78159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffc00000000; valaddr_reg:x3; val_offset:234477*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234477*0 + 3*591*FLEN/8, x4, x1, x2)

inst_78160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffe00000000; valaddr_reg:x3; val_offset:234480*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234480*0 + 3*592*FLEN/8, x4, x1, x2)

inst_78161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffff00000000; valaddr_reg:x3; val_offset:234483*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234483*0 + 3*593*FLEN/8, x4, x1, x2)

inst_78162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffff80000000; valaddr_reg:x3; val_offset:234486*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234486*0 + 3*594*FLEN/8, x4, x1, x2)

inst_78163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffc0000000; valaddr_reg:x3; val_offset:234489*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234489*0 + 3*595*FLEN/8, x4, x1, x2)

inst_78164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffe0000000; valaddr_reg:x3; val_offset:234492*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234492*0 + 3*596*FLEN/8, x4, x1, x2)

inst_78165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffff0000000; valaddr_reg:x3; val_offset:234495*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234495*0 + 3*597*FLEN/8, x4, x1, x2)

inst_78166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffff8000000; valaddr_reg:x3; val_offset:234498*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234498*0 + 3*598*FLEN/8, x4, x1, x2)

inst_78167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffc000000; valaddr_reg:x3; val_offset:234501*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234501*0 + 3*599*FLEN/8, x4, x1, x2)

inst_78168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffe000000; valaddr_reg:x3; val_offset:234504*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234504*0 + 3*600*FLEN/8, x4, x1, x2)

inst_78169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffff000000; valaddr_reg:x3; val_offset:234507*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234507*0 + 3*601*FLEN/8, x4, x1, x2)

inst_78170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffff800000; valaddr_reg:x3; val_offset:234510*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234510*0 + 3*602*FLEN/8, x4, x1, x2)

inst_78171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffc00000; valaddr_reg:x3; val_offset:234513*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234513*0 + 3*603*FLEN/8, x4, x1, x2)

inst_78172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffe00000; valaddr_reg:x3; val_offset:234516*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234516*0 + 3*604*FLEN/8, x4, x1, x2)

inst_78173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffff00000; valaddr_reg:x3; val_offset:234519*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234519*0 + 3*605*FLEN/8, x4, x1, x2)

inst_78174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffff80000; valaddr_reg:x3; val_offset:234522*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234522*0 + 3*606*FLEN/8, x4, x1, x2)

inst_78175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffc0000; valaddr_reg:x3; val_offset:234525*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234525*0 + 3*607*FLEN/8, x4, x1, x2)

inst_78176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffe0000; valaddr_reg:x3; val_offset:234528*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234528*0 + 3*608*FLEN/8, x4, x1, x2)

inst_78177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffff0000; valaddr_reg:x3; val_offset:234531*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234531*0 + 3*609*FLEN/8, x4, x1, x2)

inst_78178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffff8000; valaddr_reg:x3; val_offset:234534*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234534*0 + 3*610*FLEN/8, x4, x1, x2)

inst_78179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffc000; valaddr_reg:x3; val_offset:234537*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234537*0 + 3*611*FLEN/8, x4, x1, x2)

inst_78180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffe000; valaddr_reg:x3; val_offset:234540*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234540*0 + 3*612*FLEN/8, x4, x1, x2)

inst_78181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffff000; valaddr_reg:x3; val_offset:234543*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234543*0 + 3*613*FLEN/8, x4, x1, x2)

inst_78182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffff800; valaddr_reg:x3; val_offset:234546*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234546*0 + 3*614*FLEN/8, x4, x1, x2)

inst_78183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffc00; valaddr_reg:x3; val_offset:234549*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234549*0 + 3*615*FLEN/8, x4, x1, x2)

inst_78184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffe00; valaddr_reg:x3; val_offset:234552*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234552*0 + 3*616*FLEN/8, x4, x1, x2)

inst_78185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffff00; valaddr_reg:x3; val_offset:234555*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234555*0 + 3*617*FLEN/8, x4, x1, x2)

inst_78186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffff80; valaddr_reg:x3; val_offset:234558*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234558*0 + 3*618*FLEN/8, x4, x1, x2)

inst_78187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffffc0; valaddr_reg:x3; val_offset:234561*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234561*0 + 3*619*FLEN/8, x4, x1, x2)

inst_78188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffffe0; valaddr_reg:x3; val_offset:234564*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234564*0 + 3*620*FLEN/8, x4, x1, x2)

inst_78189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffff0; valaddr_reg:x3; val_offset:234567*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234567*0 + 3*621*FLEN/8, x4, x1, x2)

inst_78190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffff8; valaddr_reg:x3; val_offset:234570*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234570*0 + 3*622*FLEN/8, x4, x1, x2)

inst_78191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffffc; valaddr_reg:x3; val_offset:234573*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234573*0 + 3*623*FLEN/8, x4, x1, x2)

inst_78192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6ffffffffffffe; valaddr_reg:x3; val_offset:234576*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234576*0 + 3*624*FLEN/8, x4, x1, x2)

inst_78193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3b6 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3b6fffffffffffff; valaddr_reg:x3; val_offset:234579*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234579*0 + 3*625*FLEN/8, x4, x1, x2)

inst_78194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:234582*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234582*0 + 3*626*FLEN/8, x4, x1, x2)

inst_78195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:234585*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234585*0 + 3*627*FLEN/8, x4, x1, x2)

inst_78196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:234588*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234588*0 + 3*628*FLEN/8, x4, x1, x2)

inst_78197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:234591*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234591*0 + 3*629*FLEN/8, x4, x1, x2)

inst_78198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:234594*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234594*0 + 3*630*FLEN/8, x4, x1, x2)

inst_78199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:234597*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234597*0 + 3*631*FLEN/8, x4, x1, x2)

inst_78200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:234600*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234600*0 + 3*632*FLEN/8, x4, x1, x2)

inst_78201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:234603*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234603*0 + 3*633*FLEN/8, x4, x1, x2)

inst_78202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:234606*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234606*0 + 3*634*FLEN/8, x4, x1, x2)

inst_78203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:234609*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234609*0 + 3*635*FLEN/8, x4, x1, x2)

inst_78204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:234612*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234612*0 + 3*636*FLEN/8, x4, x1, x2)

inst_78205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:234615*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234615*0 + 3*637*FLEN/8, x4, x1, x2)

inst_78206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:234618*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234618*0 + 3*638*FLEN/8, x4, x1, x2)

inst_78207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:234621*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234621*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_78208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:234624*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234624*0 + 3*640*FLEN/8, x4, x1, x2)

inst_78209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:234627*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234627*0 + 3*641*FLEN/8, x4, x1, x2)

inst_78210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:234630*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234630*0 + 3*642*FLEN/8, x4, x1, x2)

inst_78211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:234633*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234633*0 + 3*643*FLEN/8, x4, x1, x2)

inst_78212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:234636*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234636*0 + 3*644*FLEN/8, x4, x1, x2)

inst_78213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:234639*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234639*0 + 3*645*FLEN/8, x4, x1, x2)

inst_78214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:234642*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234642*0 + 3*646*FLEN/8, x4, x1, x2)

inst_78215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81bb156a6e61c and fs2 == 0 and fe2 == 0x203 and fm2 == 0x53cd3f99396be and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81bb156a6e61c; op2val:0x20353cd3f99396be;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:234645*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234645*0 + 3*647*FLEN/8, x4, x1, x2)

inst_78216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000000000; valaddr_reg:x3; val_offset:234648*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234648*0 + 3*648*FLEN/8, x4, x1, x2)

inst_78217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000000001; valaddr_reg:x3; val_offset:234651*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234651*0 + 3*649*FLEN/8, x4, x1, x2)

inst_78218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000000003; valaddr_reg:x3; val_offset:234654*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234654*0 + 3*650*FLEN/8, x4, x1, x2)

inst_78219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000000007; valaddr_reg:x3; val_offset:234657*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234657*0 + 3*651*FLEN/8, x4, x1, x2)

inst_78220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000000000f; valaddr_reg:x3; val_offset:234660*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234660*0 + 3*652*FLEN/8, x4, x1, x2)

inst_78221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000000001f; valaddr_reg:x3; val_offset:234663*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234663*0 + 3*653*FLEN/8, x4, x1, x2)

inst_78222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000000003f; valaddr_reg:x3; val_offset:234666*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234666*0 + 3*654*FLEN/8, x4, x1, x2)

inst_78223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000000007f; valaddr_reg:x3; val_offset:234669*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234669*0 + 3*655*FLEN/8, x4, x1, x2)

inst_78224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000000000ff; valaddr_reg:x3; val_offset:234672*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234672*0 + 3*656*FLEN/8, x4, x1, x2)

inst_78225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000000001ff; valaddr_reg:x3; val_offset:234675*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234675*0 + 3*657*FLEN/8, x4, x1, x2)

inst_78226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000000003ff; valaddr_reg:x3; val_offset:234678*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234678*0 + 3*658*FLEN/8, x4, x1, x2)

inst_78227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000000007ff; valaddr_reg:x3; val_offset:234681*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234681*0 + 3*659*FLEN/8, x4, x1, x2)

inst_78228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000000fff; valaddr_reg:x3; val_offset:234684*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234684*0 + 3*660*FLEN/8, x4, x1, x2)

inst_78229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000001fff; valaddr_reg:x3; val_offset:234687*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234687*0 + 3*661*FLEN/8, x4, x1, x2)

inst_78230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000003fff; valaddr_reg:x3; val_offset:234690*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234690*0 + 3*662*FLEN/8, x4, x1, x2)

inst_78231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000007fff; valaddr_reg:x3; val_offset:234693*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234693*0 + 3*663*FLEN/8, x4, x1, x2)

inst_78232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000000ffff; valaddr_reg:x3; val_offset:234696*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234696*0 + 3*664*FLEN/8, x4, x1, x2)

inst_78233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000001ffff; valaddr_reg:x3; val_offset:234699*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234699*0 + 3*665*FLEN/8, x4, x1, x2)

inst_78234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000003ffff; valaddr_reg:x3; val_offset:234702*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234702*0 + 3*666*FLEN/8, x4, x1, x2)

inst_78235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000007ffff; valaddr_reg:x3; val_offset:234705*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234705*0 + 3*667*FLEN/8, x4, x1, x2)

inst_78236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000000fffff; valaddr_reg:x3; val_offset:234708*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234708*0 + 3*668*FLEN/8, x4, x1, x2)

inst_78237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000001fffff; valaddr_reg:x3; val_offset:234711*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234711*0 + 3*669*FLEN/8, x4, x1, x2)

inst_78238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000003fffff; valaddr_reg:x3; val_offset:234714*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234714*0 + 3*670*FLEN/8, x4, x1, x2)

inst_78239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000007fffff; valaddr_reg:x3; val_offset:234717*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234717*0 + 3*671*FLEN/8, x4, x1, x2)

inst_78240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000000ffffff; valaddr_reg:x3; val_offset:234720*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234720*0 + 3*672*FLEN/8, x4, x1, x2)

inst_78241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000001ffffff; valaddr_reg:x3; val_offset:234723*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234723*0 + 3*673*FLEN/8, x4, x1, x2)

inst_78242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000003ffffff; valaddr_reg:x3; val_offset:234726*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234726*0 + 3*674*FLEN/8, x4, x1, x2)

inst_78243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000007ffffff; valaddr_reg:x3; val_offset:234729*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234729*0 + 3*675*FLEN/8, x4, x1, x2)

inst_78244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000000fffffff; valaddr_reg:x3; val_offset:234732*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234732*0 + 3*676*FLEN/8, x4, x1, x2)

inst_78245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000001fffffff; valaddr_reg:x3; val_offset:234735*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234735*0 + 3*677*FLEN/8, x4, x1, x2)

inst_78246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000003fffffff; valaddr_reg:x3; val_offset:234738*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234738*0 + 3*678*FLEN/8, x4, x1, x2)

inst_78247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000007fffffff; valaddr_reg:x3; val_offset:234741*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234741*0 + 3*679*FLEN/8, x4, x1, x2)

inst_78248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800000ffffffff; valaddr_reg:x3; val_offset:234744*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234744*0 + 3*680*FLEN/8, x4, x1, x2)

inst_78249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800001ffffffff; valaddr_reg:x3; val_offset:234747*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234747*0 + 3*681*FLEN/8, x4, x1, x2)

inst_78250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800003ffffffff; valaddr_reg:x3; val_offset:234750*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234750*0 + 3*682*FLEN/8, x4, x1, x2)

inst_78251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800007ffffffff; valaddr_reg:x3; val_offset:234753*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234753*0 + 3*683*FLEN/8, x4, x1, x2)

inst_78252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80000fffffffff; valaddr_reg:x3; val_offset:234756*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234756*0 + 3*684*FLEN/8, x4, x1, x2)

inst_78253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80001fffffffff; valaddr_reg:x3; val_offset:234759*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234759*0 + 3*685*FLEN/8, x4, x1, x2)

inst_78254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80003fffffffff; valaddr_reg:x3; val_offset:234762*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234762*0 + 3*686*FLEN/8, x4, x1, x2)

inst_78255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80007fffffffff; valaddr_reg:x3; val_offset:234765*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234765*0 + 3*687*FLEN/8, x4, x1, x2)

inst_78256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8000ffffffffff; valaddr_reg:x3; val_offset:234768*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234768*0 + 3*688*FLEN/8, x4, x1, x2)

inst_78257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8001ffffffffff; valaddr_reg:x3; val_offset:234771*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234771*0 + 3*689*FLEN/8, x4, x1, x2)

inst_78258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8003ffffffffff; valaddr_reg:x3; val_offset:234774*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234774*0 + 3*690*FLEN/8, x4, x1, x2)

inst_78259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8007ffffffffff; valaddr_reg:x3; val_offset:234777*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234777*0 + 3*691*FLEN/8, x4, x1, x2)

inst_78260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb800fffffffffff; valaddr_reg:x3; val_offset:234780*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234780*0 + 3*692*FLEN/8, x4, x1, x2)

inst_78261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb801fffffffffff; valaddr_reg:x3; val_offset:234783*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234783*0 + 3*693*FLEN/8, x4, x1, x2)

inst_78262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb803fffffffffff; valaddr_reg:x3; val_offset:234786*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234786*0 + 3*694*FLEN/8, x4, x1, x2)

inst_78263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb807fffffffffff; valaddr_reg:x3; val_offset:234789*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234789*0 + 3*695*FLEN/8, x4, x1, x2)

inst_78264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb80ffffffffffff; valaddr_reg:x3; val_offset:234792*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234792*0 + 3*696*FLEN/8, x4, x1, x2)

inst_78265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb81ffffffffffff; valaddr_reg:x3; val_offset:234795*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234795*0 + 3*697*FLEN/8, x4, x1, x2)

inst_78266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb83ffffffffffff; valaddr_reg:x3; val_offset:234798*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234798*0 + 3*698*FLEN/8, x4, x1, x2)

inst_78267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb87ffffffffffff; valaddr_reg:x3; val_offset:234801*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234801*0 + 3*699*FLEN/8, x4, x1, x2)

inst_78268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb88000000000000; valaddr_reg:x3; val_offset:234804*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234804*0 + 3*700*FLEN/8, x4, x1, x2)

inst_78269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8c000000000000; valaddr_reg:x3; val_offset:234807*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234807*0 + 3*701*FLEN/8, x4, x1, x2)

inst_78270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8e000000000000; valaddr_reg:x3; val_offset:234810*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234810*0 + 3*702*FLEN/8, x4, x1, x2)

inst_78271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8f000000000000; valaddr_reg:x3; val_offset:234813*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234813*0 + 3*703*FLEN/8, x4, x1, x2)

inst_78272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8f800000000000; valaddr_reg:x3; val_offset:234816*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234816*0 + 3*704*FLEN/8, x4, x1, x2)

inst_78273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fc00000000000; valaddr_reg:x3; val_offset:234819*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234819*0 + 3*705*FLEN/8, x4, x1, x2)

inst_78274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fe00000000000; valaddr_reg:x3; val_offset:234822*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234822*0 + 3*706*FLEN/8, x4, x1, x2)

inst_78275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ff00000000000; valaddr_reg:x3; val_offset:234825*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234825*0 + 3*707*FLEN/8, x4, x1, x2)

inst_78276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ff80000000000; valaddr_reg:x3; val_offset:234828*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234828*0 + 3*708*FLEN/8, x4, x1, x2)

inst_78277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffc0000000000; valaddr_reg:x3; val_offset:234831*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234831*0 + 3*709*FLEN/8, x4, x1, x2)

inst_78278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffe0000000000; valaddr_reg:x3; val_offset:234834*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234834*0 + 3*710*FLEN/8, x4, x1, x2)

inst_78279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fff0000000000; valaddr_reg:x3; val_offset:234837*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234837*0 + 3*711*FLEN/8, x4, x1, x2)

inst_78280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fff8000000000; valaddr_reg:x3; val_offset:234840*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234840*0 + 3*712*FLEN/8, x4, x1, x2)

inst_78281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffc000000000; valaddr_reg:x3; val_offset:234843*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234843*0 + 3*713*FLEN/8, x4, x1, x2)

inst_78282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffe000000000; valaddr_reg:x3; val_offset:234846*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234846*0 + 3*714*FLEN/8, x4, x1, x2)

inst_78283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffff000000000; valaddr_reg:x3; val_offset:234849*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234849*0 + 3*715*FLEN/8, x4, x1, x2)

inst_78284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffff800000000; valaddr_reg:x3; val_offset:234852*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234852*0 + 3*716*FLEN/8, x4, x1, x2)

inst_78285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffc00000000; valaddr_reg:x3; val_offset:234855*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234855*0 + 3*717*FLEN/8, x4, x1, x2)

inst_78286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffe00000000; valaddr_reg:x3; val_offset:234858*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234858*0 + 3*718*FLEN/8, x4, x1, x2)

inst_78287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffff00000000; valaddr_reg:x3; val_offset:234861*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234861*0 + 3*719*FLEN/8, x4, x1, x2)

inst_78288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffff80000000; valaddr_reg:x3; val_offset:234864*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234864*0 + 3*720*FLEN/8, x4, x1, x2)

inst_78289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffc0000000; valaddr_reg:x3; val_offset:234867*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234867*0 + 3*721*FLEN/8, x4, x1, x2)

inst_78290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffe0000000; valaddr_reg:x3; val_offset:234870*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234870*0 + 3*722*FLEN/8, x4, x1, x2)

inst_78291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffff0000000; valaddr_reg:x3; val_offset:234873*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234873*0 + 3*723*FLEN/8, x4, x1, x2)

inst_78292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffff8000000; valaddr_reg:x3; val_offset:234876*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234876*0 + 3*724*FLEN/8, x4, x1, x2)

inst_78293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffc000000; valaddr_reg:x3; val_offset:234879*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234879*0 + 3*725*FLEN/8, x4, x1, x2)

inst_78294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffe000000; valaddr_reg:x3; val_offset:234882*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234882*0 + 3*726*FLEN/8, x4, x1, x2)

inst_78295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffff000000; valaddr_reg:x3; val_offset:234885*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234885*0 + 3*727*FLEN/8, x4, x1, x2)

inst_78296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffff800000; valaddr_reg:x3; val_offset:234888*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234888*0 + 3*728*FLEN/8, x4, x1, x2)

inst_78297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffc00000; valaddr_reg:x3; val_offset:234891*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234891*0 + 3*729*FLEN/8, x4, x1, x2)

inst_78298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffe00000; valaddr_reg:x3; val_offset:234894*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234894*0 + 3*730*FLEN/8, x4, x1, x2)

inst_78299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffff00000; valaddr_reg:x3; val_offset:234897*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234897*0 + 3*731*FLEN/8, x4, x1, x2)

inst_78300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffff80000; valaddr_reg:x3; val_offset:234900*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234900*0 + 3*732*FLEN/8, x4, x1, x2)

inst_78301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffc0000; valaddr_reg:x3; val_offset:234903*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234903*0 + 3*733*FLEN/8, x4, x1, x2)

inst_78302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffe0000; valaddr_reg:x3; val_offset:234906*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234906*0 + 3*734*FLEN/8, x4, x1, x2)

inst_78303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffff0000; valaddr_reg:x3; val_offset:234909*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234909*0 + 3*735*FLEN/8, x4, x1, x2)

inst_78304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffff8000; valaddr_reg:x3; val_offset:234912*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234912*0 + 3*736*FLEN/8, x4, x1, x2)

inst_78305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffc000; valaddr_reg:x3; val_offset:234915*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234915*0 + 3*737*FLEN/8, x4, x1, x2)

inst_78306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffe000; valaddr_reg:x3; val_offset:234918*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234918*0 + 3*738*FLEN/8, x4, x1, x2)

inst_78307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffff000; valaddr_reg:x3; val_offset:234921*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234921*0 + 3*739*FLEN/8, x4, x1, x2)

inst_78308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffff800; valaddr_reg:x3; val_offset:234924*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234924*0 + 3*740*FLEN/8, x4, x1, x2)

inst_78309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffc00; valaddr_reg:x3; val_offset:234927*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234927*0 + 3*741*FLEN/8, x4, x1, x2)

inst_78310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffe00; valaddr_reg:x3; val_offset:234930*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234930*0 + 3*742*FLEN/8, x4, x1, x2)

inst_78311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffff00; valaddr_reg:x3; val_offset:234933*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234933*0 + 3*743*FLEN/8, x4, x1, x2)

inst_78312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffff80; valaddr_reg:x3; val_offset:234936*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234936*0 + 3*744*FLEN/8, x4, x1, x2)

inst_78313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffffc0; valaddr_reg:x3; val_offset:234939*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234939*0 + 3*745*FLEN/8, x4, x1, x2)

inst_78314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffffe0; valaddr_reg:x3; val_offset:234942*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234942*0 + 3*746*FLEN/8, x4, x1, x2)

inst_78315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffff0; valaddr_reg:x3; val_offset:234945*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234945*0 + 3*747*FLEN/8, x4, x1, x2)

inst_78316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffff8; valaddr_reg:x3; val_offset:234948*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234948*0 + 3*748*FLEN/8, x4, x1, x2)

inst_78317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffffc; valaddr_reg:x3; val_offset:234951*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234951*0 + 3*749*FLEN/8, x4, x1, x2)

inst_78318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8ffffffffffffe; valaddr_reg:x3; val_offset:234954*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234954*0 + 3*750*FLEN/8, x4, x1, x2)

inst_78319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3b8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbb8fffffffffffff; valaddr_reg:x3; val_offset:234957*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234957*0 + 3*751*FLEN/8, x4, x1, x2)

inst_78320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:234960*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234960*0 + 3*752*FLEN/8, x4, x1, x2)

inst_78321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:234963*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234963*0 + 3*753*FLEN/8, x4, x1, x2)

inst_78322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:234966*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234966*0 + 3*754*FLEN/8, x4, x1, x2)

inst_78323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:234969*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234969*0 + 3*755*FLEN/8, x4, x1, x2)

inst_78324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:234972*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234972*0 + 3*756*FLEN/8, x4, x1, x2)

inst_78325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:234975*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234975*0 + 3*757*FLEN/8, x4, x1, x2)

inst_78326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:234978*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234978*0 + 3*758*FLEN/8, x4, x1, x2)

inst_78327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:234981*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234981*0 + 3*759*FLEN/8, x4, x1, x2)

inst_78328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:234984*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234984*0 + 3*760*FLEN/8, x4, x1, x2)

inst_78329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:234987*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234987*0 + 3*761*FLEN/8, x4, x1, x2)

inst_78330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:234990*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234990*0 + 3*762*FLEN/8, x4, x1, x2)

inst_78331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:234993*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234993*0 + 3*763*FLEN/8, x4, x1, x2)

inst_78332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:234996*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234996*0 + 3*764*FLEN/8, x4, x1, x2)

inst_78333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:234999*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 234999*0 + 3*765*FLEN/8, x4, x1, x2)

inst_78334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:235002*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235002*0 + 3*766*FLEN/8, x4, x1, x2)

inst_78335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x81d06dbc53f22 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x53ba72f4e33f2 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa81d06dbc53f22; op2val:0x9fc53ba72f4e33f2;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:235005*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 235005*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983624766390272,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625034825728,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625169043456,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625236152320,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625269706752,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625286483968,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625294872576,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625299066880,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625301164032,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302212608,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302736896,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625302999040,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303130112,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303195648,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303228416,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303244800,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303252992,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303257088,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303259136,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260160,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260672,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303260928,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261056,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261120,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261152,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261168,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261176,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261180,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261182,64,FLEN)
NAN_BOXED(6892747524101345090,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9362983625303261183,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783040,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783041,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783043,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783047,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783055,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783071,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783103,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783167,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783295,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837783551,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837784063,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837785087,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837787135,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837791231,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837799423,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837815807,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837848575,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885837914111,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885838045183,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885838307327,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885838831615,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885839880191,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885841977343,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885846171647,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885854560255,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885871337471,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885904891903,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762885972000767,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762886106218495,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762886374653951,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762886911524863,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762887985266687,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762890132750335,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762894427717631,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762903017652223,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762920197521407,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465762954557259775,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465763023276736511,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465763160715689983,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465763435593596927,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465763985349410815,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465765084861038591,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465767283884294143,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465771681930805247,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465780478023827455,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465798070209871871,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465833254581960703,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13465903623326138367,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13466044360814493695,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13466325835791204351,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13466888785744625663,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13468014685651468287,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13468014685651468288,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13469140585558310912,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13469703535511732224,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13469985010488442880,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470125747976798208,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470196116720975872,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470231301093064704,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470248893279109120,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470257689372131328,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470262087418642432,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470264286441897984,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470265385953525760,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470265935709339648,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266210587246592,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266348026200064,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266416745676800,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266451105415168,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266468285284352,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266476875218944,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266481170186240,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266483317669888,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266484391411712,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266484928282624,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485196718080,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485330935808,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485398044672,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485431599104,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485448376320,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485456764928,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485460959232,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485463056384,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485464104960,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485464629248,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485464891392,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465022464,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465088000,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465120768,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465137152,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465145344,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465149440,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465151488,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465152512,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153024,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153280,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153408,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153472,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153504,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153520,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153528,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153532,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153534,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13470266485465153535,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892749906531209141,64,FLEN)
NAN_BOXED(11512710146140604069,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556224,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556225,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556227,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556231,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556239,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556255,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556287,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556351,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556479,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556735,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029557247,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029558271,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029560319,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029564415,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029572607,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029588991,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029621759,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029687295,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029818367,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030080511,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030604799,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629031653375,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629033750527,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629037944831,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629046333439,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629063110655,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629096665087,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629163773951,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629297991679,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629566427135,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947630103298047,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947631177039871,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947633324523519,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947637619490815,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947646209425407,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947663389294591,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947697749032959,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947766468509695,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947903907463167,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948178785370111,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948728541183999,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317949828052811775,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317952027076067327,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317956425122578431,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317965221215600639,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317982813401645055,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318017997773733887,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318088366517911551,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318229104006266879,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318510578982977535,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9319073528936398847,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241471,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241472,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321325328750084096,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321888278703505408,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322169753680216064,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322310491168571392,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322380859912749056,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322416044284837888,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322433636470882304,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322442432563904512,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322446830610415616,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322449029633671168,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450129145298944,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450678901112832,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450953779019776,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451091217973248,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451159937449984,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451194297188352,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451211477057536,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451220066992128,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451224361959424,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451226509443072,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451227583184896,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228120055808,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228388491264,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228522708992,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228589817856,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228623372288,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228640149504,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228648538112,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228652732416,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228654829568,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228655878144,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656402432,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656664576,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656795648,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656861184,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656893952,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656910336,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656918528,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656922624,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656924672,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656925696,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926208,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926464,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926592,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926656,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926688,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926704,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926712,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926716,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926718,64,FLEN)
NAN_BOXED(6892755052024907427,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926719,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593472,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593473,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593475,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593479,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593487,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593503,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593535,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593599,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593727,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593983,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391594495,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391595519,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391597567,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391601663,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391609855,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391626239,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391659007,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391724543,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391855615,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392117759,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197392642047,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197393690623,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197395787775,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197399982079,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197408370687,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197425147903,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197458702335,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197525811199,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197660028927,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197928464383,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525198465335295,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525199539077119,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525201686560767,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525205981528063,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525214571462655,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525231751331839,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525266111070207,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525334830546943,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525472269500415,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525747147407359,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31526296903221247,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31527396414849023,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31529595438104575,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31533993484615679,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31542789577637887,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31560381763682303,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31595566135771135,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31665934879948799,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31806672368304127,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32088147345014783,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32651097298436095,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278719,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33776997205278720,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34902897112121344,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35465847065542656,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35747322042253312,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35888059530608640,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35958428274786304,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35993612646875136,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36011204832919552,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36020000925941760,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36024398972452864,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36026597995708416,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36027697507336192,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028247263150080,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028522141057024,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028659580010496,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028728299487232,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028762659225600,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028779839094784,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028788429029376,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028792723996672,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028794871480320,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028795945222144,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796482093056,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796750528512,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796884746240,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796951855104,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028796985409536,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797002186752,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797010575360,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797014769664,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797016866816,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797017915392,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018439680,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018701824,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018832896,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018898432,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018931200,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018947584,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018955776,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018959872,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018961920,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018962944,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963456,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963712,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963840,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963904,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963936,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963952,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963960,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963964,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963966,64,FLEN)
NAN_BOXED(6892774225436180775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963967,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370496,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370623,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370751,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371007,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627371519,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627372543,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627374591,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627378687,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627386879,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627403263,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627436031,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627501567,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627632639,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627894783,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599628419071,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599629467647,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599631564799,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599635759103,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599644147711,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599660924927,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599694479359,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599761588223,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599895805951,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600164241407,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503600701112319,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503601774854143,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503603922337791,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503608217305087,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503616807239679,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503633987108863,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503668346847231,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503737066323967,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503874505277439,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504149383184383,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4504699138998271,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4505798650626047,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4507997673881599,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4512395720392703,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4521191813414911,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4538783999459327,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4573968371548159,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4644337115725823,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4785074604081151,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5066549580791807,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5629499534213119,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055743,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6755399441055744,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7881299347898368,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8444249301319680,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8725724278030336,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8866461766385664,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8936830510563328,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8972014882652160,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8989607068696576,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8998403161718784,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9002801208229888,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9005000231485440,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006099743113216,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006649498927104,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9006924376834048,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007061815787520,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007130535264256,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007164895002624,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007182074871808,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007190664806400,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007194959773696,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007197107257344,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198180999168,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198717870080,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007198986305536,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199120523264,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199187632128,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199221186560,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199237963776,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199246352384,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199250546688,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199252643840,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199253692416,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254216704,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254478848,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254609920,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254675456,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254708224,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254724608,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254732800,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254736896,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254738944,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254739968,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740480,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740736,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740864,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892783935859473877,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740991,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971200,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971201,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971203,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971207,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971215,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971231,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971263,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971327,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971455,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001971711,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001972223,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001973247,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001975295,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001979391,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646001987583,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646002003967,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646002036735,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646002102271,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646002233343,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646002495487,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646003019775,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646004068351,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646006165503,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646010359807,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646018748415,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646035525631,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646069080063,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646136188927,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646270406655,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419646538842111,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419647075713023,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419648149454847,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419650296938495,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419654591905791,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419663181840383,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419680361709567,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419714721447935,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419783440924671,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278419920879878143,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278420195757785087,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278420745513598975,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278421845025226751,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278424044048482303,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278428442094993407,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278437238188015615,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278454830374060031,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278490014746148863,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278560383490326527,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278701120978681855,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4278982595955392511,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4279545545908813823,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4280671445815656447,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4280671445815656448,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4281797345722499072,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282360295675920384,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282641770652631040,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282782508140986368,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282852876885164032,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282888061257252864,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282905653443297280,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282914449536319488,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282918847582830592,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282921046606086144,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282922146117713920,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282922695873527808,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282922970751434752,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923108190388224,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923176909864960,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923211269603328,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923228449472512,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923237039407104,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923241334374400,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923243481858048,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923244555599872,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245092470784,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245360906240,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245495123968,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245562232832,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245595787264,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245612564480,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245620953088,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245625147392,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245627244544,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245628293120,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245628817408,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629079552,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629210624,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629276160,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629308928,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629325312,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629333504,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629337600,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629339648,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629340672,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341184,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341440,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341568,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341632,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341664,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341680,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341688,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341692,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341694,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4282923245629341695,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6892789678167483932,64,FLEN)
NAN_BOXED(2320828064102323902,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488000,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488001,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488003,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488007,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488015,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488031,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488063,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488127,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488255,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111488511,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111489023,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111490047,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111492095,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111496191,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111504383,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111520767,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111553535,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111619071,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882111750143,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882112012287,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882112536575,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882113585151,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882115682303,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882119876607,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882128265215,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882145042431,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882178596863,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882245705727,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882379923455,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798882648358911,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798883185229823,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798884258971647,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798886406455295,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798890701422591,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798899291357183,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798916471226367,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510798950830964735,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510799019550441471,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510799156989394943,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510799431867301887,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510799981623115775,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510801081134743551,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510803280157999103,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510807678204510207,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510816474297532415,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510834066483576831,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510869250855665663,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13510939619599843327,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13511080357088198655,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13511361832064909311,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13511924782018330623,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13513050681925173247,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13513050681925173248,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13514176581832015872,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13514739531785437184,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515021006762147840,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515161744250503168,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515232112994680832,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515267297366769664,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515284889552814080,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515293685645836288,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515298083692347392,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515300282715602944,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515301382227230720,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515301931983044608,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302206860951552,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302344299905024,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302413019381760,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302447379120128,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302464558989312,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302473148923904,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302477443891200,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302479591374848,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302480665116672,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481201987584,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481470423040,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481604640768,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481671749632,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481705304064,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481722081280,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481730469888,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481734664192,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481736761344,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481737809920,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738334208,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738596352,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738727424,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738792960,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738825728,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738842112,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738850304,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738854400,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738856448,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738857472,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738857984,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858240,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858368,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858432,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858464,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858480,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858488,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858492,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858494,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13515302481738858495,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892791144984690466,64,FLEN)
NAN_BOXED(11512673611681772530,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
