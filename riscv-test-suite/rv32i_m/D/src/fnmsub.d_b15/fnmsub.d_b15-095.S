
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_72192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffff800; valaddr_reg:x3; val_offset:216576*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216576*0 + 3*0*FLEN/8, x4, x1, x2)

inst_72193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffc00; valaddr_reg:x3; val_offset:216579*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216579*0 + 3*1*FLEN/8, x4, x1, x2)

inst_72194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffe00; valaddr_reg:x3; val_offset:216582*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216582*0 + 3*2*FLEN/8, x4, x1, x2)

inst_72195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3fffffffffff00; valaddr_reg:x3; val_offset:216585*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216585*0 + 3*3*FLEN/8, x4, x1, x2)

inst_72196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3fffffffffff80; valaddr_reg:x3; val_offset:216588*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216588*0 + 3*4*FLEN/8, x4, x1, x2)

inst_72197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3fffffffffffc0; valaddr_reg:x3; val_offset:216591*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216591*0 + 3*5*FLEN/8, x4, x1, x2)

inst_72198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3fffffffffffe0; valaddr_reg:x3; val_offset:216594*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216594*0 + 3*6*FLEN/8, x4, x1, x2)

inst_72199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffff0; valaddr_reg:x3; val_offset:216597*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216597*0 + 3*7*FLEN/8, x4, x1, x2)

inst_72200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffff8; valaddr_reg:x3; val_offset:216600*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216600*0 + 3*8*FLEN/8, x4, x1, x2)

inst_72201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffffc; valaddr_reg:x3; val_offset:216603*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216603*0 + 3*9*FLEN/8, x4, x1, x2)

inst_72202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3ffffffffffffe; valaddr_reg:x3; val_offset:216606*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216606*0 + 3*10*FLEN/8, x4, x1, x2)

inst_72203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x64d40e98c152d and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa64d40e98c152d; op2val:0x0;
op3val:0x3fffffffffffff; valaddr_reg:x3; val_offset:216609*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216609*0 + 3*11*FLEN/8, x4, x1, x2)

inst_72204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:216612*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216612*0 + 3*12*FLEN/8, x4, x1, x2)

inst_72205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:216615*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216615*0 + 3*13*FLEN/8, x4, x1, x2)

inst_72206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:216618*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216618*0 + 3*14*FLEN/8, x4, x1, x2)

inst_72207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:216621*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216621*0 + 3*15*FLEN/8, x4, x1, x2)

inst_72208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:216624*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216624*0 + 3*16*FLEN/8, x4, x1, x2)

inst_72209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:216627*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216627*0 + 3*17*FLEN/8, x4, x1, x2)

inst_72210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:216630*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216630*0 + 3*18*FLEN/8, x4, x1, x2)

inst_72211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:216633*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216633*0 + 3*19*FLEN/8, x4, x1, x2)

inst_72212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:216636*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216636*0 + 3*20*FLEN/8, x4, x1, x2)

inst_72213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:216639*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216639*0 + 3*21*FLEN/8, x4, x1, x2)

inst_72214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:216642*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216642*0 + 3*22*FLEN/8, x4, x1, x2)

inst_72215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:216645*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216645*0 + 3*23*FLEN/8, x4, x1, x2)

inst_72216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:216648*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216648*0 + 3*24*FLEN/8, x4, x1, x2)

inst_72217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:216651*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216651*0 + 3*25*FLEN/8, x4, x1, x2)

inst_72218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:216654*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216654*0 + 3*26*FLEN/8, x4, x1, x2)

inst_72219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:216657*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216657*0 + 3*27*FLEN/8, x4, x1, x2)

inst_72220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:216660*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216660*0 + 3*28*FLEN/8, x4, x1, x2)

inst_72221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:216663*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216663*0 + 3*29*FLEN/8, x4, x1, x2)

inst_72222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:216666*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216666*0 + 3*30*FLEN/8, x4, x1, x2)

inst_72223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:216669*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216669*0 + 3*31*FLEN/8, x4, x1, x2)

inst_72224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:216672*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216672*0 + 3*32*FLEN/8, x4, x1, x2)

inst_72225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:216675*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216675*0 + 3*33*FLEN/8, x4, x1, x2)

inst_72226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000000000; valaddr_reg:x3; val_offset:216678*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216678*0 + 3*34*FLEN/8, x4, x1, x2)

inst_72227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000000001; valaddr_reg:x3; val_offset:216681*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216681*0 + 3*35*FLEN/8, x4, x1, x2)

inst_72228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000000003; valaddr_reg:x3; val_offset:216684*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216684*0 + 3*36*FLEN/8, x4, x1, x2)

inst_72229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000000007; valaddr_reg:x3; val_offset:216687*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216687*0 + 3*37*FLEN/8, x4, x1, x2)

inst_72230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000000000f; valaddr_reg:x3; val_offset:216690*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216690*0 + 3*38*FLEN/8, x4, x1, x2)

inst_72231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000000001f; valaddr_reg:x3; val_offset:216693*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216693*0 + 3*39*FLEN/8, x4, x1, x2)

inst_72232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000000003f; valaddr_reg:x3; val_offset:216696*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216696*0 + 3*40*FLEN/8, x4, x1, x2)

inst_72233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000000007f; valaddr_reg:x3; val_offset:216699*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216699*0 + 3*41*FLEN/8, x4, x1, x2)

inst_72234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000000000ff; valaddr_reg:x3; val_offset:216702*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216702*0 + 3*42*FLEN/8, x4, x1, x2)

inst_72235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000000001ff; valaddr_reg:x3; val_offset:216705*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216705*0 + 3*43*FLEN/8, x4, x1, x2)

inst_72236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000000003ff; valaddr_reg:x3; val_offset:216708*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216708*0 + 3*44*FLEN/8, x4, x1, x2)

inst_72237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000000007ff; valaddr_reg:x3; val_offset:216711*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216711*0 + 3*45*FLEN/8, x4, x1, x2)

inst_72238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000000fff; valaddr_reg:x3; val_offset:216714*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216714*0 + 3*46*FLEN/8, x4, x1, x2)

inst_72239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000001fff; valaddr_reg:x3; val_offset:216717*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216717*0 + 3*47*FLEN/8, x4, x1, x2)

inst_72240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000003fff; valaddr_reg:x3; val_offset:216720*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216720*0 + 3*48*FLEN/8, x4, x1, x2)

inst_72241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000007fff; valaddr_reg:x3; val_offset:216723*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216723*0 + 3*49*FLEN/8, x4, x1, x2)

inst_72242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000000ffff; valaddr_reg:x3; val_offset:216726*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216726*0 + 3*50*FLEN/8, x4, x1, x2)

inst_72243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000001ffff; valaddr_reg:x3; val_offset:216729*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216729*0 + 3*51*FLEN/8, x4, x1, x2)

inst_72244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000003ffff; valaddr_reg:x3; val_offset:216732*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216732*0 + 3*52*FLEN/8, x4, x1, x2)

inst_72245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000007ffff; valaddr_reg:x3; val_offset:216735*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216735*0 + 3*53*FLEN/8, x4, x1, x2)

inst_72246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000000fffff; valaddr_reg:x3; val_offset:216738*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216738*0 + 3*54*FLEN/8, x4, x1, x2)

inst_72247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000001fffff; valaddr_reg:x3; val_offset:216741*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216741*0 + 3*55*FLEN/8, x4, x1, x2)

inst_72248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000003fffff; valaddr_reg:x3; val_offset:216744*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216744*0 + 3*56*FLEN/8, x4, x1, x2)

inst_72249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000007fffff; valaddr_reg:x3; val_offset:216747*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216747*0 + 3*57*FLEN/8, x4, x1, x2)

inst_72250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000000ffffff; valaddr_reg:x3; val_offset:216750*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216750*0 + 3*58*FLEN/8, x4, x1, x2)

inst_72251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000001ffffff; valaddr_reg:x3; val_offset:216753*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216753*0 + 3*59*FLEN/8, x4, x1, x2)

inst_72252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000003ffffff; valaddr_reg:x3; val_offset:216756*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216756*0 + 3*60*FLEN/8, x4, x1, x2)

inst_72253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000007ffffff; valaddr_reg:x3; val_offset:216759*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216759*0 + 3*61*FLEN/8, x4, x1, x2)

inst_72254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000000fffffff; valaddr_reg:x3; val_offset:216762*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216762*0 + 3*62*FLEN/8, x4, x1, x2)

inst_72255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000001fffffff; valaddr_reg:x3; val_offset:216765*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216765*0 + 3*63*FLEN/8, x4, x1, x2)

inst_72256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000003fffffff; valaddr_reg:x3; val_offset:216768*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216768*0 + 3*64*FLEN/8, x4, x1, x2)

inst_72257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000007fffffff; valaddr_reg:x3; val_offset:216771*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216771*0 + 3*65*FLEN/8, x4, x1, x2)

inst_72258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500000ffffffff; valaddr_reg:x3; val_offset:216774*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216774*0 + 3*66*FLEN/8, x4, x1, x2)

inst_72259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500001ffffffff; valaddr_reg:x3; val_offset:216777*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216777*0 + 3*67*FLEN/8, x4, x1, x2)

inst_72260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500003ffffffff; valaddr_reg:x3; val_offset:216780*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216780*0 + 3*68*FLEN/8, x4, x1, x2)

inst_72261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500007ffffffff; valaddr_reg:x3; val_offset:216783*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216783*0 + 3*69*FLEN/8, x4, x1, x2)

inst_72262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350000fffffffff; valaddr_reg:x3; val_offset:216786*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216786*0 + 3*70*FLEN/8, x4, x1, x2)

inst_72263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350001fffffffff; valaddr_reg:x3; val_offset:216789*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216789*0 + 3*71*FLEN/8, x4, x1, x2)

inst_72264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350003fffffffff; valaddr_reg:x3; val_offset:216792*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216792*0 + 3*72*FLEN/8, x4, x1, x2)

inst_72265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350007fffffffff; valaddr_reg:x3; val_offset:216795*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216795*0 + 3*73*FLEN/8, x4, x1, x2)

inst_72266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35000ffffffffff; valaddr_reg:x3; val_offset:216798*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216798*0 + 3*74*FLEN/8, x4, x1, x2)

inst_72267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35001ffffffffff; valaddr_reg:x3; val_offset:216801*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216801*0 + 3*75*FLEN/8, x4, x1, x2)

inst_72268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35003ffffffffff; valaddr_reg:x3; val_offset:216804*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216804*0 + 3*76*FLEN/8, x4, x1, x2)

inst_72269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35007ffffffffff; valaddr_reg:x3; val_offset:216807*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216807*0 + 3*77*FLEN/8, x4, x1, x2)

inst_72270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3500fffffffffff; valaddr_reg:x3; val_offset:216810*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216810*0 + 3*78*FLEN/8, x4, x1, x2)

inst_72271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3501fffffffffff; valaddr_reg:x3; val_offset:216813*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216813*0 + 3*79*FLEN/8, x4, x1, x2)

inst_72272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3503fffffffffff; valaddr_reg:x3; val_offset:216816*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216816*0 + 3*80*FLEN/8, x4, x1, x2)

inst_72273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x3507fffffffffff; valaddr_reg:x3; val_offset:216819*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216819*0 + 3*81*FLEN/8, x4, x1, x2)

inst_72274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x350ffffffffffff; valaddr_reg:x3; val_offset:216822*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216822*0 + 3*82*FLEN/8, x4, x1, x2)

inst_72275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x351ffffffffffff; valaddr_reg:x3; val_offset:216825*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216825*0 + 3*83*FLEN/8, x4, x1, x2)

inst_72276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x353ffffffffffff; valaddr_reg:x3; val_offset:216828*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216828*0 + 3*84*FLEN/8, x4, x1, x2)

inst_72277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x357ffffffffffff; valaddr_reg:x3; val_offset:216831*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216831*0 + 3*85*FLEN/8, x4, x1, x2)

inst_72278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x358000000000000; valaddr_reg:x3; val_offset:216834*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216834*0 + 3*86*FLEN/8, x4, x1, x2)

inst_72279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35c000000000000; valaddr_reg:x3; val_offset:216837*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216837*0 + 3*87*FLEN/8, x4, x1, x2)

inst_72280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35e000000000000; valaddr_reg:x3; val_offset:216840*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216840*0 + 3*88*FLEN/8, x4, x1, x2)

inst_72281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35f000000000000; valaddr_reg:x3; val_offset:216843*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216843*0 + 3*89*FLEN/8, x4, x1, x2)

inst_72282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35f800000000000; valaddr_reg:x3; val_offset:216846*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216846*0 + 3*90*FLEN/8, x4, x1, x2)

inst_72283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fc00000000000; valaddr_reg:x3; val_offset:216849*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216849*0 + 3*91*FLEN/8, x4, x1, x2)

inst_72284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fe00000000000; valaddr_reg:x3; val_offset:216852*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216852*0 + 3*92*FLEN/8, x4, x1, x2)

inst_72285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ff00000000000; valaddr_reg:x3; val_offset:216855*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216855*0 + 3*93*FLEN/8, x4, x1, x2)

inst_72286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ff80000000000; valaddr_reg:x3; val_offset:216858*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216858*0 + 3*94*FLEN/8, x4, x1, x2)

inst_72287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffc0000000000; valaddr_reg:x3; val_offset:216861*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216861*0 + 3*95*FLEN/8, x4, x1, x2)

inst_72288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffe0000000000; valaddr_reg:x3; val_offset:216864*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216864*0 + 3*96*FLEN/8, x4, x1, x2)

inst_72289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fff0000000000; valaddr_reg:x3; val_offset:216867*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216867*0 + 3*97*FLEN/8, x4, x1, x2)

inst_72290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fff8000000000; valaddr_reg:x3; val_offset:216870*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216870*0 + 3*98*FLEN/8, x4, x1, x2)

inst_72291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffc000000000; valaddr_reg:x3; val_offset:216873*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216873*0 + 3*99*FLEN/8, x4, x1, x2)

inst_72292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffe000000000; valaddr_reg:x3; val_offset:216876*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216876*0 + 3*100*FLEN/8, x4, x1, x2)

inst_72293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffff000000000; valaddr_reg:x3; val_offset:216879*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216879*0 + 3*101*FLEN/8, x4, x1, x2)

inst_72294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffff800000000; valaddr_reg:x3; val_offset:216882*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216882*0 + 3*102*FLEN/8, x4, x1, x2)

inst_72295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffc00000000; valaddr_reg:x3; val_offset:216885*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216885*0 + 3*103*FLEN/8, x4, x1, x2)

inst_72296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffe00000000; valaddr_reg:x3; val_offset:216888*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216888*0 + 3*104*FLEN/8, x4, x1, x2)

inst_72297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffff00000000; valaddr_reg:x3; val_offset:216891*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216891*0 + 3*105*FLEN/8, x4, x1, x2)

inst_72298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffff80000000; valaddr_reg:x3; val_offset:216894*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216894*0 + 3*106*FLEN/8, x4, x1, x2)

inst_72299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffc0000000; valaddr_reg:x3; val_offset:216897*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216897*0 + 3*107*FLEN/8, x4, x1, x2)

inst_72300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffe0000000; valaddr_reg:x3; val_offset:216900*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216900*0 + 3*108*FLEN/8, x4, x1, x2)

inst_72301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffff0000000; valaddr_reg:x3; val_offset:216903*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216903*0 + 3*109*FLEN/8, x4, x1, x2)

inst_72302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffff8000000; valaddr_reg:x3; val_offset:216906*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216906*0 + 3*110*FLEN/8, x4, x1, x2)

inst_72303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffc000000; valaddr_reg:x3; val_offset:216909*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216909*0 + 3*111*FLEN/8, x4, x1, x2)

inst_72304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffe000000; valaddr_reg:x3; val_offset:216912*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216912*0 + 3*112*FLEN/8, x4, x1, x2)

inst_72305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffff000000; valaddr_reg:x3; val_offset:216915*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216915*0 + 3*113*FLEN/8, x4, x1, x2)

inst_72306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffff800000; valaddr_reg:x3; val_offset:216918*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216918*0 + 3*114*FLEN/8, x4, x1, x2)

inst_72307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffc00000; valaddr_reg:x3; val_offset:216921*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216921*0 + 3*115*FLEN/8, x4, x1, x2)

inst_72308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffe00000; valaddr_reg:x3; val_offset:216924*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216924*0 + 3*116*FLEN/8, x4, x1, x2)

inst_72309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffff00000; valaddr_reg:x3; val_offset:216927*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216927*0 + 3*117*FLEN/8, x4, x1, x2)

inst_72310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffff80000; valaddr_reg:x3; val_offset:216930*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216930*0 + 3*118*FLEN/8, x4, x1, x2)

inst_72311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffc0000; valaddr_reg:x3; val_offset:216933*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216933*0 + 3*119*FLEN/8, x4, x1, x2)

inst_72312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffe0000; valaddr_reg:x3; val_offset:216936*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216936*0 + 3*120*FLEN/8, x4, x1, x2)

inst_72313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffff0000; valaddr_reg:x3; val_offset:216939*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216939*0 + 3*121*FLEN/8, x4, x1, x2)

inst_72314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffff8000; valaddr_reg:x3; val_offset:216942*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216942*0 + 3*122*FLEN/8, x4, x1, x2)

inst_72315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffc000; valaddr_reg:x3; val_offset:216945*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216945*0 + 3*123*FLEN/8, x4, x1, x2)

inst_72316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffe000; valaddr_reg:x3; val_offset:216948*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216948*0 + 3*124*FLEN/8, x4, x1, x2)

inst_72317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffff000; valaddr_reg:x3; val_offset:216951*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216951*0 + 3*125*FLEN/8, x4, x1, x2)

inst_72318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffff800; valaddr_reg:x3; val_offset:216954*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216954*0 + 3*126*FLEN/8, x4, x1, x2)

inst_72319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffc00; valaddr_reg:x3; val_offset:216957*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216957*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_72320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffe00; valaddr_reg:x3; val_offset:216960*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216960*0 + 3*128*FLEN/8, x4, x1, x2)

inst_72321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffff00; valaddr_reg:x3; val_offset:216963*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216963*0 + 3*129*FLEN/8, x4, x1, x2)

inst_72322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffff80; valaddr_reg:x3; val_offset:216966*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216966*0 + 3*130*FLEN/8, x4, x1, x2)

inst_72323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffffc0; valaddr_reg:x3; val_offset:216969*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216969*0 + 3*131*FLEN/8, x4, x1, x2)

inst_72324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffffe0; valaddr_reg:x3; val_offset:216972*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216972*0 + 3*132*FLEN/8, x4, x1, x2)

inst_72325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffff0; valaddr_reg:x3; val_offset:216975*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216975*0 + 3*133*FLEN/8, x4, x1, x2)

inst_72326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffff8; valaddr_reg:x3; val_offset:216978*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216978*0 + 3*134*FLEN/8, x4, x1, x2)

inst_72327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffffc; valaddr_reg:x3; val_offset:216981*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216981*0 + 3*135*FLEN/8, x4, x1, x2)

inst_72328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35ffffffffffffe; valaddr_reg:x3; val_offset:216984*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216984*0 + 3*136*FLEN/8, x4, x1, x2)

inst_72329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65b0fab714af6 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x035 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65b0fab714af6; op2val:0x0;
op3val:0x35fffffffffffff; valaddr_reg:x3; val_offset:216987*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216987*0 + 3*137*FLEN/8, x4, x1, x2)

inst_72330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:216990*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216990*0 + 3*138*FLEN/8, x4, x1, x2)

inst_72331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:216993*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216993*0 + 3*139*FLEN/8, x4, x1, x2)

inst_72332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:216996*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216996*0 + 3*140*FLEN/8, x4, x1, x2)

inst_72333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:216999*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 216999*0 + 3*141*FLEN/8, x4, x1, x2)

inst_72334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:217002*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217002*0 + 3*142*FLEN/8, x4, x1, x2)

inst_72335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:217005*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217005*0 + 3*143*FLEN/8, x4, x1, x2)

inst_72336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:217008*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217008*0 + 3*144*FLEN/8, x4, x1, x2)

inst_72337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:217011*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217011*0 + 3*145*FLEN/8, x4, x1, x2)

inst_72338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:217014*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217014*0 + 3*146*FLEN/8, x4, x1, x2)

inst_72339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:217017*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217017*0 + 3*147*FLEN/8, x4, x1, x2)

inst_72340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:217020*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217020*0 + 3*148*FLEN/8, x4, x1, x2)

inst_72341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:217023*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217023*0 + 3*149*FLEN/8, x4, x1, x2)

inst_72342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:217026*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217026*0 + 3*150*FLEN/8, x4, x1, x2)

inst_72343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:217029*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217029*0 + 3*151*FLEN/8, x4, x1, x2)

inst_72344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:217032*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217032*0 + 3*152*FLEN/8, x4, x1, x2)

inst_72345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:217035*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217035*0 + 3*153*FLEN/8, x4, x1, x2)

inst_72346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:217038*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217038*0 + 3*154*FLEN/8, x4, x1, x2)

inst_72347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:217041*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217041*0 + 3*155*FLEN/8, x4, x1, x2)

inst_72348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:217044*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217044*0 + 3*156*FLEN/8, x4, x1, x2)

inst_72349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:217047*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217047*0 + 3*157*FLEN/8, x4, x1, x2)

inst_72350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:217050*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217050*0 + 3*158*FLEN/8, x4, x1, x2)

inst_72351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:217053*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217053*0 + 3*159*FLEN/8, x4, x1, x2)

inst_72352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000000000; valaddr_reg:x3; val_offset:217056*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217056*0 + 3*160*FLEN/8, x4, x1, x2)

inst_72353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000000001; valaddr_reg:x3; val_offset:217059*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217059*0 + 3*161*FLEN/8, x4, x1, x2)

inst_72354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000000003; valaddr_reg:x3; val_offset:217062*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217062*0 + 3*162*FLEN/8, x4, x1, x2)

inst_72355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000000007; valaddr_reg:x3; val_offset:217065*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217065*0 + 3*163*FLEN/8, x4, x1, x2)

inst_72356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000000000f; valaddr_reg:x3; val_offset:217068*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217068*0 + 3*164*FLEN/8, x4, x1, x2)

inst_72357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000000001f; valaddr_reg:x3; val_offset:217071*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217071*0 + 3*165*FLEN/8, x4, x1, x2)

inst_72358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000000003f; valaddr_reg:x3; val_offset:217074*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217074*0 + 3*166*FLEN/8, x4, x1, x2)

inst_72359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000000007f; valaddr_reg:x3; val_offset:217077*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217077*0 + 3*167*FLEN/8, x4, x1, x2)

inst_72360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000000000ff; valaddr_reg:x3; val_offset:217080*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217080*0 + 3*168*FLEN/8, x4, x1, x2)

inst_72361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000000001ff; valaddr_reg:x3; val_offset:217083*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217083*0 + 3*169*FLEN/8, x4, x1, x2)

inst_72362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000000003ff; valaddr_reg:x3; val_offset:217086*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217086*0 + 3*170*FLEN/8, x4, x1, x2)

inst_72363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000000007ff; valaddr_reg:x3; val_offset:217089*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217089*0 + 3*171*FLEN/8, x4, x1, x2)

inst_72364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000000fff; valaddr_reg:x3; val_offset:217092*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217092*0 + 3*172*FLEN/8, x4, x1, x2)

inst_72365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000001fff; valaddr_reg:x3; val_offset:217095*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217095*0 + 3*173*FLEN/8, x4, x1, x2)

inst_72366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000003fff; valaddr_reg:x3; val_offset:217098*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217098*0 + 3*174*FLEN/8, x4, x1, x2)

inst_72367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000007fff; valaddr_reg:x3; val_offset:217101*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217101*0 + 3*175*FLEN/8, x4, x1, x2)

inst_72368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000000ffff; valaddr_reg:x3; val_offset:217104*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217104*0 + 3*176*FLEN/8, x4, x1, x2)

inst_72369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000001ffff; valaddr_reg:x3; val_offset:217107*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217107*0 + 3*177*FLEN/8, x4, x1, x2)

inst_72370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000003ffff; valaddr_reg:x3; val_offset:217110*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217110*0 + 3*178*FLEN/8, x4, x1, x2)

inst_72371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000007ffff; valaddr_reg:x3; val_offset:217113*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217113*0 + 3*179*FLEN/8, x4, x1, x2)

inst_72372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000000fffff; valaddr_reg:x3; val_offset:217116*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217116*0 + 3*180*FLEN/8, x4, x1, x2)

inst_72373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000001fffff; valaddr_reg:x3; val_offset:217119*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217119*0 + 3*181*FLEN/8, x4, x1, x2)

inst_72374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000003fffff; valaddr_reg:x3; val_offset:217122*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217122*0 + 3*182*FLEN/8, x4, x1, x2)

inst_72375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000007fffff; valaddr_reg:x3; val_offset:217125*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217125*0 + 3*183*FLEN/8, x4, x1, x2)

inst_72376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000000ffffff; valaddr_reg:x3; val_offset:217128*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217128*0 + 3*184*FLEN/8, x4, x1, x2)

inst_72377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000001ffffff; valaddr_reg:x3; val_offset:217131*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217131*0 + 3*185*FLEN/8, x4, x1, x2)

inst_72378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000003ffffff; valaddr_reg:x3; val_offset:217134*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217134*0 + 3*186*FLEN/8, x4, x1, x2)

inst_72379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000007ffffff; valaddr_reg:x3; val_offset:217137*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217137*0 + 3*187*FLEN/8, x4, x1, x2)

inst_72380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000000fffffff; valaddr_reg:x3; val_offset:217140*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217140*0 + 3*188*FLEN/8, x4, x1, x2)

inst_72381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000001fffffff; valaddr_reg:x3; val_offset:217143*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217143*0 + 3*189*FLEN/8, x4, x1, x2)

inst_72382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000003fffffff; valaddr_reg:x3; val_offset:217146*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217146*0 + 3*190*FLEN/8, x4, x1, x2)

inst_72383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000007fffffff; valaddr_reg:x3; val_offset:217149*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217149*0 + 3*191*FLEN/8, x4, x1, x2)

inst_72384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900000ffffffff; valaddr_reg:x3; val_offset:217152*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217152*0 + 3*192*FLEN/8, x4, x1, x2)

inst_72385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900001ffffffff; valaddr_reg:x3; val_offset:217155*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217155*0 + 3*193*FLEN/8, x4, x1, x2)

inst_72386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900003ffffffff; valaddr_reg:x3; val_offset:217158*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217158*0 + 3*194*FLEN/8, x4, x1, x2)

inst_72387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900007ffffffff; valaddr_reg:x3; val_offset:217161*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217161*0 + 3*195*FLEN/8, x4, x1, x2)

inst_72388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190000fffffffff; valaddr_reg:x3; val_offset:217164*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217164*0 + 3*196*FLEN/8, x4, x1, x2)

inst_72389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190001fffffffff; valaddr_reg:x3; val_offset:217167*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217167*0 + 3*197*FLEN/8, x4, x1, x2)

inst_72390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190003fffffffff; valaddr_reg:x3; val_offset:217170*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217170*0 + 3*198*FLEN/8, x4, x1, x2)

inst_72391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190007fffffffff; valaddr_reg:x3; val_offset:217173*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217173*0 + 3*199*FLEN/8, x4, x1, x2)

inst_72392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19000ffffffffff; valaddr_reg:x3; val_offset:217176*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217176*0 + 3*200*FLEN/8, x4, x1, x2)

inst_72393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19001ffffffffff; valaddr_reg:x3; val_offset:217179*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217179*0 + 3*201*FLEN/8, x4, x1, x2)

inst_72394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19003ffffffffff; valaddr_reg:x3; val_offset:217182*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217182*0 + 3*202*FLEN/8, x4, x1, x2)

inst_72395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19007ffffffffff; valaddr_reg:x3; val_offset:217185*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217185*0 + 3*203*FLEN/8, x4, x1, x2)

inst_72396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1900fffffffffff; valaddr_reg:x3; val_offset:217188*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217188*0 + 3*204*FLEN/8, x4, x1, x2)

inst_72397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1901fffffffffff; valaddr_reg:x3; val_offset:217191*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217191*0 + 3*205*FLEN/8, x4, x1, x2)

inst_72398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1903fffffffffff; valaddr_reg:x3; val_offset:217194*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217194*0 + 3*206*FLEN/8, x4, x1, x2)

inst_72399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x1907fffffffffff; valaddr_reg:x3; val_offset:217197*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217197*0 + 3*207*FLEN/8, x4, x1, x2)

inst_72400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x190ffffffffffff; valaddr_reg:x3; val_offset:217200*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217200*0 + 3*208*FLEN/8, x4, x1, x2)

inst_72401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x191ffffffffffff; valaddr_reg:x3; val_offset:217203*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217203*0 + 3*209*FLEN/8, x4, x1, x2)

inst_72402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x193ffffffffffff; valaddr_reg:x3; val_offset:217206*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217206*0 + 3*210*FLEN/8, x4, x1, x2)

inst_72403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x197ffffffffffff; valaddr_reg:x3; val_offset:217209*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217209*0 + 3*211*FLEN/8, x4, x1, x2)

inst_72404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x198000000000000; valaddr_reg:x3; val_offset:217212*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217212*0 + 3*212*FLEN/8, x4, x1, x2)

inst_72405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19c000000000000; valaddr_reg:x3; val_offset:217215*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217215*0 + 3*213*FLEN/8, x4, x1, x2)

inst_72406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19e000000000000; valaddr_reg:x3; val_offset:217218*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217218*0 + 3*214*FLEN/8, x4, x1, x2)

inst_72407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19f000000000000; valaddr_reg:x3; val_offset:217221*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217221*0 + 3*215*FLEN/8, x4, x1, x2)

inst_72408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19f800000000000; valaddr_reg:x3; val_offset:217224*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217224*0 + 3*216*FLEN/8, x4, x1, x2)

inst_72409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fc00000000000; valaddr_reg:x3; val_offset:217227*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217227*0 + 3*217*FLEN/8, x4, x1, x2)

inst_72410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fe00000000000; valaddr_reg:x3; val_offset:217230*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217230*0 + 3*218*FLEN/8, x4, x1, x2)

inst_72411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ff00000000000; valaddr_reg:x3; val_offset:217233*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217233*0 + 3*219*FLEN/8, x4, x1, x2)

inst_72412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ff80000000000; valaddr_reg:x3; val_offset:217236*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217236*0 + 3*220*FLEN/8, x4, x1, x2)

inst_72413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffc0000000000; valaddr_reg:x3; val_offset:217239*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217239*0 + 3*221*FLEN/8, x4, x1, x2)

inst_72414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffe0000000000; valaddr_reg:x3; val_offset:217242*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217242*0 + 3*222*FLEN/8, x4, x1, x2)

inst_72415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fff0000000000; valaddr_reg:x3; val_offset:217245*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217245*0 + 3*223*FLEN/8, x4, x1, x2)

inst_72416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fff8000000000; valaddr_reg:x3; val_offset:217248*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217248*0 + 3*224*FLEN/8, x4, x1, x2)

inst_72417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffc000000000; valaddr_reg:x3; val_offset:217251*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217251*0 + 3*225*FLEN/8, x4, x1, x2)

inst_72418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffe000000000; valaddr_reg:x3; val_offset:217254*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217254*0 + 3*226*FLEN/8, x4, x1, x2)

inst_72419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffff000000000; valaddr_reg:x3; val_offset:217257*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217257*0 + 3*227*FLEN/8, x4, x1, x2)

inst_72420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffff800000000; valaddr_reg:x3; val_offset:217260*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217260*0 + 3*228*FLEN/8, x4, x1, x2)

inst_72421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffc00000000; valaddr_reg:x3; val_offset:217263*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217263*0 + 3*229*FLEN/8, x4, x1, x2)

inst_72422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffe00000000; valaddr_reg:x3; val_offset:217266*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217266*0 + 3*230*FLEN/8, x4, x1, x2)

inst_72423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffff00000000; valaddr_reg:x3; val_offset:217269*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217269*0 + 3*231*FLEN/8, x4, x1, x2)

inst_72424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffff80000000; valaddr_reg:x3; val_offset:217272*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217272*0 + 3*232*FLEN/8, x4, x1, x2)

inst_72425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffc0000000; valaddr_reg:x3; val_offset:217275*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217275*0 + 3*233*FLEN/8, x4, x1, x2)

inst_72426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffe0000000; valaddr_reg:x3; val_offset:217278*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217278*0 + 3*234*FLEN/8, x4, x1, x2)

inst_72427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffff0000000; valaddr_reg:x3; val_offset:217281*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217281*0 + 3*235*FLEN/8, x4, x1, x2)

inst_72428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffff8000000; valaddr_reg:x3; val_offset:217284*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217284*0 + 3*236*FLEN/8, x4, x1, x2)

inst_72429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffc000000; valaddr_reg:x3; val_offset:217287*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217287*0 + 3*237*FLEN/8, x4, x1, x2)

inst_72430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffe000000; valaddr_reg:x3; val_offset:217290*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217290*0 + 3*238*FLEN/8, x4, x1, x2)

inst_72431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffff000000; valaddr_reg:x3; val_offset:217293*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217293*0 + 3*239*FLEN/8, x4, x1, x2)

inst_72432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffff800000; valaddr_reg:x3; val_offset:217296*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217296*0 + 3*240*FLEN/8, x4, x1, x2)

inst_72433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffc00000; valaddr_reg:x3; val_offset:217299*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217299*0 + 3*241*FLEN/8, x4, x1, x2)

inst_72434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffe00000; valaddr_reg:x3; val_offset:217302*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217302*0 + 3*242*FLEN/8, x4, x1, x2)

inst_72435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffff00000; valaddr_reg:x3; val_offset:217305*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217305*0 + 3*243*FLEN/8, x4, x1, x2)

inst_72436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffff80000; valaddr_reg:x3; val_offset:217308*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217308*0 + 3*244*FLEN/8, x4, x1, x2)

inst_72437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffc0000; valaddr_reg:x3; val_offset:217311*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217311*0 + 3*245*FLEN/8, x4, x1, x2)

inst_72438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffe0000; valaddr_reg:x3; val_offset:217314*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217314*0 + 3*246*FLEN/8, x4, x1, x2)

inst_72439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffff0000; valaddr_reg:x3; val_offset:217317*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217317*0 + 3*247*FLEN/8, x4, x1, x2)

inst_72440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffff8000; valaddr_reg:x3; val_offset:217320*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217320*0 + 3*248*FLEN/8, x4, x1, x2)

inst_72441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffc000; valaddr_reg:x3; val_offset:217323*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217323*0 + 3*249*FLEN/8, x4, x1, x2)

inst_72442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffe000; valaddr_reg:x3; val_offset:217326*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217326*0 + 3*250*FLEN/8, x4, x1, x2)

inst_72443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffff000; valaddr_reg:x3; val_offset:217329*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217329*0 + 3*251*FLEN/8, x4, x1, x2)

inst_72444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffff800; valaddr_reg:x3; val_offset:217332*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217332*0 + 3*252*FLEN/8, x4, x1, x2)

inst_72445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffc00; valaddr_reg:x3; val_offset:217335*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217335*0 + 3*253*FLEN/8, x4, x1, x2)

inst_72446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffe00; valaddr_reg:x3; val_offset:217338*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217338*0 + 3*254*FLEN/8, x4, x1, x2)

inst_72447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffff00; valaddr_reg:x3; val_offset:217341*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217341*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_72448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffff80; valaddr_reg:x3; val_offset:217344*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217344*0 + 3*256*FLEN/8, x4, x1, x2)

inst_72449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffffc0; valaddr_reg:x3; val_offset:217347*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217347*0 + 3*257*FLEN/8, x4, x1, x2)

inst_72450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffffe0; valaddr_reg:x3; val_offset:217350*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217350*0 + 3*258*FLEN/8, x4, x1, x2)

inst_72451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffff0; valaddr_reg:x3; val_offset:217353*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217353*0 + 3*259*FLEN/8, x4, x1, x2)

inst_72452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffff8; valaddr_reg:x3; val_offset:217356*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217356*0 + 3*260*FLEN/8, x4, x1, x2)

inst_72453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffffc; valaddr_reg:x3; val_offset:217359*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217359*0 + 3*261*FLEN/8, x4, x1, x2)

inst_72454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19ffffffffffffe; valaddr_reg:x3; val_offset:217362*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217362*0 + 3*262*FLEN/8, x4, x1, x2)

inst_72455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x65e78fb070388 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x019 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa65e78fb070388; op2val:0x0;
op3val:0x19fffffffffffff; valaddr_reg:x3; val_offset:217365*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217365*0 + 3*263*FLEN/8, x4, x1, x2)

inst_72456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:217368*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217368*0 + 3*264*FLEN/8, x4, x1, x2)

inst_72457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:217371*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217371*0 + 3*265*FLEN/8, x4, x1, x2)

inst_72458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:217374*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217374*0 + 3*266*FLEN/8, x4, x1, x2)

inst_72459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:217377*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217377*0 + 3*267*FLEN/8, x4, x1, x2)

inst_72460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:217380*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217380*0 + 3*268*FLEN/8, x4, x1, x2)

inst_72461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:217383*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217383*0 + 3*269*FLEN/8, x4, x1, x2)

inst_72462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:217386*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217386*0 + 3*270*FLEN/8, x4, x1, x2)

inst_72463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:217389*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217389*0 + 3*271*FLEN/8, x4, x1, x2)

inst_72464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:217392*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217392*0 + 3*272*FLEN/8, x4, x1, x2)

inst_72465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:217395*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217395*0 + 3*273*FLEN/8, x4, x1, x2)

inst_72466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:217398*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217398*0 + 3*274*FLEN/8, x4, x1, x2)

inst_72467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:217401*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217401*0 + 3*275*FLEN/8, x4, x1, x2)

inst_72468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:217404*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217404*0 + 3*276*FLEN/8, x4, x1, x2)

inst_72469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:217407*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217407*0 + 3*277*FLEN/8, x4, x1, x2)

inst_72470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:217410*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217410*0 + 3*278*FLEN/8, x4, x1, x2)

inst_72471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:217413*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217413*0 + 3*279*FLEN/8, x4, x1, x2)

inst_72472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:217416*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217416*0 + 3*280*FLEN/8, x4, x1, x2)

inst_72473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:217419*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217419*0 + 3*281*FLEN/8, x4, x1, x2)

inst_72474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:217422*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217422*0 + 3*282*FLEN/8, x4, x1, x2)

inst_72475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:217425*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217425*0 + 3*283*FLEN/8, x4, x1, x2)

inst_72476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:217428*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217428*0 + 3*284*FLEN/8, x4, x1, x2)

inst_72477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:217431*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217431*0 + 3*285*FLEN/8, x4, x1, x2)

inst_72478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000000000; valaddr_reg:x3; val_offset:217434*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217434*0 + 3*286*FLEN/8, x4, x1, x2)

inst_72479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000000001; valaddr_reg:x3; val_offset:217437*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217437*0 + 3*287*FLEN/8, x4, x1, x2)

inst_72480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000000003; valaddr_reg:x3; val_offset:217440*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217440*0 + 3*288*FLEN/8, x4, x1, x2)

inst_72481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000000007; valaddr_reg:x3; val_offset:217443*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217443*0 + 3*289*FLEN/8, x4, x1, x2)

inst_72482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000000000f; valaddr_reg:x3; val_offset:217446*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217446*0 + 3*290*FLEN/8, x4, x1, x2)

inst_72483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000000001f; valaddr_reg:x3; val_offset:217449*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217449*0 + 3*291*FLEN/8, x4, x1, x2)

inst_72484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000000003f; valaddr_reg:x3; val_offset:217452*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217452*0 + 3*292*FLEN/8, x4, x1, x2)

inst_72485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000000007f; valaddr_reg:x3; val_offset:217455*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217455*0 + 3*293*FLEN/8, x4, x1, x2)

inst_72486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000000000ff; valaddr_reg:x3; val_offset:217458*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217458*0 + 3*294*FLEN/8, x4, x1, x2)

inst_72487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000000001ff; valaddr_reg:x3; val_offset:217461*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217461*0 + 3*295*FLEN/8, x4, x1, x2)

inst_72488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000000003ff; valaddr_reg:x3; val_offset:217464*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217464*0 + 3*296*FLEN/8, x4, x1, x2)

inst_72489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000000007ff; valaddr_reg:x3; val_offset:217467*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217467*0 + 3*297*FLEN/8, x4, x1, x2)

inst_72490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000000fff; valaddr_reg:x3; val_offset:217470*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217470*0 + 3*298*FLEN/8, x4, x1, x2)

inst_72491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000001fff; valaddr_reg:x3; val_offset:217473*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217473*0 + 3*299*FLEN/8, x4, x1, x2)

inst_72492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000003fff; valaddr_reg:x3; val_offset:217476*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217476*0 + 3*300*FLEN/8, x4, x1, x2)

inst_72493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000007fff; valaddr_reg:x3; val_offset:217479*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217479*0 + 3*301*FLEN/8, x4, x1, x2)

inst_72494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000000ffff; valaddr_reg:x3; val_offset:217482*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217482*0 + 3*302*FLEN/8, x4, x1, x2)

inst_72495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000001ffff; valaddr_reg:x3; val_offset:217485*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217485*0 + 3*303*FLEN/8, x4, x1, x2)

inst_72496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000003ffff; valaddr_reg:x3; val_offset:217488*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217488*0 + 3*304*FLEN/8, x4, x1, x2)

inst_72497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000007ffff; valaddr_reg:x3; val_offset:217491*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217491*0 + 3*305*FLEN/8, x4, x1, x2)

inst_72498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000000fffff; valaddr_reg:x3; val_offset:217494*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217494*0 + 3*306*FLEN/8, x4, x1, x2)

inst_72499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000001fffff; valaddr_reg:x3; val_offset:217497*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217497*0 + 3*307*FLEN/8, x4, x1, x2)

inst_72500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000003fffff; valaddr_reg:x3; val_offset:217500*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217500*0 + 3*308*FLEN/8, x4, x1, x2)

inst_72501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000007fffff; valaddr_reg:x3; val_offset:217503*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217503*0 + 3*309*FLEN/8, x4, x1, x2)

inst_72502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000000ffffff; valaddr_reg:x3; val_offset:217506*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217506*0 + 3*310*FLEN/8, x4, x1, x2)

inst_72503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000001ffffff; valaddr_reg:x3; val_offset:217509*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217509*0 + 3*311*FLEN/8, x4, x1, x2)

inst_72504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000003ffffff; valaddr_reg:x3; val_offset:217512*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217512*0 + 3*312*FLEN/8, x4, x1, x2)

inst_72505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000007ffffff; valaddr_reg:x3; val_offset:217515*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217515*0 + 3*313*FLEN/8, x4, x1, x2)

inst_72506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000000fffffff; valaddr_reg:x3; val_offset:217518*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217518*0 + 3*314*FLEN/8, x4, x1, x2)

inst_72507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000001fffffff; valaddr_reg:x3; val_offset:217521*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217521*0 + 3*315*FLEN/8, x4, x1, x2)

inst_72508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000003fffffff; valaddr_reg:x3; val_offset:217524*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217524*0 + 3*316*FLEN/8, x4, x1, x2)

inst_72509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000007fffffff; valaddr_reg:x3; val_offset:217527*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217527*0 + 3*317*FLEN/8, x4, x1, x2)

inst_72510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00000ffffffff; valaddr_reg:x3; val_offset:217530*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217530*0 + 3*318*FLEN/8, x4, x1, x2)

inst_72511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00001ffffffff; valaddr_reg:x3; val_offset:217533*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217533*0 + 3*319*FLEN/8, x4, x1, x2)

inst_72512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00003ffffffff; valaddr_reg:x3; val_offset:217536*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217536*0 + 3*320*FLEN/8, x4, x1, x2)

inst_72513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00007ffffffff; valaddr_reg:x3; val_offset:217539*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217539*0 + 3*321*FLEN/8, x4, x1, x2)

inst_72514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0000fffffffff; valaddr_reg:x3; val_offset:217542*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217542*0 + 3*322*FLEN/8, x4, x1, x2)

inst_72515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0001fffffffff; valaddr_reg:x3; val_offset:217545*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217545*0 + 3*323*FLEN/8, x4, x1, x2)

inst_72516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0003fffffffff; valaddr_reg:x3; val_offset:217548*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217548*0 + 3*324*FLEN/8, x4, x1, x2)

inst_72517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0007fffffffff; valaddr_reg:x3; val_offset:217551*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217551*0 + 3*325*FLEN/8, x4, x1, x2)

inst_72518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e000ffffffffff; valaddr_reg:x3; val_offset:217554*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217554*0 + 3*326*FLEN/8, x4, x1, x2)

inst_72519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e001ffffffffff; valaddr_reg:x3; val_offset:217557*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217557*0 + 3*327*FLEN/8, x4, x1, x2)

inst_72520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e003ffffffffff; valaddr_reg:x3; val_offset:217560*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217560*0 + 3*328*FLEN/8, x4, x1, x2)

inst_72521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e007ffffffffff; valaddr_reg:x3; val_offset:217563*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217563*0 + 3*329*FLEN/8, x4, x1, x2)

inst_72522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e00fffffffffff; valaddr_reg:x3; val_offset:217566*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217566*0 + 3*330*FLEN/8, x4, x1, x2)

inst_72523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e01fffffffffff; valaddr_reg:x3; val_offset:217569*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217569*0 + 3*331*FLEN/8, x4, x1, x2)

inst_72524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e03fffffffffff; valaddr_reg:x3; val_offset:217572*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217572*0 + 3*332*FLEN/8, x4, x1, x2)

inst_72525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e07fffffffffff; valaddr_reg:x3; val_offset:217575*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217575*0 + 3*333*FLEN/8, x4, x1, x2)

inst_72526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e0ffffffffffff; valaddr_reg:x3; val_offset:217578*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217578*0 + 3*334*FLEN/8, x4, x1, x2)

inst_72527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e1ffffffffffff; valaddr_reg:x3; val_offset:217581*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217581*0 + 3*335*FLEN/8, x4, x1, x2)

inst_72528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e3ffffffffffff; valaddr_reg:x3; val_offset:217584*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217584*0 + 3*336*FLEN/8, x4, x1, x2)

inst_72529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e7ffffffffffff; valaddr_reg:x3; val_offset:217587*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217587*0 + 3*337*FLEN/8, x4, x1, x2)

inst_72530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3e8000000000000; valaddr_reg:x3; val_offset:217590*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217590*0 + 3*338*FLEN/8, x4, x1, x2)

inst_72531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3ec000000000000; valaddr_reg:x3; val_offset:217593*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217593*0 + 3*339*FLEN/8, x4, x1, x2)

inst_72532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3ee000000000000; valaddr_reg:x3; val_offset:217596*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217596*0 + 3*340*FLEN/8, x4, x1, x2)

inst_72533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3ef000000000000; valaddr_reg:x3; val_offset:217599*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217599*0 + 3*341*FLEN/8, x4, x1, x2)

inst_72534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3ef800000000000; valaddr_reg:x3; val_offset:217602*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217602*0 + 3*342*FLEN/8, x4, x1, x2)

inst_72535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efc00000000000; valaddr_reg:x3; val_offset:217605*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217605*0 + 3*343*FLEN/8, x4, x1, x2)

inst_72536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efe00000000000; valaddr_reg:x3; val_offset:217608*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217608*0 + 3*344*FLEN/8, x4, x1, x2)

inst_72537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3eff00000000000; valaddr_reg:x3; val_offset:217611*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217611*0 + 3*345*FLEN/8, x4, x1, x2)

inst_72538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3eff80000000000; valaddr_reg:x3; val_offset:217614*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217614*0 + 3*346*FLEN/8, x4, x1, x2)

inst_72539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effc0000000000; valaddr_reg:x3; val_offset:217617*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217617*0 + 3*347*FLEN/8, x4, x1, x2)

inst_72540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effe0000000000; valaddr_reg:x3; val_offset:217620*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217620*0 + 3*348*FLEN/8, x4, x1, x2)

inst_72541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efff0000000000; valaddr_reg:x3; val_offset:217623*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217623*0 + 3*349*FLEN/8, x4, x1, x2)

inst_72542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efff8000000000; valaddr_reg:x3; val_offset:217626*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217626*0 + 3*350*FLEN/8, x4, x1, x2)

inst_72543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffc000000000; valaddr_reg:x3; val_offset:217629*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217629*0 + 3*351*FLEN/8, x4, x1, x2)

inst_72544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffe000000000; valaddr_reg:x3; val_offset:217632*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217632*0 + 3*352*FLEN/8, x4, x1, x2)

inst_72545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effff000000000; valaddr_reg:x3; val_offset:217635*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217635*0 + 3*353*FLEN/8, x4, x1, x2)

inst_72546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effff800000000; valaddr_reg:x3; val_offset:217638*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217638*0 + 3*354*FLEN/8, x4, x1, x2)

inst_72547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffc00000000; valaddr_reg:x3; val_offset:217641*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217641*0 + 3*355*FLEN/8, x4, x1, x2)

inst_72548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffe00000000; valaddr_reg:x3; val_offset:217644*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217644*0 + 3*356*FLEN/8, x4, x1, x2)

inst_72549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffff00000000; valaddr_reg:x3; val_offset:217647*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217647*0 + 3*357*FLEN/8, x4, x1, x2)

inst_72550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffff80000000; valaddr_reg:x3; val_offset:217650*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217650*0 + 3*358*FLEN/8, x4, x1, x2)

inst_72551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffc0000000; valaddr_reg:x3; val_offset:217653*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217653*0 + 3*359*FLEN/8, x4, x1, x2)

inst_72552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffe0000000; valaddr_reg:x3; val_offset:217656*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217656*0 + 3*360*FLEN/8, x4, x1, x2)

inst_72553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffff0000000; valaddr_reg:x3; val_offset:217659*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217659*0 + 3*361*FLEN/8, x4, x1, x2)

inst_72554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffff8000000; valaddr_reg:x3; val_offset:217662*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217662*0 + 3*362*FLEN/8, x4, x1, x2)

inst_72555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffc000000; valaddr_reg:x3; val_offset:217665*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217665*0 + 3*363*FLEN/8, x4, x1, x2)

inst_72556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffe000000; valaddr_reg:x3; val_offset:217668*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217668*0 + 3*364*FLEN/8, x4, x1, x2)

inst_72557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffff000000; valaddr_reg:x3; val_offset:217671*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217671*0 + 3*365*FLEN/8, x4, x1, x2)

inst_72558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffff800000; valaddr_reg:x3; val_offset:217674*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217674*0 + 3*366*FLEN/8, x4, x1, x2)

inst_72559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffc00000; valaddr_reg:x3; val_offset:217677*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217677*0 + 3*367*FLEN/8, x4, x1, x2)

inst_72560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffe00000; valaddr_reg:x3; val_offset:217680*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217680*0 + 3*368*FLEN/8, x4, x1, x2)

inst_72561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffff00000; valaddr_reg:x3; val_offset:217683*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217683*0 + 3*369*FLEN/8, x4, x1, x2)

inst_72562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffff80000; valaddr_reg:x3; val_offset:217686*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217686*0 + 3*370*FLEN/8, x4, x1, x2)

inst_72563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffc0000; valaddr_reg:x3; val_offset:217689*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217689*0 + 3*371*FLEN/8, x4, x1, x2)

inst_72564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffe0000; valaddr_reg:x3; val_offset:217692*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217692*0 + 3*372*FLEN/8, x4, x1, x2)

inst_72565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffff0000; valaddr_reg:x3; val_offset:217695*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217695*0 + 3*373*FLEN/8, x4, x1, x2)

inst_72566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffff8000; valaddr_reg:x3; val_offset:217698*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217698*0 + 3*374*FLEN/8, x4, x1, x2)

inst_72567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffc000; valaddr_reg:x3; val_offset:217701*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217701*0 + 3*375*FLEN/8, x4, x1, x2)

inst_72568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffe000; valaddr_reg:x3; val_offset:217704*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217704*0 + 3*376*FLEN/8, x4, x1, x2)

inst_72569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffff000; valaddr_reg:x3; val_offset:217707*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217707*0 + 3*377*FLEN/8, x4, x1, x2)

inst_72570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffff800; valaddr_reg:x3; val_offset:217710*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217710*0 + 3*378*FLEN/8, x4, x1, x2)

inst_72571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffc00; valaddr_reg:x3; val_offset:217713*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217713*0 + 3*379*FLEN/8, x4, x1, x2)

inst_72572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffe00; valaddr_reg:x3; val_offset:217716*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217716*0 + 3*380*FLEN/8, x4, x1, x2)

inst_72573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffff00; valaddr_reg:x3; val_offset:217719*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217719*0 + 3*381*FLEN/8, x4, x1, x2)

inst_72574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffff80; valaddr_reg:x3; val_offset:217722*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217722*0 + 3*382*FLEN/8, x4, x1, x2)

inst_72575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffffc0; valaddr_reg:x3; val_offset:217725*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217725*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_72576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffffe0; valaddr_reg:x3; val_offset:217728*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217728*0 + 3*384*FLEN/8, x4, x1, x2)

inst_72577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffff0; valaddr_reg:x3; val_offset:217731*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217731*0 + 3*385*FLEN/8, x4, x1, x2)

inst_72578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffff8; valaddr_reg:x3; val_offset:217734*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217734*0 + 3*386*FLEN/8, x4, x1, x2)

inst_72579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffffc; valaddr_reg:x3; val_offset:217737*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217737*0 + 3*387*FLEN/8, x4, x1, x2)

inst_72580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3effffffffffffe; valaddr_reg:x3; val_offset:217740*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217740*0 + 3*388*FLEN/8, x4, x1, x2)

inst_72581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6622091625a8f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6622091625a8f; op2val:0x0;
op3val:0x3efffffffffffff; valaddr_reg:x3; val_offset:217743*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217743*0 + 3*389*FLEN/8, x4, x1, x2)

inst_72582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:217746*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217746*0 + 3*390*FLEN/8, x4, x1, x2)

inst_72583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:217749*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217749*0 + 3*391*FLEN/8, x4, x1, x2)

inst_72584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:217752*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217752*0 + 3*392*FLEN/8, x4, x1, x2)

inst_72585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:217755*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217755*0 + 3*393*FLEN/8, x4, x1, x2)

inst_72586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:217758*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217758*0 + 3*394*FLEN/8, x4, x1, x2)

inst_72587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:217761*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217761*0 + 3*395*FLEN/8, x4, x1, x2)

inst_72588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:217764*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217764*0 + 3*396*FLEN/8, x4, x1, x2)

inst_72589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:217767*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217767*0 + 3*397*FLEN/8, x4, x1, x2)

inst_72590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:217770*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217770*0 + 3*398*FLEN/8, x4, x1, x2)

inst_72591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:217773*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217773*0 + 3*399*FLEN/8, x4, x1, x2)

inst_72592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:217776*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217776*0 + 3*400*FLEN/8, x4, x1, x2)

inst_72593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:217779*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217779*0 + 3*401*FLEN/8, x4, x1, x2)

inst_72594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:217782*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217782*0 + 3*402*FLEN/8, x4, x1, x2)

inst_72595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:217785*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217785*0 + 3*403*FLEN/8, x4, x1, x2)

inst_72596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:217788*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217788*0 + 3*404*FLEN/8, x4, x1, x2)

inst_72597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:217791*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217791*0 + 3*405*FLEN/8, x4, x1, x2)

inst_72598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:217794*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217794*0 + 3*406*FLEN/8, x4, x1, x2)

inst_72599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:217797*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217797*0 + 3*407*FLEN/8, x4, x1, x2)

inst_72600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:217800*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217800*0 + 3*408*FLEN/8, x4, x1, x2)

inst_72601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:217803*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217803*0 + 3*409*FLEN/8, x4, x1, x2)

inst_72602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:217806*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217806*0 + 3*410*FLEN/8, x4, x1, x2)

inst_72603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:217809*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217809*0 + 3*411*FLEN/8, x4, x1, x2)

inst_72604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000000000; valaddr_reg:x3; val_offset:217812*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217812*0 + 3*412*FLEN/8, x4, x1, x2)

inst_72605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000000001; valaddr_reg:x3; val_offset:217815*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217815*0 + 3*413*FLEN/8, x4, x1, x2)

inst_72606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000000003; valaddr_reg:x3; val_offset:217818*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217818*0 + 3*414*FLEN/8, x4, x1, x2)

inst_72607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000000007; valaddr_reg:x3; val_offset:217821*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217821*0 + 3*415*FLEN/8, x4, x1, x2)

inst_72608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000000000f; valaddr_reg:x3; val_offset:217824*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217824*0 + 3*416*FLEN/8, x4, x1, x2)

inst_72609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000000001f; valaddr_reg:x3; val_offset:217827*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217827*0 + 3*417*FLEN/8, x4, x1, x2)

inst_72610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000000003f; valaddr_reg:x3; val_offset:217830*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217830*0 + 3*418*FLEN/8, x4, x1, x2)

inst_72611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000000007f; valaddr_reg:x3; val_offset:217833*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217833*0 + 3*419*FLEN/8, x4, x1, x2)

inst_72612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000000000ff; valaddr_reg:x3; val_offset:217836*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217836*0 + 3*420*FLEN/8, x4, x1, x2)

inst_72613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000000001ff; valaddr_reg:x3; val_offset:217839*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217839*0 + 3*421*FLEN/8, x4, x1, x2)

inst_72614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000000003ff; valaddr_reg:x3; val_offset:217842*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217842*0 + 3*422*FLEN/8, x4, x1, x2)

inst_72615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000000007ff; valaddr_reg:x3; val_offset:217845*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217845*0 + 3*423*FLEN/8, x4, x1, x2)

inst_72616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000000fff; valaddr_reg:x3; val_offset:217848*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217848*0 + 3*424*FLEN/8, x4, x1, x2)

inst_72617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000001fff; valaddr_reg:x3; val_offset:217851*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217851*0 + 3*425*FLEN/8, x4, x1, x2)

inst_72618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000003fff; valaddr_reg:x3; val_offset:217854*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217854*0 + 3*426*FLEN/8, x4, x1, x2)

inst_72619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000007fff; valaddr_reg:x3; val_offset:217857*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217857*0 + 3*427*FLEN/8, x4, x1, x2)

inst_72620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000000ffff; valaddr_reg:x3; val_offset:217860*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217860*0 + 3*428*FLEN/8, x4, x1, x2)

inst_72621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000001ffff; valaddr_reg:x3; val_offset:217863*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217863*0 + 3*429*FLEN/8, x4, x1, x2)

inst_72622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000003ffff; valaddr_reg:x3; val_offset:217866*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217866*0 + 3*430*FLEN/8, x4, x1, x2)

inst_72623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000007ffff; valaddr_reg:x3; val_offset:217869*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217869*0 + 3*431*FLEN/8, x4, x1, x2)

inst_72624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000000fffff; valaddr_reg:x3; val_offset:217872*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217872*0 + 3*432*FLEN/8, x4, x1, x2)

inst_72625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000001fffff; valaddr_reg:x3; val_offset:217875*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217875*0 + 3*433*FLEN/8, x4, x1, x2)

inst_72626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000003fffff; valaddr_reg:x3; val_offset:217878*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217878*0 + 3*434*FLEN/8, x4, x1, x2)

inst_72627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000007fffff; valaddr_reg:x3; val_offset:217881*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217881*0 + 3*435*FLEN/8, x4, x1, x2)

inst_72628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000000ffffff; valaddr_reg:x3; val_offset:217884*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217884*0 + 3*436*FLEN/8, x4, x1, x2)

inst_72629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000001ffffff; valaddr_reg:x3; val_offset:217887*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217887*0 + 3*437*FLEN/8, x4, x1, x2)

inst_72630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000003ffffff; valaddr_reg:x3; val_offset:217890*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217890*0 + 3*438*FLEN/8, x4, x1, x2)

inst_72631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000007ffffff; valaddr_reg:x3; val_offset:217893*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217893*0 + 3*439*FLEN/8, x4, x1, x2)

inst_72632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000000fffffff; valaddr_reg:x3; val_offset:217896*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217896*0 + 3*440*FLEN/8, x4, x1, x2)

inst_72633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000001fffffff; valaddr_reg:x3; val_offset:217899*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217899*0 + 3*441*FLEN/8, x4, x1, x2)

inst_72634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000003fffffff; valaddr_reg:x3; val_offset:217902*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217902*0 + 3*442*FLEN/8, x4, x1, x2)

inst_72635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000007fffffff; valaddr_reg:x3; val_offset:217905*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217905*0 + 3*443*FLEN/8, x4, x1, x2)

inst_72636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00000ffffffff; valaddr_reg:x3; val_offset:217908*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217908*0 + 3*444*FLEN/8, x4, x1, x2)

inst_72637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00001ffffffff; valaddr_reg:x3; val_offset:217911*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217911*0 + 3*445*FLEN/8, x4, x1, x2)

inst_72638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00003ffffffff; valaddr_reg:x3; val_offset:217914*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217914*0 + 3*446*FLEN/8, x4, x1, x2)

inst_72639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00007ffffffff; valaddr_reg:x3; val_offset:217917*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217917*0 + 3*447*FLEN/8, x4, x1, x2)

inst_72640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0000fffffffff; valaddr_reg:x3; val_offset:217920*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217920*0 + 3*448*FLEN/8, x4, x1, x2)

inst_72641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0001fffffffff; valaddr_reg:x3; val_offset:217923*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217923*0 + 3*449*FLEN/8, x4, x1, x2)

inst_72642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0003fffffffff; valaddr_reg:x3; val_offset:217926*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217926*0 + 3*450*FLEN/8, x4, x1, x2)

inst_72643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0007fffffffff; valaddr_reg:x3; val_offset:217929*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217929*0 + 3*451*FLEN/8, x4, x1, x2)

inst_72644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f000ffffffffff; valaddr_reg:x3; val_offset:217932*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217932*0 + 3*452*FLEN/8, x4, x1, x2)

inst_72645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f001ffffffffff; valaddr_reg:x3; val_offset:217935*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217935*0 + 3*453*FLEN/8, x4, x1, x2)

inst_72646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f003ffffffffff; valaddr_reg:x3; val_offset:217938*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217938*0 + 3*454*FLEN/8, x4, x1, x2)

inst_72647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f007ffffffffff; valaddr_reg:x3; val_offset:217941*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217941*0 + 3*455*FLEN/8, x4, x1, x2)

inst_72648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f00fffffffffff; valaddr_reg:x3; val_offset:217944*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217944*0 + 3*456*FLEN/8, x4, x1, x2)

inst_72649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f01fffffffffff; valaddr_reg:x3; val_offset:217947*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217947*0 + 3*457*FLEN/8, x4, x1, x2)

inst_72650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f03fffffffffff; valaddr_reg:x3; val_offset:217950*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217950*0 + 3*458*FLEN/8, x4, x1, x2)

inst_72651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f07fffffffffff; valaddr_reg:x3; val_offset:217953*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217953*0 + 3*459*FLEN/8, x4, x1, x2)

inst_72652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f0ffffffffffff; valaddr_reg:x3; val_offset:217956*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217956*0 + 3*460*FLEN/8, x4, x1, x2)

inst_72653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f1ffffffffffff; valaddr_reg:x3; val_offset:217959*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217959*0 + 3*461*FLEN/8, x4, x1, x2)

inst_72654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f3ffffffffffff; valaddr_reg:x3; val_offset:217962*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217962*0 + 3*462*FLEN/8, x4, x1, x2)

inst_72655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f7ffffffffffff; valaddr_reg:x3; val_offset:217965*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217965*0 + 3*463*FLEN/8, x4, x1, x2)

inst_72656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1f8000000000000; valaddr_reg:x3; val_offset:217968*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217968*0 + 3*464*FLEN/8, x4, x1, x2)

inst_72657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fc000000000000; valaddr_reg:x3; val_offset:217971*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217971*0 + 3*465*FLEN/8, x4, x1, x2)

inst_72658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fe000000000000; valaddr_reg:x3; val_offset:217974*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217974*0 + 3*466*FLEN/8, x4, x1, x2)

inst_72659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ff000000000000; valaddr_reg:x3; val_offset:217977*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217977*0 + 3*467*FLEN/8, x4, x1, x2)

inst_72660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ff800000000000; valaddr_reg:x3; val_offset:217980*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217980*0 + 3*468*FLEN/8, x4, x1, x2)

inst_72661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffc00000000000; valaddr_reg:x3; val_offset:217983*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217983*0 + 3*469*FLEN/8, x4, x1, x2)

inst_72662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffe00000000000; valaddr_reg:x3; val_offset:217986*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217986*0 + 3*470*FLEN/8, x4, x1, x2)

inst_72663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fff00000000000; valaddr_reg:x3; val_offset:217989*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217989*0 + 3*471*FLEN/8, x4, x1, x2)

inst_72664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fff80000000000; valaddr_reg:x3; val_offset:217992*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217992*0 + 3*472*FLEN/8, x4, x1, x2)

inst_72665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffc0000000000; valaddr_reg:x3; val_offset:217995*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217995*0 + 3*473*FLEN/8, x4, x1, x2)

inst_72666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffe0000000000; valaddr_reg:x3; val_offset:217998*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 217998*0 + 3*474*FLEN/8, x4, x1, x2)

inst_72667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffff0000000000; valaddr_reg:x3; val_offset:218001*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218001*0 + 3*475*FLEN/8, x4, x1, x2)

inst_72668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffff8000000000; valaddr_reg:x3; val_offset:218004*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218004*0 + 3*476*FLEN/8, x4, x1, x2)

inst_72669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffc000000000; valaddr_reg:x3; val_offset:218007*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218007*0 + 3*477*FLEN/8, x4, x1, x2)

inst_72670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffe000000000; valaddr_reg:x3; val_offset:218010*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218010*0 + 3*478*FLEN/8, x4, x1, x2)

inst_72671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffff000000000; valaddr_reg:x3; val_offset:218013*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218013*0 + 3*479*FLEN/8, x4, x1, x2)

inst_72672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffff800000000; valaddr_reg:x3; val_offset:218016*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218016*0 + 3*480*FLEN/8, x4, x1, x2)

inst_72673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffc00000000; valaddr_reg:x3; val_offset:218019*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218019*0 + 3*481*FLEN/8, x4, x1, x2)

inst_72674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffe00000000; valaddr_reg:x3; val_offset:218022*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218022*0 + 3*482*FLEN/8, x4, x1, x2)

inst_72675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffff00000000; valaddr_reg:x3; val_offset:218025*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218025*0 + 3*483*FLEN/8, x4, x1, x2)

inst_72676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffff80000000; valaddr_reg:x3; val_offset:218028*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218028*0 + 3*484*FLEN/8, x4, x1, x2)

inst_72677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffc0000000; valaddr_reg:x3; val_offset:218031*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218031*0 + 3*485*FLEN/8, x4, x1, x2)

inst_72678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffe0000000; valaddr_reg:x3; val_offset:218034*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218034*0 + 3*486*FLEN/8, x4, x1, x2)

inst_72679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffff0000000; valaddr_reg:x3; val_offset:218037*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218037*0 + 3*487*FLEN/8, x4, x1, x2)

inst_72680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffff8000000; valaddr_reg:x3; val_offset:218040*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218040*0 + 3*488*FLEN/8, x4, x1, x2)

inst_72681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffc000000; valaddr_reg:x3; val_offset:218043*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218043*0 + 3*489*FLEN/8, x4, x1, x2)

inst_72682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffe000000; valaddr_reg:x3; val_offset:218046*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218046*0 + 3*490*FLEN/8, x4, x1, x2)

inst_72683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffff000000; valaddr_reg:x3; val_offset:218049*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218049*0 + 3*491*FLEN/8, x4, x1, x2)

inst_72684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffff800000; valaddr_reg:x3; val_offset:218052*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218052*0 + 3*492*FLEN/8, x4, x1, x2)

inst_72685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffc00000; valaddr_reg:x3; val_offset:218055*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218055*0 + 3*493*FLEN/8, x4, x1, x2)

inst_72686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffe00000; valaddr_reg:x3; val_offset:218058*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218058*0 + 3*494*FLEN/8, x4, x1, x2)

inst_72687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffff00000; valaddr_reg:x3; val_offset:218061*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218061*0 + 3*495*FLEN/8, x4, x1, x2)

inst_72688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffff80000; valaddr_reg:x3; val_offset:218064*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218064*0 + 3*496*FLEN/8, x4, x1, x2)

inst_72689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffc0000; valaddr_reg:x3; val_offset:218067*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218067*0 + 3*497*FLEN/8, x4, x1, x2)

inst_72690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffe0000; valaddr_reg:x3; val_offset:218070*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218070*0 + 3*498*FLEN/8, x4, x1, x2)

inst_72691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffff0000; valaddr_reg:x3; val_offset:218073*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218073*0 + 3*499*FLEN/8, x4, x1, x2)

inst_72692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffff8000; valaddr_reg:x3; val_offset:218076*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218076*0 + 3*500*FLEN/8, x4, x1, x2)

inst_72693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffc000; valaddr_reg:x3; val_offset:218079*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218079*0 + 3*501*FLEN/8, x4, x1, x2)

inst_72694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffe000; valaddr_reg:x3; val_offset:218082*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218082*0 + 3*502*FLEN/8, x4, x1, x2)

inst_72695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffff000; valaddr_reg:x3; val_offset:218085*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218085*0 + 3*503*FLEN/8, x4, x1, x2)

inst_72696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffff800; valaddr_reg:x3; val_offset:218088*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218088*0 + 3*504*FLEN/8, x4, x1, x2)

inst_72697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffc00; valaddr_reg:x3; val_offset:218091*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218091*0 + 3*505*FLEN/8, x4, x1, x2)

inst_72698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffe00; valaddr_reg:x3; val_offset:218094*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218094*0 + 3*506*FLEN/8, x4, x1, x2)

inst_72699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffff00; valaddr_reg:x3; val_offset:218097*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218097*0 + 3*507*FLEN/8, x4, x1, x2)

inst_72700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffff80; valaddr_reg:x3; val_offset:218100*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218100*0 + 3*508*FLEN/8, x4, x1, x2)

inst_72701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffffc0; valaddr_reg:x3; val_offset:218103*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218103*0 + 3*509*FLEN/8, x4, x1, x2)

inst_72702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffffe0; valaddr_reg:x3; val_offset:218106*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218106*0 + 3*510*FLEN/8, x4, x1, x2)

inst_72703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffff0; valaddr_reg:x3; val_offset:218109*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218109*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_72704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffff8; valaddr_reg:x3; val_offset:218112*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218112*0 + 3*512*FLEN/8, x4, x1, x2)

inst_72705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffffc; valaddr_reg:x3; val_offset:218115*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218115*0 + 3*513*FLEN/8, x4, x1, x2)

inst_72706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1fffffffffffffe; valaddr_reg:x3; val_offset:218118*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218118*0 + 3*514*FLEN/8, x4, x1, x2)

inst_72707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x66c277d7f346a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa66c277d7f346a; op2val:0x0;
op3val:0x1ffffffffffffff; valaddr_reg:x3; val_offset:218121*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218121*0 + 3*515*FLEN/8, x4, x1, x2)

inst_72708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000000000; valaddr_reg:x3; val_offset:218124*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218124*0 + 3*516*FLEN/8, x4, x1, x2)

inst_72709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000000001; valaddr_reg:x3; val_offset:218127*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218127*0 + 3*517*FLEN/8, x4, x1, x2)

inst_72710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000000003; valaddr_reg:x3; val_offset:218130*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218130*0 + 3*518*FLEN/8, x4, x1, x2)

inst_72711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000000007; valaddr_reg:x3; val_offset:218133*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218133*0 + 3*519*FLEN/8, x4, x1, x2)

inst_72712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000000000f; valaddr_reg:x3; val_offset:218136*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218136*0 + 3*520*FLEN/8, x4, x1, x2)

inst_72713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000000001f; valaddr_reg:x3; val_offset:218139*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218139*0 + 3*521*FLEN/8, x4, x1, x2)

inst_72714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000000003f; valaddr_reg:x3; val_offset:218142*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218142*0 + 3*522*FLEN/8, x4, x1, x2)

inst_72715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000000007f; valaddr_reg:x3; val_offset:218145*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218145*0 + 3*523*FLEN/8, x4, x1, x2)

inst_72716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000000000ff; valaddr_reg:x3; val_offset:218148*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218148*0 + 3*524*FLEN/8, x4, x1, x2)

inst_72717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000000001ff; valaddr_reg:x3; val_offset:218151*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218151*0 + 3*525*FLEN/8, x4, x1, x2)

inst_72718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000000003ff; valaddr_reg:x3; val_offset:218154*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218154*0 + 3*526*FLEN/8, x4, x1, x2)

inst_72719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000000007ff; valaddr_reg:x3; val_offset:218157*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218157*0 + 3*527*FLEN/8, x4, x1, x2)

inst_72720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000000fff; valaddr_reg:x3; val_offset:218160*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218160*0 + 3*528*FLEN/8, x4, x1, x2)

inst_72721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000001fff; valaddr_reg:x3; val_offset:218163*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218163*0 + 3*529*FLEN/8, x4, x1, x2)

inst_72722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000003fff; valaddr_reg:x3; val_offset:218166*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218166*0 + 3*530*FLEN/8, x4, x1, x2)

inst_72723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000007fff; valaddr_reg:x3; val_offset:218169*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218169*0 + 3*531*FLEN/8, x4, x1, x2)

inst_72724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000000ffff; valaddr_reg:x3; val_offset:218172*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218172*0 + 3*532*FLEN/8, x4, x1, x2)

inst_72725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000001ffff; valaddr_reg:x3; val_offset:218175*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218175*0 + 3*533*FLEN/8, x4, x1, x2)

inst_72726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000003ffff; valaddr_reg:x3; val_offset:218178*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218178*0 + 3*534*FLEN/8, x4, x1, x2)

inst_72727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000007ffff; valaddr_reg:x3; val_offset:218181*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218181*0 + 3*535*FLEN/8, x4, x1, x2)

inst_72728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000000fffff; valaddr_reg:x3; val_offset:218184*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218184*0 + 3*536*FLEN/8, x4, x1, x2)

inst_72729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000001fffff; valaddr_reg:x3; val_offset:218187*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218187*0 + 3*537*FLEN/8, x4, x1, x2)

inst_72730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000003fffff; valaddr_reg:x3; val_offset:218190*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218190*0 + 3*538*FLEN/8, x4, x1, x2)

inst_72731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000007fffff; valaddr_reg:x3; val_offset:218193*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218193*0 + 3*539*FLEN/8, x4, x1, x2)

inst_72732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000000ffffff; valaddr_reg:x3; val_offset:218196*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218196*0 + 3*540*FLEN/8, x4, x1, x2)

inst_72733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000001ffffff; valaddr_reg:x3; val_offset:218199*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218199*0 + 3*541*FLEN/8, x4, x1, x2)

inst_72734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000003ffffff; valaddr_reg:x3; val_offset:218202*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218202*0 + 3*542*FLEN/8, x4, x1, x2)

inst_72735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000007ffffff; valaddr_reg:x3; val_offset:218205*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218205*0 + 3*543*FLEN/8, x4, x1, x2)

inst_72736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000000fffffff; valaddr_reg:x3; val_offset:218208*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218208*0 + 3*544*FLEN/8, x4, x1, x2)

inst_72737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000001fffffff; valaddr_reg:x3; val_offset:218211*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218211*0 + 3*545*FLEN/8, x4, x1, x2)

inst_72738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000003fffffff; valaddr_reg:x3; val_offset:218214*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218214*0 + 3*546*FLEN/8, x4, x1, x2)

inst_72739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000007fffffff; valaddr_reg:x3; val_offset:218217*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218217*0 + 3*547*FLEN/8, x4, x1, x2)

inst_72740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00000ffffffff; valaddr_reg:x3; val_offset:218220*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218220*0 + 3*548*FLEN/8, x4, x1, x2)

inst_72741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00001ffffffff; valaddr_reg:x3; val_offset:218223*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218223*0 + 3*549*FLEN/8, x4, x1, x2)

inst_72742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00003ffffffff; valaddr_reg:x3; val_offset:218226*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218226*0 + 3*550*FLEN/8, x4, x1, x2)

inst_72743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00007ffffffff; valaddr_reg:x3; val_offset:218229*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218229*0 + 3*551*FLEN/8, x4, x1, x2)

inst_72744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0000fffffffff; valaddr_reg:x3; val_offset:218232*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218232*0 + 3*552*FLEN/8, x4, x1, x2)

inst_72745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0001fffffffff; valaddr_reg:x3; val_offset:218235*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218235*0 + 3*553*FLEN/8, x4, x1, x2)

inst_72746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0003fffffffff; valaddr_reg:x3; val_offset:218238*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218238*0 + 3*554*FLEN/8, x4, x1, x2)

inst_72747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0007fffffffff; valaddr_reg:x3; val_offset:218241*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218241*0 + 3*555*FLEN/8, x4, x1, x2)

inst_72748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d000ffffffffff; valaddr_reg:x3; val_offset:218244*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218244*0 + 3*556*FLEN/8, x4, x1, x2)

inst_72749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d001ffffffffff; valaddr_reg:x3; val_offset:218247*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218247*0 + 3*557*FLEN/8, x4, x1, x2)

inst_72750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d003ffffffffff; valaddr_reg:x3; val_offset:218250*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218250*0 + 3*558*FLEN/8, x4, x1, x2)

inst_72751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d007ffffffffff; valaddr_reg:x3; val_offset:218253*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218253*0 + 3*559*FLEN/8, x4, x1, x2)

inst_72752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d00fffffffffff; valaddr_reg:x3; val_offset:218256*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218256*0 + 3*560*FLEN/8, x4, x1, x2)

inst_72753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d01fffffffffff; valaddr_reg:x3; val_offset:218259*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218259*0 + 3*561*FLEN/8, x4, x1, x2)

inst_72754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d03fffffffffff; valaddr_reg:x3; val_offset:218262*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218262*0 + 3*562*FLEN/8, x4, x1, x2)

inst_72755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d07fffffffffff; valaddr_reg:x3; val_offset:218265*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218265*0 + 3*563*FLEN/8, x4, x1, x2)

inst_72756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d0ffffffffffff; valaddr_reg:x3; val_offset:218268*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218268*0 + 3*564*FLEN/8, x4, x1, x2)

inst_72757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d1ffffffffffff; valaddr_reg:x3; val_offset:218271*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218271*0 + 3*565*FLEN/8, x4, x1, x2)

inst_72758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d3ffffffffffff; valaddr_reg:x3; val_offset:218274*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218274*0 + 3*566*FLEN/8, x4, x1, x2)

inst_72759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d7ffffffffffff; valaddr_reg:x3; val_offset:218277*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218277*0 + 3*567*FLEN/8, x4, x1, x2)

inst_72760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7d8000000000000; valaddr_reg:x3; val_offset:218280*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218280*0 + 3*568*FLEN/8, x4, x1, x2)

inst_72761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dc000000000000; valaddr_reg:x3; val_offset:218283*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218283*0 + 3*569*FLEN/8, x4, x1, x2)

inst_72762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7de000000000000; valaddr_reg:x3; val_offset:218286*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218286*0 + 3*570*FLEN/8, x4, x1, x2)

inst_72763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7df000000000000; valaddr_reg:x3; val_offset:218289*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218289*0 + 3*571*FLEN/8, x4, x1, x2)

inst_72764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7df800000000000; valaddr_reg:x3; val_offset:218292*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218292*0 + 3*572*FLEN/8, x4, x1, x2)

inst_72765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfc00000000000; valaddr_reg:x3; val_offset:218295*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218295*0 + 3*573*FLEN/8, x4, x1, x2)

inst_72766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfe00000000000; valaddr_reg:x3; val_offset:218298*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218298*0 + 3*574*FLEN/8, x4, x1, x2)

inst_72767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dff00000000000; valaddr_reg:x3; val_offset:218301*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218301*0 + 3*575*FLEN/8, x4, x1, x2)

inst_72768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dff80000000000; valaddr_reg:x3; val_offset:218304*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218304*0 + 3*576*FLEN/8, x4, x1, x2)

inst_72769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffc0000000000; valaddr_reg:x3; val_offset:218307*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218307*0 + 3*577*FLEN/8, x4, x1, x2)

inst_72770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffe0000000000; valaddr_reg:x3; val_offset:218310*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218310*0 + 3*578*FLEN/8, x4, x1, x2)

inst_72771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfff0000000000; valaddr_reg:x3; val_offset:218313*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218313*0 + 3*579*FLEN/8, x4, x1, x2)

inst_72772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfff8000000000; valaddr_reg:x3; val_offset:218316*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218316*0 + 3*580*FLEN/8, x4, x1, x2)

inst_72773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffc000000000; valaddr_reg:x3; val_offset:218319*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218319*0 + 3*581*FLEN/8, x4, x1, x2)

inst_72774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffe000000000; valaddr_reg:x3; val_offset:218322*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218322*0 + 3*582*FLEN/8, x4, x1, x2)

inst_72775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffff000000000; valaddr_reg:x3; val_offset:218325*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218325*0 + 3*583*FLEN/8, x4, x1, x2)

inst_72776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffff800000000; valaddr_reg:x3; val_offset:218328*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218328*0 + 3*584*FLEN/8, x4, x1, x2)

inst_72777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffc00000000; valaddr_reg:x3; val_offset:218331*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218331*0 + 3*585*FLEN/8, x4, x1, x2)

inst_72778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffe00000000; valaddr_reg:x3; val_offset:218334*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218334*0 + 3*586*FLEN/8, x4, x1, x2)

inst_72779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffff00000000; valaddr_reg:x3; val_offset:218337*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218337*0 + 3*587*FLEN/8, x4, x1, x2)

inst_72780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffff80000000; valaddr_reg:x3; val_offset:218340*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218340*0 + 3*588*FLEN/8, x4, x1, x2)

inst_72781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffc0000000; valaddr_reg:x3; val_offset:218343*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218343*0 + 3*589*FLEN/8, x4, x1, x2)

inst_72782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffe0000000; valaddr_reg:x3; val_offset:218346*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218346*0 + 3*590*FLEN/8, x4, x1, x2)

inst_72783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffff0000000; valaddr_reg:x3; val_offset:218349*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218349*0 + 3*591*FLEN/8, x4, x1, x2)

inst_72784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffff8000000; valaddr_reg:x3; val_offset:218352*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218352*0 + 3*592*FLEN/8, x4, x1, x2)

inst_72785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffc000000; valaddr_reg:x3; val_offset:218355*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218355*0 + 3*593*FLEN/8, x4, x1, x2)

inst_72786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffe000000; valaddr_reg:x3; val_offset:218358*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218358*0 + 3*594*FLEN/8, x4, x1, x2)

inst_72787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffff000000; valaddr_reg:x3; val_offset:218361*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218361*0 + 3*595*FLEN/8, x4, x1, x2)

inst_72788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffff800000; valaddr_reg:x3; val_offset:218364*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218364*0 + 3*596*FLEN/8, x4, x1, x2)

inst_72789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffc00000; valaddr_reg:x3; val_offset:218367*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218367*0 + 3*597*FLEN/8, x4, x1, x2)

inst_72790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffe00000; valaddr_reg:x3; val_offset:218370*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218370*0 + 3*598*FLEN/8, x4, x1, x2)

inst_72791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffff00000; valaddr_reg:x3; val_offset:218373*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218373*0 + 3*599*FLEN/8, x4, x1, x2)

inst_72792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffff80000; valaddr_reg:x3; val_offset:218376*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218376*0 + 3*600*FLEN/8, x4, x1, x2)

inst_72793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffc0000; valaddr_reg:x3; val_offset:218379*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218379*0 + 3*601*FLEN/8, x4, x1, x2)

inst_72794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffe0000; valaddr_reg:x3; val_offset:218382*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218382*0 + 3*602*FLEN/8, x4, x1, x2)

inst_72795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffff0000; valaddr_reg:x3; val_offset:218385*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218385*0 + 3*603*FLEN/8, x4, x1, x2)

inst_72796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffff8000; valaddr_reg:x3; val_offset:218388*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218388*0 + 3*604*FLEN/8, x4, x1, x2)

inst_72797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffc000; valaddr_reg:x3; val_offset:218391*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218391*0 + 3*605*FLEN/8, x4, x1, x2)

inst_72798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffe000; valaddr_reg:x3; val_offset:218394*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218394*0 + 3*606*FLEN/8, x4, x1, x2)

inst_72799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffff000; valaddr_reg:x3; val_offset:218397*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218397*0 + 3*607*FLEN/8, x4, x1, x2)

inst_72800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffff800; valaddr_reg:x3; val_offset:218400*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218400*0 + 3*608*FLEN/8, x4, x1, x2)

inst_72801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffc00; valaddr_reg:x3; val_offset:218403*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218403*0 + 3*609*FLEN/8, x4, x1, x2)

inst_72802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffe00; valaddr_reg:x3; val_offset:218406*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218406*0 + 3*610*FLEN/8, x4, x1, x2)

inst_72803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffff00; valaddr_reg:x3; val_offset:218409*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218409*0 + 3*611*FLEN/8, x4, x1, x2)

inst_72804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffff80; valaddr_reg:x3; val_offset:218412*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218412*0 + 3*612*FLEN/8, x4, x1, x2)

inst_72805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffffc0; valaddr_reg:x3; val_offset:218415*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218415*0 + 3*613*FLEN/8, x4, x1, x2)

inst_72806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffffe0; valaddr_reg:x3; val_offset:218418*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218418*0 + 3*614*FLEN/8, x4, x1, x2)

inst_72807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffff0; valaddr_reg:x3; val_offset:218421*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218421*0 + 3*615*FLEN/8, x4, x1, x2)

inst_72808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffff8; valaddr_reg:x3; val_offset:218424*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218424*0 + 3*616*FLEN/8, x4, x1, x2)

inst_72809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffffc; valaddr_reg:x3; val_offset:218427*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218427*0 + 3*617*FLEN/8, x4, x1, x2)

inst_72810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dffffffffffffe; valaddr_reg:x3; val_offset:218430*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218430*0 + 3*618*FLEN/8, x4, x1, x2)

inst_72811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x37d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xb7dfffffffffffff; valaddr_reg:x3; val_offset:218433*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218433*0 + 3*619*FLEN/8, x4, x1, x2)

inst_72812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:218436*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218436*0 + 3*620*FLEN/8, x4, x1, x2)

inst_72813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:218439*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218439*0 + 3*621*FLEN/8, x4, x1, x2)

inst_72814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:218442*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218442*0 + 3*622*FLEN/8, x4, x1, x2)

inst_72815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:218445*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218445*0 + 3*623*FLEN/8, x4, x1, x2)

inst_72816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:218448*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218448*0 + 3*624*FLEN/8, x4, x1, x2)

inst_72817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:218451*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218451*0 + 3*625*FLEN/8, x4, x1, x2)

inst_72818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:218454*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218454*0 + 3*626*FLEN/8, x4, x1, x2)

inst_72819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:218457*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218457*0 + 3*627*FLEN/8, x4, x1, x2)

inst_72820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:218460*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218460*0 + 3*628*FLEN/8, x4, x1, x2)

inst_72821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:218463*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218463*0 + 3*629*FLEN/8, x4, x1, x2)

inst_72822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:218466*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218466*0 + 3*630*FLEN/8, x4, x1, x2)

inst_72823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:218469*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218469*0 + 3*631*FLEN/8, x4, x1, x2)

inst_72824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:218472*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218472*0 + 3*632*FLEN/8, x4, x1, x2)

inst_72825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:218475*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218475*0 + 3*633*FLEN/8, x4, x1, x2)

inst_72826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:218478*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218478*0 + 3*634*FLEN/8, x4, x1, x2)

inst_72827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:218481*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218481*0 + 3*635*FLEN/8, x4, x1, x2)

inst_72828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:218484*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218484*0 + 3*636*FLEN/8, x4, x1, x2)

inst_72829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:218487*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218487*0 + 3*637*FLEN/8, x4, x1, x2)

inst_72830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:218490*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218490*0 + 3*638*FLEN/8, x4, x1, x2)

inst_72831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:218493*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218493*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_72832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:218496*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218496*0 + 3*640*FLEN/8, x4, x1, x2)

inst_72833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x67dff954281e2 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6c372818bd2a7 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa67dff954281e2; op2val:0x9fc6c372818bd2a7;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:218499*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218499*0 + 3*641*FLEN/8, x4, x1, x2)

inst_72834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000008000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000; valaddr_reg:x3; val_offset:218502*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218502*0 + 3*642*FLEN/8, x4, x1, x2)

inst_72835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:218505*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218505*0 + 3*643*FLEN/8, x4, x1, x2)

inst_72836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:218508*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218508*0 + 3*644*FLEN/8, x4, x1, x2)

inst_72837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:218511*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218511*0 + 3*645*FLEN/8, x4, x1, x2)

inst_72838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:218514*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218514*0 + 3*646*FLEN/8, x4, x1, x2)

inst_72839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:218517*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218517*0 + 3*647*FLEN/8, x4, x1, x2)

inst_72840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:218520*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218520*0 + 3*648*FLEN/8, x4, x1, x2)

inst_72841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000000007f; valaddr_reg:x3; val_offset:218523*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218523*0 + 3*649*FLEN/8, x4, x1, x2)

inst_72842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000000000ff; valaddr_reg:x3; val_offset:218526*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218526*0 + 3*650*FLEN/8, x4, x1, x2)

inst_72843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000000001ff; valaddr_reg:x3; val_offset:218529*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218529*0 + 3*651*FLEN/8, x4, x1, x2)

inst_72844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000000003ff; valaddr_reg:x3; val_offset:218532*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218532*0 + 3*652*FLEN/8, x4, x1, x2)

inst_72845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000000007ff; valaddr_reg:x3; val_offset:218535*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218535*0 + 3*653*FLEN/8, x4, x1, x2)

inst_72846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000000fff; valaddr_reg:x3; val_offset:218538*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218538*0 + 3*654*FLEN/8, x4, x1, x2)

inst_72847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000001fff; valaddr_reg:x3; val_offset:218541*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218541*0 + 3*655*FLEN/8, x4, x1, x2)

inst_72848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000003fff; valaddr_reg:x3; val_offset:218544*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218544*0 + 3*656*FLEN/8, x4, x1, x2)

inst_72849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000007fff; valaddr_reg:x3; val_offset:218547*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218547*0 + 3*657*FLEN/8, x4, x1, x2)

inst_72850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000000ffff; valaddr_reg:x3; val_offset:218550*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218550*0 + 3*658*FLEN/8, x4, x1, x2)

inst_72851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000001ffff; valaddr_reg:x3; val_offset:218553*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218553*0 + 3*659*FLEN/8, x4, x1, x2)

inst_72852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000003ffff; valaddr_reg:x3; val_offset:218556*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218556*0 + 3*660*FLEN/8, x4, x1, x2)

inst_72853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000007ffff; valaddr_reg:x3; val_offset:218559*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218559*0 + 3*661*FLEN/8, x4, x1, x2)

inst_72854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000000fffff; valaddr_reg:x3; val_offset:218562*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218562*0 + 3*662*FLEN/8, x4, x1, x2)

inst_72855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000001fffff; valaddr_reg:x3; val_offset:218565*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218565*0 + 3*663*FLEN/8, x4, x1, x2)

inst_72856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000003fffff; valaddr_reg:x3; val_offset:218568*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218568*0 + 3*664*FLEN/8, x4, x1, x2)

inst_72857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000007fffff; valaddr_reg:x3; val_offset:218571*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218571*0 + 3*665*FLEN/8, x4, x1, x2)

inst_72858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000000ffffff; valaddr_reg:x3; val_offset:218574*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218574*0 + 3*666*FLEN/8, x4, x1, x2)

inst_72859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000001ffffff; valaddr_reg:x3; val_offset:218577*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218577*0 + 3*667*FLEN/8, x4, x1, x2)

inst_72860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000003ffffff; valaddr_reg:x3; val_offset:218580*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218580*0 + 3*668*FLEN/8, x4, x1, x2)

inst_72861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000007ffffff; valaddr_reg:x3; val_offset:218583*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218583*0 + 3*669*FLEN/8, x4, x1, x2)

inst_72862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000000fffffff; valaddr_reg:x3; val_offset:218586*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218586*0 + 3*670*FLEN/8, x4, x1, x2)

inst_72863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000001fffffff; valaddr_reg:x3; val_offset:218589*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218589*0 + 3*671*FLEN/8, x4, x1, x2)

inst_72864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000003fffffff; valaddr_reg:x3; val_offset:218592*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218592*0 + 3*672*FLEN/8, x4, x1, x2)

inst_72865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000007fffffff; valaddr_reg:x3; val_offset:218595*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218595*0 + 3*673*FLEN/8, x4, x1, x2)

inst_72866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000000ffffffff; valaddr_reg:x3; val_offset:218598*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218598*0 + 3*674*FLEN/8, x4, x1, x2)

inst_72867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000001ffffffff; valaddr_reg:x3; val_offset:218601*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218601*0 + 3*675*FLEN/8, x4, x1, x2)

inst_72868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000003ffffffff; valaddr_reg:x3; val_offset:218604*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218604*0 + 3*676*FLEN/8, x4, x1, x2)

inst_72869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000007ffffffff; valaddr_reg:x3; val_offset:218607*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218607*0 + 3*677*FLEN/8, x4, x1, x2)

inst_72870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000000fffffffff; valaddr_reg:x3; val_offset:218610*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218610*0 + 3*678*FLEN/8, x4, x1, x2)

inst_72871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000001fffffffff; valaddr_reg:x3; val_offset:218613*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218613*0 + 3*679*FLEN/8, x4, x1, x2)

inst_72872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000003fffffffff; valaddr_reg:x3; val_offset:218616*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218616*0 + 3*680*FLEN/8, x4, x1, x2)

inst_72873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000007fffffffff; valaddr_reg:x3; val_offset:218619*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218619*0 + 3*681*FLEN/8, x4, x1, x2)

inst_72874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800000ffffffffff; valaddr_reg:x3; val_offset:218622*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218622*0 + 3*682*FLEN/8, x4, x1, x2)

inst_72875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800001ffffffffff; valaddr_reg:x3; val_offset:218625*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218625*0 + 3*683*FLEN/8, x4, x1, x2)

inst_72876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800003ffffffffff; valaddr_reg:x3; val_offset:218628*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218628*0 + 3*684*FLEN/8, x4, x1, x2)

inst_72877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800007ffffffffff; valaddr_reg:x3; val_offset:218631*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218631*0 + 3*685*FLEN/8, x4, x1, x2)

inst_72878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80000fffffffffff; valaddr_reg:x3; val_offset:218634*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218634*0 + 3*686*FLEN/8, x4, x1, x2)

inst_72879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80001fffffffffff; valaddr_reg:x3; val_offset:218637*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218637*0 + 3*687*FLEN/8, x4, x1, x2)

inst_72880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80003fffffffffff; valaddr_reg:x3; val_offset:218640*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218640*0 + 3*688*FLEN/8, x4, x1, x2)

inst_72881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x80007fffffffffff; valaddr_reg:x3; val_offset:218643*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218643*0 + 3*689*FLEN/8, x4, x1, x2)

inst_72882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8000ffffffffffff; valaddr_reg:x3; val_offset:218646*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218646*0 + 3*690*FLEN/8, x4, x1, x2)

inst_72883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8001ffffffffffff; valaddr_reg:x3; val_offset:218649*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218649*0 + 3*691*FLEN/8, x4, x1, x2)

inst_72884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:218652*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218652*0 + 3*692*FLEN/8, x4, x1, x2)

inst_72885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8003ffffffffffff; valaddr_reg:x3; val_offset:218655*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218655*0 + 3*693*FLEN/8, x4, x1, x2)

inst_72886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:218658*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218658*0 + 3*694*FLEN/8, x4, x1, x2)

inst_72887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:218661*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218661*0 + 3*695*FLEN/8, x4, x1, x2)

inst_72888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:218664*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218664*0 + 3*696*FLEN/8, x4, x1, x2)

inst_72889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:218667*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218667*0 + 3*697*FLEN/8, x4, x1, x2)

inst_72890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8007ffffffffffff; valaddr_reg:x3; val_offset:218670*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218670*0 + 3*698*FLEN/8, x4, x1, x2)

inst_72891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8008000000000000; valaddr_reg:x3; val_offset:218673*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218673*0 + 3*699*FLEN/8, x4, x1, x2)

inst_72892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:218676*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218676*0 + 3*700*FLEN/8, x4, x1, x2)

inst_72893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:218679*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218679*0 + 3*701*FLEN/8, x4, x1, x2)

inst_72894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:218682*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218682*0 + 3*702*FLEN/8, x4, x1, x2)

inst_72895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800c000000000000; valaddr_reg:x3; val_offset:218685*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218685*0 + 3*703*FLEN/8, x4, x1, x2)

inst_72896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:218688*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218688*0 + 3*704*FLEN/8, x4, x1, x2)

inst_72897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:218691*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218691*0 + 3*705*FLEN/8, x4, x1, x2)

inst_72898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800e000000000000; valaddr_reg:x3; val_offset:218694*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218694*0 + 3*706*FLEN/8, x4, x1, x2)

inst_72899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800f000000000000; valaddr_reg:x3; val_offset:218697*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218697*0 + 3*707*FLEN/8, x4, x1, x2)

inst_72900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800f800000000000; valaddr_reg:x3; val_offset:218700*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218700*0 + 3*708*FLEN/8, x4, x1, x2)

inst_72901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fc00000000000; valaddr_reg:x3; val_offset:218703*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218703*0 + 3*709*FLEN/8, x4, x1, x2)

inst_72902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fe00000000000; valaddr_reg:x3; val_offset:218706*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218706*0 + 3*710*FLEN/8, x4, x1, x2)

inst_72903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ff00000000000; valaddr_reg:x3; val_offset:218709*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218709*0 + 3*711*FLEN/8, x4, x1, x2)

inst_72904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ff80000000000; valaddr_reg:x3; val_offset:218712*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218712*0 + 3*712*FLEN/8, x4, x1, x2)

inst_72905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffc0000000000; valaddr_reg:x3; val_offset:218715*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218715*0 + 3*713*FLEN/8, x4, x1, x2)

inst_72906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffe0000000000; valaddr_reg:x3; val_offset:218718*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218718*0 + 3*714*FLEN/8, x4, x1, x2)

inst_72907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fff0000000000; valaddr_reg:x3; val_offset:218721*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218721*0 + 3*715*FLEN/8, x4, x1, x2)

inst_72908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fff8000000000; valaddr_reg:x3; val_offset:218724*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218724*0 + 3*716*FLEN/8, x4, x1, x2)

inst_72909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffc000000000; valaddr_reg:x3; val_offset:218727*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218727*0 + 3*717*FLEN/8, x4, x1, x2)

inst_72910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffe000000000; valaddr_reg:x3; val_offset:218730*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218730*0 + 3*718*FLEN/8, x4, x1, x2)

inst_72911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffff000000000; valaddr_reg:x3; val_offset:218733*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218733*0 + 3*719*FLEN/8, x4, x1, x2)

inst_72912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffff800000000; valaddr_reg:x3; val_offset:218736*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218736*0 + 3*720*FLEN/8, x4, x1, x2)

inst_72913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffc00000000; valaddr_reg:x3; val_offset:218739*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218739*0 + 3*721*FLEN/8, x4, x1, x2)

inst_72914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffe00000000; valaddr_reg:x3; val_offset:218742*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218742*0 + 3*722*FLEN/8, x4, x1, x2)

inst_72915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffff00000000; valaddr_reg:x3; val_offset:218745*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218745*0 + 3*723*FLEN/8, x4, x1, x2)

inst_72916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffff80000000; valaddr_reg:x3; val_offset:218748*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218748*0 + 3*724*FLEN/8, x4, x1, x2)

inst_72917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffc0000000; valaddr_reg:x3; val_offset:218751*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218751*0 + 3*725*FLEN/8, x4, x1, x2)

inst_72918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffe0000000; valaddr_reg:x3; val_offset:218754*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218754*0 + 3*726*FLEN/8, x4, x1, x2)

inst_72919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffff0000000; valaddr_reg:x3; val_offset:218757*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218757*0 + 3*727*FLEN/8, x4, x1, x2)

inst_72920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffff8000000; valaddr_reg:x3; val_offset:218760*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218760*0 + 3*728*FLEN/8, x4, x1, x2)

inst_72921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffc000000; valaddr_reg:x3; val_offset:218763*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218763*0 + 3*729*FLEN/8, x4, x1, x2)

inst_72922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffe000000; valaddr_reg:x3; val_offset:218766*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218766*0 + 3*730*FLEN/8, x4, x1, x2)

inst_72923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffff000000; valaddr_reg:x3; val_offset:218769*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218769*0 + 3*731*FLEN/8, x4, x1, x2)

inst_72924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffff800000; valaddr_reg:x3; val_offset:218772*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218772*0 + 3*732*FLEN/8, x4, x1, x2)

inst_72925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffc00000; valaddr_reg:x3; val_offset:218775*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218775*0 + 3*733*FLEN/8, x4, x1, x2)

inst_72926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffe00000; valaddr_reg:x3; val_offset:218778*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218778*0 + 3*734*FLEN/8, x4, x1, x2)

inst_72927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffff00000; valaddr_reg:x3; val_offset:218781*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218781*0 + 3*735*FLEN/8, x4, x1, x2)

inst_72928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffff80000; valaddr_reg:x3; val_offset:218784*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218784*0 + 3*736*FLEN/8, x4, x1, x2)

inst_72929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffc0000; valaddr_reg:x3; val_offset:218787*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218787*0 + 3*737*FLEN/8, x4, x1, x2)

inst_72930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffe0000; valaddr_reg:x3; val_offset:218790*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218790*0 + 3*738*FLEN/8, x4, x1, x2)

inst_72931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffff0000; valaddr_reg:x3; val_offset:218793*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218793*0 + 3*739*FLEN/8, x4, x1, x2)

inst_72932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffff8000; valaddr_reg:x3; val_offset:218796*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218796*0 + 3*740*FLEN/8, x4, x1, x2)

inst_72933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffc000; valaddr_reg:x3; val_offset:218799*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218799*0 + 3*741*FLEN/8, x4, x1, x2)

inst_72934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffe000; valaddr_reg:x3; val_offset:218802*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218802*0 + 3*742*FLEN/8, x4, x1, x2)

inst_72935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffff000; valaddr_reg:x3; val_offset:218805*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218805*0 + 3*743*FLEN/8, x4, x1, x2)

inst_72936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffff800; valaddr_reg:x3; val_offset:218808*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218808*0 + 3*744*FLEN/8, x4, x1, x2)

inst_72937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffc00; valaddr_reg:x3; val_offset:218811*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218811*0 + 3*745*FLEN/8, x4, x1, x2)

inst_72938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffe00; valaddr_reg:x3; val_offset:218814*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218814*0 + 3*746*FLEN/8, x4, x1, x2)

inst_72939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffff00; valaddr_reg:x3; val_offset:218817*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218817*0 + 3*747*FLEN/8, x4, x1, x2)

inst_72940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffff80; valaddr_reg:x3; val_offset:218820*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218820*0 + 3*748*FLEN/8, x4, x1, x2)

inst_72941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:218823*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218823*0 + 3*749*FLEN/8, x4, x1, x2)

inst_72942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:218826*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218826*0 + 3*750*FLEN/8, x4, x1, x2)

inst_72943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:218829*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218829*0 + 3*751*FLEN/8, x4, x1, x2)

inst_72944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:218832*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218832*0 + 3*752*FLEN/8, x4, x1, x2)

inst_72945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:218835*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218835*0 + 3*753*FLEN/8, x4, x1, x2)

inst_72946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:218838*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218838*0 + 3*754*FLEN/8, x4, x1, x2)

inst_72947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x6829b72db22b5 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa6829b72db22b5; op2val:0x8000;
op3val:0x800fffffffffffff; valaddr_reg:x3; val_offset:218841*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218841*0 + 3*755*FLEN/8, x4, x1, x2)

inst_72948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb0000000000000; valaddr_reg:x3; val_offset:218844*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218844*0 + 3*756*FLEN/8, x4, x1, x2)

inst_72949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb0000000000001; valaddr_reg:x3; val_offset:218847*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218847*0 + 3*757*FLEN/8, x4, x1, x2)

inst_72950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb0000000000003; valaddr_reg:x3; val_offset:218850*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218850*0 + 3*758*FLEN/8, x4, x1, x2)

inst_72951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb0000000000007; valaddr_reg:x3; val_offset:218853*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218853*0 + 3*759*FLEN/8, x4, x1, x2)

inst_72952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb000000000000f; valaddr_reg:x3; val_offset:218856*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218856*0 + 3*760*FLEN/8, x4, x1, x2)

inst_72953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb000000000001f; valaddr_reg:x3; val_offset:218859*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218859*0 + 3*761*FLEN/8, x4, x1, x2)

inst_72954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb000000000003f; valaddr_reg:x3; val_offset:218862*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218862*0 + 3*762*FLEN/8, x4, x1, x2)

inst_72955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb000000000007f; valaddr_reg:x3; val_offset:218865*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218865*0 + 3*763*FLEN/8, x4, x1, x2)

inst_72956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb00000000000ff; valaddr_reg:x3; val_offset:218868*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218868*0 + 3*764*FLEN/8, x4, x1, x2)

inst_72957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb00000000001ff; valaddr_reg:x3; val_offset:218871*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218871*0 + 3*765*FLEN/8, x4, x1, x2)

inst_72958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb00000000003ff; valaddr_reg:x3; val_offset:218874*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218874*0 + 3*766*FLEN/8, x4, x1, x2)

inst_72959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x692171f6bd238 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x6af2f079ef5b3 and fs3 == 1 and fe3 == 0x3db and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa692171f6bd238; op2val:0x9fc6af2f079ef5b3;
op3val:0xbdb00000000007ff; valaddr_reg:x3; val_offset:218877*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 218877*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509479936,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509480960,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481472,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481728,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481856,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481920,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481952,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481968,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481976,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481980,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481982,64,FLEN)
NAN_BOXED(6892281220928640301,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(18014398509481983,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636288,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636289,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636291,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636295,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636303,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636319,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636351,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636415,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636543,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636799,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250637311,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250638335,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250640383,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250644479,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250652671,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250669055,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250701823,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250767359,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250898431,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251160575,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780251684863,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780252733439,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780254830591,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780259024895,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780267413503,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780284190719,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780317745151,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780384854015,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780519071743,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780787507199,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690781324378111,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690782398119935,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690784545603583,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690788840570879,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690797430505471,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690814610374655,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690848970113023,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690917689589759,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691055128543231,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691330006450175,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238691879762264063,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238692979273891839,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238695178297147391,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238699576343658495,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238708372436680703,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238725964622725119,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238761148994813951,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238831517738991615,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238972255227346943,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239253730204057599,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(239816680157478911,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321535,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(240942580064321536,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242068479971164160,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242631429924585472,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(242912904901296128,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243053642389651456,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243124011133829120,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243159195505917952,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243176787691962368,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243185583784984576,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243189981831495680,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243192180854751232,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193280366379008,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243193830122192896,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194105000099840,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194242439053312,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194311158530048,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194345518268416,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194362698137600,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194371288072192,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194375583039488,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194377730523136,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194378804264960,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379341135872,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379609571328,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379743789056,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379810897920,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379844452352,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379861229568,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379869618176,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379873812480,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379875909632,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379876958208,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877482496,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877744640,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877875712,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877941248,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877974016,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877990400,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379877998592,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878002688,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878004736,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878005760,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006272,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006528,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006656,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006720,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006752,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006768,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006776,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006780,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006782,64,FLEN)
NAN_BOXED(6892296402596088566,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006783,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262400,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262401,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262403,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262407,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262415,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262431,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262463,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262527,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262655,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262911,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684263423,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684264447,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684266495,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684270591,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684278783,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684295167,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684327935,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684393471,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684524543,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684786687,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990685310975,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990686359551,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990688456703,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990692651007,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990701039615,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990717816831,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990751371263,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990818480127,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990952697855,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991221133311,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589991758004223,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589992831746047,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589994979229695,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589999274196991,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590007864131583,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590025044000767,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590059403739135,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590128123215871,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590265562169343,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112590540440076287,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112591090195890175,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112592189707517951,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112594388730773503,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112598786777284607,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112607582870306815,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112625175056351231,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112660359428440063,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112730728172617727,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112871465660973055,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113152940637683711,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(113715890591105023,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947647,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(114841790497947648,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(115967690404790272,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116530640358211584,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116812115334922240,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(116952852823277568,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117023221567455232,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117058405939544064,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117075998125588480,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117084794218610688,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117089192265121792,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117091391288377344,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117092490800005120,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093040555819008,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093315433725952,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093452872679424,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093521592156160,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093555951894528,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093573131763712,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093581721698304,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093586016665600,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093588164149248,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589237891072,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093589774761984,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590043197440,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590177415168,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590244524032,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590278078464,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590294855680,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590303244288,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590307438592,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590309535744,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590310584320,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311108608,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311370752,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311501824,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311567360,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311600128,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311616512,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311624704,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311628800,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311630848,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311631872,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632384,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632640,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632768,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632832,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632864,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632880,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632888,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632892,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632894,64,FLEN)
NAN_BOXED(6892300153437750152,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(117093590311632895,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970752,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970753,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970755,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970759,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970767,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970783,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970815,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896970879,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971007,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971263,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896971775,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896972799,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896974847,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896978943,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176896987135,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897003519,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897036287,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897101823,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897232895,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176897495039,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176898019327,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176899067903,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176901165055,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176905359359,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176913747967,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176930525183,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223176964079615,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177031188479,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177165406207,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177433841663,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223177970712575,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223179044454399,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223181191938047,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223185486905343,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223194076839935,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223211256709119,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223245616447487,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223314335924223,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223451774877695,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279223726652784639,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279224276408598527,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279225375920226303,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279227574943481855,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279231972989992959,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279240769083015167,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279258361269059583,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279293545641148415,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279363914385326079,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279504651873681407,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(279786126850392063,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(280349076803813375,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655999,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710656000,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(282600876617498624,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283163826570919936,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283445301547630592,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283586039035985920,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283656407780163584,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283691592152252416,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283709184338296832,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283717980431319040,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283722378477830144,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283724577501085696,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283725677012713472,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726226768527360,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726501646434304,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726639085387776,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726707804864512,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726742164602880,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726759344472064,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726767934406656,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726772229373952,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726774376857600,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775450599424,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726775987470336,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776255905792,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776390123520,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776457232384,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776490786816,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776507564032,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776515952640,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776520146944,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776522244096,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523292672,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776523816960,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524079104,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524210176,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524275712,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524308480,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524324864,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524333056,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524337152,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524339200,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340224,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340736,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524340992,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341120,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341184,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341216,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341232,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341240,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341244,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341246,64,FLEN)
NAN_BOXED(6892304171754740367,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(283726776524341247,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485376,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485377,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485379,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485383,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485391,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485407,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485439,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485503,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485631,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485887,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448486399,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448487423,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448489471,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448493567,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448501759,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448518143,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448550911,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448616447,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448747519,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449009663,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588449533951,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588450582527,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588452679679,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588456873983,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588465262591,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588482039807,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588515594239,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588582703103,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588716920831,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588985356287,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611589522227199,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611590595969023,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611592743452671,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611597038419967,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611605628354559,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611622808223743,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611657167962111,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611725887438847,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611863326392319,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612138204299263,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139612687960113151,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139613787471740927,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139615986494996479,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139620384541507583,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139629180634529791,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139646772820574207,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139681957192663039,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139752325936840703,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139893063425196031,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140174538401906687,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327999,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170623,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(141863388262170624,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(142989288169013248,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143552238122434560,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143833713099145216,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(143974450587500544,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144044819331678208,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144080003703767040,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144097595889811456,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144106391982833664,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144110790029344768,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144112989052600320,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114088564228096,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114638320041984,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144114913197948928,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115050636902400,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115119356379136,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115153716117504,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115170895986688,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115179485921280,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115183780888576,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115185928372224,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187002114048,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187538984960,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187807420416,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115187941638144,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188008747008,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188042301440,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188059078656,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188067467264,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188071661568,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188073758720,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188074807296,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075331584,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075593728,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075724800,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075790336,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075823104,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075839488,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075847680,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075851776,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075853824,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075854848,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855360,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855616,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855744,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855808,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855840,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855856,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855864,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855868,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855870,64,FLEN)
NAN_BOXED(6892315196602135658,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(144115188075855871,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628736,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628737,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628739,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628743,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628751,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628767,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628799,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628863,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096628991,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096629247,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096629759,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096630783,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096632831,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096636927,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096645119,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096661503,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096694271,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096759807,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504096890879,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504097153023,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504097677311,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504098725887,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504100823039,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504105017343,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504113405951,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504130183167,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504163737599,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504230846463,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504365064191,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086504633499647,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086505170370559,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086506244112383,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086508391596031,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086512686563327,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086521276497919,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086538456367103,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086572816105471,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086641535582207,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245086778974535679,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245087053852442623,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245087603608256511,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245088703119884287,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245090902143139839,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245095300189650943,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245104096282673151,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245121688468717567,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245156872840806399,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245227241584984063,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245367979073339391,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13245649454050050047,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13246212404003471359,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13247338303910313983,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13247338303910313984,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13248464203817156608,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249027153770577920,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249308628747288576,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249449366235643904,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249519734979821568,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249554919351910400,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249572511537954816,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249581307630977024,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249585705677488128,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249587904700743680,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249589004212371456,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249589553968185344,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249589828846092288,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249589966285045760,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590035004522496,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590069364260864,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590086544130048,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590095134064640,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590099429031936,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590101576515584,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590102650257408,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103187128320,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103455563776,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103589781504,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103656890368,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103690444800,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103707222016,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103715610624,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103719804928,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103721902080,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103722950656,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723474944,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723737088,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723868160,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723933696,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723966464,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723982848,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723991040,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723995136,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723997184,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723998208,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723998720,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723998976,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999104,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999168,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999200,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999216,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999224,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999228,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999230,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13249590103723999231,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892334816411419106,64,FLEN)
NAN_BOXED(11513104393986364071,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775935,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776063,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776319,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854776831,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854777855,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854779903,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854783999,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854792191,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854808575,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854841343,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854906879,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855037951,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855300095,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036855824383,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036856872959,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036858970111,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036863164415,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036871553023,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036888330239,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036921884671,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036988993535,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037123211263,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037391646719,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372037928517631,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372039002259455,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372041149743103,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372045444710399,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372054034644991,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372071214514175,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372105574252543,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372174293729279,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372311732682751,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372586610589695,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223373136366403583,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223374235878031359,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223376434901286911,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223380832947798015,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223389629040820223,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223407221226864639,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223442405598953471,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223512774343131135,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223653511831486463,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223934986808197119,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224497936761618431,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461055,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225623836668461056,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226749736575303680,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227312686528724992,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227594161505435648,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227734898993790976,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227805267737968640,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227840452110057472,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227858044296101888,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227866840389124096,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227871238435635200,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227873437458890752,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227874536970518528,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875086726332416,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875361604239360,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875499043192832,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875567762669568,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875602122407936,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875619302277120,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875627892211712,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875632187179008,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875634334662656,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635408404480,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875635945275392,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636213710848,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636347928576,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636415037440,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636448591872,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636465369088,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636473757696,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636477952000,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636480049152,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481097728,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481622016,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636481884160,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482015232,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482080768,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482113536,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482129920,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482138112,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482142208,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482144256,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145280,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482145792,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146048,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146176,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892339883895628469,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146303,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455360,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455361,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455363,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455367,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455375,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455391,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455423,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455487,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455615,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069455871,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069456383,64,FLEN)
NAN_BOXED(6892356907746185784,64,FLEN)
NAN_BOXED(11513082113945433523,64,FLEN)
NAN_BOXED(13668424869069457407,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
