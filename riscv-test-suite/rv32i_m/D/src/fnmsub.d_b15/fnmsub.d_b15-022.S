
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_16128:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:48384*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48384*0 + 3*0*FLEN/8, x4, x1, x2)

inst_16129:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:48387*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48387*0 + 3*1*FLEN/8, x4, x1, x2)

inst_16130:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:48390*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48390*0 + 3*2*FLEN/8, x4, x1, x2)

inst_16131:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:48393*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48393*0 + 3*3*FLEN/8, x4, x1, x2)

inst_16132:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:48396*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48396*0 + 3*4*FLEN/8, x4, x1, x2)

inst_16133:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:48399*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48399*0 + 3*5*FLEN/8, x4, x1, x2)

inst_16134:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:48402*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48402*0 + 3*6*FLEN/8, x4, x1, x2)

inst_16135:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:48405*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48405*0 + 3*7*FLEN/8, x4, x1, x2)

inst_16136:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:48408*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48408*0 + 3*8*FLEN/8, x4, x1, x2)

inst_16137:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:48411*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48411*0 + 3*9*FLEN/8, x4, x1, x2)

inst_16138:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000000000; valaddr_reg:x3; val_offset:48414*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48414*0 + 3*10*FLEN/8, x4, x1, x2)

inst_16139:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000000001; valaddr_reg:x3; val_offset:48417*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48417*0 + 3*11*FLEN/8, x4, x1, x2)

inst_16140:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000000003; valaddr_reg:x3; val_offset:48420*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48420*0 + 3*12*FLEN/8, x4, x1, x2)

inst_16141:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000000007; valaddr_reg:x3; val_offset:48423*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48423*0 + 3*13*FLEN/8, x4, x1, x2)

inst_16142:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000000000f; valaddr_reg:x3; val_offset:48426*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48426*0 + 3*14*FLEN/8, x4, x1, x2)

inst_16143:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000000001f; valaddr_reg:x3; val_offset:48429*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48429*0 + 3*15*FLEN/8, x4, x1, x2)

inst_16144:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000000003f; valaddr_reg:x3; val_offset:48432*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48432*0 + 3*16*FLEN/8, x4, x1, x2)

inst_16145:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000000007f; valaddr_reg:x3; val_offset:48435*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48435*0 + 3*17*FLEN/8, x4, x1, x2)

inst_16146:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000000000ff; valaddr_reg:x3; val_offset:48438*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48438*0 + 3*18*FLEN/8, x4, x1, x2)

inst_16147:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000000001ff; valaddr_reg:x3; val_offset:48441*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48441*0 + 3*19*FLEN/8, x4, x1, x2)

inst_16148:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000000003ff; valaddr_reg:x3; val_offset:48444*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48444*0 + 3*20*FLEN/8, x4, x1, x2)

inst_16149:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000000007ff; valaddr_reg:x3; val_offset:48447*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48447*0 + 3*21*FLEN/8, x4, x1, x2)

inst_16150:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000000fff; valaddr_reg:x3; val_offset:48450*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48450*0 + 3*22*FLEN/8, x4, x1, x2)

inst_16151:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000001fff; valaddr_reg:x3; val_offset:48453*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48453*0 + 3*23*FLEN/8, x4, x1, x2)

inst_16152:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000003fff; valaddr_reg:x3; val_offset:48456*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48456*0 + 3*24*FLEN/8, x4, x1, x2)

inst_16153:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000007fff; valaddr_reg:x3; val_offset:48459*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48459*0 + 3*25*FLEN/8, x4, x1, x2)

inst_16154:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000000ffff; valaddr_reg:x3; val_offset:48462*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48462*0 + 3*26*FLEN/8, x4, x1, x2)

inst_16155:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000001ffff; valaddr_reg:x3; val_offset:48465*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48465*0 + 3*27*FLEN/8, x4, x1, x2)

inst_16156:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000003ffff; valaddr_reg:x3; val_offset:48468*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48468*0 + 3*28*FLEN/8, x4, x1, x2)

inst_16157:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000007ffff; valaddr_reg:x3; val_offset:48471*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48471*0 + 3*29*FLEN/8, x4, x1, x2)

inst_16158:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000000fffff; valaddr_reg:x3; val_offset:48474*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48474*0 + 3*30*FLEN/8, x4, x1, x2)

inst_16159:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000001fffff; valaddr_reg:x3; val_offset:48477*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48477*0 + 3*31*FLEN/8, x4, x1, x2)

inst_16160:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000003fffff; valaddr_reg:x3; val_offset:48480*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48480*0 + 3*32*FLEN/8, x4, x1, x2)

inst_16161:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000007fffff; valaddr_reg:x3; val_offset:48483*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48483*0 + 3*33*FLEN/8, x4, x1, x2)

inst_16162:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000000ffffff; valaddr_reg:x3; val_offset:48486*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48486*0 + 3*34*FLEN/8, x4, x1, x2)

inst_16163:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000001ffffff; valaddr_reg:x3; val_offset:48489*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48489*0 + 3*35*FLEN/8, x4, x1, x2)

inst_16164:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000003ffffff; valaddr_reg:x3; val_offset:48492*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48492*0 + 3*36*FLEN/8, x4, x1, x2)

inst_16165:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000007ffffff; valaddr_reg:x3; val_offset:48495*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48495*0 + 3*37*FLEN/8, x4, x1, x2)

inst_16166:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000000fffffff; valaddr_reg:x3; val_offset:48498*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48498*0 + 3*38*FLEN/8, x4, x1, x2)

inst_16167:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000001fffffff; valaddr_reg:x3; val_offset:48501*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48501*0 + 3*39*FLEN/8, x4, x1, x2)

inst_16168:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000003fffffff; valaddr_reg:x3; val_offset:48504*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48504*0 + 3*40*FLEN/8, x4, x1, x2)

inst_16169:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000007fffffff; valaddr_reg:x3; val_offset:48507*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48507*0 + 3*41*FLEN/8, x4, x1, x2)

inst_16170:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200000ffffffff; valaddr_reg:x3; val_offset:48510*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48510*0 + 3*42*FLEN/8, x4, x1, x2)

inst_16171:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200001ffffffff; valaddr_reg:x3; val_offset:48513*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48513*0 + 3*43*FLEN/8, x4, x1, x2)

inst_16172:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200003ffffffff; valaddr_reg:x3; val_offset:48516*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48516*0 + 3*44*FLEN/8, x4, x1, x2)

inst_16173:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200007ffffffff; valaddr_reg:x3; val_offset:48519*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48519*0 + 3*45*FLEN/8, x4, x1, x2)

inst_16174:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220000fffffffff; valaddr_reg:x3; val_offset:48522*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48522*0 + 3*46*FLEN/8, x4, x1, x2)

inst_16175:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220001fffffffff; valaddr_reg:x3; val_offset:48525*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48525*0 + 3*47*FLEN/8, x4, x1, x2)

inst_16176:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220003fffffffff; valaddr_reg:x3; val_offset:48528*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48528*0 + 3*48*FLEN/8, x4, x1, x2)

inst_16177:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220007fffffffff; valaddr_reg:x3; val_offset:48531*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48531*0 + 3*49*FLEN/8, x4, x1, x2)

inst_16178:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22000ffffffffff; valaddr_reg:x3; val_offset:48534*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48534*0 + 3*50*FLEN/8, x4, x1, x2)

inst_16179:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22001ffffffffff; valaddr_reg:x3; val_offset:48537*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48537*0 + 3*51*FLEN/8, x4, x1, x2)

inst_16180:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22003ffffffffff; valaddr_reg:x3; val_offset:48540*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48540*0 + 3*52*FLEN/8, x4, x1, x2)

inst_16181:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22007ffffffffff; valaddr_reg:x3; val_offset:48543*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48543*0 + 3*53*FLEN/8, x4, x1, x2)

inst_16182:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2200fffffffffff; valaddr_reg:x3; val_offset:48546*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48546*0 + 3*54*FLEN/8, x4, x1, x2)

inst_16183:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2201fffffffffff; valaddr_reg:x3; val_offset:48549*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48549*0 + 3*55*FLEN/8, x4, x1, x2)

inst_16184:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2203fffffffffff; valaddr_reg:x3; val_offset:48552*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48552*0 + 3*56*FLEN/8, x4, x1, x2)

inst_16185:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x2207fffffffffff; valaddr_reg:x3; val_offset:48555*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48555*0 + 3*57*FLEN/8, x4, x1, x2)

inst_16186:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x220ffffffffffff; valaddr_reg:x3; val_offset:48558*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48558*0 + 3*58*FLEN/8, x4, x1, x2)

inst_16187:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x221ffffffffffff; valaddr_reg:x3; val_offset:48561*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48561*0 + 3*59*FLEN/8, x4, x1, x2)

inst_16188:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x223ffffffffffff; valaddr_reg:x3; val_offset:48564*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48564*0 + 3*60*FLEN/8, x4, x1, x2)

inst_16189:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x227ffffffffffff; valaddr_reg:x3; val_offset:48567*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48567*0 + 3*61*FLEN/8, x4, x1, x2)

inst_16190:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x228000000000000; valaddr_reg:x3; val_offset:48570*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48570*0 + 3*62*FLEN/8, x4, x1, x2)

inst_16191:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22c000000000000; valaddr_reg:x3; val_offset:48573*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48573*0 + 3*63*FLEN/8, x4, x1, x2)

inst_16192:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22e000000000000; valaddr_reg:x3; val_offset:48576*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48576*0 + 3*64*FLEN/8, x4, x1, x2)

inst_16193:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22f000000000000; valaddr_reg:x3; val_offset:48579*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48579*0 + 3*65*FLEN/8, x4, x1, x2)

inst_16194:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22f800000000000; valaddr_reg:x3; val_offset:48582*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48582*0 + 3*66*FLEN/8, x4, x1, x2)

inst_16195:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fc00000000000; valaddr_reg:x3; val_offset:48585*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48585*0 + 3*67*FLEN/8, x4, x1, x2)

inst_16196:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fe00000000000; valaddr_reg:x3; val_offset:48588*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48588*0 + 3*68*FLEN/8, x4, x1, x2)

inst_16197:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ff00000000000; valaddr_reg:x3; val_offset:48591*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48591*0 + 3*69*FLEN/8, x4, x1, x2)

inst_16198:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ff80000000000; valaddr_reg:x3; val_offset:48594*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48594*0 + 3*70*FLEN/8, x4, x1, x2)

inst_16199:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffc0000000000; valaddr_reg:x3; val_offset:48597*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48597*0 + 3*71*FLEN/8, x4, x1, x2)

inst_16200:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffe0000000000; valaddr_reg:x3; val_offset:48600*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48600*0 + 3*72*FLEN/8, x4, x1, x2)

inst_16201:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fff0000000000; valaddr_reg:x3; val_offset:48603*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48603*0 + 3*73*FLEN/8, x4, x1, x2)

inst_16202:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fff8000000000; valaddr_reg:x3; val_offset:48606*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48606*0 + 3*74*FLEN/8, x4, x1, x2)

inst_16203:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffc000000000; valaddr_reg:x3; val_offset:48609*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48609*0 + 3*75*FLEN/8, x4, x1, x2)

inst_16204:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffe000000000; valaddr_reg:x3; val_offset:48612*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48612*0 + 3*76*FLEN/8, x4, x1, x2)

inst_16205:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffff000000000; valaddr_reg:x3; val_offset:48615*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48615*0 + 3*77*FLEN/8, x4, x1, x2)

inst_16206:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffff800000000; valaddr_reg:x3; val_offset:48618*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48618*0 + 3*78*FLEN/8, x4, x1, x2)

inst_16207:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffc00000000; valaddr_reg:x3; val_offset:48621*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48621*0 + 3*79*FLEN/8, x4, x1, x2)

inst_16208:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffe00000000; valaddr_reg:x3; val_offset:48624*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48624*0 + 3*80*FLEN/8, x4, x1, x2)

inst_16209:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffff00000000; valaddr_reg:x3; val_offset:48627*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48627*0 + 3*81*FLEN/8, x4, x1, x2)

inst_16210:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffff80000000; valaddr_reg:x3; val_offset:48630*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48630*0 + 3*82*FLEN/8, x4, x1, x2)

inst_16211:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffc0000000; valaddr_reg:x3; val_offset:48633*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48633*0 + 3*83*FLEN/8, x4, x1, x2)

inst_16212:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffe0000000; valaddr_reg:x3; val_offset:48636*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48636*0 + 3*84*FLEN/8, x4, x1, x2)

inst_16213:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffff0000000; valaddr_reg:x3; val_offset:48639*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48639*0 + 3*85*FLEN/8, x4, x1, x2)

inst_16214:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffff8000000; valaddr_reg:x3; val_offset:48642*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48642*0 + 3*86*FLEN/8, x4, x1, x2)

inst_16215:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffc000000; valaddr_reg:x3; val_offset:48645*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48645*0 + 3*87*FLEN/8, x4, x1, x2)

inst_16216:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffe000000; valaddr_reg:x3; val_offset:48648*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48648*0 + 3*88*FLEN/8, x4, x1, x2)

inst_16217:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffff000000; valaddr_reg:x3; val_offset:48651*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48651*0 + 3*89*FLEN/8, x4, x1, x2)

inst_16218:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffff800000; valaddr_reg:x3; val_offset:48654*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48654*0 + 3*90*FLEN/8, x4, x1, x2)

inst_16219:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffc00000; valaddr_reg:x3; val_offset:48657*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48657*0 + 3*91*FLEN/8, x4, x1, x2)

inst_16220:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffe00000; valaddr_reg:x3; val_offset:48660*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48660*0 + 3*92*FLEN/8, x4, x1, x2)

inst_16221:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffff00000; valaddr_reg:x3; val_offset:48663*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48663*0 + 3*93*FLEN/8, x4, x1, x2)

inst_16222:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffff80000; valaddr_reg:x3; val_offset:48666*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48666*0 + 3*94*FLEN/8, x4, x1, x2)

inst_16223:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffc0000; valaddr_reg:x3; val_offset:48669*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48669*0 + 3*95*FLEN/8, x4, x1, x2)

inst_16224:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffe0000; valaddr_reg:x3; val_offset:48672*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48672*0 + 3*96*FLEN/8, x4, x1, x2)

inst_16225:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffff0000; valaddr_reg:x3; val_offset:48675*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48675*0 + 3*97*FLEN/8, x4, x1, x2)

inst_16226:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffff8000; valaddr_reg:x3; val_offset:48678*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48678*0 + 3*98*FLEN/8, x4, x1, x2)

inst_16227:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffc000; valaddr_reg:x3; val_offset:48681*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48681*0 + 3*99*FLEN/8, x4, x1, x2)

inst_16228:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffe000; valaddr_reg:x3; val_offset:48684*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48684*0 + 3*100*FLEN/8, x4, x1, x2)

inst_16229:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffff000; valaddr_reg:x3; val_offset:48687*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48687*0 + 3*101*FLEN/8, x4, x1, x2)

inst_16230:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffff800; valaddr_reg:x3; val_offset:48690*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48690*0 + 3*102*FLEN/8, x4, x1, x2)

inst_16231:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffc00; valaddr_reg:x3; val_offset:48693*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48693*0 + 3*103*FLEN/8, x4, x1, x2)

inst_16232:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffe00; valaddr_reg:x3; val_offset:48696*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48696*0 + 3*104*FLEN/8, x4, x1, x2)

inst_16233:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffff00; valaddr_reg:x3; val_offset:48699*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48699*0 + 3*105*FLEN/8, x4, x1, x2)

inst_16234:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffff80; valaddr_reg:x3; val_offset:48702*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48702*0 + 3*106*FLEN/8, x4, x1, x2)

inst_16235:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffffc0; valaddr_reg:x3; val_offset:48705*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48705*0 + 3*107*FLEN/8, x4, x1, x2)

inst_16236:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffffe0; valaddr_reg:x3; val_offset:48708*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48708*0 + 3*108*FLEN/8, x4, x1, x2)

inst_16237:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffff0; valaddr_reg:x3; val_offset:48711*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48711*0 + 3*109*FLEN/8, x4, x1, x2)

inst_16238:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffff8; valaddr_reg:x3; val_offset:48714*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48714*0 + 3*110*FLEN/8, x4, x1, x2)

inst_16239:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffffc; valaddr_reg:x3; val_offset:48717*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48717*0 + 3*111*FLEN/8, x4, x1, x2)

inst_16240:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22ffffffffffffe; valaddr_reg:x3; val_offset:48720*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48720*0 + 3*112*FLEN/8, x4, x1, x2)

inst_16241:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x250d8a95e7153 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x022 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8250d8a95e7153; op2val:0x0;
op3val:0x22fffffffffffff; valaddr_reg:x3; val_offset:48723*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48723*0 + 3*113*FLEN/8, x4, x1, x2)

inst_16242:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000000000; valaddr_reg:x3; val_offset:48726*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48726*0 + 3*114*FLEN/8, x4, x1, x2)

inst_16243:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000000001; valaddr_reg:x3; val_offset:48729*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48729*0 + 3*115*FLEN/8, x4, x1, x2)

inst_16244:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000000003; valaddr_reg:x3; val_offset:48732*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48732*0 + 3*116*FLEN/8, x4, x1, x2)

inst_16245:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000000007; valaddr_reg:x3; val_offset:48735*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48735*0 + 3*117*FLEN/8, x4, x1, x2)

inst_16246:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000000000f; valaddr_reg:x3; val_offset:48738*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48738*0 + 3*118*FLEN/8, x4, x1, x2)

inst_16247:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000000001f; valaddr_reg:x3; val_offset:48741*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48741*0 + 3*119*FLEN/8, x4, x1, x2)

inst_16248:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000000003f; valaddr_reg:x3; val_offset:48744*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48744*0 + 3*120*FLEN/8, x4, x1, x2)

inst_16249:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000000007f; valaddr_reg:x3; val_offset:48747*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48747*0 + 3*121*FLEN/8, x4, x1, x2)

inst_16250:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000000000ff; valaddr_reg:x3; val_offset:48750*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48750*0 + 3*122*FLEN/8, x4, x1, x2)

inst_16251:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000000001ff; valaddr_reg:x3; val_offset:48753*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48753*0 + 3*123*FLEN/8, x4, x1, x2)

inst_16252:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000000003ff; valaddr_reg:x3; val_offset:48756*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48756*0 + 3*124*FLEN/8, x4, x1, x2)

inst_16253:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000000007ff; valaddr_reg:x3; val_offset:48759*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48759*0 + 3*125*FLEN/8, x4, x1, x2)

inst_16254:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000000fff; valaddr_reg:x3; val_offset:48762*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48762*0 + 3*126*FLEN/8, x4, x1, x2)

inst_16255:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000001fff; valaddr_reg:x3; val_offset:48765*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48765*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_16256:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000003fff; valaddr_reg:x3; val_offset:48768*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48768*0 + 3*128*FLEN/8, x4, x1, x2)

inst_16257:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000007fff; valaddr_reg:x3; val_offset:48771*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48771*0 + 3*129*FLEN/8, x4, x1, x2)

inst_16258:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000000ffff; valaddr_reg:x3; val_offset:48774*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48774*0 + 3*130*FLEN/8, x4, x1, x2)

inst_16259:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000001ffff; valaddr_reg:x3; val_offset:48777*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48777*0 + 3*131*FLEN/8, x4, x1, x2)

inst_16260:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000003ffff; valaddr_reg:x3; val_offset:48780*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48780*0 + 3*132*FLEN/8, x4, x1, x2)

inst_16261:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000007ffff; valaddr_reg:x3; val_offset:48783*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48783*0 + 3*133*FLEN/8, x4, x1, x2)

inst_16262:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000000fffff; valaddr_reg:x3; val_offset:48786*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48786*0 + 3*134*FLEN/8, x4, x1, x2)

inst_16263:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000001fffff; valaddr_reg:x3; val_offset:48789*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48789*0 + 3*135*FLEN/8, x4, x1, x2)

inst_16264:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000003fffff; valaddr_reg:x3; val_offset:48792*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48792*0 + 3*136*FLEN/8, x4, x1, x2)

inst_16265:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000007fffff; valaddr_reg:x3; val_offset:48795*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48795*0 + 3*137*FLEN/8, x4, x1, x2)

inst_16266:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000000ffffff; valaddr_reg:x3; val_offset:48798*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48798*0 + 3*138*FLEN/8, x4, x1, x2)

inst_16267:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000001ffffff; valaddr_reg:x3; val_offset:48801*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48801*0 + 3*139*FLEN/8, x4, x1, x2)

inst_16268:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000003ffffff; valaddr_reg:x3; val_offset:48804*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48804*0 + 3*140*FLEN/8, x4, x1, x2)

inst_16269:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000007ffffff; valaddr_reg:x3; val_offset:48807*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48807*0 + 3*141*FLEN/8, x4, x1, x2)

inst_16270:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000000fffffff; valaddr_reg:x3; val_offset:48810*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48810*0 + 3*142*FLEN/8, x4, x1, x2)

inst_16271:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000001fffffff; valaddr_reg:x3; val_offset:48813*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48813*0 + 3*143*FLEN/8, x4, x1, x2)

inst_16272:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000003fffffff; valaddr_reg:x3; val_offset:48816*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48816*0 + 3*144*FLEN/8, x4, x1, x2)

inst_16273:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000007fffffff; valaddr_reg:x3; val_offset:48819*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48819*0 + 3*145*FLEN/8, x4, x1, x2)

inst_16274:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900000ffffffff; valaddr_reg:x3; val_offset:48822*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48822*0 + 3*146*FLEN/8, x4, x1, x2)

inst_16275:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900001ffffffff; valaddr_reg:x3; val_offset:48825*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48825*0 + 3*147*FLEN/8, x4, x1, x2)

inst_16276:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900003ffffffff; valaddr_reg:x3; val_offset:48828*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48828*0 + 3*148*FLEN/8, x4, x1, x2)

inst_16277:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900007ffffffff; valaddr_reg:x3; val_offset:48831*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48831*0 + 3*149*FLEN/8, x4, x1, x2)

inst_16278:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990000fffffffff; valaddr_reg:x3; val_offset:48834*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48834*0 + 3*150*FLEN/8, x4, x1, x2)

inst_16279:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990001fffffffff; valaddr_reg:x3; val_offset:48837*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48837*0 + 3*151*FLEN/8, x4, x1, x2)

inst_16280:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990003fffffffff; valaddr_reg:x3; val_offset:48840*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48840*0 + 3*152*FLEN/8, x4, x1, x2)

inst_16281:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990007fffffffff; valaddr_reg:x3; val_offset:48843*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48843*0 + 3*153*FLEN/8, x4, x1, x2)

inst_16282:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99000ffffffffff; valaddr_reg:x3; val_offset:48846*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48846*0 + 3*154*FLEN/8, x4, x1, x2)

inst_16283:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99001ffffffffff; valaddr_reg:x3; val_offset:48849*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48849*0 + 3*155*FLEN/8, x4, x1, x2)

inst_16284:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99003ffffffffff; valaddr_reg:x3; val_offset:48852*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48852*0 + 3*156*FLEN/8, x4, x1, x2)

inst_16285:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99007ffffffffff; valaddr_reg:x3; val_offset:48855*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48855*0 + 3*157*FLEN/8, x4, x1, x2)

inst_16286:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9900fffffffffff; valaddr_reg:x3; val_offset:48858*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48858*0 + 3*158*FLEN/8, x4, x1, x2)

inst_16287:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9901fffffffffff; valaddr_reg:x3; val_offset:48861*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48861*0 + 3*159*FLEN/8, x4, x1, x2)

inst_16288:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9903fffffffffff; valaddr_reg:x3; val_offset:48864*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48864*0 + 3*160*FLEN/8, x4, x1, x2)

inst_16289:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb9907fffffffffff; valaddr_reg:x3; val_offset:48867*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48867*0 + 3*161*FLEN/8, x4, x1, x2)

inst_16290:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb990ffffffffffff; valaddr_reg:x3; val_offset:48870*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48870*0 + 3*162*FLEN/8, x4, x1, x2)

inst_16291:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb991ffffffffffff; valaddr_reg:x3; val_offset:48873*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48873*0 + 3*163*FLEN/8, x4, x1, x2)

inst_16292:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb993ffffffffffff; valaddr_reg:x3; val_offset:48876*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48876*0 + 3*164*FLEN/8, x4, x1, x2)

inst_16293:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb997ffffffffffff; valaddr_reg:x3; val_offset:48879*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48879*0 + 3*165*FLEN/8, x4, x1, x2)

inst_16294:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb998000000000000; valaddr_reg:x3; val_offset:48882*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48882*0 + 3*166*FLEN/8, x4, x1, x2)

inst_16295:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99c000000000000; valaddr_reg:x3; val_offset:48885*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48885*0 + 3*167*FLEN/8, x4, x1, x2)

inst_16296:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99e000000000000; valaddr_reg:x3; val_offset:48888*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48888*0 + 3*168*FLEN/8, x4, x1, x2)

inst_16297:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99f000000000000; valaddr_reg:x3; val_offset:48891*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48891*0 + 3*169*FLEN/8, x4, x1, x2)

inst_16298:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99f800000000000; valaddr_reg:x3; val_offset:48894*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48894*0 + 3*170*FLEN/8, x4, x1, x2)

inst_16299:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fc00000000000; valaddr_reg:x3; val_offset:48897*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48897*0 + 3*171*FLEN/8, x4, x1, x2)

inst_16300:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fe00000000000; valaddr_reg:x3; val_offset:48900*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48900*0 + 3*172*FLEN/8, x4, x1, x2)

inst_16301:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ff00000000000; valaddr_reg:x3; val_offset:48903*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48903*0 + 3*173*FLEN/8, x4, x1, x2)

inst_16302:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ff80000000000; valaddr_reg:x3; val_offset:48906*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48906*0 + 3*174*FLEN/8, x4, x1, x2)

inst_16303:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffc0000000000; valaddr_reg:x3; val_offset:48909*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48909*0 + 3*175*FLEN/8, x4, x1, x2)

inst_16304:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffe0000000000; valaddr_reg:x3; val_offset:48912*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48912*0 + 3*176*FLEN/8, x4, x1, x2)

inst_16305:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fff0000000000; valaddr_reg:x3; val_offset:48915*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48915*0 + 3*177*FLEN/8, x4, x1, x2)

inst_16306:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fff8000000000; valaddr_reg:x3; val_offset:48918*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48918*0 + 3*178*FLEN/8, x4, x1, x2)

inst_16307:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffc000000000; valaddr_reg:x3; val_offset:48921*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48921*0 + 3*179*FLEN/8, x4, x1, x2)

inst_16308:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffe000000000; valaddr_reg:x3; val_offset:48924*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48924*0 + 3*180*FLEN/8, x4, x1, x2)

inst_16309:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffff000000000; valaddr_reg:x3; val_offset:48927*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48927*0 + 3*181*FLEN/8, x4, x1, x2)

inst_16310:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffff800000000; valaddr_reg:x3; val_offset:48930*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48930*0 + 3*182*FLEN/8, x4, x1, x2)

inst_16311:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffc00000000; valaddr_reg:x3; val_offset:48933*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48933*0 + 3*183*FLEN/8, x4, x1, x2)

inst_16312:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffe00000000; valaddr_reg:x3; val_offset:48936*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48936*0 + 3*184*FLEN/8, x4, x1, x2)

inst_16313:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffff00000000; valaddr_reg:x3; val_offset:48939*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48939*0 + 3*185*FLEN/8, x4, x1, x2)

inst_16314:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffff80000000; valaddr_reg:x3; val_offset:48942*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48942*0 + 3*186*FLEN/8, x4, x1, x2)

inst_16315:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffc0000000; valaddr_reg:x3; val_offset:48945*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48945*0 + 3*187*FLEN/8, x4, x1, x2)

inst_16316:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffe0000000; valaddr_reg:x3; val_offset:48948*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48948*0 + 3*188*FLEN/8, x4, x1, x2)

inst_16317:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffff0000000; valaddr_reg:x3; val_offset:48951*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48951*0 + 3*189*FLEN/8, x4, x1, x2)

inst_16318:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffff8000000; valaddr_reg:x3; val_offset:48954*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48954*0 + 3*190*FLEN/8, x4, x1, x2)

inst_16319:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffc000000; valaddr_reg:x3; val_offset:48957*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48957*0 + 3*191*FLEN/8, x4, x1, x2)

inst_16320:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffe000000; valaddr_reg:x3; val_offset:48960*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48960*0 + 3*192*FLEN/8, x4, x1, x2)

inst_16321:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffff000000; valaddr_reg:x3; val_offset:48963*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48963*0 + 3*193*FLEN/8, x4, x1, x2)

inst_16322:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffff800000; valaddr_reg:x3; val_offset:48966*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48966*0 + 3*194*FLEN/8, x4, x1, x2)

inst_16323:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffc00000; valaddr_reg:x3; val_offset:48969*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48969*0 + 3*195*FLEN/8, x4, x1, x2)

inst_16324:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffe00000; valaddr_reg:x3; val_offset:48972*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48972*0 + 3*196*FLEN/8, x4, x1, x2)

inst_16325:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffff00000; valaddr_reg:x3; val_offset:48975*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48975*0 + 3*197*FLEN/8, x4, x1, x2)

inst_16326:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffff80000; valaddr_reg:x3; val_offset:48978*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48978*0 + 3*198*FLEN/8, x4, x1, x2)

inst_16327:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffc0000; valaddr_reg:x3; val_offset:48981*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48981*0 + 3*199*FLEN/8, x4, x1, x2)

inst_16328:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffe0000; valaddr_reg:x3; val_offset:48984*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48984*0 + 3*200*FLEN/8, x4, x1, x2)

inst_16329:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffff0000; valaddr_reg:x3; val_offset:48987*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48987*0 + 3*201*FLEN/8, x4, x1, x2)

inst_16330:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffff8000; valaddr_reg:x3; val_offset:48990*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48990*0 + 3*202*FLEN/8, x4, x1, x2)

inst_16331:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffc000; valaddr_reg:x3; val_offset:48993*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48993*0 + 3*203*FLEN/8, x4, x1, x2)

inst_16332:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffe000; valaddr_reg:x3; val_offset:48996*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48996*0 + 3*204*FLEN/8, x4, x1, x2)

inst_16333:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffff000; valaddr_reg:x3; val_offset:48999*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 48999*0 + 3*205*FLEN/8, x4, x1, x2)

inst_16334:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffff800; valaddr_reg:x3; val_offset:49002*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49002*0 + 3*206*FLEN/8, x4, x1, x2)

inst_16335:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffc00; valaddr_reg:x3; val_offset:49005*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49005*0 + 3*207*FLEN/8, x4, x1, x2)

inst_16336:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffe00; valaddr_reg:x3; val_offset:49008*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49008*0 + 3*208*FLEN/8, x4, x1, x2)

inst_16337:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffff00; valaddr_reg:x3; val_offset:49011*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49011*0 + 3*209*FLEN/8, x4, x1, x2)

inst_16338:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffff80; valaddr_reg:x3; val_offset:49014*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49014*0 + 3*210*FLEN/8, x4, x1, x2)

inst_16339:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffffc0; valaddr_reg:x3; val_offset:49017*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49017*0 + 3*211*FLEN/8, x4, x1, x2)

inst_16340:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffffe0; valaddr_reg:x3; val_offset:49020*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49020*0 + 3*212*FLEN/8, x4, x1, x2)

inst_16341:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffff0; valaddr_reg:x3; val_offset:49023*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49023*0 + 3*213*FLEN/8, x4, x1, x2)

inst_16342:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffff8; valaddr_reg:x3; val_offset:49026*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49026*0 + 3*214*FLEN/8, x4, x1, x2)

inst_16343:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffffc; valaddr_reg:x3; val_offset:49029*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49029*0 + 3*215*FLEN/8, x4, x1, x2)

inst_16344:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99ffffffffffffe; valaddr_reg:x3; val_offset:49032*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49032*0 + 3*216*FLEN/8, x4, x1, x2)

inst_16345:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x399 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xb99fffffffffffff; valaddr_reg:x3; val_offset:49035*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49035*0 + 3*217*FLEN/8, x4, x1, x2)

inst_16346:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:49038*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49038*0 + 3*218*FLEN/8, x4, x1, x2)

inst_16347:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:49041*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49041*0 + 3*219*FLEN/8, x4, x1, x2)

inst_16348:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:49044*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49044*0 + 3*220*FLEN/8, x4, x1, x2)

inst_16349:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:49047*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49047*0 + 3*221*FLEN/8, x4, x1, x2)

inst_16350:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:49050*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49050*0 + 3*222*FLEN/8, x4, x1, x2)

inst_16351:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:49053*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49053*0 + 3*223*FLEN/8, x4, x1, x2)

inst_16352:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:49056*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49056*0 + 3*224*FLEN/8, x4, x1, x2)

inst_16353:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:49059*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49059*0 + 3*225*FLEN/8, x4, x1, x2)

inst_16354:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:49062*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49062*0 + 3*226*FLEN/8, x4, x1, x2)

inst_16355:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:49065*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49065*0 + 3*227*FLEN/8, x4, x1, x2)

inst_16356:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:49068*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49068*0 + 3*228*FLEN/8, x4, x1, x2)

inst_16357:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:49071*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49071*0 + 3*229*FLEN/8, x4, x1, x2)

inst_16358:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:49074*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49074*0 + 3*230*FLEN/8, x4, x1, x2)

inst_16359:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:49077*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49077*0 + 3*231*FLEN/8, x4, x1, x2)

inst_16360:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:49080*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49080*0 + 3*232*FLEN/8, x4, x1, x2)

inst_16361:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:49083*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49083*0 + 3*233*FLEN/8, x4, x1, x2)

inst_16362:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:49086*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49086*0 + 3*234*FLEN/8, x4, x1, x2)

inst_16363:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:49089*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49089*0 + 3*235*FLEN/8, x4, x1, x2)

inst_16364:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:49092*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49092*0 + 3*236*FLEN/8, x4, x1, x2)

inst_16365:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:49095*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49095*0 + 3*237*FLEN/8, x4, x1, x2)

inst_16366:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:49098*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49098*0 + 3*238*FLEN/8, x4, x1, x2)

inst_16367:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x25ecf43c688c3 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbdef9c1aa2d90 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f825ecf43c688c3; op2val:0x9febdef9c1aa2d90;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:49101*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49101*0 + 3*239*FLEN/8, x4, x1, x2)

inst_16368:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000000000; valaddr_reg:x3; val_offset:49104*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49104*0 + 3*240*FLEN/8, x4, x1, x2)

inst_16369:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000000001; valaddr_reg:x3; val_offset:49107*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49107*0 + 3*241*FLEN/8, x4, x1, x2)

inst_16370:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000000003; valaddr_reg:x3; val_offset:49110*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49110*0 + 3*242*FLEN/8, x4, x1, x2)

inst_16371:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000000007; valaddr_reg:x3; val_offset:49113*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49113*0 + 3*243*FLEN/8, x4, x1, x2)

inst_16372:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000000000f; valaddr_reg:x3; val_offset:49116*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49116*0 + 3*244*FLEN/8, x4, x1, x2)

inst_16373:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000000001f; valaddr_reg:x3; val_offset:49119*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49119*0 + 3*245*FLEN/8, x4, x1, x2)

inst_16374:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000000003f; valaddr_reg:x3; val_offset:49122*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49122*0 + 3*246*FLEN/8, x4, x1, x2)

inst_16375:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000000007f; valaddr_reg:x3; val_offset:49125*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49125*0 + 3*247*FLEN/8, x4, x1, x2)

inst_16376:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000000000ff; valaddr_reg:x3; val_offset:49128*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49128*0 + 3*248*FLEN/8, x4, x1, x2)

inst_16377:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000000001ff; valaddr_reg:x3; val_offset:49131*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49131*0 + 3*249*FLEN/8, x4, x1, x2)

inst_16378:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000000003ff; valaddr_reg:x3; val_offset:49134*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49134*0 + 3*250*FLEN/8, x4, x1, x2)

inst_16379:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000000007ff; valaddr_reg:x3; val_offset:49137*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49137*0 + 3*251*FLEN/8, x4, x1, x2)

inst_16380:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000000fff; valaddr_reg:x3; val_offset:49140*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49140*0 + 3*252*FLEN/8, x4, x1, x2)

inst_16381:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000001fff; valaddr_reg:x3; val_offset:49143*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49143*0 + 3*253*FLEN/8, x4, x1, x2)

inst_16382:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000003fff; valaddr_reg:x3; val_offset:49146*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49146*0 + 3*254*FLEN/8, x4, x1, x2)

inst_16383:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000007fff; valaddr_reg:x3; val_offset:49149*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49149*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_16384:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000000ffff; valaddr_reg:x3; val_offset:49152*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49152*0 + 3*256*FLEN/8, x4, x1, x2)

inst_16385:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000001ffff; valaddr_reg:x3; val_offset:49155*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49155*0 + 3*257*FLEN/8, x4, x1, x2)

inst_16386:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000003ffff; valaddr_reg:x3; val_offset:49158*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49158*0 + 3*258*FLEN/8, x4, x1, x2)

inst_16387:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000007ffff; valaddr_reg:x3; val_offset:49161*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49161*0 + 3*259*FLEN/8, x4, x1, x2)

inst_16388:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000000fffff; valaddr_reg:x3; val_offset:49164*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49164*0 + 3*260*FLEN/8, x4, x1, x2)

inst_16389:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000001fffff; valaddr_reg:x3; val_offset:49167*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49167*0 + 3*261*FLEN/8, x4, x1, x2)

inst_16390:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000003fffff; valaddr_reg:x3; val_offset:49170*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49170*0 + 3*262*FLEN/8, x4, x1, x2)

inst_16391:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000007fffff; valaddr_reg:x3; val_offset:49173*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49173*0 + 3*263*FLEN/8, x4, x1, x2)

inst_16392:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000000ffffff; valaddr_reg:x3; val_offset:49176*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49176*0 + 3*264*FLEN/8, x4, x1, x2)

inst_16393:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000001ffffff; valaddr_reg:x3; val_offset:49179*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49179*0 + 3*265*FLEN/8, x4, x1, x2)

inst_16394:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000003ffffff; valaddr_reg:x3; val_offset:49182*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49182*0 + 3*266*FLEN/8, x4, x1, x2)

inst_16395:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000007ffffff; valaddr_reg:x3; val_offset:49185*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49185*0 + 3*267*FLEN/8, x4, x1, x2)

inst_16396:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000000fffffff; valaddr_reg:x3; val_offset:49188*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49188*0 + 3*268*FLEN/8, x4, x1, x2)

inst_16397:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000001fffffff; valaddr_reg:x3; val_offset:49191*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49191*0 + 3*269*FLEN/8, x4, x1, x2)

inst_16398:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000003fffffff; valaddr_reg:x3; val_offset:49194*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49194*0 + 3*270*FLEN/8, x4, x1, x2)

inst_16399:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000007fffffff; valaddr_reg:x3; val_offset:49197*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49197*0 + 3*271*FLEN/8, x4, x1, x2)

inst_16400:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800000ffffffff; valaddr_reg:x3; val_offset:49200*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49200*0 + 3*272*FLEN/8, x4, x1, x2)

inst_16401:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800001ffffffff; valaddr_reg:x3; val_offset:49203*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49203*0 + 3*273*FLEN/8, x4, x1, x2)

inst_16402:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800003ffffffff; valaddr_reg:x3; val_offset:49206*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49206*0 + 3*274*FLEN/8, x4, x1, x2)

inst_16403:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800007ffffffff; valaddr_reg:x3; val_offset:49209*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49209*0 + 3*275*FLEN/8, x4, x1, x2)

inst_16404:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80000fffffffff; valaddr_reg:x3; val_offset:49212*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49212*0 + 3*276*FLEN/8, x4, x1, x2)

inst_16405:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80001fffffffff; valaddr_reg:x3; val_offset:49215*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49215*0 + 3*277*FLEN/8, x4, x1, x2)

inst_16406:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80003fffffffff; valaddr_reg:x3; val_offset:49218*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49218*0 + 3*278*FLEN/8, x4, x1, x2)

inst_16407:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80007fffffffff; valaddr_reg:x3; val_offset:49221*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49221*0 + 3*279*FLEN/8, x4, x1, x2)

inst_16408:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8000ffffffffff; valaddr_reg:x3; val_offset:49224*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49224*0 + 3*280*FLEN/8, x4, x1, x2)

inst_16409:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8001ffffffffff; valaddr_reg:x3; val_offset:49227*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49227*0 + 3*281*FLEN/8, x4, x1, x2)

inst_16410:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8003ffffffffff; valaddr_reg:x3; val_offset:49230*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49230*0 + 3*282*FLEN/8, x4, x1, x2)

inst_16411:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8007ffffffffff; valaddr_reg:x3; val_offset:49233*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49233*0 + 3*283*FLEN/8, x4, x1, x2)

inst_16412:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe800fffffffffff; valaddr_reg:x3; val_offset:49236*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49236*0 + 3*284*FLEN/8, x4, x1, x2)

inst_16413:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe801fffffffffff; valaddr_reg:x3; val_offset:49239*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49239*0 + 3*285*FLEN/8, x4, x1, x2)

inst_16414:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe803fffffffffff; valaddr_reg:x3; val_offset:49242*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49242*0 + 3*286*FLEN/8, x4, x1, x2)

inst_16415:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe807fffffffffff; valaddr_reg:x3; val_offset:49245*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49245*0 + 3*287*FLEN/8, x4, x1, x2)

inst_16416:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe80ffffffffffff; valaddr_reg:x3; val_offset:49248*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49248*0 + 3*288*FLEN/8, x4, x1, x2)

inst_16417:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe81ffffffffffff; valaddr_reg:x3; val_offset:49251*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49251*0 + 3*289*FLEN/8, x4, x1, x2)

inst_16418:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe83ffffffffffff; valaddr_reg:x3; val_offset:49254*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49254*0 + 3*290*FLEN/8, x4, x1, x2)

inst_16419:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe87ffffffffffff; valaddr_reg:x3; val_offset:49257*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49257*0 + 3*291*FLEN/8, x4, x1, x2)

inst_16420:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe88000000000000; valaddr_reg:x3; val_offset:49260*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49260*0 + 3*292*FLEN/8, x4, x1, x2)

inst_16421:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8c000000000000; valaddr_reg:x3; val_offset:49263*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49263*0 + 3*293*FLEN/8, x4, x1, x2)

inst_16422:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8e000000000000; valaddr_reg:x3; val_offset:49266*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49266*0 + 3*294*FLEN/8, x4, x1, x2)

inst_16423:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8f000000000000; valaddr_reg:x3; val_offset:49269*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49269*0 + 3*295*FLEN/8, x4, x1, x2)

inst_16424:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8f800000000000; valaddr_reg:x3; val_offset:49272*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49272*0 + 3*296*FLEN/8, x4, x1, x2)

inst_16425:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fc00000000000; valaddr_reg:x3; val_offset:49275*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49275*0 + 3*297*FLEN/8, x4, x1, x2)

inst_16426:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fe00000000000; valaddr_reg:x3; val_offset:49278*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49278*0 + 3*298*FLEN/8, x4, x1, x2)

inst_16427:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ff00000000000; valaddr_reg:x3; val_offset:49281*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49281*0 + 3*299*FLEN/8, x4, x1, x2)

inst_16428:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ff80000000000; valaddr_reg:x3; val_offset:49284*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49284*0 + 3*300*FLEN/8, x4, x1, x2)

inst_16429:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffc0000000000; valaddr_reg:x3; val_offset:49287*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49287*0 + 3*301*FLEN/8, x4, x1, x2)

inst_16430:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffe0000000000; valaddr_reg:x3; val_offset:49290*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49290*0 + 3*302*FLEN/8, x4, x1, x2)

inst_16431:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fff0000000000; valaddr_reg:x3; val_offset:49293*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49293*0 + 3*303*FLEN/8, x4, x1, x2)

inst_16432:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fff8000000000; valaddr_reg:x3; val_offset:49296*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49296*0 + 3*304*FLEN/8, x4, x1, x2)

inst_16433:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffc000000000; valaddr_reg:x3; val_offset:49299*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49299*0 + 3*305*FLEN/8, x4, x1, x2)

inst_16434:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffe000000000; valaddr_reg:x3; val_offset:49302*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49302*0 + 3*306*FLEN/8, x4, x1, x2)

inst_16435:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffff000000000; valaddr_reg:x3; val_offset:49305*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49305*0 + 3*307*FLEN/8, x4, x1, x2)

inst_16436:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffff800000000; valaddr_reg:x3; val_offset:49308*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49308*0 + 3*308*FLEN/8, x4, x1, x2)

inst_16437:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffc00000000; valaddr_reg:x3; val_offset:49311*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49311*0 + 3*309*FLEN/8, x4, x1, x2)

inst_16438:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffe00000000; valaddr_reg:x3; val_offset:49314*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49314*0 + 3*310*FLEN/8, x4, x1, x2)

inst_16439:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffff00000000; valaddr_reg:x3; val_offset:49317*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49317*0 + 3*311*FLEN/8, x4, x1, x2)

inst_16440:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffff80000000; valaddr_reg:x3; val_offset:49320*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49320*0 + 3*312*FLEN/8, x4, x1, x2)

inst_16441:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffc0000000; valaddr_reg:x3; val_offset:49323*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49323*0 + 3*313*FLEN/8, x4, x1, x2)

inst_16442:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffe0000000; valaddr_reg:x3; val_offset:49326*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49326*0 + 3*314*FLEN/8, x4, x1, x2)

inst_16443:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffff0000000; valaddr_reg:x3; val_offset:49329*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49329*0 + 3*315*FLEN/8, x4, x1, x2)

inst_16444:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffff8000000; valaddr_reg:x3; val_offset:49332*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49332*0 + 3*316*FLEN/8, x4, x1, x2)

inst_16445:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffc000000; valaddr_reg:x3; val_offset:49335*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49335*0 + 3*317*FLEN/8, x4, x1, x2)

inst_16446:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffe000000; valaddr_reg:x3; val_offset:49338*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49338*0 + 3*318*FLEN/8, x4, x1, x2)

inst_16447:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffff000000; valaddr_reg:x3; val_offset:49341*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49341*0 + 3*319*FLEN/8, x4, x1, x2)

inst_16448:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffff800000; valaddr_reg:x3; val_offset:49344*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49344*0 + 3*320*FLEN/8, x4, x1, x2)

inst_16449:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffc00000; valaddr_reg:x3; val_offset:49347*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49347*0 + 3*321*FLEN/8, x4, x1, x2)

inst_16450:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffe00000; valaddr_reg:x3; val_offset:49350*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49350*0 + 3*322*FLEN/8, x4, x1, x2)

inst_16451:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffff00000; valaddr_reg:x3; val_offset:49353*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49353*0 + 3*323*FLEN/8, x4, x1, x2)

inst_16452:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffff80000; valaddr_reg:x3; val_offset:49356*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49356*0 + 3*324*FLEN/8, x4, x1, x2)

inst_16453:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffc0000; valaddr_reg:x3; val_offset:49359*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49359*0 + 3*325*FLEN/8, x4, x1, x2)

inst_16454:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffe0000; valaddr_reg:x3; val_offset:49362*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49362*0 + 3*326*FLEN/8, x4, x1, x2)

inst_16455:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffff0000; valaddr_reg:x3; val_offset:49365*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49365*0 + 3*327*FLEN/8, x4, x1, x2)

inst_16456:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffff8000; valaddr_reg:x3; val_offset:49368*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49368*0 + 3*328*FLEN/8, x4, x1, x2)

inst_16457:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffc000; valaddr_reg:x3; val_offset:49371*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49371*0 + 3*329*FLEN/8, x4, x1, x2)

inst_16458:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffe000; valaddr_reg:x3; val_offset:49374*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49374*0 + 3*330*FLEN/8, x4, x1, x2)

inst_16459:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffff000; valaddr_reg:x3; val_offset:49377*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49377*0 + 3*331*FLEN/8, x4, x1, x2)

inst_16460:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffff800; valaddr_reg:x3; val_offset:49380*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49380*0 + 3*332*FLEN/8, x4, x1, x2)

inst_16461:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffc00; valaddr_reg:x3; val_offset:49383*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49383*0 + 3*333*FLEN/8, x4, x1, x2)

inst_16462:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffe00; valaddr_reg:x3; val_offset:49386*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49386*0 + 3*334*FLEN/8, x4, x1, x2)

inst_16463:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffff00; valaddr_reg:x3; val_offset:49389*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49389*0 + 3*335*FLEN/8, x4, x1, x2)

inst_16464:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffff80; valaddr_reg:x3; val_offset:49392*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49392*0 + 3*336*FLEN/8, x4, x1, x2)

inst_16465:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffffc0; valaddr_reg:x3; val_offset:49395*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49395*0 + 3*337*FLEN/8, x4, x1, x2)

inst_16466:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffffe0; valaddr_reg:x3; val_offset:49398*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49398*0 + 3*338*FLEN/8, x4, x1, x2)

inst_16467:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffff0; valaddr_reg:x3; val_offset:49401*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49401*0 + 3*339*FLEN/8, x4, x1, x2)

inst_16468:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffff8; valaddr_reg:x3; val_offset:49404*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49404*0 + 3*340*FLEN/8, x4, x1, x2)

inst_16469:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffffc; valaddr_reg:x3; val_offset:49407*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49407*0 + 3*341*FLEN/8, x4, x1, x2)

inst_16470:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8ffffffffffffe; valaddr_reg:x3; val_offset:49410*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49410*0 + 3*342*FLEN/8, x4, x1, x2)

inst_16471:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3e8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbe8fffffffffffff; valaddr_reg:x3; val_offset:49413*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49413*0 + 3*343*FLEN/8, x4, x1, x2)

inst_16472:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:49416*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49416*0 + 3*344*FLEN/8, x4, x1, x2)

inst_16473:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:49419*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49419*0 + 3*345*FLEN/8, x4, x1, x2)

inst_16474:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:49422*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49422*0 + 3*346*FLEN/8, x4, x1, x2)

inst_16475:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:49425*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49425*0 + 3*347*FLEN/8, x4, x1, x2)

inst_16476:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:49428*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49428*0 + 3*348*FLEN/8, x4, x1, x2)

inst_16477:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:49431*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49431*0 + 3*349*FLEN/8, x4, x1, x2)

inst_16478:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:49434*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49434*0 + 3*350*FLEN/8, x4, x1, x2)

inst_16479:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:49437*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49437*0 + 3*351*FLEN/8, x4, x1, x2)

inst_16480:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:49440*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49440*0 + 3*352*FLEN/8, x4, x1, x2)

inst_16481:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:49443*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49443*0 + 3*353*FLEN/8, x4, x1, x2)

inst_16482:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:49446*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49446*0 + 3*354*FLEN/8, x4, x1, x2)

inst_16483:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:49449*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49449*0 + 3*355*FLEN/8, x4, x1, x2)

inst_16484:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:49452*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49452*0 + 3*356*FLEN/8, x4, x1, x2)

inst_16485:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:49455*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49455*0 + 3*357*FLEN/8, x4, x1, x2)

inst_16486:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:49458*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49458*0 + 3*358*FLEN/8, x4, x1, x2)

inst_16487:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:49461*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49461*0 + 3*359*FLEN/8, x4, x1, x2)

inst_16488:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:49464*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49464*0 + 3*360*FLEN/8, x4, x1, x2)

inst_16489:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:49467*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49467*0 + 3*361*FLEN/8, x4, x1, x2)

inst_16490:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:49470*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49470*0 + 3*362*FLEN/8, x4, x1, x2)

inst_16491:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:49473*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49473*0 + 3*363*FLEN/8, x4, x1, x2)

inst_16492:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:49476*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49476*0 + 3*364*FLEN/8, x4, x1, x2)

inst_16493:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x261d116b1d5ef and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xbda6a8bfde46e and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8261d116b1d5ef; op2val:0x9febda6a8bfde46e;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:49479*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49479*0 + 3*365*FLEN/8, x4, x1, x2)

inst_16494:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:49482*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49482*0 + 3*366*FLEN/8, x4, x1, x2)

inst_16495:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:49485*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49485*0 + 3*367*FLEN/8, x4, x1, x2)

inst_16496:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:49488*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49488*0 + 3*368*FLEN/8, x4, x1, x2)

inst_16497:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:49491*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49491*0 + 3*369*FLEN/8, x4, x1, x2)

inst_16498:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:49494*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49494*0 + 3*370*FLEN/8, x4, x1, x2)

inst_16499:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:49497*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49497*0 + 3*371*FLEN/8, x4, x1, x2)

inst_16500:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:49500*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49500*0 + 3*372*FLEN/8, x4, x1, x2)

inst_16501:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:49503*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49503*0 + 3*373*FLEN/8, x4, x1, x2)

inst_16502:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:49506*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49506*0 + 3*374*FLEN/8, x4, x1, x2)

inst_16503:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:49509*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49509*0 + 3*375*FLEN/8, x4, x1, x2)

inst_16504:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:49512*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49512*0 + 3*376*FLEN/8, x4, x1, x2)

inst_16505:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:49515*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49515*0 + 3*377*FLEN/8, x4, x1, x2)

inst_16506:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:49518*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49518*0 + 3*378*FLEN/8, x4, x1, x2)

inst_16507:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:49521*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49521*0 + 3*379*FLEN/8, x4, x1, x2)

inst_16508:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:49524*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49524*0 + 3*380*FLEN/8, x4, x1, x2)

inst_16509:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:49527*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49527*0 + 3*381*FLEN/8, x4, x1, x2)

inst_16510:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:49530*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49530*0 + 3*382*FLEN/8, x4, x1, x2)

inst_16511:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:49533*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49533*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_16512:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:49536*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49536*0 + 3*384*FLEN/8, x4, x1, x2)

inst_16513:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:49539*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49539*0 + 3*385*FLEN/8, x4, x1, x2)

inst_16514:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:49542*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49542*0 + 3*386*FLEN/8, x4, x1, x2)

inst_16515:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:49545*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49545*0 + 3*387*FLEN/8, x4, x1, x2)

inst_16516:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000000000; valaddr_reg:x3; val_offset:49548*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49548*0 + 3*388*FLEN/8, x4, x1, x2)

inst_16517:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000000001; valaddr_reg:x3; val_offset:49551*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49551*0 + 3*389*FLEN/8, x4, x1, x2)

inst_16518:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000000003; valaddr_reg:x3; val_offset:49554*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49554*0 + 3*390*FLEN/8, x4, x1, x2)

inst_16519:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000000007; valaddr_reg:x3; val_offset:49557*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49557*0 + 3*391*FLEN/8, x4, x1, x2)

inst_16520:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000000000f; valaddr_reg:x3; val_offset:49560*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49560*0 + 3*392*FLEN/8, x4, x1, x2)

inst_16521:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000000001f; valaddr_reg:x3; val_offset:49563*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49563*0 + 3*393*FLEN/8, x4, x1, x2)

inst_16522:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000000003f; valaddr_reg:x3; val_offset:49566*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49566*0 + 3*394*FLEN/8, x4, x1, x2)

inst_16523:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000000007f; valaddr_reg:x3; val_offset:49569*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49569*0 + 3*395*FLEN/8, x4, x1, x2)

inst_16524:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000000000ff; valaddr_reg:x3; val_offset:49572*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49572*0 + 3*396*FLEN/8, x4, x1, x2)

inst_16525:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000000001ff; valaddr_reg:x3; val_offset:49575*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49575*0 + 3*397*FLEN/8, x4, x1, x2)

inst_16526:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000000003ff; valaddr_reg:x3; val_offset:49578*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49578*0 + 3*398*FLEN/8, x4, x1, x2)

inst_16527:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000000007ff; valaddr_reg:x3; val_offset:49581*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49581*0 + 3*399*FLEN/8, x4, x1, x2)

inst_16528:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000000fff; valaddr_reg:x3; val_offset:49584*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49584*0 + 3*400*FLEN/8, x4, x1, x2)

inst_16529:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000001fff; valaddr_reg:x3; val_offset:49587*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49587*0 + 3*401*FLEN/8, x4, x1, x2)

inst_16530:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000003fff; valaddr_reg:x3; val_offset:49590*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49590*0 + 3*402*FLEN/8, x4, x1, x2)

inst_16531:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000007fff; valaddr_reg:x3; val_offset:49593*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49593*0 + 3*403*FLEN/8, x4, x1, x2)

inst_16532:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000000ffff; valaddr_reg:x3; val_offset:49596*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49596*0 + 3*404*FLEN/8, x4, x1, x2)

inst_16533:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000001ffff; valaddr_reg:x3; val_offset:49599*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49599*0 + 3*405*FLEN/8, x4, x1, x2)

inst_16534:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000003ffff; valaddr_reg:x3; val_offset:49602*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49602*0 + 3*406*FLEN/8, x4, x1, x2)

inst_16535:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000007ffff; valaddr_reg:x3; val_offset:49605*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49605*0 + 3*407*FLEN/8, x4, x1, x2)

inst_16536:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000000fffff; valaddr_reg:x3; val_offset:49608*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49608*0 + 3*408*FLEN/8, x4, x1, x2)

inst_16537:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000001fffff; valaddr_reg:x3; val_offset:49611*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49611*0 + 3*409*FLEN/8, x4, x1, x2)

inst_16538:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000003fffff; valaddr_reg:x3; val_offset:49614*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49614*0 + 3*410*FLEN/8, x4, x1, x2)

inst_16539:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000007fffff; valaddr_reg:x3; val_offset:49617*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49617*0 + 3*411*FLEN/8, x4, x1, x2)

inst_16540:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000000ffffff; valaddr_reg:x3; val_offset:49620*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49620*0 + 3*412*FLEN/8, x4, x1, x2)

inst_16541:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000001ffffff; valaddr_reg:x3; val_offset:49623*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49623*0 + 3*413*FLEN/8, x4, x1, x2)

inst_16542:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000003ffffff; valaddr_reg:x3; val_offset:49626*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49626*0 + 3*414*FLEN/8, x4, x1, x2)

inst_16543:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000007ffffff; valaddr_reg:x3; val_offset:49629*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49629*0 + 3*415*FLEN/8, x4, x1, x2)

inst_16544:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000000fffffff; valaddr_reg:x3; val_offset:49632*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49632*0 + 3*416*FLEN/8, x4, x1, x2)

inst_16545:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000001fffffff; valaddr_reg:x3; val_offset:49635*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49635*0 + 3*417*FLEN/8, x4, x1, x2)

inst_16546:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000003fffffff; valaddr_reg:x3; val_offset:49638*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49638*0 + 3*418*FLEN/8, x4, x1, x2)

inst_16547:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000007fffffff; valaddr_reg:x3; val_offset:49641*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49641*0 + 3*419*FLEN/8, x4, x1, x2)

inst_16548:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000000ffffffff; valaddr_reg:x3; val_offset:49644*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49644*0 + 3*420*FLEN/8, x4, x1, x2)

inst_16549:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000001ffffffff; valaddr_reg:x3; val_offset:49647*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49647*0 + 3*421*FLEN/8, x4, x1, x2)

inst_16550:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000003ffffffff; valaddr_reg:x3; val_offset:49650*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49650*0 + 3*422*FLEN/8, x4, x1, x2)

inst_16551:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000007ffffffff; valaddr_reg:x3; val_offset:49653*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49653*0 + 3*423*FLEN/8, x4, x1, x2)

inst_16552:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200000fffffffff; valaddr_reg:x3; val_offset:49656*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49656*0 + 3*424*FLEN/8, x4, x1, x2)

inst_16553:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200001fffffffff; valaddr_reg:x3; val_offset:49659*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49659*0 + 3*425*FLEN/8, x4, x1, x2)

inst_16554:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200003fffffffff; valaddr_reg:x3; val_offset:49662*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49662*0 + 3*426*FLEN/8, x4, x1, x2)

inst_16555:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200007fffffffff; valaddr_reg:x3; val_offset:49665*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49665*0 + 3*427*FLEN/8, x4, x1, x2)

inst_16556:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820000ffffffffff; valaddr_reg:x3; val_offset:49668*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49668*0 + 3*428*FLEN/8, x4, x1, x2)

inst_16557:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820001ffffffffff; valaddr_reg:x3; val_offset:49671*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49671*0 + 3*429*FLEN/8, x4, x1, x2)

inst_16558:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820003ffffffffff; valaddr_reg:x3; val_offset:49674*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49674*0 + 3*430*FLEN/8, x4, x1, x2)

inst_16559:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820007ffffffffff; valaddr_reg:x3; val_offset:49677*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49677*0 + 3*431*FLEN/8, x4, x1, x2)

inst_16560:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82000fffffffffff; valaddr_reg:x3; val_offset:49680*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49680*0 + 3*432*FLEN/8, x4, x1, x2)

inst_16561:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82001fffffffffff; valaddr_reg:x3; val_offset:49683*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49683*0 + 3*433*FLEN/8, x4, x1, x2)

inst_16562:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82003fffffffffff; valaddr_reg:x3; val_offset:49686*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49686*0 + 3*434*FLEN/8, x4, x1, x2)

inst_16563:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x82007fffffffffff; valaddr_reg:x3; val_offset:49689*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49689*0 + 3*435*FLEN/8, x4, x1, x2)

inst_16564:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8200ffffffffffff; valaddr_reg:x3; val_offset:49692*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49692*0 + 3*436*FLEN/8, x4, x1, x2)

inst_16565:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8201ffffffffffff; valaddr_reg:x3; val_offset:49695*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49695*0 + 3*437*FLEN/8, x4, x1, x2)

inst_16566:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8203ffffffffffff; valaddr_reg:x3; val_offset:49698*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49698*0 + 3*438*FLEN/8, x4, x1, x2)

inst_16567:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8207ffffffffffff; valaddr_reg:x3; val_offset:49701*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49701*0 + 3*439*FLEN/8, x4, x1, x2)

inst_16568:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x8208000000000000; valaddr_reg:x3; val_offset:49704*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49704*0 + 3*440*FLEN/8, x4, x1, x2)

inst_16569:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820c000000000000; valaddr_reg:x3; val_offset:49707*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49707*0 + 3*441*FLEN/8, x4, x1, x2)

inst_16570:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820e000000000000; valaddr_reg:x3; val_offset:49710*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49710*0 + 3*442*FLEN/8, x4, x1, x2)

inst_16571:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820f000000000000; valaddr_reg:x3; val_offset:49713*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49713*0 + 3*443*FLEN/8, x4, x1, x2)

inst_16572:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820f800000000000; valaddr_reg:x3; val_offset:49716*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49716*0 + 3*444*FLEN/8, x4, x1, x2)

inst_16573:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fc00000000000; valaddr_reg:x3; val_offset:49719*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49719*0 + 3*445*FLEN/8, x4, x1, x2)

inst_16574:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fe00000000000; valaddr_reg:x3; val_offset:49722*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49722*0 + 3*446*FLEN/8, x4, x1, x2)

inst_16575:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ff00000000000; valaddr_reg:x3; val_offset:49725*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49725*0 + 3*447*FLEN/8, x4, x1, x2)

inst_16576:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ff80000000000; valaddr_reg:x3; val_offset:49728*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49728*0 + 3*448*FLEN/8, x4, x1, x2)

inst_16577:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffc0000000000; valaddr_reg:x3; val_offset:49731*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49731*0 + 3*449*FLEN/8, x4, x1, x2)

inst_16578:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffe0000000000; valaddr_reg:x3; val_offset:49734*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49734*0 + 3*450*FLEN/8, x4, x1, x2)

inst_16579:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fff0000000000; valaddr_reg:x3; val_offset:49737*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49737*0 + 3*451*FLEN/8, x4, x1, x2)

inst_16580:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fff8000000000; valaddr_reg:x3; val_offset:49740*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49740*0 + 3*452*FLEN/8, x4, x1, x2)

inst_16581:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffc000000000; valaddr_reg:x3; val_offset:49743*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49743*0 + 3*453*FLEN/8, x4, x1, x2)

inst_16582:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffe000000000; valaddr_reg:x3; val_offset:49746*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49746*0 + 3*454*FLEN/8, x4, x1, x2)

inst_16583:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffff000000000; valaddr_reg:x3; val_offset:49749*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49749*0 + 3*455*FLEN/8, x4, x1, x2)

inst_16584:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffff800000000; valaddr_reg:x3; val_offset:49752*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49752*0 + 3*456*FLEN/8, x4, x1, x2)

inst_16585:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffc00000000; valaddr_reg:x3; val_offset:49755*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49755*0 + 3*457*FLEN/8, x4, x1, x2)

inst_16586:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffe00000000; valaddr_reg:x3; val_offset:49758*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49758*0 + 3*458*FLEN/8, x4, x1, x2)

inst_16587:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffff00000000; valaddr_reg:x3; val_offset:49761*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49761*0 + 3*459*FLEN/8, x4, x1, x2)

inst_16588:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffff80000000; valaddr_reg:x3; val_offset:49764*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49764*0 + 3*460*FLEN/8, x4, x1, x2)

inst_16589:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffc0000000; valaddr_reg:x3; val_offset:49767*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49767*0 + 3*461*FLEN/8, x4, x1, x2)

inst_16590:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffe0000000; valaddr_reg:x3; val_offset:49770*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49770*0 + 3*462*FLEN/8, x4, x1, x2)

inst_16591:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffff0000000; valaddr_reg:x3; val_offset:49773*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49773*0 + 3*463*FLEN/8, x4, x1, x2)

inst_16592:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffff8000000; valaddr_reg:x3; val_offset:49776*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49776*0 + 3*464*FLEN/8, x4, x1, x2)

inst_16593:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffc000000; valaddr_reg:x3; val_offset:49779*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49779*0 + 3*465*FLEN/8, x4, x1, x2)

inst_16594:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffe000000; valaddr_reg:x3; val_offset:49782*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49782*0 + 3*466*FLEN/8, x4, x1, x2)

inst_16595:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffff000000; valaddr_reg:x3; val_offset:49785*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49785*0 + 3*467*FLEN/8, x4, x1, x2)

inst_16596:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffff800000; valaddr_reg:x3; val_offset:49788*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49788*0 + 3*468*FLEN/8, x4, x1, x2)

inst_16597:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffc00000; valaddr_reg:x3; val_offset:49791*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49791*0 + 3*469*FLEN/8, x4, x1, x2)

inst_16598:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffe00000; valaddr_reg:x3; val_offset:49794*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49794*0 + 3*470*FLEN/8, x4, x1, x2)

inst_16599:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffff00000; valaddr_reg:x3; val_offset:49797*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49797*0 + 3*471*FLEN/8, x4, x1, x2)

inst_16600:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffff80000; valaddr_reg:x3; val_offset:49800*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49800*0 + 3*472*FLEN/8, x4, x1, x2)

inst_16601:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffc0000; valaddr_reg:x3; val_offset:49803*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49803*0 + 3*473*FLEN/8, x4, x1, x2)

inst_16602:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffe0000; valaddr_reg:x3; val_offset:49806*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49806*0 + 3*474*FLEN/8, x4, x1, x2)

inst_16603:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffff0000; valaddr_reg:x3; val_offset:49809*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49809*0 + 3*475*FLEN/8, x4, x1, x2)

inst_16604:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffff8000; valaddr_reg:x3; val_offset:49812*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49812*0 + 3*476*FLEN/8, x4, x1, x2)

inst_16605:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffc000; valaddr_reg:x3; val_offset:49815*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49815*0 + 3*477*FLEN/8, x4, x1, x2)

inst_16606:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffe000; valaddr_reg:x3; val_offset:49818*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49818*0 + 3*478*FLEN/8, x4, x1, x2)

inst_16607:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffff000; valaddr_reg:x3; val_offset:49821*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49821*0 + 3*479*FLEN/8, x4, x1, x2)

inst_16608:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffff800; valaddr_reg:x3; val_offset:49824*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49824*0 + 3*480*FLEN/8, x4, x1, x2)

inst_16609:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffc00; valaddr_reg:x3; val_offset:49827*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49827*0 + 3*481*FLEN/8, x4, x1, x2)

inst_16610:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffe00; valaddr_reg:x3; val_offset:49830*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49830*0 + 3*482*FLEN/8, x4, x1, x2)

inst_16611:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffff00; valaddr_reg:x3; val_offset:49833*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49833*0 + 3*483*FLEN/8, x4, x1, x2)

inst_16612:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffff80; valaddr_reg:x3; val_offset:49836*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49836*0 + 3*484*FLEN/8, x4, x1, x2)

inst_16613:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffffc0; valaddr_reg:x3; val_offset:49839*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49839*0 + 3*485*FLEN/8, x4, x1, x2)

inst_16614:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffffe0; valaddr_reg:x3; val_offset:49842*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49842*0 + 3*486*FLEN/8, x4, x1, x2)

inst_16615:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffff0; valaddr_reg:x3; val_offset:49845*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49845*0 + 3*487*FLEN/8, x4, x1, x2)

inst_16616:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffff8; valaddr_reg:x3; val_offset:49848*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49848*0 + 3*488*FLEN/8, x4, x1, x2)

inst_16617:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffffc; valaddr_reg:x3; val_offset:49851*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49851*0 + 3*489*FLEN/8, x4, x1, x2)

inst_16618:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820ffffffffffffe; valaddr_reg:x3; val_offset:49854*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49854*0 + 3*490*FLEN/8, x4, x1, x2)

inst_16619:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x2bf911dc09a97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x020 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f82bf911dc09a97; op2val:0x8000;
op3val:0x820fffffffffffff; valaddr_reg:x3; val_offset:49857*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49857*0 + 3*491*FLEN/8, x4, x1, x2)

inst_16620:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000000000; valaddr_reg:x3; val_offset:49860*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49860*0 + 3*492*FLEN/8, x4, x1, x2)

inst_16621:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000000001; valaddr_reg:x3; val_offset:49863*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49863*0 + 3*493*FLEN/8, x4, x1, x2)

inst_16622:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000000003; valaddr_reg:x3; val_offset:49866*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49866*0 + 3*494*FLEN/8, x4, x1, x2)

inst_16623:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000000007; valaddr_reg:x3; val_offset:49869*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49869*0 + 3*495*FLEN/8, x4, x1, x2)

inst_16624:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000000000f; valaddr_reg:x3; val_offset:49872*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49872*0 + 3*496*FLEN/8, x4, x1, x2)

inst_16625:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000000001f; valaddr_reg:x3; val_offset:49875*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49875*0 + 3*497*FLEN/8, x4, x1, x2)

inst_16626:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000000003f; valaddr_reg:x3; val_offset:49878*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49878*0 + 3*498*FLEN/8, x4, x1, x2)

inst_16627:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000000007f; valaddr_reg:x3; val_offset:49881*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49881*0 + 3*499*FLEN/8, x4, x1, x2)

inst_16628:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000000000ff; valaddr_reg:x3; val_offset:49884*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49884*0 + 3*500*FLEN/8, x4, x1, x2)

inst_16629:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000000001ff; valaddr_reg:x3; val_offset:49887*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49887*0 + 3*501*FLEN/8, x4, x1, x2)

inst_16630:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000000003ff; valaddr_reg:x3; val_offset:49890*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49890*0 + 3*502*FLEN/8, x4, x1, x2)

inst_16631:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000000007ff; valaddr_reg:x3; val_offset:49893*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49893*0 + 3*503*FLEN/8, x4, x1, x2)

inst_16632:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000000fff; valaddr_reg:x3; val_offset:49896*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49896*0 + 3*504*FLEN/8, x4, x1, x2)

inst_16633:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000001fff; valaddr_reg:x3; val_offset:49899*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49899*0 + 3*505*FLEN/8, x4, x1, x2)

inst_16634:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000003fff; valaddr_reg:x3; val_offset:49902*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49902*0 + 3*506*FLEN/8, x4, x1, x2)

inst_16635:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000007fff; valaddr_reg:x3; val_offset:49905*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49905*0 + 3*507*FLEN/8, x4, x1, x2)

inst_16636:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000000ffff; valaddr_reg:x3; val_offset:49908*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49908*0 + 3*508*FLEN/8, x4, x1, x2)

inst_16637:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000001ffff; valaddr_reg:x3; val_offset:49911*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49911*0 + 3*509*FLEN/8, x4, x1, x2)

inst_16638:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000003ffff; valaddr_reg:x3; val_offset:49914*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49914*0 + 3*510*FLEN/8, x4, x1, x2)

inst_16639:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000007ffff; valaddr_reg:x3; val_offset:49917*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49917*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_16640:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000000fffff; valaddr_reg:x3; val_offset:49920*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49920*0 + 3*512*FLEN/8, x4, x1, x2)

inst_16641:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000001fffff; valaddr_reg:x3; val_offset:49923*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49923*0 + 3*513*FLEN/8, x4, x1, x2)

inst_16642:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000003fffff; valaddr_reg:x3; val_offset:49926*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49926*0 + 3*514*FLEN/8, x4, x1, x2)

inst_16643:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000007fffff; valaddr_reg:x3; val_offset:49929*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49929*0 + 3*515*FLEN/8, x4, x1, x2)

inst_16644:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000000ffffff; valaddr_reg:x3; val_offset:49932*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49932*0 + 3*516*FLEN/8, x4, x1, x2)

inst_16645:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000001ffffff; valaddr_reg:x3; val_offset:49935*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49935*0 + 3*517*FLEN/8, x4, x1, x2)

inst_16646:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000003ffffff; valaddr_reg:x3; val_offset:49938*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49938*0 + 3*518*FLEN/8, x4, x1, x2)

inst_16647:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000007ffffff; valaddr_reg:x3; val_offset:49941*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49941*0 + 3*519*FLEN/8, x4, x1, x2)

inst_16648:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000000fffffff; valaddr_reg:x3; val_offset:49944*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49944*0 + 3*520*FLEN/8, x4, x1, x2)

inst_16649:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000001fffffff; valaddr_reg:x3; val_offset:49947*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49947*0 + 3*521*FLEN/8, x4, x1, x2)

inst_16650:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000003fffffff; valaddr_reg:x3; val_offset:49950*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49950*0 + 3*522*FLEN/8, x4, x1, x2)

inst_16651:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000007fffffff; valaddr_reg:x3; val_offset:49953*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49953*0 + 3*523*FLEN/8, x4, x1, x2)

inst_16652:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00000ffffffff; valaddr_reg:x3; val_offset:49956*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49956*0 + 3*524*FLEN/8, x4, x1, x2)

inst_16653:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00001ffffffff; valaddr_reg:x3; val_offset:49959*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49959*0 + 3*525*FLEN/8, x4, x1, x2)

inst_16654:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00003ffffffff; valaddr_reg:x3; val_offset:49962*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49962*0 + 3*526*FLEN/8, x4, x1, x2)

inst_16655:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00007ffffffff; valaddr_reg:x3; val_offset:49965*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49965*0 + 3*527*FLEN/8, x4, x1, x2)

inst_16656:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0000fffffffff; valaddr_reg:x3; val_offset:49968*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49968*0 + 3*528*FLEN/8, x4, x1, x2)

inst_16657:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0001fffffffff; valaddr_reg:x3; val_offset:49971*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49971*0 + 3*529*FLEN/8, x4, x1, x2)

inst_16658:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0003fffffffff; valaddr_reg:x3; val_offset:49974*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49974*0 + 3*530*FLEN/8, x4, x1, x2)

inst_16659:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0007fffffffff; valaddr_reg:x3; val_offset:49977*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49977*0 + 3*531*FLEN/8, x4, x1, x2)

inst_16660:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb000ffffffffff; valaddr_reg:x3; val_offset:49980*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49980*0 + 3*532*FLEN/8, x4, x1, x2)

inst_16661:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb001ffffffffff; valaddr_reg:x3; val_offset:49983*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49983*0 + 3*533*FLEN/8, x4, x1, x2)

inst_16662:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb003ffffffffff; valaddr_reg:x3; val_offset:49986*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49986*0 + 3*534*FLEN/8, x4, x1, x2)

inst_16663:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb007ffffffffff; valaddr_reg:x3; val_offset:49989*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49989*0 + 3*535*FLEN/8, x4, x1, x2)

inst_16664:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb00fffffffffff; valaddr_reg:x3; val_offset:49992*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49992*0 + 3*536*FLEN/8, x4, x1, x2)

inst_16665:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb01fffffffffff; valaddr_reg:x3; val_offset:49995*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49995*0 + 3*537*FLEN/8, x4, x1, x2)

inst_16666:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb03fffffffffff; valaddr_reg:x3; val_offset:49998*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 49998*0 + 3*538*FLEN/8, x4, x1, x2)

inst_16667:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb07fffffffffff; valaddr_reg:x3; val_offset:50001*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50001*0 + 3*539*FLEN/8, x4, x1, x2)

inst_16668:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb0ffffffffffff; valaddr_reg:x3; val_offset:50004*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50004*0 + 3*540*FLEN/8, x4, x1, x2)

inst_16669:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb1ffffffffffff; valaddr_reg:x3; val_offset:50007*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50007*0 + 3*541*FLEN/8, x4, x1, x2)

inst_16670:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb3ffffffffffff; valaddr_reg:x3; val_offset:50010*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50010*0 + 3*542*FLEN/8, x4, x1, x2)

inst_16671:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb7ffffffffffff; valaddr_reg:x3; val_offset:50013*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50013*0 + 3*543*FLEN/8, x4, x1, x2)

inst_16672:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcb8000000000000; valaddr_reg:x3; val_offset:50016*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50016*0 + 3*544*FLEN/8, x4, x1, x2)

inst_16673:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbc000000000000; valaddr_reg:x3; val_offset:50019*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50019*0 + 3*545*FLEN/8, x4, x1, x2)

inst_16674:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbe000000000000; valaddr_reg:x3; val_offset:50022*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50022*0 + 3*546*FLEN/8, x4, x1, x2)

inst_16675:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbf000000000000; valaddr_reg:x3; val_offset:50025*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50025*0 + 3*547*FLEN/8, x4, x1, x2)

inst_16676:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbf800000000000; valaddr_reg:x3; val_offset:50028*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50028*0 + 3*548*FLEN/8, x4, x1, x2)

inst_16677:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfc00000000000; valaddr_reg:x3; val_offset:50031*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50031*0 + 3*549*FLEN/8, x4, x1, x2)

inst_16678:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfe00000000000; valaddr_reg:x3; val_offset:50034*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50034*0 + 3*550*FLEN/8, x4, x1, x2)

inst_16679:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbff00000000000; valaddr_reg:x3; val_offset:50037*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50037*0 + 3*551*FLEN/8, x4, x1, x2)

inst_16680:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbff80000000000; valaddr_reg:x3; val_offset:50040*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50040*0 + 3*552*FLEN/8, x4, x1, x2)

inst_16681:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffc0000000000; valaddr_reg:x3; val_offset:50043*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50043*0 + 3*553*FLEN/8, x4, x1, x2)

inst_16682:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffe0000000000; valaddr_reg:x3; val_offset:50046*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50046*0 + 3*554*FLEN/8, x4, x1, x2)

inst_16683:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfff0000000000; valaddr_reg:x3; val_offset:50049*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50049*0 + 3*555*FLEN/8, x4, x1, x2)

inst_16684:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfff8000000000; valaddr_reg:x3; val_offset:50052*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50052*0 + 3*556*FLEN/8, x4, x1, x2)

inst_16685:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffc000000000; valaddr_reg:x3; val_offset:50055*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50055*0 + 3*557*FLEN/8, x4, x1, x2)

inst_16686:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffe000000000; valaddr_reg:x3; val_offset:50058*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50058*0 + 3*558*FLEN/8, x4, x1, x2)

inst_16687:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffff000000000; valaddr_reg:x3; val_offset:50061*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50061*0 + 3*559*FLEN/8, x4, x1, x2)

inst_16688:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffff800000000; valaddr_reg:x3; val_offset:50064*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50064*0 + 3*560*FLEN/8, x4, x1, x2)

inst_16689:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffc00000000; valaddr_reg:x3; val_offset:50067*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50067*0 + 3*561*FLEN/8, x4, x1, x2)

inst_16690:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffe00000000; valaddr_reg:x3; val_offset:50070*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50070*0 + 3*562*FLEN/8, x4, x1, x2)

inst_16691:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffff00000000; valaddr_reg:x3; val_offset:50073*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50073*0 + 3*563*FLEN/8, x4, x1, x2)

inst_16692:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffff80000000; valaddr_reg:x3; val_offset:50076*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50076*0 + 3*564*FLEN/8, x4, x1, x2)

inst_16693:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffc0000000; valaddr_reg:x3; val_offset:50079*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50079*0 + 3*565*FLEN/8, x4, x1, x2)

inst_16694:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffe0000000; valaddr_reg:x3; val_offset:50082*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50082*0 + 3*566*FLEN/8, x4, x1, x2)

inst_16695:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffff0000000; valaddr_reg:x3; val_offset:50085*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50085*0 + 3*567*FLEN/8, x4, x1, x2)

inst_16696:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffff8000000; valaddr_reg:x3; val_offset:50088*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50088*0 + 3*568*FLEN/8, x4, x1, x2)

inst_16697:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffc000000; valaddr_reg:x3; val_offset:50091*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50091*0 + 3*569*FLEN/8, x4, x1, x2)

inst_16698:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffe000000; valaddr_reg:x3; val_offset:50094*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50094*0 + 3*570*FLEN/8, x4, x1, x2)

inst_16699:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffff000000; valaddr_reg:x3; val_offset:50097*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50097*0 + 3*571*FLEN/8, x4, x1, x2)

inst_16700:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffff800000; valaddr_reg:x3; val_offset:50100*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50100*0 + 3*572*FLEN/8, x4, x1, x2)

inst_16701:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffc00000; valaddr_reg:x3; val_offset:50103*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50103*0 + 3*573*FLEN/8, x4, x1, x2)

inst_16702:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffe00000; valaddr_reg:x3; val_offset:50106*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50106*0 + 3*574*FLEN/8, x4, x1, x2)

inst_16703:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffff00000; valaddr_reg:x3; val_offset:50109*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50109*0 + 3*575*FLEN/8, x4, x1, x2)

inst_16704:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffff80000; valaddr_reg:x3; val_offset:50112*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50112*0 + 3*576*FLEN/8, x4, x1, x2)

inst_16705:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffc0000; valaddr_reg:x3; val_offset:50115*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50115*0 + 3*577*FLEN/8, x4, x1, x2)

inst_16706:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffe0000; valaddr_reg:x3; val_offset:50118*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50118*0 + 3*578*FLEN/8, x4, x1, x2)

inst_16707:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffff0000; valaddr_reg:x3; val_offset:50121*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50121*0 + 3*579*FLEN/8, x4, x1, x2)

inst_16708:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffff8000; valaddr_reg:x3; val_offset:50124*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50124*0 + 3*580*FLEN/8, x4, x1, x2)

inst_16709:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffc000; valaddr_reg:x3; val_offset:50127*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50127*0 + 3*581*FLEN/8, x4, x1, x2)

inst_16710:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffe000; valaddr_reg:x3; val_offset:50130*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50130*0 + 3*582*FLEN/8, x4, x1, x2)

inst_16711:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffff000; valaddr_reg:x3; val_offset:50133*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50133*0 + 3*583*FLEN/8, x4, x1, x2)

inst_16712:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffff800; valaddr_reg:x3; val_offset:50136*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50136*0 + 3*584*FLEN/8, x4, x1, x2)

inst_16713:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffc00; valaddr_reg:x3; val_offset:50139*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50139*0 + 3*585*FLEN/8, x4, x1, x2)

inst_16714:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffe00; valaddr_reg:x3; val_offset:50142*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50142*0 + 3*586*FLEN/8, x4, x1, x2)

inst_16715:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffff00; valaddr_reg:x3; val_offset:50145*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50145*0 + 3*587*FLEN/8, x4, x1, x2)

inst_16716:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffff80; valaddr_reg:x3; val_offset:50148*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50148*0 + 3*588*FLEN/8, x4, x1, x2)

inst_16717:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffffc0; valaddr_reg:x3; val_offset:50151*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50151*0 + 3*589*FLEN/8, x4, x1, x2)

inst_16718:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffffe0; valaddr_reg:x3; val_offset:50154*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50154*0 + 3*590*FLEN/8, x4, x1, x2)

inst_16719:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffff0; valaddr_reg:x3; val_offset:50157*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50157*0 + 3*591*FLEN/8, x4, x1, x2)

inst_16720:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffff8; valaddr_reg:x3; val_offset:50160*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50160*0 + 3*592*FLEN/8, x4, x1, x2)

inst_16721:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffffc; valaddr_reg:x3; val_offset:50163*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50163*0 + 3*593*FLEN/8, x4, x1, x2)

inst_16722:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbffffffffffffe; valaddr_reg:x3; val_offset:50166*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50166*0 + 3*594*FLEN/8, x4, x1, x2)

inst_16723:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3cb and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbcbfffffffffffff; valaddr_reg:x3; val_offset:50169*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50169*0 + 3*595*FLEN/8, x4, x1, x2)

inst_16724:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:50172*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50172*0 + 3*596*FLEN/8, x4, x1, x2)

inst_16725:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:50175*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50175*0 + 3*597*FLEN/8, x4, x1, x2)

inst_16726:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:50178*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50178*0 + 3*598*FLEN/8, x4, x1, x2)

inst_16727:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:50181*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50181*0 + 3*599*FLEN/8, x4, x1, x2)

inst_16728:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:50184*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50184*0 + 3*600*FLEN/8, x4, x1, x2)

inst_16729:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:50187*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50187*0 + 3*601*FLEN/8, x4, x1, x2)

inst_16730:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:50190*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50190*0 + 3*602*FLEN/8, x4, x1, x2)

inst_16731:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:50193*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50193*0 + 3*603*FLEN/8, x4, x1, x2)

inst_16732:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:50196*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50196*0 + 3*604*FLEN/8, x4, x1, x2)

inst_16733:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:50199*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50199*0 + 3*605*FLEN/8, x4, x1, x2)

inst_16734:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:50202*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50202*0 + 3*606*FLEN/8, x4, x1, x2)

inst_16735:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:50205*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50205*0 + 3*607*FLEN/8, x4, x1, x2)

inst_16736:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:50208*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50208*0 + 3*608*FLEN/8, x4, x1, x2)

inst_16737:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:50211*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50211*0 + 3*609*FLEN/8, x4, x1, x2)

inst_16738:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:50214*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50214*0 + 3*610*FLEN/8, x4, x1, x2)

inst_16739:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:50217*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50217*0 + 3*611*FLEN/8, x4, x1, x2)

inst_16740:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:50220*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50220*0 + 3*612*FLEN/8, x4, x1, x2)

inst_16741:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:50223*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50223*0 + 3*613*FLEN/8, x4, x1, x2)

inst_16742:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:50226*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50226*0 + 3*614*FLEN/8, x4, x1, x2)

inst_16743:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:50229*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50229*0 + 3*615*FLEN/8, x4, x1, x2)

inst_16744:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:50232*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50232*0 + 3*616*FLEN/8, x4, x1, x2)

inst_16745:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x31d290299f103 and fs2 == 1 and fe2 == 0x1fe and fm2 == 0xac96a568d3f7a and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f831d290299f103; op2val:0x9feac96a568d3f7a;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:50235*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50235*0 + 3*617*FLEN/8, x4, x1, x2)

inst_16746:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:50238*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50238*0 + 3*618*FLEN/8, x4, x1, x2)

inst_16747:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:50241*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50241*0 + 3*619*FLEN/8, x4, x1, x2)

inst_16748:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:50244*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50244*0 + 3*620*FLEN/8, x4, x1, x2)

inst_16749:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:50247*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50247*0 + 3*621*FLEN/8, x4, x1, x2)

inst_16750:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:50250*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50250*0 + 3*622*FLEN/8, x4, x1, x2)

inst_16751:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:50253*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50253*0 + 3*623*FLEN/8, x4, x1, x2)

inst_16752:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:50256*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50256*0 + 3*624*FLEN/8, x4, x1, x2)

inst_16753:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:50259*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50259*0 + 3*625*FLEN/8, x4, x1, x2)

inst_16754:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:50262*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50262*0 + 3*626*FLEN/8, x4, x1, x2)

inst_16755:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:50265*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50265*0 + 3*627*FLEN/8, x4, x1, x2)

inst_16756:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:50268*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50268*0 + 3*628*FLEN/8, x4, x1, x2)

inst_16757:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:50271*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50271*0 + 3*629*FLEN/8, x4, x1, x2)

inst_16758:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:50274*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50274*0 + 3*630*FLEN/8, x4, x1, x2)

inst_16759:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:50277*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50277*0 + 3*631*FLEN/8, x4, x1, x2)

inst_16760:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:50280*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50280*0 + 3*632*FLEN/8, x4, x1, x2)

inst_16761:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:50283*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50283*0 + 3*633*FLEN/8, x4, x1, x2)

inst_16762:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:50286*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50286*0 + 3*634*FLEN/8, x4, x1, x2)

inst_16763:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:50289*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50289*0 + 3*635*FLEN/8, x4, x1, x2)

inst_16764:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:50292*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50292*0 + 3*636*FLEN/8, x4, x1, x2)

inst_16765:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:50295*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50295*0 + 3*637*FLEN/8, x4, x1, x2)

inst_16766:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:50298*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50298*0 + 3*638*FLEN/8, x4, x1, x2)

inst_16767:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:50301*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50301*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_16768:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000000000; valaddr_reg:x3; val_offset:50304*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50304*0 + 3*640*FLEN/8, x4, x1, x2)

inst_16769:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000000001; valaddr_reg:x3; val_offset:50307*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50307*0 + 3*641*FLEN/8, x4, x1, x2)

inst_16770:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000000003; valaddr_reg:x3; val_offset:50310*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50310*0 + 3*642*FLEN/8, x4, x1, x2)

inst_16771:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000000007; valaddr_reg:x3; val_offset:50313*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50313*0 + 3*643*FLEN/8, x4, x1, x2)

inst_16772:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000000000f; valaddr_reg:x3; val_offset:50316*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50316*0 + 3*644*FLEN/8, x4, x1, x2)

inst_16773:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000000001f; valaddr_reg:x3; val_offset:50319*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50319*0 + 3*645*FLEN/8, x4, x1, x2)

inst_16774:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000000003f; valaddr_reg:x3; val_offset:50322*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50322*0 + 3*646*FLEN/8, x4, x1, x2)

inst_16775:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000000007f; valaddr_reg:x3; val_offset:50325*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50325*0 + 3*647*FLEN/8, x4, x1, x2)

inst_16776:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000000000ff; valaddr_reg:x3; val_offset:50328*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50328*0 + 3*648*FLEN/8, x4, x1, x2)

inst_16777:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000000001ff; valaddr_reg:x3; val_offset:50331*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50331*0 + 3*649*FLEN/8, x4, x1, x2)

inst_16778:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000000003ff; valaddr_reg:x3; val_offset:50334*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50334*0 + 3*650*FLEN/8, x4, x1, x2)

inst_16779:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000000007ff; valaddr_reg:x3; val_offset:50337*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50337*0 + 3*651*FLEN/8, x4, x1, x2)

inst_16780:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000000fff; valaddr_reg:x3; val_offset:50340*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50340*0 + 3*652*FLEN/8, x4, x1, x2)

inst_16781:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000001fff; valaddr_reg:x3; val_offset:50343*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50343*0 + 3*653*FLEN/8, x4, x1, x2)

inst_16782:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000003fff; valaddr_reg:x3; val_offset:50346*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50346*0 + 3*654*FLEN/8, x4, x1, x2)

inst_16783:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000007fff; valaddr_reg:x3; val_offset:50349*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50349*0 + 3*655*FLEN/8, x4, x1, x2)

inst_16784:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000000ffff; valaddr_reg:x3; val_offset:50352*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50352*0 + 3*656*FLEN/8, x4, x1, x2)

inst_16785:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000001ffff; valaddr_reg:x3; val_offset:50355*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50355*0 + 3*657*FLEN/8, x4, x1, x2)

inst_16786:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000003ffff; valaddr_reg:x3; val_offset:50358*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50358*0 + 3*658*FLEN/8, x4, x1, x2)

inst_16787:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000007ffff; valaddr_reg:x3; val_offset:50361*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50361*0 + 3*659*FLEN/8, x4, x1, x2)

inst_16788:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000000fffff; valaddr_reg:x3; val_offset:50364*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50364*0 + 3*660*FLEN/8, x4, x1, x2)

inst_16789:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000001fffff; valaddr_reg:x3; val_offset:50367*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50367*0 + 3*661*FLEN/8, x4, x1, x2)

inst_16790:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000003fffff; valaddr_reg:x3; val_offset:50370*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50370*0 + 3*662*FLEN/8, x4, x1, x2)

inst_16791:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000007fffff; valaddr_reg:x3; val_offset:50373*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50373*0 + 3*663*FLEN/8, x4, x1, x2)

inst_16792:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000000ffffff; valaddr_reg:x3; val_offset:50376*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50376*0 + 3*664*FLEN/8, x4, x1, x2)

inst_16793:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000001ffffff; valaddr_reg:x3; val_offset:50379*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50379*0 + 3*665*FLEN/8, x4, x1, x2)

inst_16794:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000003ffffff; valaddr_reg:x3; val_offset:50382*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50382*0 + 3*666*FLEN/8, x4, x1, x2)

inst_16795:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000007ffffff; valaddr_reg:x3; val_offset:50385*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50385*0 + 3*667*FLEN/8, x4, x1, x2)

inst_16796:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000000fffffff; valaddr_reg:x3; val_offset:50388*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50388*0 + 3*668*FLEN/8, x4, x1, x2)

inst_16797:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000001fffffff; valaddr_reg:x3; val_offset:50391*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50391*0 + 3*669*FLEN/8, x4, x1, x2)

inst_16798:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000003fffffff; valaddr_reg:x3; val_offset:50394*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50394*0 + 3*670*FLEN/8, x4, x1, x2)

inst_16799:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000007fffffff; valaddr_reg:x3; val_offset:50397*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50397*0 + 3*671*FLEN/8, x4, x1, x2)

inst_16800:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400000ffffffff; valaddr_reg:x3; val_offset:50400*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50400*0 + 3*672*FLEN/8, x4, x1, x2)

inst_16801:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400001ffffffff; valaddr_reg:x3; val_offset:50403*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50403*0 + 3*673*FLEN/8, x4, x1, x2)

inst_16802:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400003ffffffff; valaddr_reg:x3; val_offset:50406*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50406*0 + 3*674*FLEN/8, x4, x1, x2)

inst_16803:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400007ffffffff; valaddr_reg:x3; val_offset:50409*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50409*0 + 3*675*FLEN/8, x4, x1, x2)

inst_16804:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340000fffffffff; valaddr_reg:x3; val_offset:50412*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50412*0 + 3*676*FLEN/8, x4, x1, x2)

inst_16805:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340001fffffffff; valaddr_reg:x3; val_offset:50415*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50415*0 + 3*677*FLEN/8, x4, x1, x2)

inst_16806:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340003fffffffff; valaddr_reg:x3; val_offset:50418*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50418*0 + 3*678*FLEN/8, x4, x1, x2)

inst_16807:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340007fffffffff; valaddr_reg:x3; val_offset:50421*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50421*0 + 3*679*FLEN/8, x4, x1, x2)

inst_16808:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34000ffffffffff; valaddr_reg:x3; val_offset:50424*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50424*0 + 3*680*FLEN/8, x4, x1, x2)

inst_16809:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34001ffffffffff; valaddr_reg:x3; val_offset:50427*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50427*0 + 3*681*FLEN/8, x4, x1, x2)

inst_16810:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34003ffffffffff; valaddr_reg:x3; val_offset:50430*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50430*0 + 3*682*FLEN/8, x4, x1, x2)

inst_16811:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34007ffffffffff; valaddr_reg:x3; val_offset:50433*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50433*0 + 3*683*FLEN/8, x4, x1, x2)

inst_16812:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3400fffffffffff; valaddr_reg:x3; val_offset:50436*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50436*0 + 3*684*FLEN/8, x4, x1, x2)

inst_16813:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3401fffffffffff; valaddr_reg:x3; val_offset:50439*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50439*0 + 3*685*FLEN/8, x4, x1, x2)

inst_16814:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3403fffffffffff; valaddr_reg:x3; val_offset:50442*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50442*0 + 3*686*FLEN/8, x4, x1, x2)

inst_16815:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x3407fffffffffff; valaddr_reg:x3; val_offset:50445*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50445*0 + 3*687*FLEN/8, x4, x1, x2)

inst_16816:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x340ffffffffffff; valaddr_reg:x3; val_offset:50448*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50448*0 + 3*688*FLEN/8, x4, x1, x2)

inst_16817:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x341ffffffffffff; valaddr_reg:x3; val_offset:50451*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50451*0 + 3*689*FLEN/8, x4, x1, x2)

inst_16818:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x343ffffffffffff; valaddr_reg:x3; val_offset:50454*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50454*0 + 3*690*FLEN/8, x4, x1, x2)

inst_16819:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x347ffffffffffff; valaddr_reg:x3; val_offset:50457*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50457*0 + 3*691*FLEN/8, x4, x1, x2)

inst_16820:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x348000000000000; valaddr_reg:x3; val_offset:50460*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50460*0 + 3*692*FLEN/8, x4, x1, x2)

inst_16821:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34c000000000000; valaddr_reg:x3; val_offset:50463*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50463*0 + 3*693*FLEN/8, x4, x1, x2)

inst_16822:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34e000000000000; valaddr_reg:x3; val_offset:50466*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50466*0 + 3*694*FLEN/8, x4, x1, x2)

inst_16823:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34f000000000000; valaddr_reg:x3; val_offset:50469*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50469*0 + 3*695*FLEN/8, x4, x1, x2)

inst_16824:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34f800000000000; valaddr_reg:x3; val_offset:50472*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50472*0 + 3*696*FLEN/8, x4, x1, x2)

inst_16825:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fc00000000000; valaddr_reg:x3; val_offset:50475*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50475*0 + 3*697*FLEN/8, x4, x1, x2)

inst_16826:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fe00000000000; valaddr_reg:x3; val_offset:50478*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50478*0 + 3*698*FLEN/8, x4, x1, x2)

inst_16827:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ff00000000000; valaddr_reg:x3; val_offset:50481*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50481*0 + 3*699*FLEN/8, x4, x1, x2)

inst_16828:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ff80000000000; valaddr_reg:x3; val_offset:50484*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50484*0 + 3*700*FLEN/8, x4, x1, x2)

inst_16829:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffc0000000000; valaddr_reg:x3; val_offset:50487*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50487*0 + 3*701*FLEN/8, x4, x1, x2)

inst_16830:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffe0000000000; valaddr_reg:x3; val_offset:50490*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50490*0 + 3*702*FLEN/8, x4, x1, x2)

inst_16831:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fff0000000000; valaddr_reg:x3; val_offset:50493*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50493*0 + 3*703*FLEN/8, x4, x1, x2)

inst_16832:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fff8000000000; valaddr_reg:x3; val_offset:50496*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50496*0 + 3*704*FLEN/8, x4, x1, x2)

inst_16833:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffc000000000; valaddr_reg:x3; val_offset:50499*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50499*0 + 3*705*FLEN/8, x4, x1, x2)

inst_16834:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffe000000000; valaddr_reg:x3; val_offset:50502*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50502*0 + 3*706*FLEN/8, x4, x1, x2)

inst_16835:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffff000000000; valaddr_reg:x3; val_offset:50505*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50505*0 + 3*707*FLEN/8, x4, x1, x2)

inst_16836:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffff800000000; valaddr_reg:x3; val_offset:50508*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50508*0 + 3*708*FLEN/8, x4, x1, x2)

inst_16837:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffc00000000; valaddr_reg:x3; val_offset:50511*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50511*0 + 3*709*FLEN/8, x4, x1, x2)

inst_16838:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffe00000000; valaddr_reg:x3; val_offset:50514*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50514*0 + 3*710*FLEN/8, x4, x1, x2)

inst_16839:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffff00000000; valaddr_reg:x3; val_offset:50517*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50517*0 + 3*711*FLEN/8, x4, x1, x2)

inst_16840:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffff80000000; valaddr_reg:x3; val_offset:50520*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50520*0 + 3*712*FLEN/8, x4, x1, x2)

inst_16841:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffc0000000; valaddr_reg:x3; val_offset:50523*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50523*0 + 3*713*FLEN/8, x4, x1, x2)

inst_16842:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffe0000000; valaddr_reg:x3; val_offset:50526*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50526*0 + 3*714*FLEN/8, x4, x1, x2)

inst_16843:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffff0000000; valaddr_reg:x3; val_offset:50529*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50529*0 + 3*715*FLEN/8, x4, x1, x2)

inst_16844:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffff8000000; valaddr_reg:x3; val_offset:50532*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50532*0 + 3*716*FLEN/8, x4, x1, x2)

inst_16845:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffc000000; valaddr_reg:x3; val_offset:50535*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50535*0 + 3*717*FLEN/8, x4, x1, x2)

inst_16846:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffe000000; valaddr_reg:x3; val_offset:50538*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50538*0 + 3*718*FLEN/8, x4, x1, x2)

inst_16847:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffff000000; valaddr_reg:x3; val_offset:50541*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50541*0 + 3*719*FLEN/8, x4, x1, x2)

inst_16848:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffff800000; valaddr_reg:x3; val_offset:50544*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50544*0 + 3*720*FLEN/8, x4, x1, x2)

inst_16849:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffc00000; valaddr_reg:x3; val_offset:50547*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50547*0 + 3*721*FLEN/8, x4, x1, x2)

inst_16850:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffe00000; valaddr_reg:x3; val_offset:50550*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50550*0 + 3*722*FLEN/8, x4, x1, x2)

inst_16851:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffff00000; valaddr_reg:x3; val_offset:50553*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50553*0 + 3*723*FLEN/8, x4, x1, x2)

inst_16852:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffff80000; valaddr_reg:x3; val_offset:50556*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50556*0 + 3*724*FLEN/8, x4, x1, x2)

inst_16853:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffc0000; valaddr_reg:x3; val_offset:50559*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50559*0 + 3*725*FLEN/8, x4, x1, x2)

inst_16854:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffe0000; valaddr_reg:x3; val_offset:50562*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50562*0 + 3*726*FLEN/8, x4, x1, x2)

inst_16855:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffff0000; valaddr_reg:x3; val_offset:50565*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50565*0 + 3*727*FLEN/8, x4, x1, x2)

inst_16856:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffff8000; valaddr_reg:x3; val_offset:50568*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50568*0 + 3*728*FLEN/8, x4, x1, x2)

inst_16857:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffc000; valaddr_reg:x3; val_offset:50571*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50571*0 + 3*729*FLEN/8, x4, x1, x2)

inst_16858:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffe000; valaddr_reg:x3; val_offset:50574*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50574*0 + 3*730*FLEN/8, x4, x1, x2)

inst_16859:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffff000; valaddr_reg:x3; val_offset:50577*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50577*0 + 3*731*FLEN/8, x4, x1, x2)

inst_16860:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffff800; valaddr_reg:x3; val_offset:50580*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50580*0 + 3*732*FLEN/8, x4, x1, x2)

inst_16861:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffc00; valaddr_reg:x3; val_offset:50583*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50583*0 + 3*733*FLEN/8, x4, x1, x2)

inst_16862:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffe00; valaddr_reg:x3; val_offset:50586*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50586*0 + 3*734*FLEN/8, x4, x1, x2)

inst_16863:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffff00; valaddr_reg:x3; val_offset:50589*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50589*0 + 3*735*FLEN/8, x4, x1, x2)

inst_16864:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffff80; valaddr_reg:x3; val_offset:50592*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50592*0 + 3*736*FLEN/8, x4, x1, x2)

inst_16865:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffffc0; valaddr_reg:x3; val_offset:50595*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50595*0 + 3*737*FLEN/8, x4, x1, x2)

inst_16866:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffffe0; valaddr_reg:x3; val_offset:50598*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50598*0 + 3*738*FLEN/8, x4, x1, x2)

inst_16867:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffff0; valaddr_reg:x3; val_offset:50601*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50601*0 + 3*739*FLEN/8, x4, x1, x2)

inst_16868:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffff8; valaddr_reg:x3; val_offset:50604*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50604*0 + 3*740*FLEN/8, x4, x1, x2)

inst_16869:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffffc; valaddr_reg:x3; val_offset:50607*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50607*0 + 3*741*FLEN/8, x4, x1, x2)

inst_16870:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34ffffffffffffe; valaddr_reg:x3; val_offset:50610*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50610*0 + 3*742*FLEN/8, x4, x1, x2)

inst_16871:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x3243082dd9c97 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f83243082dd9c97; op2val:0x0;
op3val:0x34fffffffffffff; valaddr_reg:x3; val_offset:50613*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50613*0 + 3*743*FLEN/8, x4, x1, x2)

inst_16872:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:50616*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50616*0 + 3*744*FLEN/8, x4, x1, x2)

inst_16873:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:50619*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50619*0 + 3*745*FLEN/8, x4, x1, x2)

inst_16874:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:50622*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50622*0 + 3*746*FLEN/8, x4, x1, x2)

inst_16875:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:50625*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50625*0 + 3*747*FLEN/8, x4, x1, x2)

inst_16876:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:50628*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50628*0 + 3*748*FLEN/8, x4, x1, x2)

inst_16877:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:50631*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50631*0 + 3*749*FLEN/8, x4, x1, x2)

inst_16878:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:50634*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50634*0 + 3*750*FLEN/8, x4, x1, x2)

inst_16879:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:50637*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50637*0 + 3*751*FLEN/8, x4, x1, x2)

inst_16880:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:50640*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50640*0 + 3*752*FLEN/8, x4, x1, x2)

inst_16881:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:50643*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50643*0 + 3*753*FLEN/8, x4, x1, x2)

inst_16882:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:50646*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50646*0 + 3*754*FLEN/8, x4, x1, x2)

inst_16883:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:50649*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50649*0 + 3*755*FLEN/8, x4, x1, x2)

inst_16884:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:50652*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50652*0 + 3*756*FLEN/8, x4, x1, x2)

inst_16885:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:50655*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50655*0 + 3*757*FLEN/8, x4, x1, x2)

inst_16886:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:50658*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50658*0 + 3*758*FLEN/8, x4, x1, x2)

inst_16887:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:50661*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50661*0 + 3*759*FLEN/8, x4, x1, x2)

inst_16888:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:50664*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50664*0 + 3*760*FLEN/8, x4, x1, x2)

inst_16889:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:50667*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50667*0 + 3*761*FLEN/8, x4, x1, x2)

inst_16890:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:50670*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50670*0 + 3*762*FLEN/8, x4, x1, x2)

inst_16891:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:50673*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50673*0 + 3*763*FLEN/8, x4, x1, x2)

inst_16892:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:50676*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50676*0 + 3*764*FLEN/8, x4, x1, x2)

inst_16893:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:50679*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50679*0 + 3*765*FLEN/8, x4, x1, x2)

inst_16894:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x82a0000000000000; valaddr_reg:x3; val_offset:50682*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50682*0 + 3*766*FLEN/8, x4, x1, x2)

inst_16895:
// fs1 == 0 and fe1 == 0x5f8 and fm1 == 0x349aab4b5712f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f8349aab4b5712f; op2val:0x8000;
op3val:0x82a0000000000001; valaddr_reg:x3; val_offset:50685*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 50685*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596864,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596865,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596867,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596871,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596879,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596895,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596927,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330596991,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597119,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597375,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330597887,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330598911,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330600959,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330605055,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330613247,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330629631,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330662399,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330727935,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387330859007,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331121151,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387331645439,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387332694015,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387334791167,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387338985471,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387347374079,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387364151295,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387397705727,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387464814591,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387599032319,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122387867467775,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122388404338687,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122389478080511,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122391625564159,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122395920531455,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122404510466047,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122421690335231,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122456050073599,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122524769550335,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122662208503807,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153122937086410751,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153123486842224639,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153124586353852415,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153126785377107967,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153131183423619071,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153139979516641279,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153157571702685695,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153192756074774527,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153263124818952191,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153403862307307519,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(153685337284018175,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(154248287237439487,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282111,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(155374187144282112,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(156500087051124736,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157063037004546048,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157344511981256704,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157485249469612032,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157555618213789696,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157590802585878528,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157608394771922944,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157617190864945152,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157621588911456256,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157623787934711808,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157624887446339584,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625437202153472,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625712080060416,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625849519013888,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625918238490624,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625952598228992,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625969778098176,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625978368032768,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625982663000064,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625984810483712,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625985884225536,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986421096448,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986689531904,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986823749632,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986890858496,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986924412928,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986941190144,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986949578752,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986953773056,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986955870208,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986956918784,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957443072,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957705216,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957836288,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957901824,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957934592,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957950976,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957959168,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957963264,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957965312,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966336,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957966848,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967104,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967232,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967296,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967328,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967344,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967352,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967356,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967358,64,FLEN)
NAN_BOXED(6882152072060236115,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(157625986957967359,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002624,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002625,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002627,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002631,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002639,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002655,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002687,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002751,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663002879,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663003135,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663003647,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663004671,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663006719,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663010815,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663019007,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663035391,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663068159,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663133695,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663264767,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293663526911,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293664051199,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293665099775,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293667196927,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293671391231,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293679779839,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293696557055,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293730111487,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293797220351,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187293931438079,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187294199873535,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187294736744447,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187295810486271,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187297957969919,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187302252937215,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187310842871807,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187328022740991,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187362382479359,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187431101956095,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187568540909567,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371187843418816511,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371188393174630399,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371189492686258175,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371191691709513727,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371196089756024831,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371204885849047039,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371222478035091455,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371257662407180287,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371328031151357951,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371468768639713279,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13371750243616423935,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13372313193569845247,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13373439093476687871,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13373439093476687872,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13374564993383530496,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375127943336951808,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375409418313662464,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375550155802017792,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375620524546195456,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375655708918284288,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375673301104328704,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375682097197350912,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375686495243862016,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375688694267117568,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375689793778745344,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690343534559232,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690618412466176,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690755851419648,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690824570896384,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690858930634752,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690876110503936,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690884700438528,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690888995405824,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690891142889472,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690892216631296,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690892753502208,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893021937664,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893156155392,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893223264256,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893256818688,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893273595904,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893281984512,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893286178816,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893288275968,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893289324544,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893289848832,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290110976,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290242048,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290307584,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290340352,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290356736,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290364928,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290369024,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290371072,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290372096,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290372608,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290372864,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290372992,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373056,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373088,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373104,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373112,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373116,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373118,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13375690893290373119,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6882167424863865027,64,FLEN)
NAN_BOXED(11523549235834924432,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271808,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271809,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271811,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271815,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271823,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271839,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271871,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225271935,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225272063,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225272319,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225272831,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225273855,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225275903,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225279999,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225288191,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225304575,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225337343,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225402879,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225533951,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664225796095,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664226320383,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664227368959,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664229466111,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664233660415,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664242049023,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664258826239,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664292380671,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664359489535,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664493707263,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971664762142719,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971665299013631,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971666372755455,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971668520239103,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971672815206399,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971681405140991,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971698585010175,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971732944748543,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971801664225279,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726971939103178751,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726972213981085695,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726972763736899583,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726973863248527359,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726976062271782911,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726980460318294015,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13726989256411316223,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13727006848597360639,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13727042032969449471,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13727112401713627135,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13727253139201982463,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13727534614178693119,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13728097564132114431,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13729223464038957055,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13729223464038957056,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13730349363945799680,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13730912313899220992,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731193788875931648,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731334526364286976,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731404895108464640,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731440079480553472,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731457671666597888,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731466467759620096,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731470865806131200,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731473064829386752,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731474164341014528,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731474714096828416,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731474988974735360,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475126413688832,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475195133165568,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475229492903936,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475246672773120,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475255262707712,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475259557675008,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475261705158656,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475262778900480,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263315771392,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263584206848,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263718424576,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263785533440,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263819087872,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263835865088,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263844253696,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263848448000,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263850545152,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263851593728,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852118016,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852380160,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852511232,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852576768,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852609536,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852625920,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852634112,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852638208,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852640256,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852641280,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852641792,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642048,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642176,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642240,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642272,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642288,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642296,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642300,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642302,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13731475263852642303,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6882170731232351727,64,FLEN)
NAN_BOXED(11523544222707606638,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631680,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631681,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631683,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631687,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631695,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631711,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631743,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631807,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930631935,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632191,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930632703,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930633727,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930635775,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930639871,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930648063,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930664447,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930697215,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930762751,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224930893823,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931155967,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224931680255,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224932728831,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224934825983,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224939020287,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224947408895,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224964186111,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487224997740543,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225064849407,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225199067135,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487225467502591,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487226004373503,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487227078115327,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487229225598975,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487233520566271,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487242110500863,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487259290370047,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487293650108415,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487362369585151,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487499808538623,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367487774686445567,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367488324442259455,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367489423953887231,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367491622977142783,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367496021023653887,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367504817116676095,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367522409302720511,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367557593674809343,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367627962418987007,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9367768699907342335,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368050174884052991,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9368613124837474303,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316927,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9369739024744316928,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9370864924651159552,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371427874604580864,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371709349581291520,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371850087069646848,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371920455813824512,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371955640185913344,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371973232371957760,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371982028464979968,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371986426511491072,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371988625534746624,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371989725046374400,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990274802188288,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990549680095232,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990687119048704,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990755838525440,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990790198263808,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990807378132992,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990815968067584,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990820263034880,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990822410518528,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990823484260352,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824021131264,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824289566720,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824423784448,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824490893312,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824524447744,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824541224960,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824549613568,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824553807872,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824555905024,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824556953600,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557477888,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557740032,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557871104,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557936640,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557969408,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557985792,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557993984,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824557998080,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558000128,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001152,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001664,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558001920,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002048,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002112,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002144,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002160,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002168,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002172,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002174,64,FLEN)
NAN_BOXED(6882273810565864087,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9371990824558002175,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527424,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527425,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527427,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527431,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527439,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527455,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527487,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527551,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527679,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031527935,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031528447,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031529471,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031531519,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031535615,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031543807,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031560191,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031592959,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031658495,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275031789567,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275032051711,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275032575999,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275033624575,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275035721727,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275039916031,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275048304639,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275065081855,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275098636287,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275165745151,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275299962879,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367275568398335,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367276105269247,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367277179011071,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367279326494719,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367283621462015,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367292211396607,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367309391265791,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367343751004159,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367412470480895,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367549909434367,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596367824787341311,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596368374543155199,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596369474054782975,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596371673078038527,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596376071124549631,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596384867217571839,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596402459403616255,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596437643775705087,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596508012519882751,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596648750008238079,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13596930224984948735,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13597493174938370047,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13598619074845212671,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13598619074845212672,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13599744974752055296,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600307924705476608,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600589399682187264,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600730137170542592,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600800505914720256,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600835690286809088,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600853282472853504,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600862078565875712,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600866476612386816,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600868675635642368,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600869775147270144,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870324903084032,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870599780990976,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870737219944448,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870805939421184,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870840299159552,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870857479028736,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870866068963328,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870870363930624,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870872511414272,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870873585156096,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874122027008,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874390462464,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874524680192,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874591789056,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874625343488,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874642120704,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874650509312,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874654703616,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874656800768,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874657849344,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658373632,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658635776,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658766848,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658832384,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658865152,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658881536,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658889728,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658893824,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658895872,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658896896,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897408,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897664,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897792,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897856,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897888,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897904,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897912,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897916,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897918,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13600870874658897919,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6882376717526757635,64,FLEN)
NAN_BOXED(11523244055136649082,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265792,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265793,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265795,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265799,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265807,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265823,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265855,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265919,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266047,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266303,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266815,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623267839,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623269887,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623273983,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623282175,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623298559,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623331327,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623396863,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623527935,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623790079,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180624314367,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180625362943,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180627460095,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180631654399,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180640043007,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180656820223,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180690374655,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180757483519,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180891701247,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181160136703,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181697007615,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187182770749439,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187184918233087,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187189213200383,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187197803134975,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187214983004159,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187249342742527,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187318062219263,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187455501172735,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187730379079679,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234188280134893567,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234189379646521343,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234191578669776895,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234195976716287999,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234204772809310207,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234222364995354623,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234257549367443455,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234327918111621119,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234468655599976447,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234750130576687103,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(235313080530108415,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951039,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951040,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(237564880343793664,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238127830297214976,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238409305273925632,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238550042762280960,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238620411506458624,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238655595878547456,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238673188064591872,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238681984157614080,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238686382204125184,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238688581227380736,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238689680739008512,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690230494822400,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690505372729344,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690642811682816,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690711531159552,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690745890897920,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690763070767104,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690771660701696,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690775955668992,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690778103152640,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779176894464,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779713765376,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779982200832,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780116418560,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780183527424,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780217081856,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780233859072,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780242247680,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780246441984,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780248539136,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780249587712,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250112000,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250374144,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250505216,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250570752,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250603520,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250619904,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250628096,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250632192,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250634240,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635264,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635776,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636032,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636160,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636224,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636256,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636272,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636280,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636284,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636286,64,FLEN)
NAN_BOXED(6882384446324841623,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636287,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336640,64,FLEN)
NAN_BOXED(6882425653077307695,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9412523221204336641,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
