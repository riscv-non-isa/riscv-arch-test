
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_52992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00000000fffff; valaddr_reg:x3; val_offset:158976*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158976*0 + 3*0*FLEN/8, x4, x1, x2)

inst_52993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00000001fffff; valaddr_reg:x3; val_offset:158979*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158979*0 + 3*1*FLEN/8, x4, x1, x2)

inst_52994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00000003fffff; valaddr_reg:x3; val_offset:158982*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158982*0 + 3*2*FLEN/8, x4, x1, x2)

inst_52995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00000007fffff; valaddr_reg:x3; val_offset:158985*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158985*0 + 3*3*FLEN/8, x4, x1, x2)

inst_52996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0000000ffffff; valaddr_reg:x3; val_offset:158988*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158988*0 + 3*4*FLEN/8, x4, x1, x2)

inst_52997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0000001ffffff; valaddr_reg:x3; val_offset:158991*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158991*0 + 3*5*FLEN/8, x4, x1, x2)

inst_52998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0000003ffffff; valaddr_reg:x3; val_offset:158994*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158994*0 + 3*6*FLEN/8, x4, x1, x2)

inst_52999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0000007ffffff; valaddr_reg:x3; val_offset:158997*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 158997*0 + 3*7*FLEN/8, x4, x1, x2)

inst_53000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c000000fffffff; valaddr_reg:x3; val_offset:159000*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159000*0 + 3*8*FLEN/8, x4, x1, x2)

inst_53001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c000001fffffff; valaddr_reg:x3; val_offset:159003*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159003*0 + 3*9*FLEN/8, x4, x1, x2)

inst_53002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c000003fffffff; valaddr_reg:x3; val_offset:159006*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159006*0 + 3*10*FLEN/8, x4, x1, x2)

inst_53003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c000007fffffff; valaddr_reg:x3; val_offset:159009*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159009*0 + 3*11*FLEN/8, x4, x1, x2)

inst_53004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00000ffffffff; valaddr_reg:x3; val_offset:159012*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159012*0 + 3*12*FLEN/8, x4, x1, x2)

inst_53005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00001ffffffff; valaddr_reg:x3; val_offset:159015*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159015*0 + 3*13*FLEN/8, x4, x1, x2)

inst_53006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00003ffffffff; valaddr_reg:x3; val_offset:159018*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159018*0 + 3*14*FLEN/8, x4, x1, x2)

inst_53007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00007ffffffff; valaddr_reg:x3; val_offset:159021*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159021*0 + 3*15*FLEN/8, x4, x1, x2)

inst_53008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0000fffffffff; valaddr_reg:x3; val_offset:159024*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159024*0 + 3*16*FLEN/8, x4, x1, x2)

inst_53009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0001fffffffff; valaddr_reg:x3; val_offset:159027*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159027*0 + 3*17*FLEN/8, x4, x1, x2)

inst_53010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0003fffffffff; valaddr_reg:x3; val_offset:159030*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159030*0 + 3*18*FLEN/8, x4, x1, x2)

inst_53011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0007fffffffff; valaddr_reg:x3; val_offset:159033*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159033*0 + 3*19*FLEN/8, x4, x1, x2)

inst_53012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c000ffffffffff; valaddr_reg:x3; val_offset:159036*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159036*0 + 3*20*FLEN/8, x4, x1, x2)

inst_53013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c001ffffffffff; valaddr_reg:x3; val_offset:159039*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159039*0 + 3*21*FLEN/8, x4, x1, x2)

inst_53014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c003ffffffffff; valaddr_reg:x3; val_offset:159042*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159042*0 + 3*22*FLEN/8, x4, x1, x2)

inst_53015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c007ffffffffff; valaddr_reg:x3; val_offset:159045*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159045*0 + 3*23*FLEN/8, x4, x1, x2)

inst_53016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c00fffffffffff; valaddr_reg:x3; val_offset:159048*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159048*0 + 3*24*FLEN/8, x4, x1, x2)

inst_53017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c01fffffffffff; valaddr_reg:x3; val_offset:159051*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159051*0 + 3*25*FLEN/8, x4, x1, x2)

inst_53018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c03fffffffffff; valaddr_reg:x3; val_offset:159054*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159054*0 + 3*26*FLEN/8, x4, x1, x2)

inst_53019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c07fffffffffff; valaddr_reg:x3; val_offset:159057*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159057*0 + 3*27*FLEN/8, x4, x1, x2)

inst_53020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c0ffffffffffff; valaddr_reg:x3; val_offset:159060*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159060*0 + 3*28*FLEN/8, x4, x1, x2)

inst_53021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c1ffffffffffff; valaddr_reg:x3; val_offset:159063*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159063*0 + 3*29*FLEN/8, x4, x1, x2)

inst_53022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c3ffffffffffff; valaddr_reg:x3; val_offset:159066*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159066*0 + 3*30*FLEN/8, x4, x1, x2)

inst_53023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c7ffffffffffff; valaddr_reg:x3; val_offset:159069*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159069*0 + 3*31*FLEN/8, x4, x1, x2)

inst_53024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80c8000000000000; valaddr_reg:x3; val_offset:159072*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159072*0 + 3*32*FLEN/8, x4, x1, x2)

inst_53025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cc000000000000; valaddr_reg:x3; val_offset:159075*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159075*0 + 3*33*FLEN/8, x4, x1, x2)

inst_53026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80ce000000000000; valaddr_reg:x3; val_offset:159078*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159078*0 + 3*34*FLEN/8, x4, x1, x2)

inst_53027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cf000000000000; valaddr_reg:x3; val_offset:159081*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159081*0 + 3*35*FLEN/8, x4, x1, x2)

inst_53028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cf800000000000; valaddr_reg:x3; val_offset:159084*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159084*0 + 3*36*FLEN/8, x4, x1, x2)

inst_53029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfc00000000000; valaddr_reg:x3; val_offset:159087*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159087*0 + 3*37*FLEN/8, x4, x1, x2)

inst_53030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfe00000000000; valaddr_reg:x3; val_offset:159090*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159090*0 + 3*38*FLEN/8, x4, x1, x2)

inst_53031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cff00000000000; valaddr_reg:x3; val_offset:159093*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159093*0 + 3*39*FLEN/8, x4, x1, x2)

inst_53032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cff80000000000; valaddr_reg:x3; val_offset:159096*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159096*0 + 3*40*FLEN/8, x4, x1, x2)

inst_53033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffc0000000000; valaddr_reg:x3; val_offset:159099*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159099*0 + 3*41*FLEN/8, x4, x1, x2)

inst_53034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffe0000000000; valaddr_reg:x3; val_offset:159102*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159102*0 + 3*42*FLEN/8, x4, x1, x2)

inst_53035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfff0000000000; valaddr_reg:x3; val_offset:159105*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159105*0 + 3*43*FLEN/8, x4, x1, x2)

inst_53036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfff8000000000; valaddr_reg:x3; val_offset:159108*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159108*0 + 3*44*FLEN/8, x4, x1, x2)

inst_53037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffc000000000; valaddr_reg:x3; val_offset:159111*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159111*0 + 3*45*FLEN/8, x4, x1, x2)

inst_53038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffe000000000; valaddr_reg:x3; val_offset:159114*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159114*0 + 3*46*FLEN/8, x4, x1, x2)

inst_53039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffff000000000; valaddr_reg:x3; val_offset:159117*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159117*0 + 3*47*FLEN/8, x4, x1, x2)

inst_53040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffff800000000; valaddr_reg:x3; val_offset:159120*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159120*0 + 3*48*FLEN/8, x4, x1, x2)

inst_53041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffc00000000; valaddr_reg:x3; val_offset:159123*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159123*0 + 3*49*FLEN/8, x4, x1, x2)

inst_53042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffe00000000; valaddr_reg:x3; val_offset:159126*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159126*0 + 3*50*FLEN/8, x4, x1, x2)

inst_53043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffff00000000; valaddr_reg:x3; val_offset:159129*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159129*0 + 3*51*FLEN/8, x4, x1, x2)

inst_53044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffff80000000; valaddr_reg:x3; val_offset:159132*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159132*0 + 3*52*FLEN/8, x4, x1, x2)

inst_53045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffc0000000; valaddr_reg:x3; val_offset:159135*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159135*0 + 3*53*FLEN/8, x4, x1, x2)

inst_53046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffe0000000; valaddr_reg:x3; val_offset:159138*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159138*0 + 3*54*FLEN/8, x4, x1, x2)

inst_53047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffff0000000; valaddr_reg:x3; val_offset:159141*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159141*0 + 3*55*FLEN/8, x4, x1, x2)

inst_53048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffff8000000; valaddr_reg:x3; val_offset:159144*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159144*0 + 3*56*FLEN/8, x4, x1, x2)

inst_53049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffc000000; valaddr_reg:x3; val_offset:159147*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159147*0 + 3*57*FLEN/8, x4, x1, x2)

inst_53050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffe000000; valaddr_reg:x3; val_offset:159150*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159150*0 + 3*58*FLEN/8, x4, x1, x2)

inst_53051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffff000000; valaddr_reg:x3; val_offset:159153*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159153*0 + 3*59*FLEN/8, x4, x1, x2)

inst_53052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffff800000; valaddr_reg:x3; val_offset:159156*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159156*0 + 3*60*FLEN/8, x4, x1, x2)

inst_53053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffc00000; valaddr_reg:x3; val_offset:159159*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159159*0 + 3*61*FLEN/8, x4, x1, x2)

inst_53054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffe00000; valaddr_reg:x3; val_offset:159162*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159162*0 + 3*62*FLEN/8, x4, x1, x2)

inst_53055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffff00000; valaddr_reg:x3; val_offset:159165*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159165*0 + 3*63*FLEN/8, x4, x1, x2)

inst_53056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffff80000; valaddr_reg:x3; val_offset:159168*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159168*0 + 3*64*FLEN/8, x4, x1, x2)

inst_53057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffc0000; valaddr_reg:x3; val_offset:159171*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159171*0 + 3*65*FLEN/8, x4, x1, x2)

inst_53058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffe0000; valaddr_reg:x3; val_offset:159174*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159174*0 + 3*66*FLEN/8, x4, x1, x2)

inst_53059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffff0000; valaddr_reg:x3; val_offset:159177*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159177*0 + 3*67*FLEN/8, x4, x1, x2)

inst_53060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffff8000; valaddr_reg:x3; val_offset:159180*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159180*0 + 3*68*FLEN/8, x4, x1, x2)

inst_53061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffc000; valaddr_reg:x3; val_offset:159183*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159183*0 + 3*69*FLEN/8, x4, x1, x2)

inst_53062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffe000; valaddr_reg:x3; val_offset:159186*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159186*0 + 3*70*FLEN/8, x4, x1, x2)

inst_53063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffff000; valaddr_reg:x3; val_offset:159189*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159189*0 + 3*71*FLEN/8, x4, x1, x2)

inst_53064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffff800; valaddr_reg:x3; val_offset:159192*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159192*0 + 3*72*FLEN/8, x4, x1, x2)

inst_53065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffc00; valaddr_reg:x3; val_offset:159195*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159195*0 + 3*73*FLEN/8, x4, x1, x2)

inst_53066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffe00; valaddr_reg:x3; val_offset:159198*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159198*0 + 3*74*FLEN/8, x4, x1, x2)

inst_53067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffff00; valaddr_reg:x3; val_offset:159201*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159201*0 + 3*75*FLEN/8, x4, x1, x2)

inst_53068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffff80; valaddr_reg:x3; val_offset:159204*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159204*0 + 3*76*FLEN/8, x4, x1, x2)

inst_53069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffffc0; valaddr_reg:x3; val_offset:159207*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159207*0 + 3*77*FLEN/8, x4, x1, x2)

inst_53070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffffe0; valaddr_reg:x3; val_offset:159210*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159210*0 + 3*78*FLEN/8, x4, x1, x2)

inst_53071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffff0; valaddr_reg:x3; val_offset:159213*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159213*0 + 3*79*FLEN/8, x4, x1, x2)

inst_53072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffff8; valaddr_reg:x3; val_offset:159216*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159216*0 + 3*80*FLEN/8, x4, x1, x2)

inst_53073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffffc; valaddr_reg:x3; val_offset:159219*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159219*0 + 3*81*FLEN/8, x4, x1, x2)

inst_53074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cffffffffffffe; valaddr_reg:x3; val_offset:159222*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159222*0 + 3*82*FLEN/8, x4, x1, x2)

inst_53075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x02c6758f19d47 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa02c6758f19d47; op2val:0x8000;
op3val:0x80cfffffffffffff; valaddr_reg:x3; val_offset:159225*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159225*0 + 3*83*FLEN/8, x4, x1, x2)

inst_53076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:159228*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159228*0 + 3*84*FLEN/8, x4, x1, x2)

inst_53077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:159231*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159231*0 + 3*85*FLEN/8, x4, x1, x2)

inst_53078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:159234*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159234*0 + 3*86*FLEN/8, x4, x1, x2)

inst_53079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:159237*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159237*0 + 3*87*FLEN/8, x4, x1, x2)

inst_53080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:159240*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159240*0 + 3*88*FLEN/8, x4, x1, x2)

inst_53081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:159243*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159243*0 + 3*89*FLEN/8, x4, x1, x2)

inst_53082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:159246*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159246*0 + 3*90*FLEN/8, x4, x1, x2)

inst_53083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:159249*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159249*0 + 3*91*FLEN/8, x4, x1, x2)

inst_53084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:159252*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159252*0 + 3*92*FLEN/8, x4, x1, x2)

inst_53085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:159255*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159255*0 + 3*93*FLEN/8, x4, x1, x2)

inst_53086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:159258*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159258*0 + 3*94*FLEN/8, x4, x1, x2)

inst_53087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:159261*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159261*0 + 3*95*FLEN/8, x4, x1, x2)

inst_53088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:159264*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159264*0 + 3*96*FLEN/8, x4, x1, x2)

inst_53089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:159267*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159267*0 + 3*97*FLEN/8, x4, x1, x2)

inst_53090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:159270*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159270*0 + 3*98*FLEN/8, x4, x1, x2)

inst_53091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:159273*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159273*0 + 3*99*FLEN/8, x4, x1, x2)

inst_53092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:159276*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159276*0 + 3*100*FLEN/8, x4, x1, x2)

inst_53093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:159279*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159279*0 + 3*101*FLEN/8, x4, x1, x2)

inst_53094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:159282*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159282*0 + 3*102*FLEN/8, x4, x1, x2)

inst_53095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:159285*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159285*0 + 3*103*FLEN/8, x4, x1, x2)

inst_53096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:159288*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159288*0 + 3*104*FLEN/8, x4, x1, x2)

inst_53097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:159291*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159291*0 + 3*105*FLEN/8, x4, x1, x2)

inst_53098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000000000; valaddr_reg:x3; val_offset:159294*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159294*0 + 3*106*FLEN/8, x4, x1, x2)

inst_53099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000000001; valaddr_reg:x3; val_offset:159297*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159297*0 + 3*107*FLEN/8, x4, x1, x2)

inst_53100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000000003; valaddr_reg:x3; val_offset:159300*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159300*0 + 3*108*FLEN/8, x4, x1, x2)

inst_53101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000000007; valaddr_reg:x3; val_offset:159303*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159303*0 + 3*109*FLEN/8, x4, x1, x2)

inst_53102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000000000f; valaddr_reg:x3; val_offset:159306*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159306*0 + 3*110*FLEN/8, x4, x1, x2)

inst_53103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000000001f; valaddr_reg:x3; val_offset:159309*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159309*0 + 3*111*FLEN/8, x4, x1, x2)

inst_53104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000000003f; valaddr_reg:x3; val_offset:159312*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159312*0 + 3*112*FLEN/8, x4, x1, x2)

inst_53105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000000007f; valaddr_reg:x3; val_offset:159315*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159315*0 + 3*113*FLEN/8, x4, x1, x2)

inst_53106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000000000ff; valaddr_reg:x3; val_offset:159318*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159318*0 + 3*114*FLEN/8, x4, x1, x2)

inst_53107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000000001ff; valaddr_reg:x3; val_offset:159321*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159321*0 + 3*115*FLEN/8, x4, x1, x2)

inst_53108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000000003ff; valaddr_reg:x3; val_offset:159324*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159324*0 + 3*116*FLEN/8, x4, x1, x2)

inst_53109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000000007ff; valaddr_reg:x3; val_offset:159327*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159327*0 + 3*117*FLEN/8, x4, x1, x2)

inst_53110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000000fff; valaddr_reg:x3; val_offset:159330*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159330*0 + 3*118*FLEN/8, x4, x1, x2)

inst_53111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000001fff; valaddr_reg:x3; val_offset:159333*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159333*0 + 3*119*FLEN/8, x4, x1, x2)

inst_53112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000003fff; valaddr_reg:x3; val_offset:159336*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159336*0 + 3*120*FLEN/8, x4, x1, x2)

inst_53113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000007fff; valaddr_reg:x3; val_offset:159339*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159339*0 + 3*121*FLEN/8, x4, x1, x2)

inst_53114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000000ffff; valaddr_reg:x3; val_offset:159342*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159342*0 + 3*122*FLEN/8, x4, x1, x2)

inst_53115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000001ffff; valaddr_reg:x3; val_offset:159345*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159345*0 + 3*123*FLEN/8, x4, x1, x2)

inst_53116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000003ffff; valaddr_reg:x3; val_offset:159348*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159348*0 + 3*124*FLEN/8, x4, x1, x2)

inst_53117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000007ffff; valaddr_reg:x3; val_offset:159351*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159351*0 + 3*125*FLEN/8, x4, x1, x2)

inst_53118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000000fffff; valaddr_reg:x3; val_offset:159354*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159354*0 + 3*126*FLEN/8, x4, x1, x2)

inst_53119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000001fffff; valaddr_reg:x3; val_offset:159357*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159357*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_53120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000003fffff; valaddr_reg:x3; val_offset:159360*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159360*0 + 3*128*FLEN/8, x4, x1, x2)

inst_53121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000007fffff; valaddr_reg:x3; val_offset:159363*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159363*0 + 3*129*FLEN/8, x4, x1, x2)

inst_53122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000000ffffff; valaddr_reg:x3; val_offset:159366*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159366*0 + 3*130*FLEN/8, x4, x1, x2)

inst_53123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000001ffffff; valaddr_reg:x3; val_offset:159369*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159369*0 + 3*131*FLEN/8, x4, x1, x2)

inst_53124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000003ffffff; valaddr_reg:x3; val_offset:159372*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159372*0 + 3*132*FLEN/8, x4, x1, x2)

inst_53125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000007ffffff; valaddr_reg:x3; val_offset:159375*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159375*0 + 3*133*FLEN/8, x4, x1, x2)

inst_53126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000000fffffff; valaddr_reg:x3; val_offset:159378*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159378*0 + 3*134*FLEN/8, x4, x1, x2)

inst_53127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000001fffffff; valaddr_reg:x3; val_offset:159381*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159381*0 + 3*135*FLEN/8, x4, x1, x2)

inst_53128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000003fffffff; valaddr_reg:x3; val_offset:159384*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159384*0 + 3*136*FLEN/8, x4, x1, x2)

inst_53129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000007fffffff; valaddr_reg:x3; val_offset:159387*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159387*0 + 3*137*FLEN/8, x4, x1, x2)

inst_53130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800000ffffffff; valaddr_reg:x3; val_offset:159390*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159390*0 + 3*138*FLEN/8, x4, x1, x2)

inst_53131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800001ffffffff; valaddr_reg:x3; val_offset:159393*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159393*0 + 3*139*FLEN/8, x4, x1, x2)

inst_53132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800003ffffffff; valaddr_reg:x3; val_offset:159396*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159396*0 + 3*140*FLEN/8, x4, x1, x2)

inst_53133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800007ffffffff; valaddr_reg:x3; val_offset:159399*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159399*0 + 3*141*FLEN/8, x4, x1, x2)

inst_53134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80000fffffffff; valaddr_reg:x3; val_offset:159402*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159402*0 + 3*142*FLEN/8, x4, x1, x2)

inst_53135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80001fffffffff; valaddr_reg:x3; val_offset:159405*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159405*0 + 3*143*FLEN/8, x4, x1, x2)

inst_53136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80003fffffffff; valaddr_reg:x3; val_offset:159408*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159408*0 + 3*144*FLEN/8, x4, x1, x2)

inst_53137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80007fffffffff; valaddr_reg:x3; val_offset:159411*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159411*0 + 3*145*FLEN/8, x4, x1, x2)

inst_53138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8000ffffffffff; valaddr_reg:x3; val_offset:159414*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159414*0 + 3*146*FLEN/8, x4, x1, x2)

inst_53139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8001ffffffffff; valaddr_reg:x3; val_offset:159417*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159417*0 + 3*147*FLEN/8, x4, x1, x2)

inst_53140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8003ffffffffff; valaddr_reg:x3; val_offset:159420*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159420*0 + 3*148*FLEN/8, x4, x1, x2)

inst_53141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8007ffffffffff; valaddr_reg:x3; val_offset:159423*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159423*0 + 3*149*FLEN/8, x4, x1, x2)

inst_53142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x800fffffffffff; valaddr_reg:x3; val_offset:159426*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159426*0 + 3*150*FLEN/8, x4, x1, x2)

inst_53143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x801fffffffffff; valaddr_reg:x3; val_offset:159429*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159429*0 + 3*151*FLEN/8, x4, x1, x2)

inst_53144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x803fffffffffff; valaddr_reg:x3; val_offset:159432*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159432*0 + 3*152*FLEN/8, x4, x1, x2)

inst_53145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x807fffffffffff; valaddr_reg:x3; val_offset:159435*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159435*0 + 3*153*FLEN/8, x4, x1, x2)

inst_53146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x80ffffffffffff; valaddr_reg:x3; val_offset:159438*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159438*0 + 3*154*FLEN/8, x4, x1, x2)

inst_53147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x81ffffffffffff; valaddr_reg:x3; val_offset:159441*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159441*0 + 3*155*FLEN/8, x4, x1, x2)

inst_53148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x83ffffffffffff; valaddr_reg:x3; val_offset:159444*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159444*0 + 3*156*FLEN/8, x4, x1, x2)

inst_53149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x87ffffffffffff; valaddr_reg:x3; val_offset:159447*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159447*0 + 3*157*FLEN/8, x4, x1, x2)

inst_53150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x88000000000000; valaddr_reg:x3; val_offset:159450*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159450*0 + 3*158*FLEN/8, x4, x1, x2)

inst_53151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8c000000000000; valaddr_reg:x3; val_offset:159453*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159453*0 + 3*159*FLEN/8, x4, x1, x2)

inst_53152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8e000000000000; valaddr_reg:x3; val_offset:159456*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159456*0 + 3*160*FLEN/8, x4, x1, x2)

inst_53153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8f000000000000; valaddr_reg:x3; val_offset:159459*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159459*0 + 3*161*FLEN/8, x4, x1, x2)

inst_53154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8f800000000000; valaddr_reg:x3; val_offset:159462*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159462*0 + 3*162*FLEN/8, x4, x1, x2)

inst_53155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fc00000000000; valaddr_reg:x3; val_offset:159465*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159465*0 + 3*163*FLEN/8, x4, x1, x2)

inst_53156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fe00000000000; valaddr_reg:x3; val_offset:159468*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159468*0 + 3*164*FLEN/8, x4, x1, x2)

inst_53157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ff00000000000; valaddr_reg:x3; val_offset:159471*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159471*0 + 3*165*FLEN/8, x4, x1, x2)

inst_53158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ff80000000000; valaddr_reg:x3; val_offset:159474*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159474*0 + 3*166*FLEN/8, x4, x1, x2)

inst_53159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffc0000000000; valaddr_reg:x3; val_offset:159477*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159477*0 + 3*167*FLEN/8, x4, x1, x2)

inst_53160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffe0000000000; valaddr_reg:x3; val_offset:159480*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159480*0 + 3*168*FLEN/8, x4, x1, x2)

inst_53161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fff0000000000; valaddr_reg:x3; val_offset:159483*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159483*0 + 3*169*FLEN/8, x4, x1, x2)

inst_53162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fff8000000000; valaddr_reg:x3; val_offset:159486*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159486*0 + 3*170*FLEN/8, x4, x1, x2)

inst_53163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffc000000000; valaddr_reg:x3; val_offset:159489*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159489*0 + 3*171*FLEN/8, x4, x1, x2)

inst_53164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffe000000000; valaddr_reg:x3; val_offset:159492*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159492*0 + 3*172*FLEN/8, x4, x1, x2)

inst_53165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffff000000000; valaddr_reg:x3; val_offset:159495*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159495*0 + 3*173*FLEN/8, x4, x1, x2)

inst_53166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffff800000000; valaddr_reg:x3; val_offset:159498*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159498*0 + 3*174*FLEN/8, x4, x1, x2)

inst_53167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffc00000000; valaddr_reg:x3; val_offset:159501*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159501*0 + 3*175*FLEN/8, x4, x1, x2)

inst_53168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffe00000000; valaddr_reg:x3; val_offset:159504*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159504*0 + 3*176*FLEN/8, x4, x1, x2)

inst_53169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffff00000000; valaddr_reg:x3; val_offset:159507*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159507*0 + 3*177*FLEN/8, x4, x1, x2)

inst_53170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffff80000000; valaddr_reg:x3; val_offset:159510*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159510*0 + 3*178*FLEN/8, x4, x1, x2)

inst_53171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffc0000000; valaddr_reg:x3; val_offset:159513*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159513*0 + 3*179*FLEN/8, x4, x1, x2)

inst_53172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffe0000000; valaddr_reg:x3; val_offset:159516*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159516*0 + 3*180*FLEN/8, x4, x1, x2)

inst_53173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffff0000000; valaddr_reg:x3; val_offset:159519*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159519*0 + 3*181*FLEN/8, x4, x1, x2)

inst_53174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffff8000000; valaddr_reg:x3; val_offset:159522*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159522*0 + 3*182*FLEN/8, x4, x1, x2)

inst_53175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffc000000; valaddr_reg:x3; val_offset:159525*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159525*0 + 3*183*FLEN/8, x4, x1, x2)

inst_53176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffe000000; valaddr_reg:x3; val_offset:159528*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159528*0 + 3*184*FLEN/8, x4, x1, x2)

inst_53177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffff000000; valaddr_reg:x3; val_offset:159531*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159531*0 + 3*185*FLEN/8, x4, x1, x2)

inst_53178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffff800000; valaddr_reg:x3; val_offset:159534*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159534*0 + 3*186*FLEN/8, x4, x1, x2)

inst_53179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffc00000; valaddr_reg:x3; val_offset:159537*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159537*0 + 3*187*FLEN/8, x4, x1, x2)

inst_53180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffe00000; valaddr_reg:x3; val_offset:159540*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159540*0 + 3*188*FLEN/8, x4, x1, x2)

inst_53181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffff00000; valaddr_reg:x3; val_offset:159543*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159543*0 + 3*189*FLEN/8, x4, x1, x2)

inst_53182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffff80000; valaddr_reg:x3; val_offset:159546*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159546*0 + 3*190*FLEN/8, x4, x1, x2)

inst_53183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffc0000; valaddr_reg:x3; val_offset:159549*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159549*0 + 3*191*FLEN/8, x4, x1, x2)

inst_53184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffe0000; valaddr_reg:x3; val_offset:159552*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159552*0 + 3*192*FLEN/8, x4, x1, x2)

inst_53185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffff0000; valaddr_reg:x3; val_offset:159555*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159555*0 + 3*193*FLEN/8, x4, x1, x2)

inst_53186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffff8000; valaddr_reg:x3; val_offset:159558*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159558*0 + 3*194*FLEN/8, x4, x1, x2)

inst_53187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffc000; valaddr_reg:x3; val_offset:159561*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159561*0 + 3*195*FLEN/8, x4, x1, x2)

inst_53188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffe000; valaddr_reg:x3; val_offset:159564*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159564*0 + 3*196*FLEN/8, x4, x1, x2)

inst_53189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffff000; valaddr_reg:x3; val_offset:159567*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159567*0 + 3*197*FLEN/8, x4, x1, x2)

inst_53190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffff800; valaddr_reg:x3; val_offset:159570*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159570*0 + 3*198*FLEN/8, x4, x1, x2)

inst_53191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffc00; valaddr_reg:x3; val_offset:159573*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159573*0 + 3*199*FLEN/8, x4, x1, x2)

inst_53192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffe00; valaddr_reg:x3; val_offset:159576*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159576*0 + 3*200*FLEN/8, x4, x1, x2)

inst_53193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffff00; valaddr_reg:x3; val_offset:159579*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159579*0 + 3*201*FLEN/8, x4, x1, x2)

inst_53194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffff80; valaddr_reg:x3; val_offset:159582*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159582*0 + 3*202*FLEN/8, x4, x1, x2)

inst_53195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffffc0; valaddr_reg:x3; val_offset:159585*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159585*0 + 3*203*FLEN/8, x4, x1, x2)

inst_53196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffffe0; valaddr_reg:x3; val_offset:159588*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159588*0 + 3*204*FLEN/8, x4, x1, x2)

inst_53197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffff0; valaddr_reg:x3; val_offset:159591*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159591*0 + 3*205*FLEN/8, x4, x1, x2)

inst_53198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffff8; valaddr_reg:x3; val_offset:159594*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159594*0 + 3*206*FLEN/8, x4, x1, x2)

inst_53199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffffc; valaddr_reg:x3; val_offset:159597*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159597*0 + 3*207*FLEN/8, x4, x1, x2)

inst_53200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8ffffffffffffe; valaddr_reg:x3; val_offset:159600*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159600*0 + 3*208*FLEN/8, x4, x1, x2)

inst_53201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x030c6384fb451 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa030c6384fb451; op2val:0x0;
op3val:0x8fffffffffffff; valaddr_reg:x3; val_offset:159603*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159603*0 + 3*209*FLEN/8, x4, x1, x2)

inst_53202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:159606*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159606*0 + 3*210*FLEN/8, x4, x1, x2)

inst_53203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:159609*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159609*0 + 3*211*FLEN/8, x4, x1, x2)

inst_53204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:159612*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159612*0 + 3*212*FLEN/8, x4, x1, x2)

inst_53205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:159615*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159615*0 + 3*213*FLEN/8, x4, x1, x2)

inst_53206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:159618*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159618*0 + 3*214*FLEN/8, x4, x1, x2)

inst_53207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:159621*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159621*0 + 3*215*FLEN/8, x4, x1, x2)

inst_53208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:159624*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159624*0 + 3*216*FLEN/8, x4, x1, x2)

inst_53209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:159627*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159627*0 + 3*217*FLEN/8, x4, x1, x2)

inst_53210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:159630*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159630*0 + 3*218*FLEN/8, x4, x1, x2)

inst_53211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:159633*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159633*0 + 3*219*FLEN/8, x4, x1, x2)

inst_53212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:159636*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159636*0 + 3*220*FLEN/8, x4, x1, x2)

inst_53213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:159639*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159639*0 + 3*221*FLEN/8, x4, x1, x2)

inst_53214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:159642*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159642*0 + 3*222*FLEN/8, x4, x1, x2)

inst_53215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:159645*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159645*0 + 3*223*FLEN/8, x4, x1, x2)

inst_53216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:159648*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159648*0 + 3*224*FLEN/8, x4, x1, x2)

inst_53217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:159651*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159651*0 + 3*225*FLEN/8, x4, x1, x2)

inst_53218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:159654*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159654*0 + 3*226*FLEN/8, x4, x1, x2)

inst_53219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:159657*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159657*0 + 3*227*FLEN/8, x4, x1, x2)

inst_53220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:159660*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159660*0 + 3*228*FLEN/8, x4, x1, x2)

inst_53221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:159663*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159663*0 + 3*229*FLEN/8, x4, x1, x2)

inst_53222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:159666*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159666*0 + 3*230*FLEN/8, x4, x1, x2)

inst_53223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:159669*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159669*0 + 3*231*FLEN/8, x4, x1, x2)

inst_53224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000000000; valaddr_reg:x3; val_offset:159672*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159672*0 + 3*232*FLEN/8, x4, x1, x2)

inst_53225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000000001; valaddr_reg:x3; val_offset:159675*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159675*0 + 3*233*FLEN/8, x4, x1, x2)

inst_53226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000000003; valaddr_reg:x3; val_offset:159678*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159678*0 + 3*234*FLEN/8, x4, x1, x2)

inst_53227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000000007; valaddr_reg:x3; val_offset:159681*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159681*0 + 3*235*FLEN/8, x4, x1, x2)

inst_53228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000000000f; valaddr_reg:x3; val_offset:159684*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159684*0 + 3*236*FLEN/8, x4, x1, x2)

inst_53229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000000001f; valaddr_reg:x3; val_offset:159687*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159687*0 + 3*237*FLEN/8, x4, x1, x2)

inst_53230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000000003f; valaddr_reg:x3; val_offset:159690*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159690*0 + 3*238*FLEN/8, x4, x1, x2)

inst_53231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000000007f; valaddr_reg:x3; val_offset:159693*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159693*0 + 3*239*FLEN/8, x4, x1, x2)

inst_53232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000000000ff; valaddr_reg:x3; val_offset:159696*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159696*0 + 3*240*FLEN/8, x4, x1, x2)

inst_53233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000000001ff; valaddr_reg:x3; val_offset:159699*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159699*0 + 3*241*FLEN/8, x4, x1, x2)

inst_53234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000000003ff; valaddr_reg:x3; val_offset:159702*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159702*0 + 3*242*FLEN/8, x4, x1, x2)

inst_53235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000000007ff; valaddr_reg:x3; val_offset:159705*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159705*0 + 3*243*FLEN/8, x4, x1, x2)

inst_53236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000000fff; valaddr_reg:x3; val_offset:159708*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159708*0 + 3*244*FLEN/8, x4, x1, x2)

inst_53237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000001fff; valaddr_reg:x3; val_offset:159711*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159711*0 + 3*245*FLEN/8, x4, x1, x2)

inst_53238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000003fff; valaddr_reg:x3; val_offset:159714*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159714*0 + 3*246*FLEN/8, x4, x1, x2)

inst_53239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000007fff; valaddr_reg:x3; val_offset:159717*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159717*0 + 3*247*FLEN/8, x4, x1, x2)

inst_53240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000000ffff; valaddr_reg:x3; val_offset:159720*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159720*0 + 3*248*FLEN/8, x4, x1, x2)

inst_53241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000001ffff; valaddr_reg:x3; val_offset:159723*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159723*0 + 3*249*FLEN/8, x4, x1, x2)

inst_53242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000003ffff; valaddr_reg:x3; val_offset:159726*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159726*0 + 3*250*FLEN/8, x4, x1, x2)

inst_53243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000007ffff; valaddr_reg:x3; val_offset:159729*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159729*0 + 3*251*FLEN/8, x4, x1, x2)

inst_53244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000000fffff; valaddr_reg:x3; val_offset:159732*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159732*0 + 3*252*FLEN/8, x4, x1, x2)

inst_53245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000001fffff; valaddr_reg:x3; val_offset:159735*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159735*0 + 3*253*FLEN/8, x4, x1, x2)

inst_53246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000003fffff; valaddr_reg:x3; val_offset:159738*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159738*0 + 3*254*FLEN/8, x4, x1, x2)

inst_53247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000007fffff; valaddr_reg:x3; val_offset:159741*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159741*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_53248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000000ffffff; valaddr_reg:x3; val_offset:159744*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159744*0 + 3*256*FLEN/8, x4, x1, x2)

inst_53249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000001ffffff; valaddr_reg:x3; val_offset:159747*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159747*0 + 3*257*FLEN/8, x4, x1, x2)

inst_53250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000003ffffff; valaddr_reg:x3; val_offset:159750*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159750*0 + 3*258*FLEN/8, x4, x1, x2)

inst_53251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000007ffffff; valaddr_reg:x3; val_offset:159753*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159753*0 + 3*259*FLEN/8, x4, x1, x2)

inst_53252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000000fffffff; valaddr_reg:x3; val_offset:159756*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159756*0 + 3*260*FLEN/8, x4, x1, x2)

inst_53253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000001fffffff; valaddr_reg:x3; val_offset:159759*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159759*0 + 3*261*FLEN/8, x4, x1, x2)

inst_53254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000003fffffff; valaddr_reg:x3; val_offset:159762*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159762*0 + 3*262*FLEN/8, x4, x1, x2)

inst_53255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000007fffffff; valaddr_reg:x3; val_offset:159765*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159765*0 + 3*263*FLEN/8, x4, x1, x2)

inst_53256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300000ffffffff; valaddr_reg:x3; val_offset:159768*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159768*0 + 3*264*FLEN/8, x4, x1, x2)

inst_53257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300001ffffffff; valaddr_reg:x3; val_offset:159771*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159771*0 + 3*265*FLEN/8, x4, x1, x2)

inst_53258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300003ffffffff; valaddr_reg:x3; val_offset:159774*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159774*0 + 3*266*FLEN/8, x4, x1, x2)

inst_53259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300007ffffffff; valaddr_reg:x3; val_offset:159777*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159777*0 + 3*267*FLEN/8, x4, x1, x2)

inst_53260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230000fffffffff; valaddr_reg:x3; val_offset:159780*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159780*0 + 3*268*FLEN/8, x4, x1, x2)

inst_53261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230001fffffffff; valaddr_reg:x3; val_offset:159783*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159783*0 + 3*269*FLEN/8, x4, x1, x2)

inst_53262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230003fffffffff; valaddr_reg:x3; val_offset:159786*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159786*0 + 3*270*FLEN/8, x4, x1, x2)

inst_53263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230007fffffffff; valaddr_reg:x3; val_offset:159789*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159789*0 + 3*271*FLEN/8, x4, x1, x2)

inst_53264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823000ffffffffff; valaddr_reg:x3; val_offset:159792*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159792*0 + 3*272*FLEN/8, x4, x1, x2)

inst_53265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823001ffffffffff; valaddr_reg:x3; val_offset:159795*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159795*0 + 3*273*FLEN/8, x4, x1, x2)

inst_53266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823003ffffffffff; valaddr_reg:x3; val_offset:159798*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159798*0 + 3*274*FLEN/8, x4, x1, x2)

inst_53267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823007ffffffffff; valaddr_reg:x3; val_offset:159801*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159801*0 + 3*275*FLEN/8, x4, x1, x2)

inst_53268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82300fffffffffff; valaddr_reg:x3; val_offset:159804*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159804*0 + 3*276*FLEN/8, x4, x1, x2)

inst_53269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82301fffffffffff; valaddr_reg:x3; val_offset:159807*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159807*0 + 3*277*FLEN/8, x4, x1, x2)

inst_53270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82303fffffffffff; valaddr_reg:x3; val_offset:159810*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159810*0 + 3*278*FLEN/8, x4, x1, x2)

inst_53271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x82307fffffffffff; valaddr_reg:x3; val_offset:159813*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159813*0 + 3*279*FLEN/8, x4, x1, x2)

inst_53272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8230ffffffffffff; valaddr_reg:x3; val_offset:159816*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159816*0 + 3*280*FLEN/8, x4, x1, x2)

inst_53273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8231ffffffffffff; valaddr_reg:x3; val_offset:159819*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159819*0 + 3*281*FLEN/8, x4, x1, x2)

inst_53274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8233ffffffffffff; valaddr_reg:x3; val_offset:159822*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159822*0 + 3*282*FLEN/8, x4, x1, x2)

inst_53275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8237ffffffffffff; valaddr_reg:x3; val_offset:159825*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159825*0 + 3*283*FLEN/8, x4, x1, x2)

inst_53276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x8238000000000000; valaddr_reg:x3; val_offset:159828*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159828*0 + 3*284*FLEN/8, x4, x1, x2)

inst_53277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823c000000000000; valaddr_reg:x3; val_offset:159831*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159831*0 + 3*285*FLEN/8, x4, x1, x2)

inst_53278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823e000000000000; valaddr_reg:x3; val_offset:159834*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159834*0 + 3*286*FLEN/8, x4, x1, x2)

inst_53279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823f000000000000; valaddr_reg:x3; val_offset:159837*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159837*0 + 3*287*FLEN/8, x4, x1, x2)

inst_53280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823f800000000000; valaddr_reg:x3; val_offset:159840*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159840*0 + 3*288*FLEN/8, x4, x1, x2)

inst_53281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fc00000000000; valaddr_reg:x3; val_offset:159843*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159843*0 + 3*289*FLEN/8, x4, x1, x2)

inst_53282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fe00000000000; valaddr_reg:x3; val_offset:159846*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159846*0 + 3*290*FLEN/8, x4, x1, x2)

inst_53283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ff00000000000; valaddr_reg:x3; val_offset:159849*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159849*0 + 3*291*FLEN/8, x4, x1, x2)

inst_53284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ff80000000000; valaddr_reg:x3; val_offset:159852*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159852*0 + 3*292*FLEN/8, x4, x1, x2)

inst_53285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffc0000000000; valaddr_reg:x3; val_offset:159855*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159855*0 + 3*293*FLEN/8, x4, x1, x2)

inst_53286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffe0000000000; valaddr_reg:x3; val_offset:159858*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159858*0 + 3*294*FLEN/8, x4, x1, x2)

inst_53287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fff0000000000; valaddr_reg:x3; val_offset:159861*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159861*0 + 3*295*FLEN/8, x4, x1, x2)

inst_53288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fff8000000000; valaddr_reg:x3; val_offset:159864*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159864*0 + 3*296*FLEN/8, x4, x1, x2)

inst_53289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffc000000000; valaddr_reg:x3; val_offset:159867*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159867*0 + 3*297*FLEN/8, x4, x1, x2)

inst_53290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffe000000000; valaddr_reg:x3; val_offset:159870*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159870*0 + 3*298*FLEN/8, x4, x1, x2)

inst_53291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffff000000000; valaddr_reg:x3; val_offset:159873*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159873*0 + 3*299*FLEN/8, x4, x1, x2)

inst_53292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffff800000000; valaddr_reg:x3; val_offset:159876*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159876*0 + 3*300*FLEN/8, x4, x1, x2)

inst_53293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffc00000000; valaddr_reg:x3; val_offset:159879*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159879*0 + 3*301*FLEN/8, x4, x1, x2)

inst_53294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffe00000000; valaddr_reg:x3; val_offset:159882*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159882*0 + 3*302*FLEN/8, x4, x1, x2)

inst_53295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffff00000000; valaddr_reg:x3; val_offset:159885*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159885*0 + 3*303*FLEN/8, x4, x1, x2)

inst_53296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffff80000000; valaddr_reg:x3; val_offset:159888*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159888*0 + 3*304*FLEN/8, x4, x1, x2)

inst_53297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffc0000000; valaddr_reg:x3; val_offset:159891*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159891*0 + 3*305*FLEN/8, x4, x1, x2)

inst_53298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffe0000000; valaddr_reg:x3; val_offset:159894*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159894*0 + 3*306*FLEN/8, x4, x1, x2)

inst_53299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffff0000000; valaddr_reg:x3; val_offset:159897*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159897*0 + 3*307*FLEN/8, x4, x1, x2)

inst_53300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffff8000000; valaddr_reg:x3; val_offset:159900*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159900*0 + 3*308*FLEN/8, x4, x1, x2)

inst_53301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffc000000; valaddr_reg:x3; val_offset:159903*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159903*0 + 3*309*FLEN/8, x4, x1, x2)

inst_53302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffe000000; valaddr_reg:x3; val_offset:159906*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159906*0 + 3*310*FLEN/8, x4, x1, x2)

inst_53303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffff000000; valaddr_reg:x3; val_offset:159909*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159909*0 + 3*311*FLEN/8, x4, x1, x2)

inst_53304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffff800000; valaddr_reg:x3; val_offset:159912*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159912*0 + 3*312*FLEN/8, x4, x1, x2)

inst_53305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffc00000; valaddr_reg:x3; val_offset:159915*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159915*0 + 3*313*FLEN/8, x4, x1, x2)

inst_53306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffe00000; valaddr_reg:x3; val_offset:159918*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159918*0 + 3*314*FLEN/8, x4, x1, x2)

inst_53307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffff00000; valaddr_reg:x3; val_offset:159921*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159921*0 + 3*315*FLEN/8, x4, x1, x2)

inst_53308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffff80000; valaddr_reg:x3; val_offset:159924*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159924*0 + 3*316*FLEN/8, x4, x1, x2)

inst_53309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffc0000; valaddr_reg:x3; val_offset:159927*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159927*0 + 3*317*FLEN/8, x4, x1, x2)

inst_53310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffe0000; valaddr_reg:x3; val_offset:159930*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159930*0 + 3*318*FLEN/8, x4, x1, x2)

inst_53311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffff0000; valaddr_reg:x3; val_offset:159933*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159933*0 + 3*319*FLEN/8, x4, x1, x2)

inst_53312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffff8000; valaddr_reg:x3; val_offset:159936*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159936*0 + 3*320*FLEN/8, x4, x1, x2)

inst_53313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffc000; valaddr_reg:x3; val_offset:159939*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159939*0 + 3*321*FLEN/8, x4, x1, x2)

inst_53314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffe000; valaddr_reg:x3; val_offset:159942*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159942*0 + 3*322*FLEN/8, x4, x1, x2)

inst_53315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffff000; valaddr_reg:x3; val_offset:159945*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159945*0 + 3*323*FLEN/8, x4, x1, x2)

inst_53316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffff800; valaddr_reg:x3; val_offset:159948*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159948*0 + 3*324*FLEN/8, x4, x1, x2)

inst_53317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffc00; valaddr_reg:x3; val_offset:159951*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159951*0 + 3*325*FLEN/8, x4, x1, x2)

inst_53318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffe00; valaddr_reg:x3; val_offset:159954*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159954*0 + 3*326*FLEN/8, x4, x1, x2)

inst_53319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffff00; valaddr_reg:x3; val_offset:159957*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159957*0 + 3*327*FLEN/8, x4, x1, x2)

inst_53320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffff80; valaddr_reg:x3; val_offset:159960*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159960*0 + 3*328*FLEN/8, x4, x1, x2)

inst_53321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffffc0; valaddr_reg:x3; val_offset:159963*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159963*0 + 3*329*FLEN/8, x4, x1, x2)

inst_53322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffffe0; valaddr_reg:x3; val_offset:159966*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159966*0 + 3*330*FLEN/8, x4, x1, x2)

inst_53323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffff0; valaddr_reg:x3; val_offset:159969*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159969*0 + 3*331*FLEN/8, x4, x1, x2)

inst_53324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffff8; valaddr_reg:x3; val_offset:159972*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159972*0 + 3*332*FLEN/8, x4, x1, x2)

inst_53325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffffc; valaddr_reg:x3; val_offset:159975*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159975*0 + 3*333*FLEN/8, x4, x1, x2)

inst_53326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823ffffffffffffe; valaddr_reg:x3; val_offset:159978*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159978*0 + 3*334*FLEN/8, x4, x1, x2)

inst_53327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039904d15cfd4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039904d15cfd4; op2val:0x8000;
op3val:0x823fffffffffffff; valaddr_reg:x3; val_offset:159981*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159981*0 + 3*335*FLEN/8, x4, x1, x2)

inst_53328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x0; valaddr_reg:x3; val_offset:159984*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159984*0 + 3*336*FLEN/8, x4, x1, x2)

inst_53329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:159987*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159987*0 + 3*337*FLEN/8, x4, x1, x2)

inst_53330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:159990*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159990*0 + 3*338*FLEN/8, x4, x1, x2)

inst_53331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:159993*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159993*0 + 3*339*FLEN/8, x4, x1, x2)

inst_53332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:159996*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159996*0 + 3*340*FLEN/8, x4, x1, x2)

inst_53333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:159999*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 159999*0 + 3*341*FLEN/8, x4, x1, x2)

inst_53334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:160002*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160002*0 + 3*342*FLEN/8, x4, x1, x2)

inst_53335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7f; valaddr_reg:x3; val_offset:160005*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160005*0 + 3*343*FLEN/8, x4, x1, x2)

inst_53336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xff; valaddr_reg:x3; val_offset:160008*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160008*0 + 3*344*FLEN/8, x4, x1, x2)

inst_53337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ff; valaddr_reg:x3; val_offset:160011*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160011*0 + 3*345*FLEN/8, x4, x1, x2)

inst_53338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ff; valaddr_reg:x3; val_offset:160014*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160014*0 + 3*346*FLEN/8, x4, x1, x2)

inst_53339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ff; valaddr_reg:x3; val_offset:160017*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160017*0 + 3*347*FLEN/8, x4, x1, x2)

inst_53340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfff; valaddr_reg:x3; val_offset:160020*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160020*0 + 3*348*FLEN/8, x4, x1, x2)

inst_53341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fff; valaddr_reg:x3; val_offset:160023*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160023*0 + 3*349*FLEN/8, x4, x1, x2)

inst_53342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3fff; valaddr_reg:x3; val_offset:160026*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160026*0 + 3*350*FLEN/8, x4, x1, x2)

inst_53343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7fff; valaddr_reg:x3; val_offset:160029*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160029*0 + 3*351*FLEN/8, x4, x1, x2)

inst_53344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffff; valaddr_reg:x3; val_offset:160032*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160032*0 + 3*352*FLEN/8, x4, x1, x2)

inst_53345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffff; valaddr_reg:x3; val_offset:160035*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160035*0 + 3*353*FLEN/8, x4, x1, x2)

inst_53346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ffff; valaddr_reg:x3; val_offset:160038*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160038*0 + 3*354*FLEN/8, x4, x1, x2)

inst_53347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ffff; valaddr_reg:x3; val_offset:160041*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160041*0 + 3*355*FLEN/8, x4, x1, x2)

inst_53348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffff; valaddr_reg:x3; val_offset:160044*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160044*0 + 3*356*FLEN/8, x4, x1, x2)

inst_53349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffff; valaddr_reg:x3; val_offset:160047*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160047*0 + 3*357*FLEN/8, x4, x1, x2)

inst_53350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3fffff; valaddr_reg:x3; val_offset:160050*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160050*0 + 3*358*FLEN/8, x4, x1, x2)

inst_53351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7fffff; valaddr_reg:x3; val_offset:160053*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160053*0 + 3*359*FLEN/8, x4, x1, x2)

inst_53352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffff; valaddr_reg:x3; val_offset:160056*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160056*0 + 3*360*FLEN/8, x4, x1, x2)

inst_53353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffff; valaddr_reg:x3; val_offset:160059*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160059*0 + 3*361*FLEN/8, x4, x1, x2)

inst_53354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ffffff; valaddr_reg:x3; val_offset:160062*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160062*0 + 3*362*FLEN/8, x4, x1, x2)

inst_53355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ffffff; valaddr_reg:x3; val_offset:160065*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160065*0 + 3*363*FLEN/8, x4, x1, x2)

inst_53356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffff; valaddr_reg:x3; val_offset:160068*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160068*0 + 3*364*FLEN/8, x4, x1, x2)

inst_53357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffffff; valaddr_reg:x3; val_offset:160071*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160071*0 + 3*365*FLEN/8, x4, x1, x2)

inst_53358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3fffffff; valaddr_reg:x3; val_offset:160074*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160074*0 + 3*366*FLEN/8, x4, x1, x2)

inst_53359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7fffffff; valaddr_reg:x3; val_offset:160077*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160077*0 + 3*367*FLEN/8, x4, x1, x2)

inst_53360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffff; valaddr_reg:x3; val_offset:160080*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160080*0 + 3*368*FLEN/8, x4, x1, x2)

inst_53361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffff; valaddr_reg:x3; val_offset:160083*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160083*0 + 3*369*FLEN/8, x4, x1, x2)

inst_53362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ffffffff; valaddr_reg:x3; val_offset:160086*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160086*0 + 3*370*FLEN/8, x4, x1, x2)

inst_53363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ffffffff; valaddr_reg:x3; val_offset:160089*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160089*0 + 3*371*FLEN/8, x4, x1, x2)

inst_53364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffff; valaddr_reg:x3; val_offset:160092*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160092*0 + 3*372*FLEN/8, x4, x1, x2)

inst_53365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffffffff; valaddr_reg:x3; val_offset:160095*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160095*0 + 3*373*FLEN/8, x4, x1, x2)

inst_53366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3fffffffff; valaddr_reg:x3; val_offset:160098*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160098*0 + 3*374*FLEN/8, x4, x1, x2)

inst_53367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7fffffffff; valaddr_reg:x3; val_offset:160101*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160101*0 + 3*375*FLEN/8, x4, x1, x2)

inst_53368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffff; valaddr_reg:x3; val_offset:160104*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160104*0 + 3*376*FLEN/8, x4, x1, x2)

inst_53369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffff; valaddr_reg:x3; val_offset:160107*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160107*0 + 3*377*FLEN/8, x4, x1, x2)

inst_53370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ffffffffff; valaddr_reg:x3; val_offset:160110*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160110*0 + 3*378*FLEN/8, x4, x1, x2)

inst_53371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ffffffffff; valaddr_reg:x3; val_offset:160113*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160113*0 + 3*379*FLEN/8, x4, x1, x2)

inst_53372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffff; valaddr_reg:x3; val_offset:160116*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160116*0 + 3*380*FLEN/8, x4, x1, x2)

inst_53373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffffffffff; valaddr_reg:x3; val_offset:160119*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160119*0 + 3*381*FLEN/8, x4, x1, x2)

inst_53374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3fffffffffff; valaddr_reg:x3; val_offset:160122*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160122*0 + 3*382*FLEN/8, x4, x1, x2)

inst_53375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7fffffffffff; valaddr_reg:x3; val_offset:160125*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160125*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_53376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffff; valaddr_reg:x3; val_offset:160128*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160128*0 + 3*384*FLEN/8, x4, x1, x2)

inst_53377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffffff; valaddr_reg:x3; val_offset:160131*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160131*0 + 3*385*FLEN/8, x4, x1, x2)

inst_53378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x3ffffffffffff; valaddr_reg:x3; val_offset:160134*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160134*0 + 3*386*FLEN/8, x4, x1, x2)

inst_53379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x7ffffffffffff; valaddr_reg:x3; val_offset:160137*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160137*0 + 3*387*FLEN/8, x4, x1, x2)

inst_53380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x8000000000000; valaddr_reg:x3; val_offset:160140*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160140*0 + 3*388*FLEN/8, x4, x1, x2)

inst_53381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xc000000000000; valaddr_reg:x3; val_offset:160143*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160143*0 + 3*389*FLEN/8, x4, x1, x2)

inst_53382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xe000000000000; valaddr_reg:x3; val_offset:160146*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160146*0 + 3*390*FLEN/8, x4, x1, x2)

inst_53383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xf000000000000; valaddr_reg:x3; val_offset:160149*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160149*0 + 3*391*FLEN/8, x4, x1, x2)

inst_53384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xf800000000000; valaddr_reg:x3; val_offset:160152*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160152*0 + 3*392*FLEN/8, x4, x1, x2)

inst_53385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfc00000000000; valaddr_reg:x3; val_offset:160155*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160155*0 + 3*393*FLEN/8, x4, x1, x2)

inst_53386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfe00000000000; valaddr_reg:x3; val_offset:160158*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160158*0 + 3*394*FLEN/8, x4, x1, x2)

inst_53387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xff00000000000; valaddr_reg:x3; val_offset:160161*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160161*0 + 3*395*FLEN/8, x4, x1, x2)

inst_53388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xff80000000000; valaddr_reg:x3; val_offset:160164*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160164*0 + 3*396*FLEN/8, x4, x1, x2)

inst_53389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffc0000000000; valaddr_reg:x3; val_offset:160167*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160167*0 + 3*397*FLEN/8, x4, x1, x2)

inst_53390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffe0000000000; valaddr_reg:x3; val_offset:160170*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160170*0 + 3*398*FLEN/8, x4, x1, x2)

inst_53391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfff0000000000; valaddr_reg:x3; val_offset:160173*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160173*0 + 3*399*FLEN/8, x4, x1, x2)

inst_53392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfff8000000000; valaddr_reg:x3; val_offset:160176*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160176*0 + 3*400*FLEN/8, x4, x1, x2)

inst_53393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffc000000000; valaddr_reg:x3; val_offset:160179*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160179*0 + 3*401*FLEN/8, x4, x1, x2)

inst_53394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffe000000000; valaddr_reg:x3; val_offset:160182*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160182*0 + 3*402*FLEN/8, x4, x1, x2)

inst_53395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffff000000000; valaddr_reg:x3; val_offset:160185*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160185*0 + 3*403*FLEN/8, x4, x1, x2)

inst_53396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffff800000000; valaddr_reg:x3; val_offset:160188*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160188*0 + 3*404*FLEN/8, x4, x1, x2)

inst_53397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffc00000000; valaddr_reg:x3; val_offset:160191*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160191*0 + 3*405*FLEN/8, x4, x1, x2)

inst_53398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffe00000000; valaddr_reg:x3; val_offset:160194*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160194*0 + 3*406*FLEN/8, x4, x1, x2)

inst_53399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffff00000000; valaddr_reg:x3; val_offset:160197*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160197*0 + 3*407*FLEN/8, x4, x1, x2)

inst_53400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffff80000000; valaddr_reg:x3; val_offset:160200*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160200*0 + 3*408*FLEN/8, x4, x1, x2)

inst_53401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffc0000000; valaddr_reg:x3; val_offset:160203*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160203*0 + 3*409*FLEN/8, x4, x1, x2)

inst_53402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffe0000000; valaddr_reg:x3; val_offset:160206*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160206*0 + 3*410*FLEN/8, x4, x1, x2)

inst_53403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffff0000000; valaddr_reg:x3; val_offset:160209*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160209*0 + 3*411*FLEN/8, x4, x1, x2)

inst_53404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffff8000000; valaddr_reg:x3; val_offset:160212*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160212*0 + 3*412*FLEN/8, x4, x1, x2)

inst_53405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffc000000; valaddr_reg:x3; val_offset:160215*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160215*0 + 3*413*FLEN/8, x4, x1, x2)

inst_53406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffe000000; valaddr_reg:x3; val_offset:160218*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160218*0 + 3*414*FLEN/8, x4, x1, x2)

inst_53407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffff000000; valaddr_reg:x3; val_offset:160221*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160221*0 + 3*415*FLEN/8, x4, x1, x2)

inst_53408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffff800000; valaddr_reg:x3; val_offset:160224*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160224*0 + 3*416*FLEN/8, x4, x1, x2)

inst_53409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffc00000; valaddr_reg:x3; val_offset:160227*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160227*0 + 3*417*FLEN/8, x4, x1, x2)

inst_53410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffe00000; valaddr_reg:x3; val_offset:160230*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160230*0 + 3*418*FLEN/8, x4, x1, x2)

inst_53411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffff00000; valaddr_reg:x3; val_offset:160233*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160233*0 + 3*419*FLEN/8, x4, x1, x2)

inst_53412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffff80000; valaddr_reg:x3; val_offset:160236*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160236*0 + 3*420*FLEN/8, x4, x1, x2)

inst_53413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffc0000; valaddr_reg:x3; val_offset:160239*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160239*0 + 3*421*FLEN/8, x4, x1, x2)

inst_53414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffe0000; valaddr_reg:x3; val_offset:160242*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160242*0 + 3*422*FLEN/8, x4, x1, x2)

inst_53415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffff0000; valaddr_reg:x3; val_offset:160245*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160245*0 + 3*423*FLEN/8, x4, x1, x2)

inst_53416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffff8000; valaddr_reg:x3; val_offset:160248*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160248*0 + 3*424*FLEN/8, x4, x1, x2)

inst_53417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffc000; valaddr_reg:x3; val_offset:160251*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160251*0 + 3*425*FLEN/8, x4, x1, x2)

inst_53418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffe000; valaddr_reg:x3; val_offset:160254*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160254*0 + 3*426*FLEN/8, x4, x1, x2)

inst_53419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffff000; valaddr_reg:x3; val_offset:160257*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160257*0 + 3*427*FLEN/8, x4, x1, x2)

inst_53420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffff800; valaddr_reg:x3; val_offset:160260*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160260*0 + 3*428*FLEN/8, x4, x1, x2)

inst_53421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffc00; valaddr_reg:x3; val_offset:160263*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160263*0 + 3*429*FLEN/8, x4, x1, x2)

inst_53422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffe00; valaddr_reg:x3; val_offset:160266*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160266*0 + 3*430*FLEN/8, x4, x1, x2)

inst_53423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffff00; valaddr_reg:x3; val_offset:160269*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160269*0 + 3*431*FLEN/8, x4, x1, x2)

inst_53424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffff80; valaddr_reg:x3; val_offset:160272*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160272*0 + 3*432*FLEN/8, x4, x1, x2)

inst_53425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:160275*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160275*0 + 3*433*FLEN/8, x4, x1, x2)

inst_53426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:160278*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160278*0 + 3*434*FLEN/8, x4, x1, x2)

inst_53427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:160281*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160281*0 + 3*435*FLEN/8, x4, x1, x2)

inst_53428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:160284*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160284*0 + 3*436*FLEN/8, x4, x1, x2)

inst_53429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:160287*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160287*0 + 3*437*FLEN/8, x4, x1, x2)

inst_53430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:160290*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160290*0 + 3*438*FLEN/8, x4, x1, x2)

inst_53431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0xfffffffffffff; valaddr_reg:x3; val_offset:160293*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160293*0 + 3*439*FLEN/8, x4, x1, x2)

inst_53432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:160296*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160296*0 + 3*440*FLEN/8, x4, x1, x2)

inst_53433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:160299*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160299*0 + 3*441*FLEN/8, x4, x1, x2)

inst_53434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:160302*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160302*0 + 3*442*FLEN/8, x4, x1, x2)

inst_53435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:160305*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160305*0 + 3*443*FLEN/8, x4, x1, x2)

inst_53436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:160308*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160308*0 + 3*444*FLEN/8, x4, x1, x2)

inst_53437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:160311*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160311*0 + 3*445*FLEN/8, x4, x1, x2)

inst_53438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:160314*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160314*0 + 3*446*FLEN/8, x4, x1, x2)

inst_53439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:160317*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160317*0 + 3*447*FLEN/8, x4, x1, x2)

inst_53440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:160320*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160320*0 + 3*448*FLEN/8, x4, x1, x2)

inst_53441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:160323*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160323*0 + 3*449*FLEN/8, x4, x1, x2)

inst_53442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:160326*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160326*0 + 3*450*FLEN/8, x4, x1, x2)

inst_53443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:160329*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160329*0 + 3*451*FLEN/8, x4, x1, x2)

inst_53444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:160332*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160332*0 + 3*452*FLEN/8, x4, x1, x2)

inst_53445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:160335*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160335*0 + 3*453*FLEN/8, x4, x1, x2)

inst_53446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:160338*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160338*0 + 3*454*FLEN/8, x4, x1, x2)

inst_53447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:160341*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160341*0 + 3*455*FLEN/8, x4, x1, x2)

inst_53448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:160344*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160344*0 + 3*456*FLEN/8, x4, x1, x2)

inst_53449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:160347*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160347*0 + 3*457*FLEN/8, x4, x1, x2)

inst_53450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:160350*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160350*0 + 3*458*FLEN/8, x4, x1, x2)

inst_53451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:160353*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160353*0 + 3*459*FLEN/8, x4, x1, x2)

inst_53452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:160356*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160356*0 + 3*460*FLEN/8, x4, x1, x2)

inst_53453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x039c17ae1ec94 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa039c17ae1ec94; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:160359*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160359*0 + 3*461*FLEN/8, x4, x1, x2)

inst_53454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:160362*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160362*0 + 3*462*FLEN/8, x4, x1, x2)

inst_53455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:160365*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160365*0 + 3*463*FLEN/8, x4, x1, x2)

inst_53456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:160368*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160368*0 + 3*464*FLEN/8, x4, x1, x2)

inst_53457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:160371*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160371*0 + 3*465*FLEN/8, x4, x1, x2)

inst_53458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:160374*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160374*0 + 3*466*FLEN/8, x4, x1, x2)

inst_53459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:160377*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160377*0 + 3*467*FLEN/8, x4, x1, x2)

inst_53460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:160380*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160380*0 + 3*468*FLEN/8, x4, x1, x2)

inst_53461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:160383*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160383*0 + 3*469*FLEN/8, x4, x1, x2)

inst_53462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:160386*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160386*0 + 3*470*FLEN/8, x4, x1, x2)

inst_53463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:160389*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160389*0 + 3*471*FLEN/8, x4, x1, x2)

inst_53464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:160392*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160392*0 + 3*472*FLEN/8, x4, x1, x2)

inst_53465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:160395*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160395*0 + 3*473*FLEN/8, x4, x1, x2)

inst_53466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:160398*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160398*0 + 3*474*FLEN/8, x4, x1, x2)

inst_53467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:160401*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160401*0 + 3*475*FLEN/8, x4, x1, x2)

inst_53468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:160404*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160404*0 + 3*476*FLEN/8, x4, x1, x2)

inst_53469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:160407*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160407*0 + 3*477*FLEN/8, x4, x1, x2)

inst_53470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:160410*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160410*0 + 3*478*FLEN/8, x4, x1, x2)

inst_53471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:160413*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160413*0 + 3*479*FLEN/8, x4, x1, x2)

inst_53472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:160416*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160416*0 + 3*480*FLEN/8, x4, x1, x2)

inst_53473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:160419*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160419*0 + 3*481*FLEN/8, x4, x1, x2)

inst_53474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:160422*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160422*0 + 3*482*FLEN/8, x4, x1, x2)

inst_53475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:160425*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160425*0 + 3*483*FLEN/8, x4, x1, x2)

inst_53476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000000000; valaddr_reg:x3; val_offset:160428*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160428*0 + 3*484*FLEN/8, x4, x1, x2)

inst_53477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000000001; valaddr_reg:x3; val_offset:160431*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160431*0 + 3*485*FLEN/8, x4, x1, x2)

inst_53478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000000003; valaddr_reg:x3; val_offset:160434*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160434*0 + 3*486*FLEN/8, x4, x1, x2)

inst_53479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000000007; valaddr_reg:x3; val_offset:160437*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160437*0 + 3*487*FLEN/8, x4, x1, x2)

inst_53480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000000000f; valaddr_reg:x3; val_offset:160440*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160440*0 + 3*488*FLEN/8, x4, x1, x2)

inst_53481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000000001f; valaddr_reg:x3; val_offset:160443*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160443*0 + 3*489*FLEN/8, x4, x1, x2)

inst_53482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000000003f; valaddr_reg:x3; val_offset:160446*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160446*0 + 3*490*FLEN/8, x4, x1, x2)

inst_53483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000000007f; valaddr_reg:x3; val_offset:160449*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160449*0 + 3*491*FLEN/8, x4, x1, x2)

inst_53484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000000000ff; valaddr_reg:x3; val_offset:160452*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160452*0 + 3*492*FLEN/8, x4, x1, x2)

inst_53485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000000001ff; valaddr_reg:x3; val_offset:160455*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160455*0 + 3*493*FLEN/8, x4, x1, x2)

inst_53486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000000003ff; valaddr_reg:x3; val_offset:160458*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160458*0 + 3*494*FLEN/8, x4, x1, x2)

inst_53487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000000007ff; valaddr_reg:x3; val_offset:160461*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160461*0 + 3*495*FLEN/8, x4, x1, x2)

inst_53488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000000fff; valaddr_reg:x3; val_offset:160464*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160464*0 + 3*496*FLEN/8, x4, x1, x2)

inst_53489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000001fff; valaddr_reg:x3; val_offset:160467*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160467*0 + 3*497*FLEN/8, x4, x1, x2)

inst_53490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000003fff; valaddr_reg:x3; val_offset:160470*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160470*0 + 3*498*FLEN/8, x4, x1, x2)

inst_53491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000007fff; valaddr_reg:x3; val_offset:160473*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160473*0 + 3*499*FLEN/8, x4, x1, x2)

inst_53492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000000ffff; valaddr_reg:x3; val_offset:160476*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160476*0 + 3*500*FLEN/8, x4, x1, x2)

inst_53493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000001ffff; valaddr_reg:x3; val_offset:160479*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160479*0 + 3*501*FLEN/8, x4, x1, x2)

inst_53494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000003ffff; valaddr_reg:x3; val_offset:160482*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160482*0 + 3*502*FLEN/8, x4, x1, x2)

inst_53495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000007ffff; valaddr_reg:x3; val_offset:160485*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160485*0 + 3*503*FLEN/8, x4, x1, x2)

inst_53496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000000fffff; valaddr_reg:x3; val_offset:160488*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160488*0 + 3*504*FLEN/8, x4, x1, x2)

inst_53497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000001fffff; valaddr_reg:x3; val_offset:160491*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160491*0 + 3*505*FLEN/8, x4, x1, x2)

inst_53498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000003fffff; valaddr_reg:x3; val_offset:160494*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160494*0 + 3*506*FLEN/8, x4, x1, x2)

inst_53499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000007fffff; valaddr_reg:x3; val_offset:160497*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160497*0 + 3*507*FLEN/8, x4, x1, x2)

inst_53500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000000ffffff; valaddr_reg:x3; val_offset:160500*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160500*0 + 3*508*FLEN/8, x4, x1, x2)

inst_53501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000001ffffff; valaddr_reg:x3; val_offset:160503*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160503*0 + 3*509*FLEN/8, x4, x1, x2)

inst_53502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000003ffffff; valaddr_reg:x3; val_offset:160506*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160506*0 + 3*510*FLEN/8, x4, x1, x2)

inst_53503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000007ffffff; valaddr_reg:x3; val_offset:160509*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160509*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_53504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000000fffffff; valaddr_reg:x3; val_offset:160512*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160512*0 + 3*512*FLEN/8, x4, x1, x2)

inst_53505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000001fffffff; valaddr_reg:x3; val_offset:160515*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160515*0 + 3*513*FLEN/8, x4, x1, x2)

inst_53506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000003fffffff; valaddr_reg:x3; val_offset:160518*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160518*0 + 3*514*FLEN/8, x4, x1, x2)

inst_53507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000007fffffff; valaddr_reg:x3; val_offset:160521*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160521*0 + 3*515*FLEN/8, x4, x1, x2)

inst_53508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00000ffffffff; valaddr_reg:x3; val_offset:160524*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160524*0 + 3*516*FLEN/8, x4, x1, x2)

inst_53509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00001ffffffff; valaddr_reg:x3; val_offset:160527*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160527*0 + 3*517*FLEN/8, x4, x1, x2)

inst_53510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00003ffffffff; valaddr_reg:x3; val_offset:160530*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160530*0 + 3*518*FLEN/8, x4, x1, x2)

inst_53511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00007ffffffff; valaddr_reg:x3; val_offset:160533*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160533*0 + 3*519*FLEN/8, x4, x1, x2)

inst_53512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0000fffffffff; valaddr_reg:x3; val_offset:160536*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160536*0 + 3*520*FLEN/8, x4, x1, x2)

inst_53513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0001fffffffff; valaddr_reg:x3; val_offset:160539*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160539*0 + 3*521*FLEN/8, x4, x1, x2)

inst_53514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0003fffffffff; valaddr_reg:x3; val_offset:160542*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160542*0 + 3*522*FLEN/8, x4, x1, x2)

inst_53515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0007fffffffff; valaddr_reg:x3; val_offset:160545*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160545*0 + 3*523*FLEN/8, x4, x1, x2)

inst_53516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d000ffffffffff; valaddr_reg:x3; val_offset:160548*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160548*0 + 3*524*FLEN/8, x4, x1, x2)

inst_53517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d001ffffffffff; valaddr_reg:x3; val_offset:160551*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160551*0 + 3*525*FLEN/8, x4, x1, x2)

inst_53518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d003ffffffffff; valaddr_reg:x3; val_offset:160554*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160554*0 + 3*526*FLEN/8, x4, x1, x2)

inst_53519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d007ffffffffff; valaddr_reg:x3; val_offset:160557*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160557*0 + 3*527*FLEN/8, x4, x1, x2)

inst_53520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d00fffffffffff; valaddr_reg:x3; val_offset:160560*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160560*0 + 3*528*FLEN/8, x4, x1, x2)

inst_53521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d01fffffffffff; valaddr_reg:x3; val_offset:160563*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160563*0 + 3*529*FLEN/8, x4, x1, x2)

inst_53522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d03fffffffffff; valaddr_reg:x3; val_offset:160566*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160566*0 + 3*530*FLEN/8, x4, x1, x2)

inst_53523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d07fffffffffff; valaddr_reg:x3; val_offset:160569*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160569*0 + 3*531*FLEN/8, x4, x1, x2)

inst_53524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d0ffffffffffff; valaddr_reg:x3; val_offset:160572*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160572*0 + 3*532*FLEN/8, x4, x1, x2)

inst_53525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d1ffffffffffff; valaddr_reg:x3; val_offset:160575*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160575*0 + 3*533*FLEN/8, x4, x1, x2)

inst_53526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d3ffffffffffff; valaddr_reg:x3; val_offset:160578*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160578*0 + 3*534*FLEN/8, x4, x1, x2)

inst_53527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d7ffffffffffff; valaddr_reg:x3; val_offset:160581*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160581*0 + 3*535*FLEN/8, x4, x1, x2)

inst_53528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2d8000000000000; valaddr_reg:x3; val_offset:160584*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160584*0 + 3*536*FLEN/8, x4, x1, x2)

inst_53529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dc000000000000; valaddr_reg:x3; val_offset:160587*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160587*0 + 3*537*FLEN/8, x4, x1, x2)

inst_53530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2de000000000000; valaddr_reg:x3; val_offset:160590*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160590*0 + 3*538*FLEN/8, x4, x1, x2)

inst_53531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2df000000000000; valaddr_reg:x3; val_offset:160593*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160593*0 + 3*539*FLEN/8, x4, x1, x2)

inst_53532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2df800000000000; valaddr_reg:x3; val_offset:160596*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160596*0 + 3*540*FLEN/8, x4, x1, x2)

inst_53533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfc00000000000; valaddr_reg:x3; val_offset:160599*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160599*0 + 3*541*FLEN/8, x4, x1, x2)

inst_53534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfe00000000000; valaddr_reg:x3; val_offset:160602*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160602*0 + 3*542*FLEN/8, x4, x1, x2)

inst_53535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dff00000000000; valaddr_reg:x3; val_offset:160605*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160605*0 + 3*543*FLEN/8, x4, x1, x2)

inst_53536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dff80000000000; valaddr_reg:x3; val_offset:160608*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160608*0 + 3*544*FLEN/8, x4, x1, x2)

inst_53537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffc0000000000; valaddr_reg:x3; val_offset:160611*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160611*0 + 3*545*FLEN/8, x4, x1, x2)

inst_53538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffe0000000000; valaddr_reg:x3; val_offset:160614*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160614*0 + 3*546*FLEN/8, x4, x1, x2)

inst_53539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfff0000000000; valaddr_reg:x3; val_offset:160617*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160617*0 + 3*547*FLEN/8, x4, x1, x2)

inst_53540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfff8000000000; valaddr_reg:x3; val_offset:160620*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160620*0 + 3*548*FLEN/8, x4, x1, x2)

inst_53541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffc000000000; valaddr_reg:x3; val_offset:160623*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160623*0 + 3*549*FLEN/8, x4, x1, x2)

inst_53542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffe000000000; valaddr_reg:x3; val_offset:160626*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160626*0 + 3*550*FLEN/8, x4, x1, x2)

inst_53543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffff000000000; valaddr_reg:x3; val_offset:160629*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160629*0 + 3*551*FLEN/8, x4, x1, x2)

inst_53544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffff800000000; valaddr_reg:x3; val_offset:160632*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160632*0 + 3*552*FLEN/8, x4, x1, x2)

inst_53545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffc00000000; valaddr_reg:x3; val_offset:160635*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160635*0 + 3*553*FLEN/8, x4, x1, x2)

inst_53546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffe00000000; valaddr_reg:x3; val_offset:160638*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160638*0 + 3*554*FLEN/8, x4, x1, x2)

inst_53547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffff00000000; valaddr_reg:x3; val_offset:160641*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160641*0 + 3*555*FLEN/8, x4, x1, x2)

inst_53548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffff80000000; valaddr_reg:x3; val_offset:160644*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160644*0 + 3*556*FLEN/8, x4, x1, x2)

inst_53549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffc0000000; valaddr_reg:x3; val_offset:160647*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160647*0 + 3*557*FLEN/8, x4, x1, x2)

inst_53550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffe0000000; valaddr_reg:x3; val_offset:160650*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160650*0 + 3*558*FLEN/8, x4, x1, x2)

inst_53551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffff0000000; valaddr_reg:x3; val_offset:160653*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160653*0 + 3*559*FLEN/8, x4, x1, x2)

inst_53552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffff8000000; valaddr_reg:x3; val_offset:160656*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160656*0 + 3*560*FLEN/8, x4, x1, x2)

inst_53553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffc000000; valaddr_reg:x3; val_offset:160659*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160659*0 + 3*561*FLEN/8, x4, x1, x2)

inst_53554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffe000000; valaddr_reg:x3; val_offset:160662*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160662*0 + 3*562*FLEN/8, x4, x1, x2)

inst_53555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffff000000; valaddr_reg:x3; val_offset:160665*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160665*0 + 3*563*FLEN/8, x4, x1, x2)

inst_53556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffff800000; valaddr_reg:x3; val_offset:160668*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160668*0 + 3*564*FLEN/8, x4, x1, x2)

inst_53557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffc00000; valaddr_reg:x3; val_offset:160671*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160671*0 + 3*565*FLEN/8, x4, x1, x2)

inst_53558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffe00000; valaddr_reg:x3; val_offset:160674*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160674*0 + 3*566*FLEN/8, x4, x1, x2)

inst_53559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffff00000; valaddr_reg:x3; val_offset:160677*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160677*0 + 3*567*FLEN/8, x4, x1, x2)

inst_53560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffff80000; valaddr_reg:x3; val_offset:160680*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160680*0 + 3*568*FLEN/8, x4, x1, x2)

inst_53561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffc0000; valaddr_reg:x3; val_offset:160683*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160683*0 + 3*569*FLEN/8, x4, x1, x2)

inst_53562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffe0000; valaddr_reg:x3; val_offset:160686*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160686*0 + 3*570*FLEN/8, x4, x1, x2)

inst_53563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffff0000; valaddr_reg:x3; val_offset:160689*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160689*0 + 3*571*FLEN/8, x4, x1, x2)

inst_53564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffff8000; valaddr_reg:x3; val_offset:160692*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160692*0 + 3*572*FLEN/8, x4, x1, x2)

inst_53565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffc000; valaddr_reg:x3; val_offset:160695*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160695*0 + 3*573*FLEN/8, x4, x1, x2)

inst_53566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffe000; valaddr_reg:x3; val_offset:160698*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160698*0 + 3*574*FLEN/8, x4, x1, x2)

inst_53567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffff000; valaddr_reg:x3; val_offset:160701*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160701*0 + 3*575*FLEN/8, x4, x1, x2)

inst_53568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffff800; valaddr_reg:x3; val_offset:160704*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160704*0 + 3*576*FLEN/8, x4, x1, x2)

inst_53569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffc00; valaddr_reg:x3; val_offset:160707*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160707*0 + 3*577*FLEN/8, x4, x1, x2)

inst_53570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffe00; valaddr_reg:x3; val_offset:160710*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160710*0 + 3*578*FLEN/8, x4, x1, x2)

inst_53571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffff00; valaddr_reg:x3; val_offset:160713*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160713*0 + 3*579*FLEN/8, x4, x1, x2)

inst_53572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffff80; valaddr_reg:x3; val_offset:160716*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160716*0 + 3*580*FLEN/8, x4, x1, x2)

inst_53573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffffc0; valaddr_reg:x3; val_offset:160719*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160719*0 + 3*581*FLEN/8, x4, x1, x2)

inst_53574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffffe0; valaddr_reg:x3; val_offset:160722*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160722*0 + 3*582*FLEN/8, x4, x1, x2)

inst_53575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffff0; valaddr_reg:x3; val_offset:160725*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160725*0 + 3*583*FLEN/8, x4, x1, x2)

inst_53576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffff8; valaddr_reg:x3; val_offset:160728*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160728*0 + 3*584*FLEN/8, x4, x1, x2)

inst_53577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffffc; valaddr_reg:x3; val_offset:160731*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160731*0 + 3*585*FLEN/8, x4, x1, x2)

inst_53578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dffffffffffffe; valaddr_reg:x3; val_offset:160734*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160734*0 + 3*586*FLEN/8, x4, x1, x2)

inst_53579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0472175689c0b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0472175689c0b; op2val:0x0;
op3val:0x2dfffffffffffff; valaddr_reg:x3; val_offset:160737*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160737*0 + 3*587*FLEN/8, x4, x1, x2)

inst_53580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000000000; valaddr_reg:x3; val_offset:160740*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160740*0 + 3*588*FLEN/8, x4, x1, x2)

inst_53581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000000001; valaddr_reg:x3; val_offset:160743*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160743*0 + 3*589*FLEN/8, x4, x1, x2)

inst_53582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000000003; valaddr_reg:x3; val_offset:160746*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160746*0 + 3*590*FLEN/8, x4, x1, x2)

inst_53583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000000007; valaddr_reg:x3; val_offset:160749*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160749*0 + 3*591*FLEN/8, x4, x1, x2)

inst_53584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000000000f; valaddr_reg:x3; val_offset:160752*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160752*0 + 3*592*FLEN/8, x4, x1, x2)

inst_53585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000000001f; valaddr_reg:x3; val_offset:160755*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160755*0 + 3*593*FLEN/8, x4, x1, x2)

inst_53586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000000003f; valaddr_reg:x3; val_offset:160758*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160758*0 + 3*594*FLEN/8, x4, x1, x2)

inst_53587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000000007f; valaddr_reg:x3; val_offset:160761*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160761*0 + 3*595*FLEN/8, x4, x1, x2)

inst_53588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000000000ff; valaddr_reg:x3; val_offset:160764*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160764*0 + 3*596*FLEN/8, x4, x1, x2)

inst_53589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000000001ff; valaddr_reg:x3; val_offset:160767*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160767*0 + 3*597*FLEN/8, x4, x1, x2)

inst_53590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000000003ff; valaddr_reg:x3; val_offset:160770*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160770*0 + 3*598*FLEN/8, x4, x1, x2)

inst_53591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000000007ff; valaddr_reg:x3; val_offset:160773*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160773*0 + 3*599*FLEN/8, x4, x1, x2)

inst_53592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000000fff; valaddr_reg:x3; val_offset:160776*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160776*0 + 3*600*FLEN/8, x4, x1, x2)

inst_53593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000001fff; valaddr_reg:x3; val_offset:160779*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160779*0 + 3*601*FLEN/8, x4, x1, x2)

inst_53594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000003fff; valaddr_reg:x3; val_offset:160782*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160782*0 + 3*602*FLEN/8, x4, x1, x2)

inst_53595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000007fff; valaddr_reg:x3; val_offset:160785*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160785*0 + 3*603*FLEN/8, x4, x1, x2)

inst_53596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000000ffff; valaddr_reg:x3; val_offset:160788*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160788*0 + 3*604*FLEN/8, x4, x1, x2)

inst_53597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000001ffff; valaddr_reg:x3; val_offset:160791*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160791*0 + 3*605*FLEN/8, x4, x1, x2)

inst_53598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000003ffff; valaddr_reg:x3; val_offset:160794*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160794*0 + 3*606*FLEN/8, x4, x1, x2)

inst_53599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000007ffff; valaddr_reg:x3; val_offset:160797*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160797*0 + 3*607*FLEN/8, x4, x1, x2)

inst_53600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000000fffff; valaddr_reg:x3; val_offset:160800*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160800*0 + 3*608*FLEN/8, x4, x1, x2)

inst_53601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000001fffff; valaddr_reg:x3; val_offset:160803*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160803*0 + 3*609*FLEN/8, x4, x1, x2)

inst_53602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000003fffff; valaddr_reg:x3; val_offset:160806*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160806*0 + 3*610*FLEN/8, x4, x1, x2)

inst_53603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000007fffff; valaddr_reg:x3; val_offset:160809*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160809*0 + 3*611*FLEN/8, x4, x1, x2)

inst_53604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000000ffffff; valaddr_reg:x3; val_offset:160812*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160812*0 + 3*612*FLEN/8, x4, x1, x2)

inst_53605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000001ffffff; valaddr_reg:x3; val_offset:160815*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160815*0 + 3*613*FLEN/8, x4, x1, x2)

inst_53606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000003ffffff; valaddr_reg:x3; val_offset:160818*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160818*0 + 3*614*FLEN/8, x4, x1, x2)

inst_53607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000007ffffff; valaddr_reg:x3; val_offset:160821*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160821*0 + 3*615*FLEN/8, x4, x1, x2)

inst_53608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000000fffffff; valaddr_reg:x3; val_offset:160824*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160824*0 + 3*616*FLEN/8, x4, x1, x2)

inst_53609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000001fffffff; valaddr_reg:x3; val_offset:160827*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160827*0 + 3*617*FLEN/8, x4, x1, x2)

inst_53610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000003fffffff; valaddr_reg:x3; val_offset:160830*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160830*0 + 3*618*FLEN/8, x4, x1, x2)

inst_53611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000007fffffff; valaddr_reg:x3; val_offset:160833*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160833*0 + 3*619*FLEN/8, x4, x1, x2)

inst_53612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000000ffffffff; valaddr_reg:x3; val_offset:160836*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160836*0 + 3*620*FLEN/8, x4, x1, x2)

inst_53613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000001ffffffff; valaddr_reg:x3; val_offset:160839*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160839*0 + 3*621*FLEN/8, x4, x1, x2)

inst_53614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000003ffffffff; valaddr_reg:x3; val_offset:160842*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160842*0 + 3*622*FLEN/8, x4, x1, x2)

inst_53615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000007ffffffff; valaddr_reg:x3; val_offset:160845*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160845*0 + 3*623*FLEN/8, x4, x1, x2)

inst_53616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00000fffffffff; valaddr_reg:x3; val_offset:160848*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160848*0 + 3*624*FLEN/8, x4, x1, x2)

inst_53617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00001fffffffff; valaddr_reg:x3; val_offset:160851*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160851*0 + 3*625*FLEN/8, x4, x1, x2)

inst_53618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00003fffffffff; valaddr_reg:x3; val_offset:160854*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160854*0 + 3*626*FLEN/8, x4, x1, x2)

inst_53619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00007fffffffff; valaddr_reg:x3; val_offset:160857*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160857*0 + 3*627*FLEN/8, x4, x1, x2)

inst_53620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0000ffffffffff; valaddr_reg:x3; val_offset:160860*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160860*0 + 3*628*FLEN/8, x4, x1, x2)

inst_53621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0001ffffffffff; valaddr_reg:x3; val_offset:160863*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160863*0 + 3*629*FLEN/8, x4, x1, x2)

inst_53622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0003ffffffffff; valaddr_reg:x3; val_offset:160866*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160866*0 + 3*630*FLEN/8, x4, x1, x2)

inst_53623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0007ffffffffff; valaddr_reg:x3; val_offset:160869*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160869*0 + 3*631*FLEN/8, x4, x1, x2)

inst_53624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b000fffffffffff; valaddr_reg:x3; val_offset:160872*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160872*0 + 3*632*FLEN/8, x4, x1, x2)

inst_53625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b001fffffffffff; valaddr_reg:x3; val_offset:160875*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160875*0 + 3*633*FLEN/8, x4, x1, x2)

inst_53626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b003fffffffffff; valaddr_reg:x3; val_offset:160878*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160878*0 + 3*634*FLEN/8, x4, x1, x2)

inst_53627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b007fffffffffff; valaddr_reg:x3; val_offset:160881*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160881*0 + 3*635*FLEN/8, x4, x1, x2)

inst_53628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b00ffffffffffff; valaddr_reg:x3; val_offset:160884*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160884*0 + 3*636*FLEN/8, x4, x1, x2)

inst_53629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b01ffffffffffff; valaddr_reg:x3; val_offset:160887*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160887*0 + 3*637*FLEN/8, x4, x1, x2)

inst_53630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b03ffffffffffff; valaddr_reg:x3; val_offset:160890*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160890*0 + 3*638*FLEN/8, x4, x1, x2)

inst_53631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b07ffffffffffff; valaddr_reg:x3; val_offset:160893*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160893*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_53632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b08000000000000; valaddr_reg:x3; val_offset:160896*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160896*0 + 3*640*FLEN/8, x4, x1, x2)

inst_53633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0c000000000000; valaddr_reg:x3; val_offset:160899*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160899*0 + 3*641*FLEN/8, x4, x1, x2)

inst_53634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0e000000000000; valaddr_reg:x3; val_offset:160902*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160902*0 + 3*642*FLEN/8, x4, x1, x2)

inst_53635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0f000000000000; valaddr_reg:x3; val_offset:160905*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160905*0 + 3*643*FLEN/8, x4, x1, x2)

inst_53636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0f800000000000; valaddr_reg:x3; val_offset:160908*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160908*0 + 3*644*FLEN/8, x4, x1, x2)

inst_53637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fc00000000000; valaddr_reg:x3; val_offset:160911*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160911*0 + 3*645*FLEN/8, x4, x1, x2)

inst_53638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fe00000000000; valaddr_reg:x3; val_offset:160914*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160914*0 + 3*646*FLEN/8, x4, x1, x2)

inst_53639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ff00000000000; valaddr_reg:x3; val_offset:160917*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160917*0 + 3*647*FLEN/8, x4, x1, x2)

inst_53640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ff80000000000; valaddr_reg:x3; val_offset:160920*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160920*0 + 3*648*FLEN/8, x4, x1, x2)

inst_53641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffc0000000000; valaddr_reg:x3; val_offset:160923*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160923*0 + 3*649*FLEN/8, x4, x1, x2)

inst_53642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffe0000000000; valaddr_reg:x3; val_offset:160926*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160926*0 + 3*650*FLEN/8, x4, x1, x2)

inst_53643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fff0000000000; valaddr_reg:x3; val_offset:160929*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160929*0 + 3*651*FLEN/8, x4, x1, x2)

inst_53644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fff8000000000; valaddr_reg:x3; val_offset:160932*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160932*0 + 3*652*FLEN/8, x4, x1, x2)

inst_53645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffc000000000; valaddr_reg:x3; val_offset:160935*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160935*0 + 3*653*FLEN/8, x4, x1, x2)

inst_53646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffe000000000; valaddr_reg:x3; val_offset:160938*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160938*0 + 3*654*FLEN/8, x4, x1, x2)

inst_53647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffff000000000; valaddr_reg:x3; val_offset:160941*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160941*0 + 3*655*FLEN/8, x4, x1, x2)

inst_53648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffff800000000; valaddr_reg:x3; val_offset:160944*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160944*0 + 3*656*FLEN/8, x4, x1, x2)

inst_53649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffc00000000; valaddr_reg:x3; val_offset:160947*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160947*0 + 3*657*FLEN/8, x4, x1, x2)

inst_53650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffe00000000; valaddr_reg:x3; val_offset:160950*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160950*0 + 3*658*FLEN/8, x4, x1, x2)

inst_53651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffff00000000; valaddr_reg:x3; val_offset:160953*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160953*0 + 3*659*FLEN/8, x4, x1, x2)

inst_53652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffff80000000; valaddr_reg:x3; val_offset:160956*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160956*0 + 3*660*FLEN/8, x4, x1, x2)

inst_53653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffc0000000; valaddr_reg:x3; val_offset:160959*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160959*0 + 3*661*FLEN/8, x4, x1, x2)

inst_53654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffe0000000; valaddr_reg:x3; val_offset:160962*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160962*0 + 3*662*FLEN/8, x4, x1, x2)

inst_53655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffff0000000; valaddr_reg:x3; val_offset:160965*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160965*0 + 3*663*FLEN/8, x4, x1, x2)

inst_53656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffff8000000; valaddr_reg:x3; val_offset:160968*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160968*0 + 3*664*FLEN/8, x4, x1, x2)

inst_53657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffc000000; valaddr_reg:x3; val_offset:160971*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160971*0 + 3*665*FLEN/8, x4, x1, x2)

inst_53658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffe000000; valaddr_reg:x3; val_offset:160974*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160974*0 + 3*666*FLEN/8, x4, x1, x2)

inst_53659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffff000000; valaddr_reg:x3; val_offset:160977*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160977*0 + 3*667*FLEN/8, x4, x1, x2)

inst_53660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffff800000; valaddr_reg:x3; val_offset:160980*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160980*0 + 3*668*FLEN/8, x4, x1, x2)

inst_53661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffc00000; valaddr_reg:x3; val_offset:160983*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160983*0 + 3*669*FLEN/8, x4, x1, x2)

inst_53662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffe00000; valaddr_reg:x3; val_offset:160986*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160986*0 + 3*670*FLEN/8, x4, x1, x2)

inst_53663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffff00000; valaddr_reg:x3; val_offset:160989*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160989*0 + 3*671*FLEN/8, x4, x1, x2)

inst_53664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffff80000; valaddr_reg:x3; val_offset:160992*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160992*0 + 3*672*FLEN/8, x4, x1, x2)

inst_53665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffc0000; valaddr_reg:x3; val_offset:160995*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160995*0 + 3*673*FLEN/8, x4, x1, x2)

inst_53666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffe0000; valaddr_reg:x3; val_offset:160998*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 160998*0 + 3*674*FLEN/8, x4, x1, x2)

inst_53667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffff0000; valaddr_reg:x3; val_offset:161001*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161001*0 + 3*675*FLEN/8, x4, x1, x2)

inst_53668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffff8000; valaddr_reg:x3; val_offset:161004*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161004*0 + 3*676*FLEN/8, x4, x1, x2)

inst_53669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffc000; valaddr_reg:x3; val_offset:161007*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161007*0 + 3*677*FLEN/8, x4, x1, x2)

inst_53670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffe000; valaddr_reg:x3; val_offset:161010*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161010*0 + 3*678*FLEN/8, x4, x1, x2)

inst_53671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffff000; valaddr_reg:x3; val_offset:161013*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161013*0 + 3*679*FLEN/8, x4, x1, x2)

inst_53672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffff800; valaddr_reg:x3; val_offset:161016*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161016*0 + 3*680*FLEN/8, x4, x1, x2)

inst_53673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffc00; valaddr_reg:x3; val_offset:161019*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161019*0 + 3*681*FLEN/8, x4, x1, x2)

inst_53674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffe00; valaddr_reg:x3; val_offset:161022*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161022*0 + 3*682*FLEN/8, x4, x1, x2)

inst_53675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffff00; valaddr_reg:x3; val_offset:161025*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161025*0 + 3*683*FLEN/8, x4, x1, x2)

inst_53676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffff80; valaddr_reg:x3; val_offset:161028*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161028*0 + 3*684*FLEN/8, x4, x1, x2)

inst_53677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffffc0; valaddr_reg:x3; val_offset:161031*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161031*0 + 3*685*FLEN/8, x4, x1, x2)

inst_53678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffffe0; valaddr_reg:x3; val_offset:161034*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161034*0 + 3*686*FLEN/8, x4, x1, x2)

inst_53679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffff0; valaddr_reg:x3; val_offset:161037*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161037*0 + 3*687*FLEN/8, x4, x1, x2)

inst_53680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffff8; valaddr_reg:x3; val_offset:161040*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161040*0 + 3*688*FLEN/8, x4, x1, x2)

inst_53681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffffc; valaddr_reg:x3; val_offset:161043*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161043*0 + 3*689*FLEN/8, x4, x1, x2)

inst_53682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0ffffffffffffe; valaddr_reg:x3; val_offset:161046*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161046*0 + 3*690*FLEN/8, x4, x1, x2)

inst_53683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3b0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3b0fffffffffffff; valaddr_reg:x3; val_offset:161049*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161049*0 + 3*691*FLEN/8, x4, x1, x2)

inst_53684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:161052*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161052*0 + 3*692*FLEN/8, x4, x1, x2)

inst_53685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:161055*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161055*0 + 3*693*FLEN/8, x4, x1, x2)

inst_53686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:161058*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161058*0 + 3*694*FLEN/8, x4, x1, x2)

inst_53687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:161061*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161061*0 + 3*695*FLEN/8, x4, x1, x2)

inst_53688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:161064*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161064*0 + 3*696*FLEN/8, x4, x1, x2)

inst_53689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:161067*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161067*0 + 3*697*FLEN/8, x4, x1, x2)

inst_53690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:161070*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161070*0 + 3*698*FLEN/8, x4, x1, x2)

inst_53691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:161073*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161073*0 + 3*699*FLEN/8, x4, x1, x2)

inst_53692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:161076*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161076*0 + 3*700*FLEN/8, x4, x1, x2)

inst_53693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:161079*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161079*0 + 3*701*FLEN/8, x4, x1, x2)

inst_53694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:161082*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161082*0 + 3*702*FLEN/8, x4, x1, x2)

inst_53695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:161085*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161085*0 + 3*703*FLEN/8, x4, x1, x2)

inst_53696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:161088*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161088*0 + 3*704*FLEN/8, x4, x1, x2)

inst_53697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:161091*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161091*0 + 3*705*FLEN/8, x4, x1, x2)

inst_53698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:161094*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161094*0 + 3*706*FLEN/8, x4, x1, x2)

inst_53699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:161097*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161097*0 + 3*707*FLEN/8, x4, x1, x2)

inst_53700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:161100*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161100*0 + 3*708*FLEN/8, x4, x1, x2)

inst_53701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:161103*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161103*0 + 3*709*FLEN/8, x4, x1, x2)

inst_53702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:161106*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161106*0 + 3*710*FLEN/8, x4, x1, x2)

inst_53703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:161109*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161109*0 + 3*711*FLEN/8, x4, x1, x2)

inst_53704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:161112*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161112*0 + 3*712*FLEN/8, x4, x1, x2)

inst_53705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05312adbcc6d9 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xf5d28226eeb87 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05312adbcc6d9; op2val:0x203f5d28226eeb87;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:161115*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161115*0 + 3*713*FLEN/8, x4, x1, x2)

inst_53706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000000000; valaddr_reg:x3; val_offset:161118*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161118*0 + 3*714*FLEN/8, x4, x1, x2)

inst_53707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000000001; valaddr_reg:x3; val_offset:161121*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161121*0 + 3*715*FLEN/8, x4, x1, x2)

inst_53708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000000003; valaddr_reg:x3; val_offset:161124*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161124*0 + 3*716*FLEN/8, x4, x1, x2)

inst_53709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000000007; valaddr_reg:x3; val_offset:161127*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161127*0 + 3*717*FLEN/8, x4, x1, x2)

inst_53710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000000000f; valaddr_reg:x3; val_offset:161130*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161130*0 + 3*718*FLEN/8, x4, x1, x2)

inst_53711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000000001f; valaddr_reg:x3; val_offset:161133*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161133*0 + 3*719*FLEN/8, x4, x1, x2)

inst_53712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000000003f; valaddr_reg:x3; val_offset:161136*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161136*0 + 3*720*FLEN/8, x4, x1, x2)

inst_53713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000000007f; valaddr_reg:x3; val_offset:161139*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161139*0 + 3*721*FLEN/8, x4, x1, x2)

inst_53714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000000000ff; valaddr_reg:x3; val_offset:161142*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161142*0 + 3*722*FLEN/8, x4, x1, x2)

inst_53715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000000001ff; valaddr_reg:x3; val_offset:161145*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161145*0 + 3*723*FLEN/8, x4, x1, x2)

inst_53716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000000003ff; valaddr_reg:x3; val_offset:161148*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161148*0 + 3*724*FLEN/8, x4, x1, x2)

inst_53717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000000007ff; valaddr_reg:x3; val_offset:161151*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161151*0 + 3*725*FLEN/8, x4, x1, x2)

inst_53718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000000fff; valaddr_reg:x3; val_offset:161154*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161154*0 + 3*726*FLEN/8, x4, x1, x2)

inst_53719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000001fff; valaddr_reg:x3; val_offset:161157*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161157*0 + 3*727*FLEN/8, x4, x1, x2)

inst_53720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000003fff; valaddr_reg:x3; val_offset:161160*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161160*0 + 3*728*FLEN/8, x4, x1, x2)

inst_53721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000007fff; valaddr_reg:x3; val_offset:161163*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161163*0 + 3*729*FLEN/8, x4, x1, x2)

inst_53722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000000ffff; valaddr_reg:x3; val_offset:161166*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161166*0 + 3*730*FLEN/8, x4, x1, x2)

inst_53723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000001ffff; valaddr_reg:x3; val_offset:161169*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161169*0 + 3*731*FLEN/8, x4, x1, x2)

inst_53724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000003ffff; valaddr_reg:x3; val_offset:161172*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161172*0 + 3*732*FLEN/8, x4, x1, x2)

inst_53725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000007ffff; valaddr_reg:x3; val_offset:161175*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161175*0 + 3*733*FLEN/8, x4, x1, x2)

inst_53726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000000fffff; valaddr_reg:x3; val_offset:161178*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161178*0 + 3*734*FLEN/8, x4, x1, x2)

inst_53727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000001fffff; valaddr_reg:x3; val_offset:161181*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161181*0 + 3*735*FLEN/8, x4, x1, x2)

inst_53728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000003fffff; valaddr_reg:x3; val_offset:161184*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161184*0 + 3*736*FLEN/8, x4, x1, x2)

inst_53729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000007fffff; valaddr_reg:x3; val_offset:161187*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161187*0 + 3*737*FLEN/8, x4, x1, x2)

inst_53730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000000ffffff; valaddr_reg:x3; val_offset:161190*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161190*0 + 3*738*FLEN/8, x4, x1, x2)

inst_53731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000001ffffff; valaddr_reg:x3; val_offset:161193*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161193*0 + 3*739*FLEN/8, x4, x1, x2)

inst_53732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000003ffffff; valaddr_reg:x3; val_offset:161196*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161196*0 + 3*740*FLEN/8, x4, x1, x2)

inst_53733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000007ffffff; valaddr_reg:x3; val_offset:161199*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161199*0 + 3*741*FLEN/8, x4, x1, x2)

inst_53734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000000fffffff; valaddr_reg:x3; val_offset:161202*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161202*0 + 3*742*FLEN/8, x4, x1, x2)

inst_53735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000001fffffff; valaddr_reg:x3; val_offset:161205*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161205*0 + 3*743*FLEN/8, x4, x1, x2)

inst_53736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000003fffffff; valaddr_reg:x3; val_offset:161208*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161208*0 + 3*744*FLEN/8, x4, x1, x2)

inst_53737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000007fffffff; valaddr_reg:x3; val_offset:161211*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161211*0 + 3*745*FLEN/8, x4, x1, x2)

inst_53738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00000ffffffff; valaddr_reg:x3; val_offset:161214*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161214*0 + 3*746*FLEN/8, x4, x1, x2)

inst_53739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00001ffffffff; valaddr_reg:x3; val_offset:161217*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161217*0 + 3*747*FLEN/8, x4, x1, x2)

inst_53740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00003ffffffff; valaddr_reg:x3; val_offset:161220*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161220*0 + 3*748*FLEN/8, x4, x1, x2)

inst_53741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00007ffffffff; valaddr_reg:x3; val_offset:161223*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161223*0 + 3*749*FLEN/8, x4, x1, x2)

inst_53742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0000fffffffff; valaddr_reg:x3; val_offset:161226*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161226*0 + 3*750*FLEN/8, x4, x1, x2)

inst_53743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0001fffffffff; valaddr_reg:x3; val_offset:161229*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161229*0 + 3*751*FLEN/8, x4, x1, x2)

inst_53744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0003fffffffff; valaddr_reg:x3; val_offset:161232*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161232*0 + 3*752*FLEN/8, x4, x1, x2)

inst_53745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0007fffffffff; valaddr_reg:x3; val_offset:161235*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161235*0 + 3*753*FLEN/8, x4, x1, x2)

inst_53746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab000ffffffffff; valaddr_reg:x3; val_offset:161238*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161238*0 + 3*754*FLEN/8, x4, x1, x2)

inst_53747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab001ffffffffff; valaddr_reg:x3; val_offset:161241*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161241*0 + 3*755*FLEN/8, x4, x1, x2)

inst_53748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab003ffffffffff; valaddr_reg:x3; val_offset:161244*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161244*0 + 3*756*FLEN/8, x4, x1, x2)

inst_53749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab007ffffffffff; valaddr_reg:x3; val_offset:161247*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161247*0 + 3*757*FLEN/8, x4, x1, x2)

inst_53750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab00fffffffffff; valaddr_reg:x3; val_offset:161250*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161250*0 + 3*758*FLEN/8, x4, x1, x2)

inst_53751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab01fffffffffff; valaddr_reg:x3; val_offset:161253*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161253*0 + 3*759*FLEN/8, x4, x1, x2)

inst_53752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab03fffffffffff; valaddr_reg:x3; val_offset:161256*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161256*0 + 3*760*FLEN/8, x4, x1, x2)

inst_53753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab07fffffffffff; valaddr_reg:x3; val_offset:161259*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161259*0 + 3*761*FLEN/8, x4, x1, x2)

inst_53754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab0ffffffffffff; valaddr_reg:x3; val_offset:161262*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161262*0 + 3*762*FLEN/8, x4, x1, x2)

inst_53755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab1ffffffffffff; valaddr_reg:x3; val_offset:161265*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161265*0 + 3*763*FLEN/8, x4, x1, x2)

inst_53756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab3ffffffffffff; valaddr_reg:x3; val_offset:161268*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161268*0 + 3*764*FLEN/8, x4, x1, x2)

inst_53757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab7ffffffffffff; valaddr_reg:x3; val_offset:161271*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161271*0 + 3*765*FLEN/8, x4, x1, x2)

inst_53758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbab8000000000000; valaddr_reg:x3; val_offset:161274*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161274*0 + 3*766*FLEN/8, x4, x1, x2)

inst_53759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x05cc7ce1db3f8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf4a8c9556e1ec and fs3 == 1 and fe3 == 0x3ab and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa05cc7ce1db3f8; op2val:0x9fcf4a8c9556e1ec;
op3val:0xbabc000000000000; valaddr_reg:x3; val_offset:161277*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 161277*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232384270335,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232385318911,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232387416063,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232391610367,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232399998975,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232416776191,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232450330623,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232517439487,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232651657215,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232920092671,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415233456963583,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415234530705407,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415236678189055,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415240973156351,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415249563090943,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415266742960127,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415301102698495,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415369822175231,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415507261128703,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415782139035647,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277416331894849535,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277417431406477311,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277419630429732863,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277424028476243967,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277432824569266175,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277450416755310591,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277485601127399423,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277555969871577087,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277696707359932415,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277978182336643071,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9278541132290064383,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907007,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9279667032196907008,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9280792932103749632,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281355882057170944,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281637357033881600,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281778094522236928,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281848463266414592,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281883647638503424,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281901239824547840,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281910035917570048,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281914433964081152,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281916632987336704,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281917732498964480,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918282254778368,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918557132685312,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918694571638784,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918763291115520,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918797650853888,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918814830723072,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918823420657664,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918827715624960,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918829863108608,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918830936850432,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831473721344,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831742156800,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831876374528,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831943483392,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831977037824,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918831993815040,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832002203648,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832006397952,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832008495104,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832009543680,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010067968,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010330112,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010461184,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010526720,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010559488,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010575872,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010584064,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010588160,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010590208,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591232,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010591744,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592000,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592128,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592192,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592224,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592240,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592248,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592252,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592254,64,FLEN)
NAN_BOXED(6890556252262341959,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9281918832010592255,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963968,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963969,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963971,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963975,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963983,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018963999,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964031,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964095,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964223,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964479,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018964991,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018966015,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018968063,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018972159,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018980351,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797018996735,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019029503,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019095039,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019226111,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797019488255,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797020012543,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797021061119,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797023158271,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797027352575,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797035741183,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797052518399,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797086072831,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797153181695,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797287399423,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028797555834879,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028798092705791,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028799166447615,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028801313931263,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028805608898559,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028814198833151,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028831378702335,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028865738440703,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36028934457917439,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029071896870911,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029346774777855,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36029896530591743,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36030996042219519,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36033195065475071,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36037593111986175,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36046389205008383,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36063981391052799,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36099165763141631,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36169534507319295,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36310271995674623,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(36591746972385279,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(37154696925806591,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649215,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(38280596832649216,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39406496739491840,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(39969446692913152,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40250921669623808,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40391659157979136,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40462027902156800,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40497212274245632,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40514804460290048,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40523600553312256,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40527998599823360,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40530197623078912,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531297134706688,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40531846890520576,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532121768427520,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532259207380992,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532327926857728,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532362286596096,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532379466465280,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532388056399872,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532392351367168,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532394498850816,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532395572592640,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396109463552,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396377899008,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396512116736,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396579225600,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396612780032,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396629557248,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396637945856,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396642140160,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396644237312,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645285888,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396645810176,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646072320,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646203392,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646268928,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646301696,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646318080,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646326272,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646330368,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646332416,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333440,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646333952,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334208,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334336,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334400,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334432,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334448,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334456,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334460,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334462,64,FLEN)
NAN_BOXED(6890561057783264337,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334463,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743168,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743169,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743171,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743175,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743183,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743199,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743231,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743295,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743423,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743679,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812744191,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812745215,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812747263,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812751359,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812759551,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812775935,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812808703,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812874239,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813005311,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813267455,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813791743,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023814840319,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023816937471,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023821131775,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023829520383,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023846297599,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023879852031,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023946960895,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024081178623,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024349614079,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024886484991,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998025960226815,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998028107710463,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998032402677759,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998040992612351,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998058172481535,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998092532219903,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998161251696639,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998298690650111,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998573568557055,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380999123324370943,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381000222835998719,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381002421859254271,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381006819905765375,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381015615998787583,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381033208184831999,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381068392556920831,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381138761301098495,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381279498789453823,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381560973766164479,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9382123923719585791,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428415,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428416,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384375723533271040,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384938673486692352,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385220148463403008,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385360885951758336,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385431254695936000,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385466439068024832,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385484031254069248,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385492827347091456,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385497225393602560,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385499424416858112,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385500523928485888,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501073684299776,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501348562206720,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501486001160192,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501554720636928,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501589080375296,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501606260244480,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501614850179072,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501619145146368,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501621292630016,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622366371840,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622903242752,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623171678208,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623305895936,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623373004800,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623406559232,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623423336448,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623431725056,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623435919360,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623438016512,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439065088,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439589376,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439851520,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439982592,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440048128,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440080896,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440097280,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440105472,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440109568,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440111616,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440112640,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113152,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113408,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113536,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113600,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113632,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113648,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113656,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113660,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113662,64,FLEN)
NAN_BOXED(6890570721808207828,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113663,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(511,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1023,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2047,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4095,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8191,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16383,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(32767,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(65535,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(131071,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(262143,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(524287,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1048575,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2097151,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4194303,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8388607,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(16777215,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(33554431,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67108863,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(134217727,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(268435455,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(536870911,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1073741823,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2147483647,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4294967295,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8589934591,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17179869183,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(34359738367,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68719476735,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137438953471,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(274877906943,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(549755813887,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1099511627775,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2199023255551,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4398046511103,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8796093022207,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(17592186044415,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(35184372088831,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70368744177663,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(140737488355327,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(281474976710655,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(562949953421311,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1125899906842623,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685247,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2251799813685248,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3377699720527872,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3940649673949184,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4222124650659840,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4362862139015168,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4433230883192832,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4468415255281664,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4486007441326080,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4494803534348288,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4499201580859392,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4501400604114944,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4502500115742720,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503049871556608,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503324749463552,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503462188417024,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503530907893760,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503565267632128,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503582447501312,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503591037435904,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503595332403200,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503597479886848,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503598553628672,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599090499584,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599358935040,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599493152768,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599560261632,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599593816064,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599610593280,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599618981888,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599623176192,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599625273344,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626321920,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599626846208,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627108352,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627239424,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627304960,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627337728,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627354112,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627362304,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627366400,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627368448,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369472,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627369984,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370240,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370368,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370495,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6890570933029956756,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672320,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672321,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672323,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672327,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672335,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672351,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672383,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672447,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672575,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672831,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231673343,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231674367,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231676415,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231680511,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231688703,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231705087,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231737855,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231803391,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231934463,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232196607,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983232720895,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983233769471,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983235866623,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983240060927,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983248449535,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983265226751,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983298781183,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983365890047,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983500107775,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983768543231,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661984305414143,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661985379155967,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661987526639615,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661991821606911,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662000411541503,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662017591410687,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662051951149055,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662120670625791,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662258109579263,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202662532987486207,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202663082743300095,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202664182254927871,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202666381278183423,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202670779324694527,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202679575417716735,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202697167603761151,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202732351975849983,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202802720720027647,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202943458208382975,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203224933185093631,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(203787883138514943,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357567,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(204913783045357568,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206039682952200192,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206602632905621504,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(206884107882332160,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207024845370687488,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207095214114865152,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207130398486953984,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207147990672998400,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207156786766020608,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207161184812531712,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207163383835787264,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207164483347415040,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165033103228928,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165307981135872,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165445420089344,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165514139566080,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165548499304448,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165565679173632,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165574269108224,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165578564075520,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165580711559168,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165581785300992,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582322171904,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582590607360,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582724825088,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582791933952,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582825488384,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582842265600,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582850654208,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582854848512,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582856945664,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582857994240,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858518528,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858780672,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858911744,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582858977280,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859010048,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859026432,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859034624,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859038720,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859040768,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859041792,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042304,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042560,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042688,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042752,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042784,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042800,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042808,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042812,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042814,64,FLEN)
NAN_BOXED(6890585638906141707,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(207165582859042815,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748224,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748225,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748227,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748231,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748239,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748255,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748287,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748351,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748479,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237748735,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237749247,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237750271,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237752319,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237756415,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237764607,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237780991,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237813759,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048237879295,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048238010367,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048238272511,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048238796799,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048239845375,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048241942527,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048246136831,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048254525439,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048271302655,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048304857087,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048371965951,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048506183679,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398048774619135,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398049311490047,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398050385231871,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398052532715519,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398056827682815,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398065417617407,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398082597486591,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398116957224959,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398185676701695,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398323115655167,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251398597993562111,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251399147749375999,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251400247261003775,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251402446284259327,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251406844330770431,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251415640423792639,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251433232609837055,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251468416981925887,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251538785726103551,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251679523214458879,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4251960998191169535,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4252523948144590847,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4253649848051433471,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4253649848051433472,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4254775747958276096,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255338697911697408,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255620172888408064,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255760910376763392,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255831279120941056,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255866463493029888,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255884055679074304,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255892851772096512,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255897249818607616,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255899448841863168,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255900548353490944,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901098109304832,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901372987211776,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901510426165248,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901579145641984,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901613505380352,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901630685249536,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901639275184128,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901643570151424,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901645717635072,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901646791376896,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647328247808,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647596683264,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647730900992,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647798009856,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647831564288,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647848341504,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647856730112,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647860924416,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647863021568,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647864070144,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647864594432,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647864856576,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647864987648,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865053184,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865085952,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865102336,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865110528,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865114624,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865116672,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865117696,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118208,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118464,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118592,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118656,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118688,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118704,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118712,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118716,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118718,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4255901647865118719,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890598769566205657,64,FLEN)
NAN_BOXED(2323678359704234887,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671552,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671553,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671555,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671559,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671567,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671583,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671615,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671679,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955671807,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955672063,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955672575,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955673599,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955675647,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955679743,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955687935,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955704319,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955737087,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955802623,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086955933695,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086956195839,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086956720127,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086957768703,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086959865855,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086964060159,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086972448767,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252086989225983,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252087022780415,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252087089889279,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252087224107007,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252087492542463,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252088029413375,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252089103155199,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252091250638847,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252095545606143,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252104135540735,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252121315409919,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252155675148287,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252224394625023,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252361833578495,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452252636711485439,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452253186467299327,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452254285978927103,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452256485002182655,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452260883048693759,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452269679141715967,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452287271327760383,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452322455699849215,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452392824444026879,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452533561932382207,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13452815036909092863,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13453377986862514175,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13454503886769356799,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13454503886769356800,64,FLEN)
NAN_BOXED(6890609443103159288,64,FLEN)
NAN_BOXED(11515504739871023596,64,FLEN)
NAN_BOXED(13455629786676199424,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
