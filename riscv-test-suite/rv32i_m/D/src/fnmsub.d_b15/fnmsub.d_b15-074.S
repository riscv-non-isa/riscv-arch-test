
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_56064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffff800000000; valaddr_reg:x3; val_offset:168192*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168192*0 + 3*0*FLEN/8, x4, x1, x2)

inst_56065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffc00000000; valaddr_reg:x3; val_offset:168195*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168195*0 + 3*1*FLEN/8, x4, x1, x2)

inst_56066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffe00000000; valaddr_reg:x3; val_offset:168198*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168198*0 + 3*2*FLEN/8, x4, x1, x2)

inst_56067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffff00000000; valaddr_reg:x3; val_offset:168201*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168201*0 + 3*3*FLEN/8, x4, x1, x2)

inst_56068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffff80000000; valaddr_reg:x3; val_offset:168204*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168204*0 + 3*4*FLEN/8, x4, x1, x2)

inst_56069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffc0000000; valaddr_reg:x3; val_offset:168207*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168207*0 + 3*5*FLEN/8, x4, x1, x2)

inst_56070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffe0000000; valaddr_reg:x3; val_offset:168210*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168210*0 + 3*6*FLEN/8, x4, x1, x2)

inst_56071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffff0000000; valaddr_reg:x3; val_offset:168213*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168213*0 + 3*7*FLEN/8, x4, x1, x2)

inst_56072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffff8000000; valaddr_reg:x3; val_offset:168216*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168216*0 + 3*8*FLEN/8, x4, x1, x2)

inst_56073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffc000000; valaddr_reg:x3; val_offset:168219*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168219*0 + 3*9*FLEN/8, x4, x1, x2)

inst_56074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffe000000; valaddr_reg:x3; val_offset:168222*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168222*0 + 3*10*FLEN/8, x4, x1, x2)

inst_56075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffff000000; valaddr_reg:x3; val_offset:168225*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168225*0 + 3*11*FLEN/8, x4, x1, x2)

inst_56076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffff800000; valaddr_reg:x3; val_offset:168228*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168228*0 + 3*12*FLEN/8, x4, x1, x2)

inst_56077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffc00000; valaddr_reg:x3; val_offset:168231*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168231*0 + 3*13*FLEN/8, x4, x1, x2)

inst_56078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffe00000; valaddr_reg:x3; val_offset:168234*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168234*0 + 3*14*FLEN/8, x4, x1, x2)

inst_56079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffff00000; valaddr_reg:x3; val_offset:168237*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168237*0 + 3*15*FLEN/8, x4, x1, x2)

inst_56080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffff80000; valaddr_reg:x3; val_offset:168240*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168240*0 + 3*16*FLEN/8, x4, x1, x2)

inst_56081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffc0000; valaddr_reg:x3; val_offset:168243*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168243*0 + 3*17*FLEN/8, x4, x1, x2)

inst_56082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffe0000; valaddr_reg:x3; val_offset:168246*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168246*0 + 3*18*FLEN/8, x4, x1, x2)

inst_56083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffff0000; valaddr_reg:x3; val_offset:168249*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168249*0 + 3*19*FLEN/8, x4, x1, x2)

inst_56084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffff8000; valaddr_reg:x3; val_offset:168252*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168252*0 + 3*20*FLEN/8, x4, x1, x2)

inst_56085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffc000; valaddr_reg:x3; val_offset:168255*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168255*0 + 3*21*FLEN/8, x4, x1, x2)

inst_56086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffe000; valaddr_reg:x3; val_offset:168258*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168258*0 + 3*22*FLEN/8, x4, x1, x2)

inst_56087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffff000; valaddr_reg:x3; val_offset:168261*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168261*0 + 3*23*FLEN/8, x4, x1, x2)

inst_56088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffff800; valaddr_reg:x3; val_offset:168264*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168264*0 + 3*24*FLEN/8, x4, x1, x2)

inst_56089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffc00; valaddr_reg:x3; val_offset:168267*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168267*0 + 3*25*FLEN/8, x4, x1, x2)

inst_56090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffe00; valaddr_reg:x3; val_offset:168270*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168270*0 + 3*26*FLEN/8, x4, x1, x2)

inst_56091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffff00; valaddr_reg:x3; val_offset:168273*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168273*0 + 3*27*FLEN/8, x4, x1, x2)

inst_56092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffff80; valaddr_reg:x3; val_offset:168276*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168276*0 + 3*28*FLEN/8, x4, x1, x2)

inst_56093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffffc0; valaddr_reg:x3; val_offset:168279*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168279*0 + 3*29*FLEN/8, x4, x1, x2)

inst_56094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffffe0; valaddr_reg:x3; val_offset:168282*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168282*0 + 3*30*FLEN/8, x4, x1, x2)

inst_56095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffff0; valaddr_reg:x3; val_offset:168285*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168285*0 + 3*31*FLEN/8, x4, x1, x2)

inst_56096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffff8; valaddr_reg:x3; val_offset:168288*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168288*0 + 3*32*FLEN/8, x4, x1, x2)

inst_56097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffffc; valaddr_reg:x3; val_offset:168291*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168291*0 + 3*33*FLEN/8, x4, x1, x2)

inst_56098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffffffffffffe; valaddr_reg:x3; val_offset:168294*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168294*0 + 3*34*FLEN/8, x4, x1, x2)

inst_56099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffffffffffff; valaddr_reg:x3; val_offset:168297*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168297*0 + 3*35*FLEN/8, x4, x1, x2)

inst_56100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000000000; valaddr_reg:x3; val_offset:168300*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168300*0 + 3*36*FLEN/8, x4, x1, x2)

inst_56101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000000001; valaddr_reg:x3; val_offset:168303*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168303*0 + 3*37*FLEN/8, x4, x1, x2)

inst_56102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000000003; valaddr_reg:x3; val_offset:168306*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168306*0 + 3*38*FLEN/8, x4, x1, x2)

inst_56103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000000007; valaddr_reg:x3; val_offset:168309*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168309*0 + 3*39*FLEN/8, x4, x1, x2)

inst_56104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000000000f; valaddr_reg:x3; val_offset:168312*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168312*0 + 3*40*FLEN/8, x4, x1, x2)

inst_56105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000000001f; valaddr_reg:x3; val_offset:168315*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168315*0 + 3*41*FLEN/8, x4, x1, x2)

inst_56106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000000003f; valaddr_reg:x3; val_offset:168318*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168318*0 + 3*42*FLEN/8, x4, x1, x2)

inst_56107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000000007f; valaddr_reg:x3; val_offset:168321*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168321*0 + 3*43*FLEN/8, x4, x1, x2)

inst_56108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000000000ff; valaddr_reg:x3; val_offset:168324*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168324*0 + 3*44*FLEN/8, x4, x1, x2)

inst_56109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000000001ff; valaddr_reg:x3; val_offset:168327*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168327*0 + 3*45*FLEN/8, x4, x1, x2)

inst_56110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000000003ff; valaddr_reg:x3; val_offset:168330*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168330*0 + 3*46*FLEN/8, x4, x1, x2)

inst_56111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000000007ff; valaddr_reg:x3; val_offset:168333*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168333*0 + 3*47*FLEN/8, x4, x1, x2)

inst_56112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000000fff; valaddr_reg:x3; val_offset:168336*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168336*0 + 3*48*FLEN/8, x4, x1, x2)

inst_56113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000001fff; valaddr_reg:x3; val_offset:168339*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168339*0 + 3*49*FLEN/8, x4, x1, x2)

inst_56114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000003fff; valaddr_reg:x3; val_offset:168342*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168342*0 + 3*50*FLEN/8, x4, x1, x2)

inst_56115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000007fff; valaddr_reg:x3; val_offset:168345*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168345*0 + 3*51*FLEN/8, x4, x1, x2)

inst_56116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000000ffff; valaddr_reg:x3; val_offset:168348*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168348*0 + 3*52*FLEN/8, x4, x1, x2)

inst_56117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000001ffff; valaddr_reg:x3; val_offset:168351*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168351*0 + 3*53*FLEN/8, x4, x1, x2)

inst_56118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000003ffff; valaddr_reg:x3; val_offset:168354*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168354*0 + 3*54*FLEN/8, x4, x1, x2)

inst_56119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000007ffff; valaddr_reg:x3; val_offset:168357*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168357*0 + 3*55*FLEN/8, x4, x1, x2)

inst_56120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000000fffff; valaddr_reg:x3; val_offset:168360*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168360*0 + 3*56*FLEN/8, x4, x1, x2)

inst_56121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000001fffff; valaddr_reg:x3; val_offset:168363*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168363*0 + 3*57*FLEN/8, x4, x1, x2)

inst_56122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000003fffff; valaddr_reg:x3; val_offset:168366*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168366*0 + 3*58*FLEN/8, x4, x1, x2)

inst_56123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000007fffff; valaddr_reg:x3; val_offset:168369*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168369*0 + 3*59*FLEN/8, x4, x1, x2)

inst_56124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000000ffffff; valaddr_reg:x3; val_offset:168372*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168372*0 + 3*60*FLEN/8, x4, x1, x2)

inst_56125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000001ffffff; valaddr_reg:x3; val_offset:168375*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168375*0 + 3*61*FLEN/8, x4, x1, x2)

inst_56126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000003ffffff; valaddr_reg:x3; val_offset:168378*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168378*0 + 3*62*FLEN/8, x4, x1, x2)

inst_56127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000007ffffff; valaddr_reg:x3; val_offset:168381*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168381*0 + 3*63*FLEN/8, x4, x1, x2)

inst_56128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000000fffffff; valaddr_reg:x3; val_offset:168384*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168384*0 + 3*64*FLEN/8, x4, x1, x2)

inst_56129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000001fffffff; valaddr_reg:x3; val_offset:168387*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168387*0 + 3*65*FLEN/8, x4, x1, x2)

inst_56130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000003fffffff; valaddr_reg:x3; val_offset:168390*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168390*0 + 3*66*FLEN/8, x4, x1, x2)

inst_56131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000007fffffff; valaddr_reg:x3; val_offset:168393*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168393*0 + 3*67*FLEN/8, x4, x1, x2)

inst_56132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200000ffffffff; valaddr_reg:x3; val_offset:168396*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168396*0 + 3*68*FLEN/8, x4, x1, x2)

inst_56133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200001ffffffff; valaddr_reg:x3; val_offset:168399*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168399*0 + 3*69*FLEN/8, x4, x1, x2)

inst_56134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200003ffffffff; valaddr_reg:x3; val_offset:168402*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168402*0 + 3*70*FLEN/8, x4, x1, x2)

inst_56135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200007ffffffff; valaddr_reg:x3; val_offset:168405*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168405*0 + 3*71*FLEN/8, x4, x1, x2)

inst_56136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820000fffffffff; valaddr_reg:x3; val_offset:168408*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168408*0 + 3*72*FLEN/8, x4, x1, x2)

inst_56137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820001fffffffff; valaddr_reg:x3; val_offset:168411*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168411*0 + 3*73*FLEN/8, x4, x1, x2)

inst_56138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820003fffffffff; valaddr_reg:x3; val_offset:168414*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168414*0 + 3*74*FLEN/8, x4, x1, x2)

inst_56139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820007fffffffff; valaddr_reg:x3; val_offset:168417*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168417*0 + 3*75*FLEN/8, x4, x1, x2)

inst_56140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82000ffffffffff; valaddr_reg:x3; val_offset:168420*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168420*0 + 3*76*FLEN/8, x4, x1, x2)

inst_56141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82001ffffffffff; valaddr_reg:x3; val_offset:168423*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168423*0 + 3*77*FLEN/8, x4, x1, x2)

inst_56142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82003ffffffffff; valaddr_reg:x3; val_offset:168426*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168426*0 + 3*78*FLEN/8, x4, x1, x2)

inst_56143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82007ffffffffff; valaddr_reg:x3; val_offset:168429*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168429*0 + 3*79*FLEN/8, x4, x1, x2)

inst_56144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8200fffffffffff; valaddr_reg:x3; val_offset:168432*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168432*0 + 3*80*FLEN/8, x4, x1, x2)

inst_56145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8201fffffffffff; valaddr_reg:x3; val_offset:168435*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168435*0 + 3*81*FLEN/8, x4, x1, x2)

inst_56146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8203fffffffffff; valaddr_reg:x3; val_offset:168438*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168438*0 + 3*82*FLEN/8, x4, x1, x2)

inst_56147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb8207fffffffffff; valaddr_reg:x3; val_offset:168441*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168441*0 + 3*83*FLEN/8, x4, x1, x2)

inst_56148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb820ffffffffffff; valaddr_reg:x3; val_offset:168444*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168444*0 + 3*84*FLEN/8, x4, x1, x2)

inst_56149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb821ffffffffffff; valaddr_reg:x3; val_offset:168447*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168447*0 + 3*85*FLEN/8, x4, x1, x2)

inst_56150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb823ffffffffffff; valaddr_reg:x3; val_offset:168450*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168450*0 + 3*86*FLEN/8, x4, x1, x2)

inst_56151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb827ffffffffffff; valaddr_reg:x3; val_offset:168453*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168453*0 + 3*87*FLEN/8, x4, x1, x2)

inst_56152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb828000000000000; valaddr_reg:x3; val_offset:168456*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168456*0 + 3*88*FLEN/8, x4, x1, x2)

inst_56153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82c000000000000; valaddr_reg:x3; val_offset:168459*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168459*0 + 3*89*FLEN/8, x4, x1, x2)

inst_56154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82e000000000000; valaddr_reg:x3; val_offset:168462*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168462*0 + 3*90*FLEN/8, x4, x1, x2)

inst_56155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82f000000000000; valaddr_reg:x3; val_offset:168465*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168465*0 + 3*91*FLEN/8, x4, x1, x2)

inst_56156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82f800000000000; valaddr_reg:x3; val_offset:168468*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168468*0 + 3*92*FLEN/8, x4, x1, x2)

inst_56157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fc00000000000; valaddr_reg:x3; val_offset:168471*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168471*0 + 3*93*FLEN/8, x4, x1, x2)

inst_56158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fe00000000000; valaddr_reg:x3; val_offset:168474*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168474*0 + 3*94*FLEN/8, x4, x1, x2)

inst_56159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ff00000000000; valaddr_reg:x3; val_offset:168477*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168477*0 + 3*95*FLEN/8, x4, x1, x2)

inst_56160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ff80000000000; valaddr_reg:x3; val_offset:168480*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168480*0 + 3*96*FLEN/8, x4, x1, x2)

inst_56161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffc0000000000; valaddr_reg:x3; val_offset:168483*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168483*0 + 3*97*FLEN/8, x4, x1, x2)

inst_56162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffe0000000000; valaddr_reg:x3; val_offset:168486*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168486*0 + 3*98*FLEN/8, x4, x1, x2)

inst_56163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fff0000000000; valaddr_reg:x3; val_offset:168489*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168489*0 + 3*99*FLEN/8, x4, x1, x2)

inst_56164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fff8000000000; valaddr_reg:x3; val_offset:168492*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168492*0 + 3*100*FLEN/8, x4, x1, x2)

inst_56165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffc000000000; valaddr_reg:x3; val_offset:168495*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168495*0 + 3*101*FLEN/8, x4, x1, x2)

inst_56166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffe000000000; valaddr_reg:x3; val_offset:168498*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168498*0 + 3*102*FLEN/8, x4, x1, x2)

inst_56167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffff000000000; valaddr_reg:x3; val_offset:168501*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168501*0 + 3*103*FLEN/8, x4, x1, x2)

inst_56168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffff800000000; valaddr_reg:x3; val_offset:168504*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168504*0 + 3*104*FLEN/8, x4, x1, x2)

inst_56169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffc00000000; valaddr_reg:x3; val_offset:168507*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168507*0 + 3*105*FLEN/8, x4, x1, x2)

inst_56170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffe00000000; valaddr_reg:x3; val_offset:168510*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168510*0 + 3*106*FLEN/8, x4, x1, x2)

inst_56171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffff00000000; valaddr_reg:x3; val_offset:168513*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168513*0 + 3*107*FLEN/8, x4, x1, x2)

inst_56172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffff80000000; valaddr_reg:x3; val_offset:168516*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168516*0 + 3*108*FLEN/8, x4, x1, x2)

inst_56173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffc0000000; valaddr_reg:x3; val_offset:168519*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168519*0 + 3*109*FLEN/8, x4, x1, x2)

inst_56174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffe0000000; valaddr_reg:x3; val_offset:168522*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168522*0 + 3*110*FLEN/8, x4, x1, x2)

inst_56175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffff0000000; valaddr_reg:x3; val_offset:168525*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168525*0 + 3*111*FLEN/8, x4, x1, x2)

inst_56176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffff8000000; valaddr_reg:x3; val_offset:168528*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168528*0 + 3*112*FLEN/8, x4, x1, x2)

inst_56177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffc000000; valaddr_reg:x3; val_offset:168531*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168531*0 + 3*113*FLEN/8, x4, x1, x2)

inst_56178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffe000000; valaddr_reg:x3; val_offset:168534*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168534*0 + 3*114*FLEN/8, x4, x1, x2)

inst_56179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffff000000; valaddr_reg:x3; val_offset:168537*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168537*0 + 3*115*FLEN/8, x4, x1, x2)

inst_56180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffff800000; valaddr_reg:x3; val_offset:168540*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168540*0 + 3*116*FLEN/8, x4, x1, x2)

inst_56181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffc00000; valaddr_reg:x3; val_offset:168543*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168543*0 + 3*117*FLEN/8, x4, x1, x2)

inst_56182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffe00000; valaddr_reg:x3; val_offset:168546*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168546*0 + 3*118*FLEN/8, x4, x1, x2)

inst_56183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffff00000; valaddr_reg:x3; val_offset:168549*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168549*0 + 3*119*FLEN/8, x4, x1, x2)

inst_56184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffff80000; valaddr_reg:x3; val_offset:168552*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168552*0 + 3*120*FLEN/8, x4, x1, x2)

inst_56185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffc0000; valaddr_reg:x3; val_offset:168555*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168555*0 + 3*121*FLEN/8, x4, x1, x2)

inst_56186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffe0000; valaddr_reg:x3; val_offset:168558*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168558*0 + 3*122*FLEN/8, x4, x1, x2)

inst_56187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffff0000; valaddr_reg:x3; val_offset:168561*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168561*0 + 3*123*FLEN/8, x4, x1, x2)

inst_56188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffff8000; valaddr_reg:x3; val_offset:168564*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168564*0 + 3*124*FLEN/8, x4, x1, x2)

inst_56189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffc000; valaddr_reg:x3; val_offset:168567*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168567*0 + 3*125*FLEN/8, x4, x1, x2)

inst_56190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffe000; valaddr_reg:x3; val_offset:168570*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168570*0 + 3*126*FLEN/8, x4, x1, x2)

inst_56191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffff000; valaddr_reg:x3; val_offset:168573*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168573*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_56192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffff800; valaddr_reg:x3; val_offset:168576*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168576*0 + 3*128*FLEN/8, x4, x1, x2)

inst_56193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffc00; valaddr_reg:x3; val_offset:168579*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168579*0 + 3*129*FLEN/8, x4, x1, x2)

inst_56194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffe00; valaddr_reg:x3; val_offset:168582*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168582*0 + 3*130*FLEN/8, x4, x1, x2)

inst_56195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffff00; valaddr_reg:x3; val_offset:168585*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168585*0 + 3*131*FLEN/8, x4, x1, x2)

inst_56196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffff80; valaddr_reg:x3; val_offset:168588*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168588*0 + 3*132*FLEN/8, x4, x1, x2)

inst_56197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffffc0; valaddr_reg:x3; val_offset:168591*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168591*0 + 3*133*FLEN/8, x4, x1, x2)

inst_56198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffffe0; valaddr_reg:x3; val_offset:168594*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168594*0 + 3*134*FLEN/8, x4, x1, x2)

inst_56199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffff0; valaddr_reg:x3; val_offset:168597*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168597*0 + 3*135*FLEN/8, x4, x1, x2)

inst_56200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffff8; valaddr_reg:x3; val_offset:168600*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168600*0 + 3*136*FLEN/8, x4, x1, x2)

inst_56201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffffc; valaddr_reg:x3; val_offset:168603*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168603*0 + 3*137*FLEN/8, x4, x1, x2)

inst_56202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82ffffffffffffe; valaddr_reg:x3; val_offset:168606*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168606*0 + 3*138*FLEN/8, x4, x1, x2)

inst_56203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x382 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xb82fffffffffffff; valaddr_reg:x3; val_offset:168609*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168609*0 + 3*139*FLEN/8, x4, x1, x2)

inst_56204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:168612*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168612*0 + 3*140*FLEN/8, x4, x1, x2)

inst_56205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:168615*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168615*0 + 3*141*FLEN/8, x4, x1, x2)

inst_56206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:168618*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168618*0 + 3*142*FLEN/8, x4, x1, x2)

inst_56207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:168621*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168621*0 + 3*143*FLEN/8, x4, x1, x2)

inst_56208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:168624*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168624*0 + 3*144*FLEN/8, x4, x1, x2)

inst_56209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:168627*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168627*0 + 3*145*FLEN/8, x4, x1, x2)

inst_56210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:168630*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168630*0 + 3*146*FLEN/8, x4, x1, x2)

inst_56211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:168633*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168633*0 + 3*147*FLEN/8, x4, x1, x2)

inst_56212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:168636*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168636*0 + 3*148*FLEN/8, x4, x1, x2)

inst_56213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:168639*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168639*0 + 3*149*FLEN/8, x4, x1, x2)

inst_56214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:168642*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168642*0 + 3*150*FLEN/8, x4, x1, x2)

inst_56215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:168645*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168645*0 + 3*151*FLEN/8, x4, x1, x2)

inst_56216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:168648*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168648*0 + 3*152*FLEN/8, x4, x1, x2)

inst_56217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:168651*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168651*0 + 3*153*FLEN/8, x4, x1, x2)

inst_56218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:168654*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168654*0 + 3*154*FLEN/8, x4, x1, x2)

inst_56219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:168657*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168657*0 + 3*155*FLEN/8, x4, x1, x2)

inst_56220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:168660*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168660*0 + 3*156*FLEN/8, x4, x1, x2)

inst_56221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:168663*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168663*0 + 3*157*FLEN/8, x4, x1, x2)

inst_56222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:168666*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168666*0 + 3*158*FLEN/8, x4, x1, x2)

inst_56223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:168669*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168669*0 + 3*159*FLEN/8, x4, x1, x2)

inst_56224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:168672*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168672*0 + 3*160*FLEN/8, x4, x1, x2)

inst_56225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12594711492ab and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xddc1c3471cb01 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12594711492ab; op2val:0x9fcddc1c3471cb01;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:168675*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168675*0 + 3*161*FLEN/8, x4, x1, x2)

inst_56226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000000000; valaddr_reg:x3; val_offset:168678*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168678*0 + 3*162*FLEN/8, x4, x1, x2)

inst_56227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000000001; valaddr_reg:x3; val_offset:168681*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168681*0 + 3*163*FLEN/8, x4, x1, x2)

inst_56228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000000003; valaddr_reg:x3; val_offset:168684*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168684*0 + 3*164*FLEN/8, x4, x1, x2)

inst_56229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000000007; valaddr_reg:x3; val_offset:168687*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168687*0 + 3*165*FLEN/8, x4, x1, x2)

inst_56230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000000000f; valaddr_reg:x3; val_offset:168690*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168690*0 + 3*166*FLEN/8, x4, x1, x2)

inst_56231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000000001f; valaddr_reg:x3; val_offset:168693*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168693*0 + 3*167*FLEN/8, x4, x1, x2)

inst_56232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000000003f; valaddr_reg:x3; val_offset:168696*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168696*0 + 3*168*FLEN/8, x4, x1, x2)

inst_56233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000000007f; valaddr_reg:x3; val_offset:168699*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168699*0 + 3*169*FLEN/8, x4, x1, x2)

inst_56234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000000000ff; valaddr_reg:x3; val_offset:168702*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168702*0 + 3*170*FLEN/8, x4, x1, x2)

inst_56235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000000001ff; valaddr_reg:x3; val_offset:168705*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168705*0 + 3*171*FLEN/8, x4, x1, x2)

inst_56236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000000003ff; valaddr_reg:x3; val_offset:168708*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168708*0 + 3*172*FLEN/8, x4, x1, x2)

inst_56237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000000007ff; valaddr_reg:x3; val_offset:168711*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168711*0 + 3*173*FLEN/8, x4, x1, x2)

inst_56238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000000fff; valaddr_reg:x3; val_offset:168714*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168714*0 + 3*174*FLEN/8, x4, x1, x2)

inst_56239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000001fff; valaddr_reg:x3; val_offset:168717*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168717*0 + 3*175*FLEN/8, x4, x1, x2)

inst_56240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000003fff; valaddr_reg:x3; val_offset:168720*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168720*0 + 3*176*FLEN/8, x4, x1, x2)

inst_56241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000007fff; valaddr_reg:x3; val_offset:168723*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168723*0 + 3*177*FLEN/8, x4, x1, x2)

inst_56242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000000ffff; valaddr_reg:x3; val_offset:168726*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168726*0 + 3*178*FLEN/8, x4, x1, x2)

inst_56243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000001ffff; valaddr_reg:x3; val_offset:168729*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168729*0 + 3*179*FLEN/8, x4, x1, x2)

inst_56244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000003ffff; valaddr_reg:x3; val_offset:168732*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168732*0 + 3*180*FLEN/8, x4, x1, x2)

inst_56245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000007ffff; valaddr_reg:x3; val_offset:168735*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168735*0 + 3*181*FLEN/8, x4, x1, x2)

inst_56246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000000fffff; valaddr_reg:x3; val_offset:168738*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168738*0 + 3*182*FLEN/8, x4, x1, x2)

inst_56247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000001fffff; valaddr_reg:x3; val_offset:168741*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168741*0 + 3*183*FLEN/8, x4, x1, x2)

inst_56248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000003fffff; valaddr_reg:x3; val_offset:168744*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168744*0 + 3*184*FLEN/8, x4, x1, x2)

inst_56249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000007fffff; valaddr_reg:x3; val_offset:168747*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168747*0 + 3*185*FLEN/8, x4, x1, x2)

inst_56250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000000ffffff; valaddr_reg:x3; val_offset:168750*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168750*0 + 3*186*FLEN/8, x4, x1, x2)

inst_56251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000001ffffff; valaddr_reg:x3; val_offset:168753*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168753*0 + 3*187*FLEN/8, x4, x1, x2)

inst_56252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000003ffffff; valaddr_reg:x3; val_offset:168756*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168756*0 + 3*188*FLEN/8, x4, x1, x2)

inst_56253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000007ffffff; valaddr_reg:x3; val_offset:168759*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168759*0 + 3*189*FLEN/8, x4, x1, x2)

inst_56254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000000fffffff; valaddr_reg:x3; val_offset:168762*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168762*0 + 3*190*FLEN/8, x4, x1, x2)

inst_56255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000001fffffff; valaddr_reg:x3; val_offset:168765*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168765*0 + 3*191*FLEN/8, x4, x1, x2)

inst_56256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000003fffffff; valaddr_reg:x3; val_offset:168768*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168768*0 + 3*192*FLEN/8, x4, x1, x2)

inst_56257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000007fffffff; valaddr_reg:x3; val_offset:168771*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168771*0 + 3*193*FLEN/8, x4, x1, x2)

inst_56258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00000ffffffff; valaddr_reg:x3; val_offset:168774*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168774*0 + 3*194*FLEN/8, x4, x1, x2)

inst_56259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00001ffffffff; valaddr_reg:x3; val_offset:168777*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168777*0 + 3*195*FLEN/8, x4, x1, x2)

inst_56260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00003ffffffff; valaddr_reg:x3; val_offset:168780*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168780*0 + 3*196*FLEN/8, x4, x1, x2)

inst_56261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00007ffffffff; valaddr_reg:x3; val_offset:168783*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168783*0 + 3*197*FLEN/8, x4, x1, x2)

inst_56262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0000fffffffff; valaddr_reg:x3; val_offset:168786*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168786*0 + 3*198*FLEN/8, x4, x1, x2)

inst_56263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0001fffffffff; valaddr_reg:x3; val_offset:168789*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168789*0 + 3*199*FLEN/8, x4, x1, x2)

inst_56264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0003fffffffff; valaddr_reg:x3; val_offset:168792*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168792*0 + 3*200*FLEN/8, x4, x1, x2)

inst_56265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0007fffffffff; valaddr_reg:x3; val_offset:168795*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168795*0 + 3*201*FLEN/8, x4, x1, x2)

inst_56266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc000ffffffffff; valaddr_reg:x3; val_offset:168798*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168798*0 + 3*202*FLEN/8, x4, x1, x2)

inst_56267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc001ffffffffff; valaddr_reg:x3; val_offset:168801*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168801*0 + 3*203*FLEN/8, x4, x1, x2)

inst_56268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc003ffffffffff; valaddr_reg:x3; val_offset:168804*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168804*0 + 3*204*FLEN/8, x4, x1, x2)

inst_56269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc007ffffffffff; valaddr_reg:x3; val_offset:168807*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168807*0 + 3*205*FLEN/8, x4, x1, x2)

inst_56270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc00fffffffffff; valaddr_reg:x3; val_offset:168810*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168810*0 + 3*206*FLEN/8, x4, x1, x2)

inst_56271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc01fffffffffff; valaddr_reg:x3; val_offset:168813*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168813*0 + 3*207*FLEN/8, x4, x1, x2)

inst_56272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc03fffffffffff; valaddr_reg:x3; val_offset:168816*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168816*0 + 3*208*FLEN/8, x4, x1, x2)

inst_56273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc07fffffffffff; valaddr_reg:x3; val_offset:168819*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168819*0 + 3*209*FLEN/8, x4, x1, x2)

inst_56274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc0ffffffffffff; valaddr_reg:x3; val_offset:168822*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168822*0 + 3*210*FLEN/8, x4, x1, x2)

inst_56275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc1ffffffffffff; valaddr_reg:x3; val_offset:168825*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168825*0 + 3*211*FLEN/8, x4, x1, x2)

inst_56276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc3ffffffffffff; valaddr_reg:x3; val_offset:168828*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168828*0 + 3*212*FLEN/8, x4, x1, x2)

inst_56277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc7ffffffffffff; valaddr_reg:x3; val_offset:168831*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168831*0 + 3*213*FLEN/8, x4, x1, x2)

inst_56278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cc8000000000000; valaddr_reg:x3; val_offset:168834*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168834*0 + 3*214*FLEN/8, x4, x1, x2)

inst_56279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccc000000000000; valaddr_reg:x3; val_offset:168837*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168837*0 + 3*215*FLEN/8, x4, x1, x2)

inst_56280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3cce000000000000; valaddr_reg:x3; val_offset:168840*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168840*0 + 3*216*FLEN/8, x4, x1, x2)

inst_56281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccf000000000000; valaddr_reg:x3; val_offset:168843*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168843*0 + 3*217*FLEN/8, x4, x1, x2)

inst_56282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccf800000000000; valaddr_reg:x3; val_offset:168846*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168846*0 + 3*218*FLEN/8, x4, x1, x2)

inst_56283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfc00000000000; valaddr_reg:x3; val_offset:168849*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168849*0 + 3*219*FLEN/8, x4, x1, x2)

inst_56284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfe00000000000; valaddr_reg:x3; val_offset:168852*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168852*0 + 3*220*FLEN/8, x4, x1, x2)

inst_56285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccff00000000000; valaddr_reg:x3; val_offset:168855*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168855*0 + 3*221*FLEN/8, x4, x1, x2)

inst_56286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccff80000000000; valaddr_reg:x3; val_offset:168858*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168858*0 + 3*222*FLEN/8, x4, x1, x2)

inst_56287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffc0000000000; valaddr_reg:x3; val_offset:168861*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168861*0 + 3*223*FLEN/8, x4, x1, x2)

inst_56288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffe0000000000; valaddr_reg:x3; val_offset:168864*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168864*0 + 3*224*FLEN/8, x4, x1, x2)

inst_56289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfff0000000000; valaddr_reg:x3; val_offset:168867*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168867*0 + 3*225*FLEN/8, x4, x1, x2)

inst_56290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfff8000000000; valaddr_reg:x3; val_offset:168870*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168870*0 + 3*226*FLEN/8, x4, x1, x2)

inst_56291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffc000000000; valaddr_reg:x3; val_offset:168873*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168873*0 + 3*227*FLEN/8, x4, x1, x2)

inst_56292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffe000000000; valaddr_reg:x3; val_offset:168876*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168876*0 + 3*228*FLEN/8, x4, x1, x2)

inst_56293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffff000000000; valaddr_reg:x3; val_offset:168879*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168879*0 + 3*229*FLEN/8, x4, x1, x2)

inst_56294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffff800000000; valaddr_reg:x3; val_offset:168882*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168882*0 + 3*230*FLEN/8, x4, x1, x2)

inst_56295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffc00000000; valaddr_reg:x3; val_offset:168885*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168885*0 + 3*231*FLEN/8, x4, x1, x2)

inst_56296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffe00000000; valaddr_reg:x3; val_offset:168888*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168888*0 + 3*232*FLEN/8, x4, x1, x2)

inst_56297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffff00000000; valaddr_reg:x3; val_offset:168891*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168891*0 + 3*233*FLEN/8, x4, x1, x2)

inst_56298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffff80000000; valaddr_reg:x3; val_offset:168894*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168894*0 + 3*234*FLEN/8, x4, x1, x2)

inst_56299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffc0000000; valaddr_reg:x3; val_offset:168897*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168897*0 + 3*235*FLEN/8, x4, x1, x2)

inst_56300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffe0000000; valaddr_reg:x3; val_offset:168900*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168900*0 + 3*236*FLEN/8, x4, x1, x2)

inst_56301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffff0000000; valaddr_reg:x3; val_offset:168903*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168903*0 + 3*237*FLEN/8, x4, x1, x2)

inst_56302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffff8000000; valaddr_reg:x3; val_offset:168906*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168906*0 + 3*238*FLEN/8, x4, x1, x2)

inst_56303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffc000000; valaddr_reg:x3; val_offset:168909*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168909*0 + 3*239*FLEN/8, x4, x1, x2)

inst_56304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffe000000; valaddr_reg:x3; val_offset:168912*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168912*0 + 3*240*FLEN/8, x4, x1, x2)

inst_56305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffff000000; valaddr_reg:x3; val_offset:168915*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168915*0 + 3*241*FLEN/8, x4, x1, x2)

inst_56306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffff800000; valaddr_reg:x3; val_offset:168918*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168918*0 + 3*242*FLEN/8, x4, x1, x2)

inst_56307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffc00000; valaddr_reg:x3; val_offset:168921*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168921*0 + 3*243*FLEN/8, x4, x1, x2)

inst_56308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffe00000; valaddr_reg:x3; val_offset:168924*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168924*0 + 3*244*FLEN/8, x4, x1, x2)

inst_56309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffff00000; valaddr_reg:x3; val_offset:168927*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168927*0 + 3*245*FLEN/8, x4, x1, x2)

inst_56310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffff80000; valaddr_reg:x3; val_offset:168930*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168930*0 + 3*246*FLEN/8, x4, x1, x2)

inst_56311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffc0000; valaddr_reg:x3; val_offset:168933*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168933*0 + 3*247*FLEN/8, x4, x1, x2)

inst_56312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffe0000; valaddr_reg:x3; val_offset:168936*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168936*0 + 3*248*FLEN/8, x4, x1, x2)

inst_56313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffff0000; valaddr_reg:x3; val_offset:168939*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168939*0 + 3*249*FLEN/8, x4, x1, x2)

inst_56314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffff8000; valaddr_reg:x3; val_offset:168942*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168942*0 + 3*250*FLEN/8, x4, x1, x2)

inst_56315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffc000; valaddr_reg:x3; val_offset:168945*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168945*0 + 3*251*FLEN/8, x4, x1, x2)

inst_56316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffe000; valaddr_reg:x3; val_offset:168948*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168948*0 + 3*252*FLEN/8, x4, x1, x2)

inst_56317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffff000; valaddr_reg:x3; val_offset:168951*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168951*0 + 3*253*FLEN/8, x4, x1, x2)

inst_56318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffff800; valaddr_reg:x3; val_offset:168954*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168954*0 + 3*254*FLEN/8, x4, x1, x2)

inst_56319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffc00; valaddr_reg:x3; val_offset:168957*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168957*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_56320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffe00; valaddr_reg:x3; val_offset:168960*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168960*0 + 3*256*FLEN/8, x4, x1, x2)

inst_56321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffff00; valaddr_reg:x3; val_offset:168963*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168963*0 + 3*257*FLEN/8, x4, x1, x2)

inst_56322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffff80; valaddr_reg:x3; val_offset:168966*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168966*0 + 3*258*FLEN/8, x4, x1, x2)

inst_56323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffffc0; valaddr_reg:x3; val_offset:168969*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168969*0 + 3*259*FLEN/8, x4, x1, x2)

inst_56324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffffe0; valaddr_reg:x3; val_offset:168972*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168972*0 + 3*260*FLEN/8, x4, x1, x2)

inst_56325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffff0; valaddr_reg:x3; val_offset:168975*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168975*0 + 3*261*FLEN/8, x4, x1, x2)

inst_56326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffff8; valaddr_reg:x3; val_offset:168978*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168978*0 + 3*262*FLEN/8, x4, x1, x2)

inst_56327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffffc; valaddr_reg:x3; val_offset:168981*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168981*0 + 3*263*FLEN/8, x4, x1, x2)

inst_56328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccffffffffffffe; valaddr_reg:x3; val_offset:168984*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168984*0 + 3*264*FLEN/8, x4, x1, x2)

inst_56329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3cc and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ccfffffffffffff; valaddr_reg:x3; val_offset:168987*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168987*0 + 3*265*FLEN/8, x4, x1, x2)

inst_56330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:168990*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168990*0 + 3*266*FLEN/8, x4, x1, x2)

inst_56331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:168993*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168993*0 + 3*267*FLEN/8, x4, x1, x2)

inst_56332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:168996*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168996*0 + 3*268*FLEN/8, x4, x1, x2)

inst_56333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:168999*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168999*0 + 3*269*FLEN/8, x4, x1, x2)

inst_56334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:169002*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169002*0 + 3*270*FLEN/8, x4, x1, x2)

inst_56335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:169005*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169005*0 + 3*271*FLEN/8, x4, x1, x2)

inst_56336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:169008*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169008*0 + 3*272*FLEN/8, x4, x1, x2)

inst_56337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:169011*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169011*0 + 3*273*FLEN/8, x4, x1, x2)

inst_56338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:169014*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169014*0 + 3*274*FLEN/8, x4, x1, x2)

inst_56339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:169017*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169017*0 + 3*275*FLEN/8, x4, x1, x2)

inst_56340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:169020*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169020*0 + 3*276*FLEN/8, x4, x1, x2)

inst_56341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:169023*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169023*0 + 3*277*FLEN/8, x4, x1, x2)

inst_56342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:169026*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169026*0 + 3*278*FLEN/8, x4, x1, x2)

inst_56343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:169029*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169029*0 + 3*279*FLEN/8, x4, x1, x2)

inst_56344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:169032*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169032*0 + 3*280*FLEN/8, x4, x1, x2)

inst_56345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:169035*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169035*0 + 3*281*FLEN/8, x4, x1, x2)

inst_56346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:169038*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169038*0 + 3*282*FLEN/8, x4, x1, x2)

inst_56347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:169041*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169041*0 + 3*283*FLEN/8, x4, x1, x2)

inst_56348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:169044*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169044*0 + 3*284*FLEN/8, x4, x1, x2)

inst_56349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:169047*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169047*0 + 3*285*FLEN/8, x4, x1, x2)

inst_56350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:169050*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169050*0 + 3*286*FLEN/8, x4, x1, x2)

inst_56351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x12f12f9a7ae31 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xdcb9cc176f0d1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa12f12f9a7ae31; op2val:0x203dcb9cc176f0d1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:169053*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169053*0 + 3*287*FLEN/8, x4, x1, x2)

inst_56352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:169056*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169056*0 + 3*288*FLEN/8, x4, x1, x2)

inst_56353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:169059*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169059*0 + 3*289*FLEN/8, x4, x1, x2)

inst_56354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:169062*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169062*0 + 3*290*FLEN/8, x4, x1, x2)

inst_56355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:169065*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169065*0 + 3*291*FLEN/8, x4, x1, x2)

inst_56356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:169068*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169068*0 + 3*292*FLEN/8, x4, x1, x2)

inst_56357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:169071*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169071*0 + 3*293*FLEN/8, x4, x1, x2)

inst_56358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:169074*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169074*0 + 3*294*FLEN/8, x4, x1, x2)

inst_56359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:169077*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169077*0 + 3*295*FLEN/8, x4, x1, x2)

inst_56360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:169080*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169080*0 + 3*296*FLEN/8, x4, x1, x2)

inst_56361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:169083*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169083*0 + 3*297*FLEN/8, x4, x1, x2)

inst_56362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:169086*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169086*0 + 3*298*FLEN/8, x4, x1, x2)

inst_56363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:169089*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169089*0 + 3*299*FLEN/8, x4, x1, x2)

inst_56364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:169092*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169092*0 + 3*300*FLEN/8, x4, x1, x2)

inst_56365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:169095*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169095*0 + 3*301*FLEN/8, x4, x1, x2)

inst_56366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:169098*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169098*0 + 3*302*FLEN/8, x4, x1, x2)

inst_56367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:169101*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169101*0 + 3*303*FLEN/8, x4, x1, x2)

inst_56368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:169104*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169104*0 + 3*304*FLEN/8, x4, x1, x2)

inst_56369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:169107*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169107*0 + 3*305*FLEN/8, x4, x1, x2)

inst_56370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:169110*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169110*0 + 3*306*FLEN/8, x4, x1, x2)

inst_56371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:169113*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169113*0 + 3*307*FLEN/8, x4, x1, x2)

inst_56372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:169116*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169116*0 + 3*308*FLEN/8, x4, x1, x2)

inst_56373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:169119*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169119*0 + 3*309*FLEN/8, x4, x1, x2)

inst_56374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000000000; valaddr_reg:x3; val_offset:169122*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169122*0 + 3*310*FLEN/8, x4, x1, x2)

inst_56375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000000001; valaddr_reg:x3; val_offset:169125*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169125*0 + 3*311*FLEN/8, x4, x1, x2)

inst_56376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000000003; valaddr_reg:x3; val_offset:169128*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169128*0 + 3*312*FLEN/8, x4, x1, x2)

inst_56377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000000007; valaddr_reg:x3; val_offset:169131*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169131*0 + 3*313*FLEN/8, x4, x1, x2)

inst_56378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000000000f; valaddr_reg:x3; val_offset:169134*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169134*0 + 3*314*FLEN/8, x4, x1, x2)

inst_56379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000000001f; valaddr_reg:x3; val_offset:169137*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169137*0 + 3*315*FLEN/8, x4, x1, x2)

inst_56380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000000003f; valaddr_reg:x3; val_offset:169140*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169140*0 + 3*316*FLEN/8, x4, x1, x2)

inst_56381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000000007f; valaddr_reg:x3; val_offset:169143*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169143*0 + 3*317*FLEN/8, x4, x1, x2)

inst_56382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000000000ff; valaddr_reg:x3; val_offset:169146*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169146*0 + 3*318*FLEN/8, x4, x1, x2)

inst_56383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000000001ff; valaddr_reg:x3; val_offset:169149*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169149*0 + 3*319*FLEN/8, x4, x1, x2)

inst_56384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000000003ff; valaddr_reg:x3; val_offset:169152*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169152*0 + 3*320*FLEN/8, x4, x1, x2)

inst_56385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000000007ff; valaddr_reg:x3; val_offset:169155*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169155*0 + 3*321*FLEN/8, x4, x1, x2)

inst_56386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000000fff; valaddr_reg:x3; val_offset:169158*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169158*0 + 3*322*FLEN/8, x4, x1, x2)

inst_56387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000001fff; valaddr_reg:x3; val_offset:169161*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169161*0 + 3*323*FLEN/8, x4, x1, x2)

inst_56388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000003fff; valaddr_reg:x3; val_offset:169164*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169164*0 + 3*324*FLEN/8, x4, x1, x2)

inst_56389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000007fff; valaddr_reg:x3; val_offset:169167*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169167*0 + 3*325*FLEN/8, x4, x1, x2)

inst_56390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000000ffff; valaddr_reg:x3; val_offset:169170*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169170*0 + 3*326*FLEN/8, x4, x1, x2)

inst_56391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000001ffff; valaddr_reg:x3; val_offset:169173*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169173*0 + 3*327*FLEN/8, x4, x1, x2)

inst_56392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000003ffff; valaddr_reg:x3; val_offset:169176*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169176*0 + 3*328*FLEN/8, x4, x1, x2)

inst_56393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000007ffff; valaddr_reg:x3; val_offset:169179*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169179*0 + 3*329*FLEN/8, x4, x1, x2)

inst_56394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000000fffff; valaddr_reg:x3; val_offset:169182*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169182*0 + 3*330*FLEN/8, x4, x1, x2)

inst_56395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000001fffff; valaddr_reg:x3; val_offset:169185*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169185*0 + 3*331*FLEN/8, x4, x1, x2)

inst_56396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000003fffff; valaddr_reg:x3; val_offset:169188*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169188*0 + 3*332*FLEN/8, x4, x1, x2)

inst_56397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000007fffff; valaddr_reg:x3; val_offset:169191*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169191*0 + 3*333*FLEN/8, x4, x1, x2)

inst_56398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000000ffffff; valaddr_reg:x3; val_offset:169194*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169194*0 + 3*334*FLEN/8, x4, x1, x2)

inst_56399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000001ffffff; valaddr_reg:x3; val_offset:169197*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169197*0 + 3*335*FLEN/8, x4, x1, x2)

inst_56400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000003ffffff; valaddr_reg:x3; val_offset:169200*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169200*0 + 3*336*FLEN/8, x4, x1, x2)

inst_56401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000007ffffff; valaddr_reg:x3; val_offset:169203*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169203*0 + 3*337*FLEN/8, x4, x1, x2)

inst_56402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000000fffffff; valaddr_reg:x3; val_offset:169206*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169206*0 + 3*338*FLEN/8, x4, x1, x2)

inst_56403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000001fffffff; valaddr_reg:x3; val_offset:169209*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169209*0 + 3*339*FLEN/8, x4, x1, x2)

inst_56404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000003fffffff; valaddr_reg:x3; val_offset:169212*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169212*0 + 3*340*FLEN/8, x4, x1, x2)

inst_56405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000007fffffff; valaddr_reg:x3; val_offset:169215*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169215*0 + 3*341*FLEN/8, x4, x1, x2)

inst_56406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900000ffffffff; valaddr_reg:x3; val_offset:169218*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169218*0 + 3*342*FLEN/8, x4, x1, x2)

inst_56407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900001ffffffff; valaddr_reg:x3; val_offset:169221*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169221*0 + 3*343*FLEN/8, x4, x1, x2)

inst_56408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900003ffffffff; valaddr_reg:x3; val_offset:169224*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169224*0 + 3*344*FLEN/8, x4, x1, x2)

inst_56409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900007ffffffff; valaddr_reg:x3; val_offset:169227*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169227*0 + 3*345*FLEN/8, x4, x1, x2)

inst_56410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90000fffffffff; valaddr_reg:x3; val_offset:169230*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169230*0 + 3*346*FLEN/8, x4, x1, x2)

inst_56411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90001fffffffff; valaddr_reg:x3; val_offset:169233*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169233*0 + 3*347*FLEN/8, x4, x1, x2)

inst_56412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90003fffffffff; valaddr_reg:x3; val_offset:169236*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169236*0 + 3*348*FLEN/8, x4, x1, x2)

inst_56413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90007fffffffff; valaddr_reg:x3; val_offset:169239*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169239*0 + 3*349*FLEN/8, x4, x1, x2)

inst_56414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9000ffffffffff; valaddr_reg:x3; val_offset:169242*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169242*0 + 3*350*FLEN/8, x4, x1, x2)

inst_56415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9001ffffffffff; valaddr_reg:x3; val_offset:169245*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169245*0 + 3*351*FLEN/8, x4, x1, x2)

inst_56416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9003ffffffffff; valaddr_reg:x3; val_offset:169248*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169248*0 + 3*352*FLEN/8, x4, x1, x2)

inst_56417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9007ffffffffff; valaddr_reg:x3; val_offset:169251*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169251*0 + 3*353*FLEN/8, x4, x1, x2)

inst_56418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x900fffffffffff; valaddr_reg:x3; val_offset:169254*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169254*0 + 3*354*FLEN/8, x4, x1, x2)

inst_56419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x901fffffffffff; valaddr_reg:x3; val_offset:169257*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169257*0 + 3*355*FLEN/8, x4, x1, x2)

inst_56420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x903fffffffffff; valaddr_reg:x3; val_offset:169260*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169260*0 + 3*356*FLEN/8, x4, x1, x2)

inst_56421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x907fffffffffff; valaddr_reg:x3; val_offset:169263*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169263*0 + 3*357*FLEN/8, x4, x1, x2)

inst_56422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x90ffffffffffff; valaddr_reg:x3; val_offset:169266*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169266*0 + 3*358*FLEN/8, x4, x1, x2)

inst_56423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x91ffffffffffff; valaddr_reg:x3; val_offset:169269*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169269*0 + 3*359*FLEN/8, x4, x1, x2)

inst_56424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x93ffffffffffff; valaddr_reg:x3; val_offset:169272*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169272*0 + 3*360*FLEN/8, x4, x1, x2)

inst_56425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x97ffffffffffff; valaddr_reg:x3; val_offset:169275*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169275*0 + 3*361*FLEN/8, x4, x1, x2)

inst_56426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x98000000000000; valaddr_reg:x3; val_offset:169278*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169278*0 + 3*362*FLEN/8, x4, x1, x2)

inst_56427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9c000000000000; valaddr_reg:x3; val_offset:169281*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169281*0 + 3*363*FLEN/8, x4, x1, x2)

inst_56428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9e000000000000; valaddr_reg:x3; val_offset:169284*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169284*0 + 3*364*FLEN/8, x4, x1, x2)

inst_56429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9f000000000000; valaddr_reg:x3; val_offset:169287*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169287*0 + 3*365*FLEN/8, x4, x1, x2)

inst_56430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9f800000000000; valaddr_reg:x3; val_offset:169290*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169290*0 + 3*366*FLEN/8, x4, x1, x2)

inst_56431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fc00000000000; valaddr_reg:x3; val_offset:169293*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169293*0 + 3*367*FLEN/8, x4, x1, x2)

inst_56432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fe00000000000; valaddr_reg:x3; val_offset:169296*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169296*0 + 3*368*FLEN/8, x4, x1, x2)

inst_56433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ff00000000000; valaddr_reg:x3; val_offset:169299*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169299*0 + 3*369*FLEN/8, x4, x1, x2)

inst_56434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ff80000000000; valaddr_reg:x3; val_offset:169302*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169302*0 + 3*370*FLEN/8, x4, x1, x2)

inst_56435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffc0000000000; valaddr_reg:x3; val_offset:169305*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169305*0 + 3*371*FLEN/8, x4, x1, x2)

inst_56436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffe0000000000; valaddr_reg:x3; val_offset:169308*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169308*0 + 3*372*FLEN/8, x4, x1, x2)

inst_56437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fff0000000000; valaddr_reg:x3; val_offset:169311*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169311*0 + 3*373*FLEN/8, x4, x1, x2)

inst_56438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fff8000000000; valaddr_reg:x3; val_offset:169314*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169314*0 + 3*374*FLEN/8, x4, x1, x2)

inst_56439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffc000000000; valaddr_reg:x3; val_offset:169317*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169317*0 + 3*375*FLEN/8, x4, x1, x2)

inst_56440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffe000000000; valaddr_reg:x3; val_offset:169320*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169320*0 + 3*376*FLEN/8, x4, x1, x2)

inst_56441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffff000000000; valaddr_reg:x3; val_offset:169323*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169323*0 + 3*377*FLEN/8, x4, x1, x2)

inst_56442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffff800000000; valaddr_reg:x3; val_offset:169326*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169326*0 + 3*378*FLEN/8, x4, x1, x2)

inst_56443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffc00000000; valaddr_reg:x3; val_offset:169329*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169329*0 + 3*379*FLEN/8, x4, x1, x2)

inst_56444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffe00000000; valaddr_reg:x3; val_offset:169332*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169332*0 + 3*380*FLEN/8, x4, x1, x2)

inst_56445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffff00000000; valaddr_reg:x3; val_offset:169335*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169335*0 + 3*381*FLEN/8, x4, x1, x2)

inst_56446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffff80000000; valaddr_reg:x3; val_offset:169338*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169338*0 + 3*382*FLEN/8, x4, x1, x2)

inst_56447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffc0000000; valaddr_reg:x3; val_offset:169341*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169341*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_56448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffe0000000; valaddr_reg:x3; val_offset:169344*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169344*0 + 3*384*FLEN/8, x4, x1, x2)

inst_56449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffff0000000; valaddr_reg:x3; val_offset:169347*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169347*0 + 3*385*FLEN/8, x4, x1, x2)

inst_56450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffff8000000; valaddr_reg:x3; val_offset:169350*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169350*0 + 3*386*FLEN/8, x4, x1, x2)

inst_56451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffc000000; valaddr_reg:x3; val_offset:169353*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169353*0 + 3*387*FLEN/8, x4, x1, x2)

inst_56452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffe000000; valaddr_reg:x3; val_offset:169356*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169356*0 + 3*388*FLEN/8, x4, x1, x2)

inst_56453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffff000000; valaddr_reg:x3; val_offset:169359*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169359*0 + 3*389*FLEN/8, x4, x1, x2)

inst_56454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffff800000; valaddr_reg:x3; val_offset:169362*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169362*0 + 3*390*FLEN/8, x4, x1, x2)

inst_56455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffc00000; valaddr_reg:x3; val_offset:169365*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169365*0 + 3*391*FLEN/8, x4, x1, x2)

inst_56456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffe00000; valaddr_reg:x3; val_offset:169368*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169368*0 + 3*392*FLEN/8, x4, x1, x2)

inst_56457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffff00000; valaddr_reg:x3; val_offset:169371*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169371*0 + 3*393*FLEN/8, x4, x1, x2)

inst_56458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffff80000; valaddr_reg:x3; val_offset:169374*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169374*0 + 3*394*FLEN/8, x4, x1, x2)

inst_56459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffc0000; valaddr_reg:x3; val_offset:169377*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169377*0 + 3*395*FLEN/8, x4, x1, x2)

inst_56460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffe0000; valaddr_reg:x3; val_offset:169380*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169380*0 + 3*396*FLEN/8, x4, x1, x2)

inst_56461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffff0000; valaddr_reg:x3; val_offset:169383*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169383*0 + 3*397*FLEN/8, x4, x1, x2)

inst_56462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffff8000; valaddr_reg:x3; val_offset:169386*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169386*0 + 3*398*FLEN/8, x4, x1, x2)

inst_56463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffc000; valaddr_reg:x3; val_offset:169389*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169389*0 + 3*399*FLEN/8, x4, x1, x2)

inst_56464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffe000; valaddr_reg:x3; val_offset:169392*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169392*0 + 3*400*FLEN/8, x4, x1, x2)

inst_56465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffff000; valaddr_reg:x3; val_offset:169395*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169395*0 + 3*401*FLEN/8, x4, x1, x2)

inst_56466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffff800; valaddr_reg:x3; val_offset:169398*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169398*0 + 3*402*FLEN/8, x4, x1, x2)

inst_56467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffc00; valaddr_reg:x3; val_offset:169401*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169401*0 + 3*403*FLEN/8, x4, x1, x2)

inst_56468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffe00; valaddr_reg:x3; val_offset:169404*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169404*0 + 3*404*FLEN/8, x4, x1, x2)

inst_56469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffff00; valaddr_reg:x3; val_offset:169407*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169407*0 + 3*405*FLEN/8, x4, x1, x2)

inst_56470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffff80; valaddr_reg:x3; val_offset:169410*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169410*0 + 3*406*FLEN/8, x4, x1, x2)

inst_56471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffffc0; valaddr_reg:x3; val_offset:169413*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169413*0 + 3*407*FLEN/8, x4, x1, x2)

inst_56472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffffe0; valaddr_reg:x3; val_offset:169416*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169416*0 + 3*408*FLEN/8, x4, x1, x2)

inst_56473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffff0; valaddr_reg:x3; val_offset:169419*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169419*0 + 3*409*FLEN/8, x4, x1, x2)

inst_56474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffff8; valaddr_reg:x3; val_offset:169422*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169422*0 + 3*410*FLEN/8, x4, x1, x2)

inst_56475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffffc; valaddr_reg:x3; val_offset:169425*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169425*0 + 3*411*FLEN/8, x4, x1, x2)

inst_56476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9ffffffffffffe; valaddr_reg:x3; val_offset:169428*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169428*0 + 3*412*FLEN/8, x4, x1, x2)

inst_56477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fa877588958 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x009 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fa877588958; op2val:0x0;
op3val:0x9fffffffffffff; valaddr_reg:x3; val_offset:169431*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169431*0 + 3*413*FLEN/8, x4, x1, x2)

inst_56478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000000000; valaddr_reg:x3; val_offset:169434*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169434*0 + 3*414*FLEN/8, x4, x1, x2)

inst_56479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000000001; valaddr_reg:x3; val_offset:169437*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169437*0 + 3*415*FLEN/8, x4, x1, x2)

inst_56480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000000003; valaddr_reg:x3; val_offset:169440*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169440*0 + 3*416*FLEN/8, x4, x1, x2)

inst_56481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000000007; valaddr_reg:x3; val_offset:169443*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169443*0 + 3*417*FLEN/8, x4, x1, x2)

inst_56482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000000000f; valaddr_reg:x3; val_offset:169446*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169446*0 + 3*418*FLEN/8, x4, x1, x2)

inst_56483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000000001f; valaddr_reg:x3; val_offset:169449*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169449*0 + 3*419*FLEN/8, x4, x1, x2)

inst_56484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000000003f; valaddr_reg:x3; val_offset:169452*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169452*0 + 3*420*FLEN/8, x4, x1, x2)

inst_56485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000000007f; valaddr_reg:x3; val_offset:169455*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169455*0 + 3*421*FLEN/8, x4, x1, x2)

inst_56486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000000000ff; valaddr_reg:x3; val_offset:169458*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169458*0 + 3*422*FLEN/8, x4, x1, x2)

inst_56487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000000001ff; valaddr_reg:x3; val_offset:169461*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169461*0 + 3*423*FLEN/8, x4, x1, x2)

inst_56488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000000003ff; valaddr_reg:x3; val_offset:169464*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169464*0 + 3*424*FLEN/8, x4, x1, x2)

inst_56489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000000007ff; valaddr_reg:x3; val_offset:169467*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169467*0 + 3*425*FLEN/8, x4, x1, x2)

inst_56490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000000fff; valaddr_reg:x3; val_offset:169470*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169470*0 + 3*426*FLEN/8, x4, x1, x2)

inst_56491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000001fff; valaddr_reg:x3; val_offset:169473*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169473*0 + 3*427*FLEN/8, x4, x1, x2)

inst_56492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000003fff; valaddr_reg:x3; val_offset:169476*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169476*0 + 3*428*FLEN/8, x4, x1, x2)

inst_56493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000007fff; valaddr_reg:x3; val_offset:169479*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169479*0 + 3*429*FLEN/8, x4, x1, x2)

inst_56494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000000ffff; valaddr_reg:x3; val_offset:169482*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169482*0 + 3*430*FLEN/8, x4, x1, x2)

inst_56495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000001ffff; valaddr_reg:x3; val_offset:169485*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169485*0 + 3*431*FLEN/8, x4, x1, x2)

inst_56496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000003ffff; valaddr_reg:x3; val_offset:169488*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169488*0 + 3*432*FLEN/8, x4, x1, x2)

inst_56497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000007ffff; valaddr_reg:x3; val_offset:169491*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169491*0 + 3*433*FLEN/8, x4, x1, x2)

inst_56498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000000fffff; valaddr_reg:x3; val_offset:169494*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169494*0 + 3*434*FLEN/8, x4, x1, x2)

inst_56499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000001fffff; valaddr_reg:x3; val_offset:169497*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169497*0 + 3*435*FLEN/8, x4, x1, x2)

inst_56500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000003fffff; valaddr_reg:x3; val_offset:169500*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169500*0 + 3*436*FLEN/8, x4, x1, x2)

inst_56501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000007fffff; valaddr_reg:x3; val_offset:169503*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169503*0 + 3*437*FLEN/8, x4, x1, x2)

inst_56502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000000ffffff; valaddr_reg:x3; val_offset:169506*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169506*0 + 3*438*FLEN/8, x4, x1, x2)

inst_56503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000001ffffff; valaddr_reg:x3; val_offset:169509*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169509*0 + 3*439*FLEN/8, x4, x1, x2)

inst_56504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000003ffffff; valaddr_reg:x3; val_offset:169512*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169512*0 + 3*440*FLEN/8, x4, x1, x2)

inst_56505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000007ffffff; valaddr_reg:x3; val_offset:169515*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169515*0 + 3*441*FLEN/8, x4, x1, x2)

inst_56506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000000fffffff; valaddr_reg:x3; val_offset:169518*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169518*0 + 3*442*FLEN/8, x4, x1, x2)

inst_56507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000001fffffff; valaddr_reg:x3; val_offset:169521*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169521*0 + 3*443*FLEN/8, x4, x1, x2)

inst_56508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000003fffffff; valaddr_reg:x3; val_offset:169524*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169524*0 + 3*444*FLEN/8, x4, x1, x2)

inst_56509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000007fffffff; valaddr_reg:x3; val_offset:169527*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169527*0 + 3*445*FLEN/8, x4, x1, x2)

inst_56510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200000ffffffff; valaddr_reg:x3; val_offset:169530*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169530*0 + 3*446*FLEN/8, x4, x1, x2)

inst_56511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200001ffffffff; valaddr_reg:x3; val_offset:169533*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169533*0 + 3*447*FLEN/8, x4, x1, x2)

inst_56512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200003ffffffff; valaddr_reg:x3; val_offset:169536*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169536*0 + 3*448*FLEN/8, x4, x1, x2)

inst_56513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200007ffffffff; valaddr_reg:x3; val_offset:169539*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169539*0 + 3*449*FLEN/8, x4, x1, x2)

inst_56514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20000fffffffff; valaddr_reg:x3; val_offset:169542*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169542*0 + 3*450*FLEN/8, x4, x1, x2)

inst_56515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20001fffffffff; valaddr_reg:x3; val_offset:169545*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169545*0 + 3*451*FLEN/8, x4, x1, x2)

inst_56516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20003fffffffff; valaddr_reg:x3; val_offset:169548*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169548*0 + 3*452*FLEN/8, x4, x1, x2)

inst_56517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20007fffffffff; valaddr_reg:x3; val_offset:169551*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169551*0 + 3*453*FLEN/8, x4, x1, x2)

inst_56518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2000ffffffffff; valaddr_reg:x3; val_offset:169554*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169554*0 + 3*454*FLEN/8, x4, x1, x2)

inst_56519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2001ffffffffff; valaddr_reg:x3; val_offset:169557*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169557*0 + 3*455*FLEN/8, x4, x1, x2)

inst_56520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2003ffffffffff; valaddr_reg:x3; val_offset:169560*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169560*0 + 3*456*FLEN/8, x4, x1, x2)

inst_56521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2007ffffffffff; valaddr_reg:x3; val_offset:169563*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169563*0 + 3*457*FLEN/8, x4, x1, x2)

inst_56522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d200fffffffffff; valaddr_reg:x3; val_offset:169566*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169566*0 + 3*458*FLEN/8, x4, x1, x2)

inst_56523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d201fffffffffff; valaddr_reg:x3; val_offset:169569*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169569*0 + 3*459*FLEN/8, x4, x1, x2)

inst_56524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d203fffffffffff; valaddr_reg:x3; val_offset:169572*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169572*0 + 3*460*FLEN/8, x4, x1, x2)

inst_56525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d207fffffffffff; valaddr_reg:x3; val_offset:169575*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169575*0 + 3*461*FLEN/8, x4, x1, x2)

inst_56526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d20ffffffffffff; valaddr_reg:x3; val_offset:169578*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169578*0 + 3*462*FLEN/8, x4, x1, x2)

inst_56527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d21ffffffffffff; valaddr_reg:x3; val_offset:169581*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169581*0 + 3*463*FLEN/8, x4, x1, x2)

inst_56528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d23ffffffffffff; valaddr_reg:x3; val_offset:169584*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169584*0 + 3*464*FLEN/8, x4, x1, x2)

inst_56529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d27ffffffffffff; valaddr_reg:x3; val_offset:169587*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169587*0 + 3*465*FLEN/8, x4, x1, x2)

inst_56530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d28000000000000; valaddr_reg:x3; val_offset:169590*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169590*0 + 3*466*FLEN/8, x4, x1, x2)

inst_56531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2c000000000000; valaddr_reg:x3; val_offset:169593*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169593*0 + 3*467*FLEN/8, x4, x1, x2)

inst_56532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2e000000000000; valaddr_reg:x3; val_offset:169596*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169596*0 + 3*468*FLEN/8, x4, x1, x2)

inst_56533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2f000000000000; valaddr_reg:x3; val_offset:169599*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169599*0 + 3*469*FLEN/8, x4, x1, x2)

inst_56534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2f800000000000; valaddr_reg:x3; val_offset:169602*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169602*0 + 3*470*FLEN/8, x4, x1, x2)

inst_56535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fc00000000000; valaddr_reg:x3; val_offset:169605*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169605*0 + 3*471*FLEN/8, x4, x1, x2)

inst_56536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fe00000000000; valaddr_reg:x3; val_offset:169608*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169608*0 + 3*472*FLEN/8, x4, x1, x2)

inst_56537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ff00000000000; valaddr_reg:x3; val_offset:169611*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169611*0 + 3*473*FLEN/8, x4, x1, x2)

inst_56538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ff80000000000; valaddr_reg:x3; val_offset:169614*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169614*0 + 3*474*FLEN/8, x4, x1, x2)

inst_56539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffc0000000000; valaddr_reg:x3; val_offset:169617*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169617*0 + 3*475*FLEN/8, x4, x1, x2)

inst_56540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffe0000000000; valaddr_reg:x3; val_offset:169620*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169620*0 + 3*476*FLEN/8, x4, x1, x2)

inst_56541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fff0000000000; valaddr_reg:x3; val_offset:169623*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169623*0 + 3*477*FLEN/8, x4, x1, x2)

inst_56542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fff8000000000; valaddr_reg:x3; val_offset:169626*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169626*0 + 3*478*FLEN/8, x4, x1, x2)

inst_56543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffc000000000; valaddr_reg:x3; val_offset:169629*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169629*0 + 3*479*FLEN/8, x4, x1, x2)

inst_56544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffe000000000; valaddr_reg:x3; val_offset:169632*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169632*0 + 3*480*FLEN/8, x4, x1, x2)

inst_56545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffff000000000; valaddr_reg:x3; val_offset:169635*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169635*0 + 3*481*FLEN/8, x4, x1, x2)

inst_56546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffff800000000; valaddr_reg:x3; val_offset:169638*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169638*0 + 3*482*FLEN/8, x4, x1, x2)

inst_56547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffc00000000; valaddr_reg:x3; val_offset:169641*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169641*0 + 3*483*FLEN/8, x4, x1, x2)

inst_56548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffe00000000; valaddr_reg:x3; val_offset:169644*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169644*0 + 3*484*FLEN/8, x4, x1, x2)

inst_56549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffff00000000; valaddr_reg:x3; val_offset:169647*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169647*0 + 3*485*FLEN/8, x4, x1, x2)

inst_56550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffff80000000; valaddr_reg:x3; val_offset:169650*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169650*0 + 3*486*FLEN/8, x4, x1, x2)

inst_56551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffc0000000; valaddr_reg:x3; val_offset:169653*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169653*0 + 3*487*FLEN/8, x4, x1, x2)

inst_56552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffe0000000; valaddr_reg:x3; val_offset:169656*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169656*0 + 3*488*FLEN/8, x4, x1, x2)

inst_56553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffff0000000; valaddr_reg:x3; val_offset:169659*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169659*0 + 3*489*FLEN/8, x4, x1, x2)

inst_56554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffff8000000; valaddr_reg:x3; val_offset:169662*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169662*0 + 3*490*FLEN/8, x4, x1, x2)

inst_56555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffc000000; valaddr_reg:x3; val_offset:169665*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169665*0 + 3*491*FLEN/8, x4, x1, x2)

inst_56556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffe000000; valaddr_reg:x3; val_offset:169668*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169668*0 + 3*492*FLEN/8, x4, x1, x2)

inst_56557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffff000000; valaddr_reg:x3; val_offset:169671*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169671*0 + 3*493*FLEN/8, x4, x1, x2)

inst_56558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffff800000; valaddr_reg:x3; val_offset:169674*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169674*0 + 3*494*FLEN/8, x4, x1, x2)

inst_56559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffc00000; valaddr_reg:x3; val_offset:169677*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169677*0 + 3*495*FLEN/8, x4, x1, x2)

inst_56560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffe00000; valaddr_reg:x3; val_offset:169680*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169680*0 + 3*496*FLEN/8, x4, x1, x2)

inst_56561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffff00000; valaddr_reg:x3; val_offset:169683*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169683*0 + 3*497*FLEN/8, x4, x1, x2)

inst_56562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffff80000; valaddr_reg:x3; val_offset:169686*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169686*0 + 3*498*FLEN/8, x4, x1, x2)

inst_56563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffc0000; valaddr_reg:x3; val_offset:169689*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169689*0 + 3*499*FLEN/8, x4, x1, x2)

inst_56564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffe0000; valaddr_reg:x3; val_offset:169692*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169692*0 + 3*500*FLEN/8, x4, x1, x2)

inst_56565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffff0000; valaddr_reg:x3; val_offset:169695*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169695*0 + 3*501*FLEN/8, x4, x1, x2)

inst_56566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffff8000; valaddr_reg:x3; val_offset:169698*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169698*0 + 3*502*FLEN/8, x4, x1, x2)

inst_56567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffc000; valaddr_reg:x3; val_offset:169701*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169701*0 + 3*503*FLEN/8, x4, x1, x2)

inst_56568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffe000; valaddr_reg:x3; val_offset:169704*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169704*0 + 3*504*FLEN/8, x4, x1, x2)

inst_56569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffff000; valaddr_reg:x3; val_offset:169707*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169707*0 + 3*505*FLEN/8, x4, x1, x2)

inst_56570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffff800; valaddr_reg:x3; val_offset:169710*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169710*0 + 3*506*FLEN/8, x4, x1, x2)

inst_56571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffc00; valaddr_reg:x3; val_offset:169713*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169713*0 + 3*507*FLEN/8, x4, x1, x2)

inst_56572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffe00; valaddr_reg:x3; val_offset:169716*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169716*0 + 3*508*FLEN/8, x4, x1, x2)

inst_56573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffff00; valaddr_reg:x3; val_offset:169719*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169719*0 + 3*509*FLEN/8, x4, x1, x2)

inst_56574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffff80; valaddr_reg:x3; val_offset:169722*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169722*0 + 3*510*FLEN/8, x4, x1, x2)

inst_56575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffffc0; valaddr_reg:x3; val_offset:169725*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169725*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_56576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffffe0; valaddr_reg:x3; val_offset:169728*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169728*0 + 3*512*FLEN/8, x4, x1, x2)

inst_56577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffff0; valaddr_reg:x3; val_offset:169731*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169731*0 + 3*513*FLEN/8, x4, x1, x2)

inst_56578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffff8; valaddr_reg:x3; val_offset:169734*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169734*0 + 3*514*FLEN/8, x4, x1, x2)

inst_56579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffffc; valaddr_reg:x3; val_offset:169737*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169737*0 + 3*515*FLEN/8, x4, x1, x2)

inst_56580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2ffffffffffffe; valaddr_reg:x3; val_offset:169740*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169740*0 + 3*516*FLEN/8, x4, x1, x2)

inst_56581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3d2 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3d2fffffffffffff; valaddr_reg:x3; val_offset:169743*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169743*0 + 3*517*FLEN/8, x4, x1, x2)

inst_56582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:169746*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169746*0 + 3*518*FLEN/8, x4, x1, x2)

inst_56583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:169749*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169749*0 + 3*519*FLEN/8, x4, x1, x2)

inst_56584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:169752*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169752*0 + 3*520*FLEN/8, x4, x1, x2)

inst_56585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:169755*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169755*0 + 3*521*FLEN/8, x4, x1, x2)

inst_56586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:169758*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169758*0 + 3*522*FLEN/8, x4, x1, x2)

inst_56587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:169761*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169761*0 + 3*523*FLEN/8, x4, x1, x2)

inst_56588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:169764*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169764*0 + 3*524*FLEN/8, x4, x1, x2)

inst_56589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:169767*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169767*0 + 3*525*FLEN/8, x4, x1, x2)

inst_56590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:169770*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169770*0 + 3*526*FLEN/8, x4, x1, x2)

inst_56591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:169773*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169773*0 + 3*527*FLEN/8, x4, x1, x2)

inst_56592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:169776*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169776*0 + 3*528*FLEN/8, x4, x1, x2)

inst_56593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:169779*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169779*0 + 3*529*FLEN/8, x4, x1, x2)

inst_56594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:169782*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169782*0 + 3*530*FLEN/8, x4, x1, x2)

inst_56595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:169785*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169785*0 + 3*531*FLEN/8, x4, x1, x2)

inst_56596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:169788*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169788*0 + 3*532*FLEN/8, x4, x1, x2)

inst_56597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:169791*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169791*0 + 3*533*FLEN/8, x4, x1, x2)

inst_56598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:169794*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169794*0 + 3*534*FLEN/8, x4, x1, x2)

inst_56599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:169797*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169797*0 + 3*535*FLEN/8, x4, x1, x2)

inst_56600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:169800*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169800*0 + 3*536*FLEN/8, x4, x1, x2)

inst_56601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:169803*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169803*0 + 3*537*FLEN/8, x4, x1, x2)

inst_56602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:169806*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169806*0 + 3*538*FLEN/8, x4, x1, x2)

inst_56603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x14fb6cde8a674 and fs2 == 0 and fe2 == 0x203 and fm2 == 0xd936f2e73abc1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa14fb6cde8a674; op2val:0x203d936f2e73abc1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:169809*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169809*0 + 3*539*FLEN/8, x4, x1, x2)

inst_56604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:169812*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169812*0 + 3*540*FLEN/8, x4, x1, x2)

inst_56605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:169815*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169815*0 + 3*541*FLEN/8, x4, x1, x2)

inst_56606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:169818*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169818*0 + 3*542*FLEN/8, x4, x1, x2)

inst_56607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:169821*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169821*0 + 3*543*FLEN/8, x4, x1, x2)

inst_56608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:169824*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169824*0 + 3*544*FLEN/8, x4, x1, x2)

inst_56609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:169827*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169827*0 + 3*545*FLEN/8, x4, x1, x2)

inst_56610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:169830*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169830*0 + 3*546*FLEN/8, x4, x1, x2)

inst_56611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:169833*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169833*0 + 3*547*FLEN/8, x4, x1, x2)

inst_56612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:169836*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169836*0 + 3*548*FLEN/8, x4, x1, x2)

inst_56613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:169839*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169839*0 + 3*549*FLEN/8, x4, x1, x2)

inst_56614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:169842*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169842*0 + 3*550*FLEN/8, x4, x1, x2)

inst_56615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:169845*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169845*0 + 3*551*FLEN/8, x4, x1, x2)

inst_56616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:169848*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169848*0 + 3*552*FLEN/8, x4, x1, x2)

inst_56617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:169851*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169851*0 + 3*553*FLEN/8, x4, x1, x2)

inst_56618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:169854*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169854*0 + 3*554*FLEN/8, x4, x1, x2)

inst_56619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:169857*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169857*0 + 3*555*FLEN/8, x4, x1, x2)

inst_56620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:169860*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169860*0 + 3*556*FLEN/8, x4, x1, x2)

inst_56621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:169863*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169863*0 + 3*557*FLEN/8, x4, x1, x2)

inst_56622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:169866*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169866*0 + 3*558*FLEN/8, x4, x1, x2)

inst_56623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:169869*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169869*0 + 3*559*FLEN/8, x4, x1, x2)

inst_56624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:169872*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169872*0 + 3*560*FLEN/8, x4, x1, x2)

inst_56625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:169875*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169875*0 + 3*561*FLEN/8, x4, x1, x2)

inst_56626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000000000; valaddr_reg:x3; val_offset:169878*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169878*0 + 3*562*FLEN/8, x4, x1, x2)

inst_56627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000000001; valaddr_reg:x3; val_offset:169881*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169881*0 + 3*563*FLEN/8, x4, x1, x2)

inst_56628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000000003; valaddr_reg:x3; val_offset:169884*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169884*0 + 3*564*FLEN/8, x4, x1, x2)

inst_56629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000000007; valaddr_reg:x3; val_offset:169887*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169887*0 + 3*565*FLEN/8, x4, x1, x2)

inst_56630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000000000f; valaddr_reg:x3; val_offset:169890*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169890*0 + 3*566*FLEN/8, x4, x1, x2)

inst_56631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000000001f; valaddr_reg:x3; val_offset:169893*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169893*0 + 3*567*FLEN/8, x4, x1, x2)

inst_56632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000000003f; valaddr_reg:x3; val_offset:169896*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169896*0 + 3*568*FLEN/8, x4, x1, x2)

inst_56633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000000007f; valaddr_reg:x3; val_offset:169899*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169899*0 + 3*569*FLEN/8, x4, x1, x2)

inst_56634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000000000ff; valaddr_reg:x3; val_offset:169902*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169902*0 + 3*570*FLEN/8, x4, x1, x2)

inst_56635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000000001ff; valaddr_reg:x3; val_offset:169905*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169905*0 + 3*571*FLEN/8, x4, x1, x2)

inst_56636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000000003ff; valaddr_reg:x3; val_offset:169908*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169908*0 + 3*572*FLEN/8, x4, x1, x2)

inst_56637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000000007ff; valaddr_reg:x3; val_offset:169911*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169911*0 + 3*573*FLEN/8, x4, x1, x2)

inst_56638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000000fff; valaddr_reg:x3; val_offset:169914*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169914*0 + 3*574*FLEN/8, x4, x1, x2)

inst_56639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000001fff; valaddr_reg:x3; val_offset:169917*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169917*0 + 3*575*FLEN/8, x4, x1, x2)

inst_56640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000003fff; valaddr_reg:x3; val_offset:169920*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169920*0 + 3*576*FLEN/8, x4, x1, x2)

inst_56641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000007fff; valaddr_reg:x3; val_offset:169923*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169923*0 + 3*577*FLEN/8, x4, x1, x2)

inst_56642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000000ffff; valaddr_reg:x3; val_offset:169926*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169926*0 + 3*578*FLEN/8, x4, x1, x2)

inst_56643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000001ffff; valaddr_reg:x3; val_offset:169929*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169929*0 + 3*579*FLEN/8, x4, x1, x2)

inst_56644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000003ffff; valaddr_reg:x3; val_offset:169932*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169932*0 + 3*580*FLEN/8, x4, x1, x2)

inst_56645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000007ffff; valaddr_reg:x3; val_offset:169935*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169935*0 + 3*581*FLEN/8, x4, x1, x2)

inst_56646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000000fffff; valaddr_reg:x3; val_offset:169938*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169938*0 + 3*582*FLEN/8, x4, x1, x2)

inst_56647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000001fffff; valaddr_reg:x3; val_offset:169941*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169941*0 + 3*583*FLEN/8, x4, x1, x2)

inst_56648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000003fffff; valaddr_reg:x3; val_offset:169944*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169944*0 + 3*584*FLEN/8, x4, x1, x2)

inst_56649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000007fffff; valaddr_reg:x3; val_offset:169947*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169947*0 + 3*585*FLEN/8, x4, x1, x2)

inst_56650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000000ffffff; valaddr_reg:x3; val_offset:169950*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169950*0 + 3*586*FLEN/8, x4, x1, x2)

inst_56651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000001ffffff; valaddr_reg:x3; val_offset:169953*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169953*0 + 3*587*FLEN/8, x4, x1, x2)

inst_56652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000003ffffff; valaddr_reg:x3; val_offset:169956*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169956*0 + 3*588*FLEN/8, x4, x1, x2)

inst_56653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000007ffffff; valaddr_reg:x3; val_offset:169959*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169959*0 + 3*589*FLEN/8, x4, x1, x2)

inst_56654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000000fffffff; valaddr_reg:x3; val_offset:169962*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169962*0 + 3*590*FLEN/8, x4, x1, x2)

inst_56655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000001fffffff; valaddr_reg:x3; val_offset:169965*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169965*0 + 3*591*FLEN/8, x4, x1, x2)

inst_56656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000003fffffff; valaddr_reg:x3; val_offset:169968*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169968*0 + 3*592*FLEN/8, x4, x1, x2)

inst_56657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000007fffffff; valaddr_reg:x3; val_offset:169971*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169971*0 + 3*593*FLEN/8, x4, x1, x2)

inst_56658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00000ffffffff; valaddr_reg:x3; val_offset:169974*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169974*0 + 3*594*FLEN/8, x4, x1, x2)

inst_56659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00001ffffffff; valaddr_reg:x3; val_offset:169977*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169977*0 + 3*595*FLEN/8, x4, x1, x2)

inst_56660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00003ffffffff; valaddr_reg:x3; val_offset:169980*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169980*0 + 3*596*FLEN/8, x4, x1, x2)

inst_56661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00007ffffffff; valaddr_reg:x3; val_offset:169983*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169983*0 + 3*597*FLEN/8, x4, x1, x2)

inst_56662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0000fffffffff; valaddr_reg:x3; val_offset:169986*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169986*0 + 3*598*FLEN/8, x4, x1, x2)

inst_56663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0001fffffffff; valaddr_reg:x3; val_offset:169989*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169989*0 + 3*599*FLEN/8, x4, x1, x2)

inst_56664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0003fffffffff; valaddr_reg:x3; val_offset:169992*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169992*0 + 3*600*FLEN/8, x4, x1, x2)

inst_56665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0007fffffffff; valaddr_reg:x3; val_offset:169995*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169995*0 + 3*601*FLEN/8, x4, x1, x2)

inst_56666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f000ffffffffff; valaddr_reg:x3; val_offset:169998*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 169998*0 + 3*602*FLEN/8, x4, x1, x2)

inst_56667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f001ffffffffff; valaddr_reg:x3; val_offset:170001*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170001*0 + 3*603*FLEN/8, x4, x1, x2)

inst_56668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f003ffffffffff; valaddr_reg:x3; val_offset:170004*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170004*0 + 3*604*FLEN/8, x4, x1, x2)

inst_56669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f007ffffffffff; valaddr_reg:x3; val_offset:170007*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170007*0 + 3*605*FLEN/8, x4, x1, x2)

inst_56670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f00fffffffffff; valaddr_reg:x3; val_offset:170010*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170010*0 + 3*606*FLEN/8, x4, x1, x2)

inst_56671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f01fffffffffff; valaddr_reg:x3; val_offset:170013*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170013*0 + 3*607*FLEN/8, x4, x1, x2)

inst_56672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f03fffffffffff; valaddr_reg:x3; val_offset:170016*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170016*0 + 3*608*FLEN/8, x4, x1, x2)

inst_56673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f07fffffffffff; valaddr_reg:x3; val_offset:170019*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170019*0 + 3*609*FLEN/8, x4, x1, x2)

inst_56674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f0ffffffffffff; valaddr_reg:x3; val_offset:170022*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170022*0 + 3*610*FLEN/8, x4, x1, x2)

inst_56675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f1ffffffffffff; valaddr_reg:x3; val_offset:170025*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170025*0 + 3*611*FLEN/8, x4, x1, x2)

inst_56676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f3ffffffffffff; valaddr_reg:x3; val_offset:170028*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170028*0 + 3*612*FLEN/8, x4, x1, x2)

inst_56677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f7ffffffffffff; valaddr_reg:x3; val_offset:170031*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170031*0 + 3*613*FLEN/8, x4, x1, x2)

inst_56678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80f8000000000000; valaddr_reg:x3; val_offset:170034*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170034*0 + 3*614*FLEN/8, x4, x1, x2)

inst_56679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fc000000000000; valaddr_reg:x3; val_offset:170037*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170037*0 + 3*615*FLEN/8, x4, x1, x2)

inst_56680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fe000000000000; valaddr_reg:x3; val_offset:170040*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170040*0 + 3*616*FLEN/8, x4, x1, x2)

inst_56681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ff000000000000; valaddr_reg:x3; val_offset:170043*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170043*0 + 3*617*FLEN/8, x4, x1, x2)

inst_56682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ff800000000000; valaddr_reg:x3; val_offset:170046*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170046*0 + 3*618*FLEN/8, x4, x1, x2)

inst_56683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffc00000000000; valaddr_reg:x3; val_offset:170049*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170049*0 + 3*619*FLEN/8, x4, x1, x2)

inst_56684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffe00000000000; valaddr_reg:x3; val_offset:170052*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170052*0 + 3*620*FLEN/8, x4, x1, x2)

inst_56685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fff00000000000; valaddr_reg:x3; val_offset:170055*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170055*0 + 3*621*FLEN/8, x4, x1, x2)

inst_56686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fff80000000000; valaddr_reg:x3; val_offset:170058*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170058*0 + 3*622*FLEN/8, x4, x1, x2)

inst_56687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffc0000000000; valaddr_reg:x3; val_offset:170061*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170061*0 + 3*623*FLEN/8, x4, x1, x2)

inst_56688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffe0000000000; valaddr_reg:x3; val_offset:170064*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170064*0 + 3*624*FLEN/8, x4, x1, x2)

inst_56689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffff0000000000; valaddr_reg:x3; val_offset:170067*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170067*0 + 3*625*FLEN/8, x4, x1, x2)

inst_56690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffff8000000000; valaddr_reg:x3; val_offset:170070*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170070*0 + 3*626*FLEN/8, x4, x1, x2)

inst_56691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffc000000000; valaddr_reg:x3; val_offset:170073*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170073*0 + 3*627*FLEN/8, x4, x1, x2)

inst_56692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffe000000000; valaddr_reg:x3; val_offset:170076*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170076*0 + 3*628*FLEN/8, x4, x1, x2)

inst_56693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffff000000000; valaddr_reg:x3; val_offset:170079*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170079*0 + 3*629*FLEN/8, x4, x1, x2)

inst_56694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffff800000000; valaddr_reg:x3; val_offset:170082*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170082*0 + 3*630*FLEN/8, x4, x1, x2)

inst_56695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffc00000000; valaddr_reg:x3; val_offset:170085*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170085*0 + 3*631*FLEN/8, x4, x1, x2)

inst_56696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffe00000000; valaddr_reg:x3; val_offset:170088*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170088*0 + 3*632*FLEN/8, x4, x1, x2)

inst_56697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffff00000000; valaddr_reg:x3; val_offset:170091*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170091*0 + 3*633*FLEN/8, x4, x1, x2)

inst_56698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffff80000000; valaddr_reg:x3; val_offset:170094*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170094*0 + 3*634*FLEN/8, x4, x1, x2)

inst_56699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffc0000000; valaddr_reg:x3; val_offset:170097*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170097*0 + 3*635*FLEN/8, x4, x1, x2)

inst_56700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffe0000000; valaddr_reg:x3; val_offset:170100*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170100*0 + 3*636*FLEN/8, x4, x1, x2)

inst_56701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffff0000000; valaddr_reg:x3; val_offset:170103*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170103*0 + 3*637*FLEN/8, x4, x1, x2)

inst_56702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffff8000000; valaddr_reg:x3; val_offset:170106*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170106*0 + 3*638*FLEN/8, x4, x1, x2)

inst_56703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffc000000; valaddr_reg:x3; val_offset:170109*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170109*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_56704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffe000000; valaddr_reg:x3; val_offset:170112*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170112*0 + 3*640*FLEN/8, x4, x1, x2)

inst_56705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffff000000; valaddr_reg:x3; val_offset:170115*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170115*0 + 3*641*FLEN/8, x4, x1, x2)

inst_56706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffff800000; valaddr_reg:x3; val_offset:170118*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170118*0 + 3*642*FLEN/8, x4, x1, x2)

inst_56707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffc00000; valaddr_reg:x3; val_offset:170121*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170121*0 + 3*643*FLEN/8, x4, x1, x2)

inst_56708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffe00000; valaddr_reg:x3; val_offset:170124*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170124*0 + 3*644*FLEN/8, x4, x1, x2)

inst_56709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffff00000; valaddr_reg:x3; val_offset:170127*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170127*0 + 3*645*FLEN/8, x4, x1, x2)

inst_56710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffff80000; valaddr_reg:x3; val_offset:170130*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170130*0 + 3*646*FLEN/8, x4, x1, x2)

inst_56711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffc0000; valaddr_reg:x3; val_offset:170133*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170133*0 + 3*647*FLEN/8, x4, x1, x2)

inst_56712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffe0000; valaddr_reg:x3; val_offset:170136*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170136*0 + 3*648*FLEN/8, x4, x1, x2)

inst_56713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffff0000; valaddr_reg:x3; val_offset:170139*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170139*0 + 3*649*FLEN/8, x4, x1, x2)

inst_56714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffff8000; valaddr_reg:x3; val_offset:170142*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170142*0 + 3*650*FLEN/8, x4, x1, x2)

inst_56715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffc000; valaddr_reg:x3; val_offset:170145*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170145*0 + 3*651*FLEN/8, x4, x1, x2)

inst_56716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffe000; valaddr_reg:x3; val_offset:170148*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170148*0 + 3*652*FLEN/8, x4, x1, x2)

inst_56717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffff000; valaddr_reg:x3; val_offset:170151*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170151*0 + 3*653*FLEN/8, x4, x1, x2)

inst_56718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffff800; valaddr_reg:x3; val_offset:170154*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170154*0 + 3*654*FLEN/8, x4, x1, x2)

inst_56719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffc00; valaddr_reg:x3; val_offset:170157*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170157*0 + 3*655*FLEN/8, x4, x1, x2)

inst_56720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffe00; valaddr_reg:x3; val_offset:170160*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170160*0 + 3*656*FLEN/8, x4, x1, x2)

inst_56721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffff00; valaddr_reg:x3; val_offset:170163*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170163*0 + 3*657*FLEN/8, x4, x1, x2)

inst_56722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffff80; valaddr_reg:x3; val_offset:170166*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170166*0 + 3*658*FLEN/8, x4, x1, x2)

inst_56723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffffc0; valaddr_reg:x3; val_offset:170169*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170169*0 + 3*659*FLEN/8, x4, x1, x2)

inst_56724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffffe0; valaddr_reg:x3; val_offset:170172*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170172*0 + 3*660*FLEN/8, x4, x1, x2)

inst_56725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffff0; valaddr_reg:x3; val_offset:170175*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170175*0 + 3*661*FLEN/8, x4, x1, x2)

inst_56726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffff8; valaddr_reg:x3; val_offset:170178*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170178*0 + 3*662*FLEN/8, x4, x1, x2)

inst_56727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffffc; valaddr_reg:x3; val_offset:170181*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170181*0 + 3*663*FLEN/8, x4, x1, x2)

inst_56728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80fffffffffffffe; valaddr_reg:x3; val_offset:170184*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170184*0 + 3*664*FLEN/8, x4, x1, x2)

inst_56729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x153f3df3c9356 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa153f3df3c9356; op2val:0x8000;
op3val:0x80ffffffffffffff; valaddr_reg:x3; val_offset:170187*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170187*0 + 3*665*FLEN/8, x4, x1, x2)

inst_56730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:170190*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170190*0 + 3*666*FLEN/8, x4, x1, x2)

inst_56731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:170193*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170193*0 + 3*667*FLEN/8, x4, x1, x2)

inst_56732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:170196*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170196*0 + 3*668*FLEN/8, x4, x1, x2)

inst_56733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:170199*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170199*0 + 3*669*FLEN/8, x4, x1, x2)

inst_56734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:170202*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170202*0 + 3*670*FLEN/8, x4, x1, x2)

inst_56735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:170205*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170205*0 + 3*671*FLEN/8, x4, x1, x2)

inst_56736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:170208*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170208*0 + 3*672*FLEN/8, x4, x1, x2)

inst_56737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:170211*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170211*0 + 3*673*FLEN/8, x4, x1, x2)

inst_56738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:170214*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170214*0 + 3*674*FLEN/8, x4, x1, x2)

inst_56739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:170217*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170217*0 + 3*675*FLEN/8, x4, x1, x2)

inst_56740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:170220*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170220*0 + 3*676*FLEN/8, x4, x1, x2)

inst_56741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:170223*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170223*0 + 3*677*FLEN/8, x4, x1, x2)

inst_56742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:170226*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170226*0 + 3*678*FLEN/8, x4, x1, x2)

inst_56743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:170229*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170229*0 + 3*679*FLEN/8, x4, x1, x2)

inst_56744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:170232*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170232*0 + 3*680*FLEN/8, x4, x1, x2)

inst_56745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:170235*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170235*0 + 3*681*FLEN/8, x4, x1, x2)

inst_56746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:170238*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170238*0 + 3*682*FLEN/8, x4, x1, x2)

inst_56747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:170241*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170241*0 + 3*683*FLEN/8, x4, x1, x2)

inst_56748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:170244*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170244*0 + 3*684*FLEN/8, x4, x1, x2)

inst_56749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:170247*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170247*0 + 3*685*FLEN/8, x4, x1, x2)

inst_56750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:170250*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170250*0 + 3*686*FLEN/8, x4, x1, x2)

inst_56751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:170253*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170253*0 + 3*687*FLEN/8, x4, x1, x2)

inst_56752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000000000; valaddr_reg:x3; val_offset:170256*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170256*0 + 3*688*FLEN/8, x4, x1, x2)

inst_56753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000000001; valaddr_reg:x3; val_offset:170259*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170259*0 + 3*689*FLEN/8, x4, x1, x2)

inst_56754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000000003; valaddr_reg:x3; val_offset:170262*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170262*0 + 3*690*FLEN/8, x4, x1, x2)

inst_56755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000000007; valaddr_reg:x3; val_offset:170265*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170265*0 + 3*691*FLEN/8, x4, x1, x2)

inst_56756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000000000f; valaddr_reg:x3; val_offset:170268*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170268*0 + 3*692*FLEN/8, x4, x1, x2)

inst_56757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000000001f; valaddr_reg:x3; val_offset:170271*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170271*0 + 3*693*FLEN/8, x4, x1, x2)

inst_56758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000000003f; valaddr_reg:x3; val_offset:170274*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170274*0 + 3*694*FLEN/8, x4, x1, x2)

inst_56759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000000007f; valaddr_reg:x3; val_offset:170277*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170277*0 + 3*695*FLEN/8, x4, x1, x2)

inst_56760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000000000ff; valaddr_reg:x3; val_offset:170280*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170280*0 + 3*696*FLEN/8, x4, x1, x2)

inst_56761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000000001ff; valaddr_reg:x3; val_offset:170283*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170283*0 + 3*697*FLEN/8, x4, x1, x2)

inst_56762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000000003ff; valaddr_reg:x3; val_offset:170286*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170286*0 + 3*698*FLEN/8, x4, x1, x2)

inst_56763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000000007ff; valaddr_reg:x3; val_offset:170289*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170289*0 + 3*699*FLEN/8, x4, x1, x2)

inst_56764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000000fff; valaddr_reg:x3; val_offset:170292*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170292*0 + 3*700*FLEN/8, x4, x1, x2)

inst_56765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000001fff; valaddr_reg:x3; val_offset:170295*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170295*0 + 3*701*FLEN/8, x4, x1, x2)

inst_56766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000003fff; valaddr_reg:x3; val_offset:170298*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170298*0 + 3*702*FLEN/8, x4, x1, x2)

inst_56767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000007fff; valaddr_reg:x3; val_offset:170301*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170301*0 + 3*703*FLEN/8, x4, x1, x2)

inst_56768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000000ffff; valaddr_reg:x3; val_offset:170304*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170304*0 + 3*704*FLEN/8, x4, x1, x2)

inst_56769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000001ffff; valaddr_reg:x3; val_offset:170307*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170307*0 + 3*705*FLEN/8, x4, x1, x2)

inst_56770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000003ffff; valaddr_reg:x3; val_offset:170310*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170310*0 + 3*706*FLEN/8, x4, x1, x2)

inst_56771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000007ffff; valaddr_reg:x3; val_offset:170313*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170313*0 + 3*707*FLEN/8, x4, x1, x2)

inst_56772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000000fffff; valaddr_reg:x3; val_offset:170316*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170316*0 + 3*708*FLEN/8, x4, x1, x2)

inst_56773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000001fffff; valaddr_reg:x3; val_offset:170319*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170319*0 + 3*709*FLEN/8, x4, x1, x2)

inst_56774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000003fffff; valaddr_reg:x3; val_offset:170322*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170322*0 + 3*710*FLEN/8, x4, x1, x2)

inst_56775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000007fffff; valaddr_reg:x3; val_offset:170325*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170325*0 + 3*711*FLEN/8, x4, x1, x2)

inst_56776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000000ffffff; valaddr_reg:x3; val_offset:170328*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170328*0 + 3*712*FLEN/8, x4, x1, x2)

inst_56777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000001ffffff; valaddr_reg:x3; val_offset:170331*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170331*0 + 3*713*FLEN/8, x4, x1, x2)

inst_56778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000003ffffff; valaddr_reg:x3; val_offset:170334*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170334*0 + 3*714*FLEN/8, x4, x1, x2)

inst_56779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000007ffffff; valaddr_reg:x3; val_offset:170337*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170337*0 + 3*715*FLEN/8, x4, x1, x2)

inst_56780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000000fffffff; valaddr_reg:x3; val_offset:170340*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170340*0 + 3*716*FLEN/8, x4, x1, x2)

inst_56781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000001fffffff; valaddr_reg:x3; val_offset:170343*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170343*0 + 3*717*FLEN/8, x4, x1, x2)

inst_56782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000003fffffff; valaddr_reg:x3; val_offset:170346*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170346*0 + 3*718*FLEN/8, x4, x1, x2)

inst_56783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000007fffffff; valaddr_reg:x3; val_offset:170349*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170349*0 + 3*719*FLEN/8, x4, x1, x2)

inst_56784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700000ffffffff; valaddr_reg:x3; val_offset:170352*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170352*0 + 3*720*FLEN/8, x4, x1, x2)

inst_56785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700001ffffffff; valaddr_reg:x3; val_offset:170355*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170355*0 + 3*721*FLEN/8, x4, x1, x2)

inst_56786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700003ffffffff; valaddr_reg:x3; val_offset:170358*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170358*0 + 3*722*FLEN/8, x4, x1, x2)

inst_56787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700007ffffffff; valaddr_reg:x3; val_offset:170361*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170361*0 + 3*723*FLEN/8, x4, x1, x2)

inst_56788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370000fffffffff; valaddr_reg:x3; val_offset:170364*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170364*0 + 3*724*FLEN/8, x4, x1, x2)

inst_56789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370001fffffffff; valaddr_reg:x3; val_offset:170367*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170367*0 + 3*725*FLEN/8, x4, x1, x2)

inst_56790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370003fffffffff; valaddr_reg:x3; val_offset:170370*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170370*0 + 3*726*FLEN/8, x4, x1, x2)

inst_56791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370007fffffffff; valaddr_reg:x3; val_offset:170373*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170373*0 + 3*727*FLEN/8, x4, x1, x2)

inst_56792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37000ffffffffff; valaddr_reg:x3; val_offset:170376*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170376*0 + 3*728*FLEN/8, x4, x1, x2)

inst_56793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37001ffffffffff; valaddr_reg:x3; val_offset:170379*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170379*0 + 3*729*FLEN/8, x4, x1, x2)

inst_56794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37003ffffffffff; valaddr_reg:x3; val_offset:170382*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170382*0 + 3*730*FLEN/8, x4, x1, x2)

inst_56795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37007ffffffffff; valaddr_reg:x3; val_offset:170385*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170385*0 + 3*731*FLEN/8, x4, x1, x2)

inst_56796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3700fffffffffff; valaddr_reg:x3; val_offset:170388*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170388*0 + 3*732*FLEN/8, x4, x1, x2)

inst_56797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3701fffffffffff; valaddr_reg:x3; val_offset:170391*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170391*0 + 3*733*FLEN/8, x4, x1, x2)

inst_56798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3703fffffffffff; valaddr_reg:x3; val_offset:170394*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170394*0 + 3*734*FLEN/8, x4, x1, x2)

inst_56799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x3707fffffffffff; valaddr_reg:x3; val_offset:170397*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170397*0 + 3*735*FLEN/8, x4, x1, x2)

inst_56800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x370ffffffffffff; valaddr_reg:x3; val_offset:170400*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170400*0 + 3*736*FLEN/8, x4, x1, x2)

inst_56801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x371ffffffffffff; valaddr_reg:x3; val_offset:170403*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170403*0 + 3*737*FLEN/8, x4, x1, x2)

inst_56802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x373ffffffffffff; valaddr_reg:x3; val_offset:170406*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170406*0 + 3*738*FLEN/8, x4, x1, x2)

inst_56803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x377ffffffffffff; valaddr_reg:x3; val_offset:170409*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170409*0 + 3*739*FLEN/8, x4, x1, x2)

inst_56804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x378000000000000; valaddr_reg:x3; val_offset:170412*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170412*0 + 3*740*FLEN/8, x4, x1, x2)

inst_56805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37c000000000000; valaddr_reg:x3; val_offset:170415*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170415*0 + 3*741*FLEN/8, x4, x1, x2)

inst_56806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37e000000000000; valaddr_reg:x3; val_offset:170418*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170418*0 + 3*742*FLEN/8, x4, x1, x2)

inst_56807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37f000000000000; valaddr_reg:x3; val_offset:170421*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170421*0 + 3*743*FLEN/8, x4, x1, x2)

inst_56808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37f800000000000; valaddr_reg:x3; val_offset:170424*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170424*0 + 3*744*FLEN/8, x4, x1, x2)

inst_56809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fc00000000000; valaddr_reg:x3; val_offset:170427*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170427*0 + 3*745*FLEN/8, x4, x1, x2)

inst_56810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fe00000000000; valaddr_reg:x3; val_offset:170430*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170430*0 + 3*746*FLEN/8, x4, x1, x2)

inst_56811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ff00000000000; valaddr_reg:x3; val_offset:170433*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170433*0 + 3*747*FLEN/8, x4, x1, x2)

inst_56812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ff80000000000; valaddr_reg:x3; val_offset:170436*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170436*0 + 3*748*FLEN/8, x4, x1, x2)

inst_56813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffc0000000000; valaddr_reg:x3; val_offset:170439*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170439*0 + 3*749*FLEN/8, x4, x1, x2)

inst_56814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffe0000000000; valaddr_reg:x3; val_offset:170442*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170442*0 + 3*750*FLEN/8, x4, x1, x2)

inst_56815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fff0000000000; valaddr_reg:x3; val_offset:170445*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170445*0 + 3*751*FLEN/8, x4, x1, x2)

inst_56816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fff8000000000; valaddr_reg:x3; val_offset:170448*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170448*0 + 3*752*FLEN/8, x4, x1, x2)

inst_56817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffc000000000; valaddr_reg:x3; val_offset:170451*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170451*0 + 3*753*FLEN/8, x4, x1, x2)

inst_56818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffe000000000; valaddr_reg:x3; val_offset:170454*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170454*0 + 3*754*FLEN/8, x4, x1, x2)

inst_56819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffff000000000; valaddr_reg:x3; val_offset:170457*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170457*0 + 3*755*FLEN/8, x4, x1, x2)

inst_56820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffff800000000; valaddr_reg:x3; val_offset:170460*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170460*0 + 3*756*FLEN/8, x4, x1, x2)

inst_56821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffc00000000; valaddr_reg:x3; val_offset:170463*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170463*0 + 3*757*FLEN/8, x4, x1, x2)

inst_56822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffe00000000; valaddr_reg:x3; val_offset:170466*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170466*0 + 3*758*FLEN/8, x4, x1, x2)

inst_56823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffff00000000; valaddr_reg:x3; val_offset:170469*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170469*0 + 3*759*FLEN/8, x4, x1, x2)

inst_56824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffff80000000; valaddr_reg:x3; val_offset:170472*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170472*0 + 3*760*FLEN/8, x4, x1, x2)

inst_56825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffffc0000000; valaddr_reg:x3; val_offset:170475*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170475*0 + 3*761*FLEN/8, x4, x1, x2)

inst_56826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffffe0000000; valaddr_reg:x3; val_offset:170478*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170478*0 + 3*762*FLEN/8, x4, x1, x2)

inst_56827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffff0000000; valaddr_reg:x3; val_offset:170481*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170481*0 + 3*763*FLEN/8, x4, x1, x2)

inst_56828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffff8000000; valaddr_reg:x3; val_offset:170484*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170484*0 + 3*764*FLEN/8, x4, x1, x2)

inst_56829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffffc000000; valaddr_reg:x3; val_offset:170487*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170487*0 + 3*765*FLEN/8, x4, x1, x2)

inst_56830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37ffffffe000000; valaddr_reg:x3; val_offset:170490*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170490*0 + 3*766*FLEN/8, x4, x1, x2)

inst_56831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x15625879e689e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x037 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa15625879e689e; op2val:0x0;
op3val:0x37fffffff000000; valaddr_reg:x3; val_offset:170493*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 170493*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661948871933952,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661966051803136,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661974641737728,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661978936705024,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661981084188672,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982157930496,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982694801408,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661982963236864,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983097454592,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983164563456,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983198117888,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983214895104,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983223283712,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983227478016,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983229575168,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983230623744,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231148032,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231410176,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231541248,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231606784,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231639552,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231655936,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231664128,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231668224,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231670272,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671296,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231671808,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672064,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672192,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672256,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672288,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672304,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672312,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672316,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672318,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661983231672319,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481216,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481217,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481219,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481223,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481231,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481247,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481279,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481343,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481471,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233481727,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233482239,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233483263,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233485311,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233489407,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233497599,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233513983,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233546751,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233612287,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502233743359,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502234005503,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502234529791,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502235578367,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502237675519,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502241869823,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502250258431,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502267035647,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502300590079,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502367698943,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502501916671,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604502770352127,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604503307223039,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604504380964863,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604506528448511,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604510823415807,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604519413350399,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604536593219583,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604570952957951,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604639672434687,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267604777111388159,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267605051989295103,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267605601745108991,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267606701256736767,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267608900279992319,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267613298326503423,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267622094419525631,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267639686605570047,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267674870977658879,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267745239721836543,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13267885977210191871,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13268167452186902527,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13268730402140323839,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13269856302047166463,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13269856302047166464,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13270982201954009088,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13271545151907430400,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13271826626884141056,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13271967364372496384,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272037733116674048,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272072917488762880,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272090509674807296,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272099305767829504,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272103703814340608,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272105902837596160,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272107002349223936,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272107552105037824,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272107826982944768,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272107964421898240,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108033141374976,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108067501113344,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108084680982528,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108093270917120,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108097565884416,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108099713368064,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108100787109888,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101323980800,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101592416256,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101726633984,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101793742848,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101827297280,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101844074496,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101852463104,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101856657408,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101858754560,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101859803136,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860327424,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860589568,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860720640,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860786176,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860818944,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860835328,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860843520,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860847616,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860849664,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860850688,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851200,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851456,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851584,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851648,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851680,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851696,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851704,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851708,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851710,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13272108101860851711,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890830224336130731,64,FLEN)
NAN_BOXED(11515101835953294081,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122112,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122113,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122115,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122119,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122127,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122143,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122175,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122239,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122367,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804122623,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804123135,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804124159,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804126207,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804130303,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804138495,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804154879,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804187647,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804253183,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804384255,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837804646399,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837805170687,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837806219263,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837808316415,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837812510719,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837820899327,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837837676543,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837871230975,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498837938339839,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498838072557567,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498838340993023,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498838877863935,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498839951605759,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498842099089407,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498846394056703,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498854983991295,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498872163860479,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498906523598847,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377498975243075583,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377499112682029055,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377499387559935999,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377499937315749887,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377501036827377663,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377503235850633215,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377507633897144319,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377516429990166527,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377534022176210943,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377569206548299775,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377639575292477439,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4377780312780832767,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4378061787757543423,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4378624737710964735,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4379750637617807359,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4379750637617807360,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4380876537524649984,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381439487478071296,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381720962454781952,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381861699943137280,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381932068687314944,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381967253059403776,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381984845245448192,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381993641338470400,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4381998039384981504,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382000238408237056,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382001337919864832,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382001887675678720,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002162553585664,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002299992539136,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002368712015872,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002403071754240,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002420251623424,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002428841558016,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002433136525312,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002435284008960,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002436357750784,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002436894621696,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437163057152,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437297274880,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437364383744,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437397938176,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437414715392,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437423104000,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437427298304,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437429395456,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437430444032,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437430968320,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431230464,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431361536,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431427072,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431459840,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431476224,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431484416,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431488512,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431490560,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431491584,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492096,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492352,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492480,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492544,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492576,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492592,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492600,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492604,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492606,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4382002437431492607,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890840663398002225,64,FLEN)
NAN_BOXED(2323236856914178257,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334464,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334465,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334467,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334471,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334479,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334495,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334527,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334591,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334719,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646334975,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646335487,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646336511,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646338559,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646342655,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646350847,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646367231,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646399999,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646465535,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646596607,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396646858751,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396647383039,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396648431615,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396650528767,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396654723071,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396663111679,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396679888895,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396713443327,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396780552191,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532396914769919,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397183205375,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532397720076287,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532398793818111,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532400941301759,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532405236269055,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532413826203647,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532431006072831,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532465365811199,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532534085287935,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532671524241407,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40532946402148351,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40533496157962239,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40534595669590015,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40536794692845567,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40541192739356671,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40549988832378879,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40567581018423295,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40602765390512127,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40673134134689791,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(40813871623045119,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41095346599755775,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(41658296553177087,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019711,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(42784196460019712,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(43910096366862336,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44473046320283648,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44754521296994304,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44895258785349632,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(44965627529527296,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45000811901616128,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45018404087660544,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45027200180682752,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45031598227193856,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45033797250449408,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45034896762077184,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035446517891072,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035721395798016,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035858834751488,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035927554228224,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035961913966592,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035979093835776,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035987683770368,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035991978737664,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035994126221312,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995199963136,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035995736834048,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996005269504,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996139487232,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996206596096,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996240150528,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996256927744,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996265316352,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996269510656,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996271607808,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996272656384,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273180672,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273442816,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273573888,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273639424,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273672192,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273688576,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273696768,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273700864,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273702912,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273703936,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704448,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704704,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704832,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704896,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704928,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704944,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704952,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704956,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704958,64,FLEN)
NAN_BOXED(6890876489828960600,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(45035996273704959,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345088,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345089,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345091,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345095,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345103,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345119,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345151,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345215,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345343,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568345599,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568346111,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568347135,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568349183,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568353279,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568361471,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568377855,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568410623,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568476159,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568607231,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435568869375,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435569393663,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435570442239,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435572539391,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435576733695,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435585122303,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435601899519,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435635453951,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435702562815,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520435836780543,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520436105215999,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520436642086911,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520437715828735,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520439863312383,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520444158279679,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520452748214271,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520469928083455,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520504287821823,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520573007298559,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520710446252031,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404520985324158975,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404521535079972863,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404522634591600639,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404524833614856191,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404529231661367295,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404538027754389503,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404555619940433919,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404590804312522751,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404661173056700415,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4404801910545055743,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4405083385521766399,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4405646335475187711,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4406772235382030335,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4406772235382030336,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4407898135288872960,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4408461085242294272,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4408742560219004928,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4408883297707360256,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4408953666451537920,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4408988850823626752,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409006443009671168,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409015239102693376,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409019637149204480,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409021836172460032,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409022935684087808,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409023485439901696,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409023760317808640,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409023897756762112,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409023966476238848,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024000835977216,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024018015846400,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024026605780992,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024030900748288,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024033048231936,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024034121973760,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024034658844672,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024034927280128,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035061497856,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035128606720,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035162161152,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035178938368,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035187326976,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035191521280,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035193618432,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035194667008,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195191296,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195453440,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195584512,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195650048,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195682816,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195699200,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195707392,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195711488,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195713536,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195714560,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715072,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715328,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715456,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715520,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715552,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715568,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715576,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715580,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715582,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4409024035195715583,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6890876551410787956,64,FLEN)
NAN_BOXED(2323175088523029441,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333248,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333249,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333251,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333255,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333263,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333279,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333311,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333375,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333503,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333759,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265334271,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265335295,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265337343,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265341439,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265349631,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265366015,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265398783,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265464319,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265595391,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265857535,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031266381823,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031267430399,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031269527551,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031273721855,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031282110463,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031298887679,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031332442111,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031399550975,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031533768703,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031802204159,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926032339075071,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926033412816895,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926035560300543,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926039855267839,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926048445202431,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926065625071615,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926099984809983,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926168704286719,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926306143240191,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926581021147135,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290927130776961023,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290928230288588799,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290930429311844351,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290934827358355455,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290943623451377663,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290961215637422079,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290996400009510911,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291066768753688575,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291207506242043903,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291488981218754559,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9292051931172175871,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018495,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018496,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294303730985861120,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294866680939282432,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295148155915993088,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295288893404348416,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295359262148526080,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295394446520614912,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295412038706659328,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295420834799681536,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295425232846192640,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295427431869448192,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295428531381075968,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429081136889856,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429356014796800,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429493453750272,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429562173227008,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429596532965376,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429613712834560,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429622302769152,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429626597736448,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429628745220096,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429629818961920,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630355832832,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630624268288,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630758486016,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630825594880,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630859149312,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630875926528,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630884315136,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630888509440,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630890606592,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630891655168,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892179456,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892441600,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892572672,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892638208,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892670976,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892687360,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892695552,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892699648,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892701696,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892702720,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703232,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703488,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703616,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703680,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703712,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703728,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703736,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703740,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703742,64,FLEN)
NAN_BOXED(6890881211741016918,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703743,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377280,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377281,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377283,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377287,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377295,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377311,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377343,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377407,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377535,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377791,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505378303,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505379327,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505381375,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505385471,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505393663,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505410047,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505442815,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505508351,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505639423,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505901567,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979506425855,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979507474431,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979509571583,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979513765887,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979522154495,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979538931711,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979572486143,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979639595007,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979773812735,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980042248191,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697980579119103,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697981652860927,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697983800344575,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697988095311871,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697996685246463,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698013865115647,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698048224854015,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698116944330751,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698254383284223,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247698529261191167,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247699079017005055,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247700178528632831,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247702377551888383,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247706775598399487,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247715571691421695,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247733163877466111,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247768348249554943,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247838716993732607,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247979454482087935,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248260929458798591,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(248823879412219903,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062527,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(249949779319062528,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251075679225905152,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251638629179326464,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(251920104156037120,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252060841644392448,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252131210388570112,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252166394760658944,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252183986946703360,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252192783039725568,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252197181086236672,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252199380109492224,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252200479621120000,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201029376933888,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201304254840832,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201441693794304,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201510413271040,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201544773009408,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201561952878592,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201570542813184,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201574837780480,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201576985264128,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578059005952,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578595876864,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578864312320,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201578998530048,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579065638912,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579099193344,64,FLEN)
NAN_BOXED(6890883624042653854,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579115970560,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
