
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_95232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500000000fffff; valaddr_reg:x3; val_offset:285696*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285696*0 + 3*0*FLEN/8, x4, x1, x2)

inst_95233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500000001fffff; valaddr_reg:x3; val_offset:285699*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285699*0 + 3*1*FLEN/8, x4, x1, x2)

inst_95234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500000003fffff; valaddr_reg:x3; val_offset:285702*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285702*0 + 3*2*FLEN/8, x4, x1, x2)

inst_95235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500000007fffff; valaddr_reg:x3; val_offset:285705*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285705*0 + 3*3*FLEN/8, x4, x1, x2)

inst_95236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50000000ffffff; valaddr_reg:x3; val_offset:285708*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285708*0 + 3*4*FLEN/8, x4, x1, x2)

inst_95237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50000001ffffff; valaddr_reg:x3; val_offset:285711*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285711*0 + 3*5*FLEN/8, x4, x1, x2)

inst_95238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50000003ffffff; valaddr_reg:x3; val_offset:285714*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285714*0 + 3*6*FLEN/8, x4, x1, x2)

inst_95239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50000007ffffff; valaddr_reg:x3; val_offset:285717*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285717*0 + 3*7*FLEN/8, x4, x1, x2)

inst_95240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5000000fffffff; valaddr_reg:x3; val_offset:285720*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285720*0 + 3*8*FLEN/8, x4, x1, x2)

inst_95241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5000001fffffff; valaddr_reg:x3; val_offset:285723*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285723*0 + 3*9*FLEN/8, x4, x1, x2)

inst_95242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5000003fffffff; valaddr_reg:x3; val_offset:285726*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285726*0 + 3*10*FLEN/8, x4, x1, x2)

inst_95243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5000007fffffff; valaddr_reg:x3; val_offset:285729*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285729*0 + 3*11*FLEN/8, x4, x1, x2)

inst_95244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500000ffffffff; valaddr_reg:x3; val_offset:285732*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285732*0 + 3*12*FLEN/8, x4, x1, x2)

inst_95245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500001ffffffff; valaddr_reg:x3; val_offset:285735*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285735*0 + 3*13*FLEN/8, x4, x1, x2)

inst_95246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500003ffffffff; valaddr_reg:x3; val_offset:285738*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285738*0 + 3*14*FLEN/8, x4, x1, x2)

inst_95247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500007ffffffff; valaddr_reg:x3; val_offset:285741*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285741*0 + 3*15*FLEN/8, x4, x1, x2)

inst_95248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50000fffffffff; valaddr_reg:x3; val_offset:285744*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285744*0 + 3*16*FLEN/8, x4, x1, x2)

inst_95249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50001fffffffff; valaddr_reg:x3; val_offset:285747*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285747*0 + 3*17*FLEN/8, x4, x1, x2)

inst_95250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50003fffffffff; valaddr_reg:x3; val_offset:285750*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285750*0 + 3*18*FLEN/8, x4, x1, x2)

inst_95251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50007fffffffff; valaddr_reg:x3; val_offset:285753*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285753*0 + 3*19*FLEN/8, x4, x1, x2)

inst_95252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5000ffffffffff; valaddr_reg:x3; val_offset:285756*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285756*0 + 3*20*FLEN/8, x4, x1, x2)

inst_95253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5001ffffffffff; valaddr_reg:x3; val_offset:285759*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285759*0 + 3*21*FLEN/8, x4, x1, x2)

inst_95254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5003ffffffffff; valaddr_reg:x3; val_offset:285762*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285762*0 + 3*22*FLEN/8, x4, x1, x2)

inst_95255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5007ffffffffff; valaddr_reg:x3; val_offset:285765*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285765*0 + 3*23*FLEN/8, x4, x1, x2)

inst_95256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x500fffffffffff; valaddr_reg:x3; val_offset:285768*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285768*0 + 3*24*FLEN/8, x4, x1, x2)

inst_95257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x501fffffffffff; valaddr_reg:x3; val_offset:285771*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285771*0 + 3*25*FLEN/8, x4, x1, x2)

inst_95258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x503fffffffffff; valaddr_reg:x3; val_offset:285774*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285774*0 + 3*26*FLEN/8, x4, x1, x2)

inst_95259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x507fffffffffff; valaddr_reg:x3; val_offset:285777*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285777*0 + 3*27*FLEN/8, x4, x1, x2)

inst_95260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x50ffffffffffff; valaddr_reg:x3; val_offset:285780*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285780*0 + 3*28*FLEN/8, x4, x1, x2)

inst_95261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x51ffffffffffff; valaddr_reg:x3; val_offset:285783*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285783*0 + 3*29*FLEN/8, x4, x1, x2)

inst_95262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x53ffffffffffff; valaddr_reg:x3; val_offset:285786*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285786*0 + 3*30*FLEN/8, x4, x1, x2)

inst_95263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x57ffffffffffff; valaddr_reg:x3; val_offset:285789*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285789*0 + 3*31*FLEN/8, x4, x1, x2)

inst_95264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x58000000000000; valaddr_reg:x3; val_offset:285792*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285792*0 + 3*32*FLEN/8, x4, x1, x2)

inst_95265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5c000000000000; valaddr_reg:x3; val_offset:285795*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285795*0 + 3*33*FLEN/8, x4, x1, x2)

inst_95266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5e000000000000; valaddr_reg:x3; val_offset:285798*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285798*0 + 3*34*FLEN/8, x4, x1, x2)

inst_95267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5f000000000000; valaddr_reg:x3; val_offset:285801*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285801*0 + 3*35*FLEN/8, x4, x1, x2)

inst_95268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5f800000000000; valaddr_reg:x3; val_offset:285804*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285804*0 + 3*36*FLEN/8, x4, x1, x2)

inst_95269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fc00000000000; valaddr_reg:x3; val_offset:285807*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285807*0 + 3*37*FLEN/8, x4, x1, x2)

inst_95270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fe00000000000; valaddr_reg:x3; val_offset:285810*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285810*0 + 3*38*FLEN/8, x4, x1, x2)

inst_95271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ff00000000000; valaddr_reg:x3; val_offset:285813*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285813*0 + 3*39*FLEN/8, x4, x1, x2)

inst_95272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ff80000000000; valaddr_reg:x3; val_offset:285816*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285816*0 + 3*40*FLEN/8, x4, x1, x2)

inst_95273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffc0000000000; valaddr_reg:x3; val_offset:285819*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285819*0 + 3*41*FLEN/8, x4, x1, x2)

inst_95274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffe0000000000; valaddr_reg:x3; val_offset:285822*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285822*0 + 3*42*FLEN/8, x4, x1, x2)

inst_95275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fff0000000000; valaddr_reg:x3; val_offset:285825*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285825*0 + 3*43*FLEN/8, x4, x1, x2)

inst_95276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fff8000000000; valaddr_reg:x3; val_offset:285828*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285828*0 + 3*44*FLEN/8, x4, x1, x2)

inst_95277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffc000000000; valaddr_reg:x3; val_offset:285831*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285831*0 + 3*45*FLEN/8, x4, x1, x2)

inst_95278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffe000000000; valaddr_reg:x3; val_offset:285834*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285834*0 + 3*46*FLEN/8, x4, x1, x2)

inst_95279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffff000000000; valaddr_reg:x3; val_offset:285837*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285837*0 + 3*47*FLEN/8, x4, x1, x2)

inst_95280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffff800000000; valaddr_reg:x3; val_offset:285840*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285840*0 + 3*48*FLEN/8, x4, x1, x2)

inst_95281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffc00000000; valaddr_reg:x3; val_offset:285843*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285843*0 + 3*49*FLEN/8, x4, x1, x2)

inst_95282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffe00000000; valaddr_reg:x3; val_offset:285846*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285846*0 + 3*50*FLEN/8, x4, x1, x2)

inst_95283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffff00000000; valaddr_reg:x3; val_offset:285849*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285849*0 + 3*51*FLEN/8, x4, x1, x2)

inst_95284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffff80000000; valaddr_reg:x3; val_offset:285852*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285852*0 + 3*52*FLEN/8, x4, x1, x2)

inst_95285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffc0000000; valaddr_reg:x3; val_offset:285855*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285855*0 + 3*53*FLEN/8, x4, x1, x2)

inst_95286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffe0000000; valaddr_reg:x3; val_offset:285858*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285858*0 + 3*54*FLEN/8, x4, x1, x2)

inst_95287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffff0000000; valaddr_reg:x3; val_offset:285861*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285861*0 + 3*55*FLEN/8, x4, x1, x2)

inst_95288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffff8000000; valaddr_reg:x3; val_offset:285864*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285864*0 + 3*56*FLEN/8, x4, x1, x2)

inst_95289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffc000000; valaddr_reg:x3; val_offset:285867*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285867*0 + 3*57*FLEN/8, x4, x1, x2)

inst_95290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffe000000; valaddr_reg:x3; val_offset:285870*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285870*0 + 3*58*FLEN/8, x4, x1, x2)

inst_95291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffff000000; valaddr_reg:x3; val_offset:285873*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285873*0 + 3*59*FLEN/8, x4, x1, x2)

inst_95292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffff800000; valaddr_reg:x3; val_offset:285876*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285876*0 + 3*60*FLEN/8, x4, x1, x2)

inst_95293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffc00000; valaddr_reg:x3; val_offset:285879*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285879*0 + 3*61*FLEN/8, x4, x1, x2)

inst_95294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffe00000; valaddr_reg:x3; val_offset:285882*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285882*0 + 3*62*FLEN/8, x4, x1, x2)

inst_95295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffff00000; valaddr_reg:x3; val_offset:285885*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285885*0 + 3*63*FLEN/8, x4, x1, x2)

inst_95296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffff80000; valaddr_reg:x3; val_offset:285888*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285888*0 + 3*64*FLEN/8, x4, x1, x2)

inst_95297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffc0000; valaddr_reg:x3; val_offset:285891*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285891*0 + 3*65*FLEN/8, x4, x1, x2)

inst_95298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffe0000; valaddr_reg:x3; val_offset:285894*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285894*0 + 3*66*FLEN/8, x4, x1, x2)

inst_95299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffff0000; valaddr_reg:x3; val_offset:285897*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285897*0 + 3*67*FLEN/8, x4, x1, x2)

inst_95300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffff8000; valaddr_reg:x3; val_offset:285900*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285900*0 + 3*68*FLEN/8, x4, x1, x2)

inst_95301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffc000; valaddr_reg:x3; val_offset:285903*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285903*0 + 3*69*FLEN/8, x4, x1, x2)

inst_95302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffe000; valaddr_reg:x3; val_offset:285906*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285906*0 + 3*70*FLEN/8, x4, x1, x2)

inst_95303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffff000; valaddr_reg:x3; val_offset:285909*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285909*0 + 3*71*FLEN/8, x4, x1, x2)

inst_95304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffff800; valaddr_reg:x3; val_offset:285912*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285912*0 + 3*72*FLEN/8, x4, x1, x2)

inst_95305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffc00; valaddr_reg:x3; val_offset:285915*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285915*0 + 3*73*FLEN/8, x4, x1, x2)

inst_95306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffe00; valaddr_reg:x3; val_offset:285918*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285918*0 + 3*74*FLEN/8, x4, x1, x2)

inst_95307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffff00; valaddr_reg:x3; val_offset:285921*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285921*0 + 3*75*FLEN/8, x4, x1, x2)

inst_95308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffff80; valaddr_reg:x3; val_offset:285924*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285924*0 + 3*76*FLEN/8, x4, x1, x2)

inst_95309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffffc0; valaddr_reg:x3; val_offset:285927*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285927*0 + 3*77*FLEN/8, x4, x1, x2)

inst_95310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffffe0; valaddr_reg:x3; val_offset:285930*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285930*0 + 3*78*FLEN/8, x4, x1, x2)

inst_95311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffff0; valaddr_reg:x3; val_offset:285933*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285933*0 + 3*79*FLEN/8, x4, x1, x2)

inst_95312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffff8; valaddr_reg:x3; val_offset:285936*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285936*0 + 3*80*FLEN/8, x4, x1, x2)

inst_95313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffffc; valaddr_reg:x3; val_offset:285939*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285939*0 + 3*81*FLEN/8, x4, x1, x2)

inst_95314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5ffffffffffffe; valaddr_reg:x3; val_offset:285942*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285942*0 + 3*82*FLEN/8, x4, x1, x2)

inst_95315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd8d8c1433d250 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x005 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad8d8c1433d250; op2val:0x0;
op3val:0x5fffffffffffff; valaddr_reg:x3; val_offset:285945*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285945*0 + 3*83*FLEN/8, x4, x1, x2)

inst_95316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:285948*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285948*0 + 3*84*FLEN/8, x4, x1, x2)

inst_95317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:285951*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285951*0 + 3*85*FLEN/8, x4, x1, x2)

inst_95318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:285954*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285954*0 + 3*86*FLEN/8, x4, x1, x2)

inst_95319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:285957*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285957*0 + 3*87*FLEN/8, x4, x1, x2)

inst_95320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:285960*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285960*0 + 3*88*FLEN/8, x4, x1, x2)

inst_95321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:285963*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285963*0 + 3*89*FLEN/8, x4, x1, x2)

inst_95322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:285966*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285966*0 + 3*90*FLEN/8, x4, x1, x2)

inst_95323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:285969*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285969*0 + 3*91*FLEN/8, x4, x1, x2)

inst_95324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:285972*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285972*0 + 3*92*FLEN/8, x4, x1, x2)

inst_95325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:285975*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285975*0 + 3*93*FLEN/8, x4, x1, x2)

inst_95326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:285978*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285978*0 + 3*94*FLEN/8, x4, x1, x2)

inst_95327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:285981*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285981*0 + 3*95*FLEN/8, x4, x1, x2)

inst_95328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:285984*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285984*0 + 3*96*FLEN/8, x4, x1, x2)

inst_95329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:285987*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285987*0 + 3*97*FLEN/8, x4, x1, x2)

inst_95330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:285990*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285990*0 + 3*98*FLEN/8, x4, x1, x2)

inst_95331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:285993*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285993*0 + 3*99*FLEN/8, x4, x1, x2)

inst_95332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:285996*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285996*0 + 3*100*FLEN/8, x4, x1, x2)

inst_95333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:285999*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 285999*0 + 3*101*FLEN/8, x4, x1, x2)

inst_95334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:286002*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286002*0 + 3*102*FLEN/8, x4, x1, x2)

inst_95335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:286005*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286005*0 + 3*103*FLEN/8, x4, x1, x2)

inst_95336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:286008*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286008*0 + 3*104*FLEN/8, x4, x1, x2)

inst_95337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:286011*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286011*0 + 3*105*FLEN/8, x4, x1, x2)

inst_95338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000000000; valaddr_reg:x3; val_offset:286014*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286014*0 + 3*106*FLEN/8, x4, x1, x2)

inst_95339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000000001; valaddr_reg:x3; val_offset:286017*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286017*0 + 3*107*FLEN/8, x4, x1, x2)

inst_95340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000000003; valaddr_reg:x3; val_offset:286020*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286020*0 + 3*108*FLEN/8, x4, x1, x2)

inst_95341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000000007; valaddr_reg:x3; val_offset:286023*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286023*0 + 3*109*FLEN/8, x4, x1, x2)

inst_95342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000000000f; valaddr_reg:x3; val_offset:286026*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286026*0 + 3*110*FLEN/8, x4, x1, x2)

inst_95343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000000001f; valaddr_reg:x3; val_offset:286029*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286029*0 + 3*111*FLEN/8, x4, x1, x2)

inst_95344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000000003f; valaddr_reg:x3; val_offset:286032*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286032*0 + 3*112*FLEN/8, x4, x1, x2)

inst_95345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000000007f; valaddr_reg:x3; val_offset:286035*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286035*0 + 3*113*FLEN/8, x4, x1, x2)

inst_95346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000000000ff; valaddr_reg:x3; val_offset:286038*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286038*0 + 3*114*FLEN/8, x4, x1, x2)

inst_95347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000000001ff; valaddr_reg:x3; val_offset:286041*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286041*0 + 3*115*FLEN/8, x4, x1, x2)

inst_95348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000000003ff; valaddr_reg:x3; val_offset:286044*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286044*0 + 3*116*FLEN/8, x4, x1, x2)

inst_95349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000000007ff; valaddr_reg:x3; val_offset:286047*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286047*0 + 3*117*FLEN/8, x4, x1, x2)

inst_95350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000000fff; valaddr_reg:x3; val_offset:286050*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286050*0 + 3*118*FLEN/8, x4, x1, x2)

inst_95351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000001fff; valaddr_reg:x3; val_offset:286053*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286053*0 + 3*119*FLEN/8, x4, x1, x2)

inst_95352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000003fff; valaddr_reg:x3; val_offset:286056*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286056*0 + 3*120*FLEN/8, x4, x1, x2)

inst_95353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000007fff; valaddr_reg:x3; val_offset:286059*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286059*0 + 3*121*FLEN/8, x4, x1, x2)

inst_95354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000000ffff; valaddr_reg:x3; val_offset:286062*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286062*0 + 3*122*FLEN/8, x4, x1, x2)

inst_95355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000001ffff; valaddr_reg:x3; val_offset:286065*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286065*0 + 3*123*FLEN/8, x4, x1, x2)

inst_95356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000003ffff; valaddr_reg:x3; val_offset:286068*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286068*0 + 3*124*FLEN/8, x4, x1, x2)

inst_95357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000007ffff; valaddr_reg:x3; val_offset:286071*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286071*0 + 3*125*FLEN/8, x4, x1, x2)

inst_95358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000000fffff; valaddr_reg:x3; val_offset:286074*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286074*0 + 3*126*FLEN/8, x4, x1, x2)

inst_95359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000001fffff; valaddr_reg:x3; val_offset:286077*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286077*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_95360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000003fffff; valaddr_reg:x3; val_offset:286080*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286080*0 + 3*128*FLEN/8, x4, x1, x2)

inst_95361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000007fffff; valaddr_reg:x3; val_offset:286083*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286083*0 + 3*129*FLEN/8, x4, x1, x2)

inst_95362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000000ffffff; valaddr_reg:x3; val_offset:286086*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286086*0 + 3*130*FLEN/8, x4, x1, x2)

inst_95363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000001ffffff; valaddr_reg:x3; val_offset:286089*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286089*0 + 3*131*FLEN/8, x4, x1, x2)

inst_95364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000003ffffff; valaddr_reg:x3; val_offset:286092*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286092*0 + 3*132*FLEN/8, x4, x1, x2)

inst_95365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000007ffffff; valaddr_reg:x3; val_offset:286095*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286095*0 + 3*133*FLEN/8, x4, x1, x2)

inst_95366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000000fffffff; valaddr_reg:x3; val_offset:286098*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286098*0 + 3*134*FLEN/8, x4, x1, x2)

inst_95367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000001fffffff; valaddr_reg:x3; val_offset:286101*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286101*0 + 3*135*FLEN/8, x4, x1, x2)

inst_95368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000003fffffff; valaddr_reg:x3; val_offset:286104*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286104*0 + 3*136*FLEN/8, x4, x1, x2)

inst_95369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000007fffffff; valaddr_reg:x3; val_offset:286107*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286107*0 + 3*137*FLEN/8, x4, x1, x2)

inst_95370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800000ffffffff; valaddr_reg:x3; val_offset:286110*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286110*0 + 3*138*FLEN/8, x4, x1, x2)

inst_95371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800001ffffffff; valaddr_reg:x3; val_offset:286113*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286113*0 + 3*139*FLEN/8, x4, x1, x2)

inst_95372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800003ffffffff; valaddr_reg:x3; val_offset:286116*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286116*0 + 3*140*FLEN/8, x4, x1, x2)

inst_95373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800007ffffffff; valaddr_reg:x3; val_offset:286119*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286119*0 + 3*141*FLEN/8, x4, x1, x2)

inst_95374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080000fffffffff; valaddr_reg:x3; val_offset:286122*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286122*0 + 3*142*FLEN/8, x4, x1, x2)

inst_95375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080001fffffffff; valaddr_reg:x3; val_offset:286125*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286125*0 + 3*143*FLEN/8, x4, x1, x2)

inst_95376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080003fffffffff; valaddr_reg:x3; val_offset:286128*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286128*0 + 3*144*FLEN/8, x4, x1, x2)

inst_95377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080007fffffffff; valaddr_reg:x3; val_offset:286131*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286131*0 + 3*145*FLEN/8, x4, x1, x2)

inst_95378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808000ffffffffff; valaddr_reg:x3; val_offset:286134*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286134*0 + 3*146*FLEN/8, x4, x1, x2)

inst_95379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808001ffffffffff; valaddr_reg:x3; val_offset:286137*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286137*0 + 3*147*FLEN/8, x4, x1, x2)

inst_95380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808003ffffffffff; valaddr_reg:x3; val_offset:286140*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286140*0 + 3*148*FLEN/8, x4, x1, x2)

inst_95381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808007ffffffffff; valaddr_reg:x3; val_offset:286143*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286143*0 + 3*149*FLEN/8, x4, x1, x2)

inst_95382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80800fffffffffff; valaddr_reg:x3; val_offset:286146*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286146*0 + 3*150*FLEN/8, x4, x1, x2)

inst_95383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80801fffffffffff; valaddr_reg:x3; val_offset:286149*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286149*0 + 3*151*FLEN/8, x4, x1, x2)

inst_95384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80803fffffffffff; valaddr_reg:x3; val_offset:286152*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286152*0 + 3*152*FLEN/8, x4, x1, x2)

inst_95385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x80807fffffffffff; valaddr_reg:x3; val_offset:286155*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286155*0 + 3*153*FLEN/8, x4, x1, x2)

inst_95386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8080ffffffffffff; valaddr_reg:x3; val_offset:286158*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286158*0 + 3*154*FLEN/8, x4, x1, x2)

inst_95387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8081ffffffffffff; valaddr_reg:x3; val_offset:286161*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286161*0 + 3*155*FLEN/8, x4, x1, x2)

inst_95388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8083ffffffffffff; valaddr_reg:x3; val_offset:286164*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286164*0 + 3*156*FLEN/8, x4, x1, x2)

inst_95389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8087ffffffffffff; valaddr_reg:x3; val_offset:286167*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286167*0 + 3*157*FLEN/8, x4, x1, x2)

inst_95390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x8088000000000000; valaddr_reg:x3; val_offset:286170*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286170*0 + 3*158*FLEN/8, x4, x1, x2)

inst_95391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808c000000000000; valaddr_reg:x3; val_offset:286173*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286173*0 + 3*159*FLEN/8, x4, x1, x2)

inst_95392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808e000000000000; valaddr_reg:x3; val_offset:286176*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286176*0 + 3*160*FLEN/8, x4, x1, x2)

inst_95393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808f000000000000; valaddr_reg:x3; val_offset:286179*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286179*0 + 3*161*FLEN/8, x4, x1, x2)

inst_95394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808f800000000000; valaddr_reg:x3; val_offset:286182*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286182*0 + 3*162*FLEN/8, x4, x1, x2)

inst_95395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fc00000000000; valaddr_reg:x3; val_offset:286185*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286185*0 + 3*163*FLEN/8, x4, x1, x2)

inst_95396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fe00000000000; valaddr_reg:x3; val_offset:286188*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286188*0 + 3*164*FLEN/8, x4, x1, x2)

inst_95397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ff00000000000; valaddr_reg:x3; val_offset:286191*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286191*0 + 3*165*FLEN/8, x4, x1, x2)

inst_95398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ff80000000000; valaddr_reg:x3; val_offset:286194*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286194*0 + 3*166*FLEN/8, x4, x1, x2)

inst_95399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffc0000000000; valaddr_reg:x3; val_offset:286197*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286197*0 + 3*167*FLEN/8, x4, x1, x2)

inst_95400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffe0000000000; valaddr_reg:x3; val_offset:286200*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286200*0 + 3*168*FLEN/8, x4, x1, x2)

inst_95401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fff0000000000; valaddr_reg:x3; val_offset:286203*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286203*0 + 3*169*FLEN/8, x4, x1, x2)

inst_95402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fff8000000000; valaddr_reg:x3; val_offset:286206*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286206*0 + 3*170*FLEN/8, x4, x1, x2)

inst_95403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffc000000000; valaddr_reg:x3; val_offset:286209*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286209*0 + 3*171*FLEN/8, x4, x1, x2)

inst_95404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffe000000000; valaddr_reg:x3; val_offset:286212*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286212*0 + 3*172*FLEN/8, x4, x1, x2)

inst_95405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffff000000000; valaddr_reg:x3; val_offset:286215*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286215*0 + 3*173*FLEN/8, x4, x1, x2)

inst_95406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffff800000000; valaddr_reg:x3; val_offset:286218*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286218*0 + 3*174*FLEN/8, x4, x1, x2)

inst_95407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffc00000000; valaddr_reg:x3; val_offset:286221*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286221*0 + 3*175*FLEN/8, x4, x1, x2)

inst_95408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffe00000000; valaddr_reg:x3; val_offset:286224*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286224*0 + 3*176*FLEN/8, x4, x1, x2)

inst_95409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffff00000000; valaddr_reg:x3; val_offset:286227*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286227*0 + 3*177*FLEN/8, x4, x1, x2)

inst_95410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffff80000000; valaddr_reg:x3; val_offset:286230*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286230*0 + 3*178*FLEN/8, x4, x1, x2)

inst_95411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffc0000000; valaddr_reg:x3; val_offset:286233*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286233*0 + 3*179*FLEN/8, x4, x1, x2)

inst_95412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffe0000000; valaddr_reg:x3; val_offset:286236*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286236*0 + 3*180*FLEN/8, x4, x1, x2)

inst_95413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffff0000000; valaddr_reg:x3; val_offset:286239*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286239*0 + 3*181*FLEN/8, x4, x1, x2)

inst_95414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffff8000000; valaddr_reg:x3; val_offset:286242*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286242*0 + 3*182*FLEN/8, x4, x1, x2)

inst_95415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffc000000; valaddr_reg:x3; val_offset:286245*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286245*0 + 3*183*FLEN/8, x4, x1, x2)

inst_95416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffe000000; valaddr_reg:x3; val_offset:286248*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286248*0 + 3*184*FLEN/8, x4, x1, x2)

inst_95417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffff000000; valaddr_reg:x3; val_offset:286251*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286251*0 + 3*185*FLEN/8, x4, x1, x2)

inst_95418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffff800000; valaddr_reg:x3; val_offset:286254*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286254*0 + 3*186*FLEN/8, x4, x1, x2)

inst_95419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffc00000; valaddr_reg:x3; val_offset:286257*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286257*0 + 3*187*FLEN/8, x4, x1, x2)

inst_95420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffe00000; valaddr_reg:x3; val_offset:286260*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286260*0 + 3*188*FLEN/8, x4, x1, x2)

inst_95421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffff00000; valaddr_reg:x3; val_offset:286263*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286263*0 + 3*189*FLEN/8, x4, x1, x2)

inst_95422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffff80000; valaddr_reg:x3; val_offset:286266*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286266*0 + 3*190*FLEN/8, x4, x1, x2)

inst_95423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffc0000; valaddr_reg:x3; val_offset:286269*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286269*0 + 3*191*FLEN/8, x4, x1, x2)

inst_95424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffe0000; valaddr_reg:x3; val_offset:286272*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286272*0 + 3*192*FLEN/8, x4, x1, x2)

inst_95425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffff0000; valaddr_reg:x3; val_offset:286275*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286275*0 + 3*193*FLEN/8, x4, x1, x2)

inst_95426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffff8000; valaddr_reg:x3; val_offset:286278*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286278*0 + 3*194*FLEN/8, x4, x1, x2)

inst_95427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffc000; valaddr_reg:x3; val_offset:286281*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286281*0 + 3*195*FLEN/8, x4, x1, x2)

inst_95428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffe000; valaddr_reg:x3; val_offset:286284*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286284*0 + 3*196*FLEN/8, x4, x1, x2)

inst_95429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffff000; valaddr_reg:x3; val_offset:286287*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286287*0 + 3*197*FLEN/8, x4, x1, x2)

inst_95430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffff800; valaddr_reg:x3; val_offset:286290*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286290*0 + 3*198*FLEN/8, x4, x1, x2)

inst_95431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffc00; valaddr_reg:x3; val_offset:286293*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286293*0 + 3*199*FLEN/8, x4, x1, x2)

inst_95432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffe00; valaddr_reg:x3; val_offset:286296*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286296*0 + 3*200*FLEN/8, x4, x1, x2)

inst_95433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffff00; valaddr_reg:x3; val_offset:286299*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286299*0 + 3*201*FLEN/8, x4, x1, x2)

inst_95434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffff80; valaddr_reg:x3; val_offset:286302*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286302*0 + 3*202*FLEN/8, x4, x1, x2)

inst_95435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffffc0; valaddr_reg:x3; val_offset:286305*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286305*0 + 3*203*FLEN/8, x4, x1, x2)

inst_95436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffffe0; valaddr_reg:x3; val_offset:286308*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286308*0 + 3*204*FLEN/8, x4, x1, x2)

inst_95437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffff0; valaddr_reg:x3; val_offset:286311*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286311*0 + 3*205*FLEN/8, x4, x1, x2)

inst_95438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffff8; valaddr_reg:x3; val_offset:286314*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286314*0 + 3*206*FLEN/8, x4, x1, x2)

inst_95439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffffc; valaddr_reg:x3; val_offset:286317*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286317*0 + 3*207*FLEN/8, x4, x1, x2)

inst_95440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808ffffffffffffe; valaddr_reg:x3; val_offset:286320*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286320*0 + 3*208*FLEN/8, x4, x1, x2)

inst_95441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xd90d90e35f7a1 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x008 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fad90d90e35f7a1; op2val:0x8000;
op3val:0x808fffffffffffff; valaddr_reg:x3; val_offset:286323*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286323*0 + 3*209*FLEN/8, x4, x1, x2)

inst_95442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:286326*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286326*0 + 3*210*FLEN/8, x4, x1, x2)

inst_95443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:286329*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286329*0 + 3*211*FLEN/8, x4, x1, x2)

inst_95444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:286332*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286332*0 + 3*212*FLEN/8, x4, x1, x2)

inst_95445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:286335*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286335*0 + 3*213*FLEN/8, x4, x1, x2)

inst_95446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:286338*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286338*0 + 3*214*FLEN/8, x4, x1, x2)

inst_95447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:286341*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286341*0 + 3*215*FLEN/8, x4, x1, x2)

inst_95448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:286344*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286344*0 + 3*216*FLEN/8, x4, x1, x2)

inst_95449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:286347*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286347*0 + 3*217*FLEN/8, x4, x1, x2)

inst_95450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:286350*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286350*0 + 3*218*FLEN/8, x4, x1, x2)

inst_95451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:286353*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286353*0 + 3*219*FLEN/8, x4, x1, x2)

inst_95452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:286356*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286356*0 + 3*220*FLEN/8, x4, x1, x2)

inst_95453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:286359*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286359*0 + 3*221*FLEN/8, x4, x1, x2)

inst_95454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:286362*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286362*0 + 3*222*FLEN/8, x4, x1, x2)

inst_95455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:286365*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286365*0 + 3*223*FLEN/8, x4, x1, x2)

inst_95456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:286368*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286368*0 + 3*224*FLEN/8, x4, x1, x2)

inst_95457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:286371*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286371*0 + 3*225*FLEN/8, x4, x1, x2)

inst_95458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:286374*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286374*0 + 3*226*FLEN/8, x4, x1, x2)

inst_95459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:286377*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286377*0 + 3*227*FLEN/8, x4, x1, x2)

inst_95460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:286380*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286380*0 + 3*228*FLEN/8, x4, x1, x2)

inst_95461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:286383*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286383*0 + 3*229*FLEN/8, x4, x1, x2)

inst_95462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:286386*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286386*0 + 3*230*FLEN/8, x4, x1, x2)

inst_95463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:286389*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286389*0 + 3*231*FLEN/8, x4, x1, x2)

inst_95464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000000000; valaddr_reg:x3; val_offset:286392*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286392*0 + 3*232*FLEN/8, x4, x1, x2)

inst_95465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000000001; valaddr_reg:x3; val_offset:286395*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286395*0 + 3*233*FLEN/8, x4, x1, x2)

inst_95466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000000003; valaddr_reg:x3; val_offset:286398*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286398*0 + 3*234*FLEN/8, x4, x1, x2)

inst_95467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000000007; valaddr_reg:x3; val_offset:286401*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286401*0 + 3*235*FLEN/8, x4, x1, x2)

inst_95468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000000000f; valaddr_reg:x3; val_offset:286404*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286404*0 + 3*236*FLEN/8, x4, x1, x2)

inst_95469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000000001f; valaddr_reg:x3; val_offset:286407*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286407*0 + 3*237*FLEN/8, x4, x1, x2)

inst_95470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000000003f; valaddr_reg:x3; val_offset:286410*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286410*0 + 3*238*FLEN/8, x4, x1, x2)

inst_95471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000000007f; valaddr_reg:x3; val_offset:286413*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286413*0 + 3*239*FLEN/8, x4, x1, x2)

inst_95472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000000000ff; valaddr_reg:x3; val_offset:286416*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286416*0 + 3*240*FLEN/8, x4, x1, x2)

inst_95473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000000001ff; valaddr_reg:x3; val_offset:286419*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286419*0 + 3*241*FLEN/8, x4, x1, x2)

inst_95474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000000003ff; valaddr_reg:x3; val_offset:286422*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286422*0 + 3*242*FLEN/8, x4, x1, x2)

inst_95475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000000007ff; valaddr_reg:x3; val_offset:286425*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286425*0 + 3*243*FLEN/8, x4, x1, x2)

inst_95476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000000fff; valaddr_reg:x3; val_offset:286428*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286428*0 + 3*244*FLEN/8, x4, x1, x2)

inst_95477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000001fff; valaddr_reg:x3; val_offset:286431*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286431*0 + 3*245*FLEN/8, x4, x1, x2)

inst_95478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000003fff; valaddr_reg:x3; val_offset:286434*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286434*0 + 3*246*FLEN/8, x4, x1, x2)

inst_95479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000007fff; valaddr_reg:x3; val_offset:286437*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286437*0 + 3*247*FLEN/8, x4, x1, x2)

inst_95480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000000ffff; valaddr_reg:x3; val_offset:286440*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286440*0 + 3*248*FLEN/8, x4, x1, x2)

inst_95481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000001ffff; valaddr_reg:x3; val_offset:286443*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286443*0 + 3*249*FLEN/8, x4, x1, x2)

inst_95482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000003ffff; valaddr_reg:x3; val_offset:286446*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286446*0 + 3*250*FLEN/8, x4, x1, x2)

inst_95483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000007ffff; valaddr_reg:x3; val_offset:286449*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286449*0 + 3*251*FLEN/8, x4, x1, x2)

inst_95484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000000fffff; valaddr_reg:x3; val_offset:286452*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286452*0 + 3*252*FLEN/8, x4, x1, x2)

inst_95485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000001fffff; valaddr_reg:x3; val_offset:286455*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286455*0 + 3*253*FLEN/8, x4, x1, x2)

inst_95486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000003fffff; valaddr_reg:x3; val_offset:286458*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286458*0 + 3*254*FLEN/8, x4, x1, x2)

inst_95487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000007fffff; valaddr_reg:x3; val_offset:286461*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286461*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_95488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000000ffffff; valaddr_reg:x3; val_offset:286464*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286464*0 + 3*256*FLEN/8, x4, x1, x2)

inst_95489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000001ffffff; valaddr_reg:x3; val_offset:286467*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286467*0 + 3*257*FLEN/8, x4, x1, x2)

inst_95490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000003ffffff; valaddr_reg:x3; val_offset:286470*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286470*0 + 3*258*FLEN/8, x4, x1, x2)

inst_95491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000007ffffff; valaddr_reg:x3; val_offset:286473*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286473*0 + 3*259*FLEN/8, x4, x1, x2)

inst_95492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000000fffffff; valaddr_reg:x3; val_offset:286476*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286476*0 + 3*260*FLEN/8, x4, x1, x2)

inst_95493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000001fffffff; valaddr_reg:x3; val_offset:286479*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286479*0 + 3*261*FLEN/8, x4, x1, x2)

inst_95494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000003fffffff; valaddr_reg:x3; val_offset:286482*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286482*0 + 3*262*FLEN/8, x4, x1, x2)

inst_95495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000007fffffff; valaddr_reg:x3; val_offset:286485*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286485*0 + 3*263*FLEN/8, x4, x1, x2)

inst_95496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00000ffffffff; valaddr_reg:x3; val_offset:286488*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286488*0 + 3*264*FLEN/8, x4, x1, x2)

inst_95497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00001ffffffff; valaddr_reg:x3; val_offset:286491*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286491*0 + 3*265*FLEN/8, x4, x1, x2)

inst_95498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00003ffffffff; valaddr_reg:x3; val_offset:286494*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286494*0 + 3*266*FLEN/8, x4, x1, x2)

inst_95499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00007ffffffff; valaddr_reg:x3; val_offset:286497*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286497*0 + 3*267*FLEN/8, x4, x1, x2)

inst_95500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0000fffffffff; valaddr_reg:x3; val_offset:286500*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286500*0 + 3*268*FLEN/8, x4, x1, x2)

inst_95501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0001fffffffff; valaddr_reg:x3; val_offset:286503*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286503*0 + 3*269*FLEN/8, x4, x1, x2)

inst_95502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0003fffffffff; valaddr_reg:x3; val_offset:286506*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286506*0 + 3*270*FLEN/8, x4, x1, x2)

inst_95503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0007fffffffff; valaddr_reg:x3; val_offset:286509*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286509*0 + 3*271*FLEN/8, x4, x1, x2)

inst_95504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf000ffffffffff; valaddr_reg:x3; val_offset:286512*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286512*0 + 3*272*FLEN/8, x4, x1, x2)

inst_95505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf001ffffffffff; valaddr_reg:x3; val_offset:286515*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286515*0 + 3*273*FLEN/8, x4, x1, x2)

inst_95506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf003ffffffffff; valaddr_reg:x3; val_offset:286518*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286518*0 + 3*274*FLEN/8, x4, x1, x2)

inst_95507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf007ffffffffff; valaddr_reg:x3; val_offset:286521*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286521*0 + 3*275*FLEN/8, x4, x1, x2)

inst_95508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf00fffffffffff; valaddr_reg:x3; val_offset:286524*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286524*0 + 3*276*FLEN/8, x4, x1, x2)

inst_95509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf01fffffffffff; valaddr_reg:x3; val_offset:286527*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286527*0 + 3*277*FLEN/8, x4, x1, x2)

inst_95510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf03fffffffffff; valaddr_reg:x3; val_offset:286530*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286530*0 + 3*278*FLEN/8, x4, x1, x2)

inst_95511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf07fffffffffff; valaddr_reg:x3; val_offset:286533*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286533*0 + 3*279*FLEN/8, x4, x1, x2)

inst_95512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf0ffffffffffff; valaddr_reg:x3; val_offset:286536*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286536*0 + 3*280*FLEN/8, x4, x1, x2)

inst_95513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf1ffffffffffff; valaddr_reg:x3; val_offset:286539*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286539*0 + 3*281*FLEN/8, x4, x1, x2)

inst_95514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf3ffffffffffff; valaddr_reg:x3; val_offset:286542*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286542*0 + 3*282*FLEN/8, x4, x1, x2)

inst_95515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf7ffffffffffff; valaddr_reg:x3; val_offset:286545*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286545*0 + 3*283*FLEN/8, x4, x1, x2)

inst_95516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xf8000000000000; valaddr_reg:x3; val_offset:286548*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286548*0 + 3*284*FLEN/8, x4, x1, x2)

inst_95517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfc000000000000; valaddr_reg:x3; val_offset:286551*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286551*0 + 3*285*FLEN/8, x4, x1, x2)

inst_95518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfe000000000000; valaddr_reg:x3; val_offset:286554*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286554*0 + 3*286*FLEN/8, x4, x1, x2)

inst_95519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xff000000000000; valaddr_reg:x3; val_offset:286557*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286557*0 + 3*287*FLEN/8, x4, x1, x2)

inst_95520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xff800000000000; valaddr_reg:x3; val_offset:286560*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286560*0 + 3*288*FLEN/8, x4, x1, x2)

inst_95521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffc00000000000; valaddr_reg:x3; val_offset:286563*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286563*0 + 3*289*FLEN/8, x4, x1, x2)

inst_95522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffe00000000000; valaddr_reg:x3; val_offset:286566*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286566*0 + 3*290*FLEN/8, x4, x1, x2)

inst_95523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfff00000000000; valaddr_reg:x3; val_offset:286569*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286569*0 + 3*291*FLEN/8, x4, x1, x2)

inst_95524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfff80000000000; valaddr_reg:x3; val_offset:286572*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286572*0 + 3*292*FLEN/8, x4, x1, x2)

inst_95525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffc0000000000; valaddr_reg:x3; val_offset:286575*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286575*0 + 3*293*FLEN/8, x4, x1, x2)

inst_95526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffe0000000000; valaddr_reg:x3; val_offset:286578*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286578*0 + 3*294*FLEN/8, x4, x1, x2)

inst_95527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffff0000000000; valaddr_reg:x3; val_offset:286581*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286581*0 + 3*295*FLEN/8, x4, x1, x2)

inst_95528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffff8000000000; valaddr_reg:x3; val_offset:286584*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286584*0 + 3*296*FLEN/8, x4, x1, x2)

inst_95529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffc000000000; valaddr_reg:x3; val_offset:286587*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286587*0 + 3*297*FLEN/8, x4, x1, x2)

inst_95530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffe000000000; valaddr_reg:x3; val_offset:286590*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286590*0 + 3*298*FLEN/8, x4, x1, x2)

inst_95531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffff000000000; valaddr_reg:x3; val_offset:286593*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286593*0 + 3*299*FLEN/8, x4, x1, x2)

inst_95532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffff800000000; valaddr_reg:x3; val_offset:286596*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286596*0 + 3*300*FLEN/8, x4, x1, x2)

inst_95533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffc00000000; valaddr_reg:x3; val_offset:286599*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286599*0 + 3*301*FLEN/8, x4, x1, x2)

inst_95534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffe00000000; valaddr_reg:x3; val_offset:286602*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286602*0 + 3*302*FLEN/8, x4, x1, x2)

inst_95535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffff00000000; valaddr_reg:x3; val_offset:286605*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286605*0 + 3*303*FLEN/8, x4, x1, x2)

inst_95536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffff80000000; valaddr_reg:x3; val_offset:286608*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286608*0 + 3*304*FLEN/8, x4, x1, x2)

inst_95537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffc0000000; valaddr_reg:x3; val_offset:286611*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286611*0 + 3*305*FLEN/8, x4, x1, x2)

inst_95538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffe0000000; valaddr_reg:x3; val_offset:286614*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286614*0 + 3*306*FLEN/8, x4, x1, x2)

inst_95539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffff0000000; valaddr_reg:x3; val_offset:286617*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286617*0 + 3*307*FLEN/8, x4, x1, x2)

inst_95540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffff8000000; valaddr_reg:x3; val_offset:286620*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286620*0 + 3*308*FLEN/8, x4, x1, x2)

inst_95541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffc000000; valaddr_reg:x3; val_offset:286623*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286623*0 + 3*309*FLEN/8, x4, x1, x2)

inst_95542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffe000000; valaddr_reg:x3; val_offset:286626*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286626*0 + 3*310*FLEN/8, x4, x1, x2)

inst_95543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffff000000; valaddr_reg:x3; val_offset:286629*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286629*0 + 3*311*FLEN/8, x4, x1, x2)

inst_95544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffff800000; valaddr_reg:x3; val_offset:286632*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286632*0 + 3*312*FLEN/8, x4, x1, x2)

inst_95545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffc00000; valaddr_reg:x3; val_offset:286635*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286635*0 + 3*313*FLEN/8, x4, x1, x2)

inst_95546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffe00000; valaddr_reg:x3; val_offset:286638*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286638*0 + 3*314*FLEN/8, x4, x1, x2)

inst_95547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffff00000; valaddr_reg:x3; val_offset:286641*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286641*0 + 3*315*FLEN/8, x4, x1, x2)

inst_95548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffff80000; valaddr_reg:x3; val_offset:286644*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286644*0 + 3*316*FLEN/8, x4, x1, x2)

inst_95549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffc0000; valaddr_reg:x3; val_offset:286647*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286647*0 + 3*317*FLEN/8, x4, x1, x2)

inst_95550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffe0000; valaddr_reg:x3; val_offset:286650*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286650*0 + 3*318*FLEN/8, x4, x1, x2)

inst_95551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffff0000; valaddr_reg:x3; val_offset:286653*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286653*0 + 3*319*FLEN/8, x4, x1, x2)

inst_95552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffff8000; valaddr_reg:x3; val_offset:286656*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286656*0 + 3*320*FLEN/8, x4, x1, x2)

inst_95553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffc000; valaddr_reg:x3; val_offset:286659*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286659*0 + 3*321*FLEN/8, x4, x1, x2)

inst_95554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffe000; valaddr_reg:x3; val_offset:286662*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286662*0 + 3*322*FLEN/8, x4, x1, x2)

inst_95555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffff000; valaddr_reg:x3; val_offset:286665*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286665*0 + 3*323*FLEN/8, x4, x1, x2)

inst_95556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffff800; valaddr_reg:x3; val_offset:286668*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286668*0 + 3*324*FLEN/8, x4, x1, x2)

inst_95557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffc00; valaddr_reg:x3; val_offset:286671*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286671*0 + 3*325*FLEN/8, x4, x1, x2)

inst_95558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffe00; valaddr_reg:x3; val_offset:286674*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286674*0 + 3*326*FLEN/8, x4, x1, x2)

inst_95559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffff00; valaddr_reg:x3; val_offset:286677*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286677*0 + 3*327*FLEN/8, x4, x1, x2)

inst_95560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffff80; valaddr_reg:x3; val_offset:286680*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286680*0 + 3*328*FLEN/8, x4, x1, x2)

inst_95561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffffc0; valaddr_reg:x3; val_offset:286683*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286683*0 + 3*329*FLEN/8, x4, x1, x2)

inst_95562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffffe0; valaddr_reg:x3; val_offset:286686*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286686*0 + 3*330*FLEN/8, x4, x1, x2)

inst_95563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffff0; valaddr_reg:x3; val_offset:286689*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286689*0 + 3*331*FLEN/8, x4, x1, x2)

inst_95564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffff8; valaddr_reg:x3; val_offset:286692*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286692*0 + 3*332*FLEN/8, x4, x1, x2)

inst_95565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffffc; valaddr_reg:x3; val_offset:286695*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286695*0 + 3*333*FLEN/8, x4, x1, x2)

inst_95566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xfffffffffffffe; valaddr_reg:x3; val_offset:286698*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286698*0 + 3*334*FLEN/8, x4, x1, x2)

inst_95567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xda071b617bccf and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fada071b617bccf; op2val:0x0;
op3val:0xffffffffffffff; valaddr_reg:x3; val_offset:286701*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286701*0 + 3*335*FLEN/8, x4, x1, x2)

inst_95568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:286704*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286704*0 + 3*336*FLEN/8, x4, x1, x2)

inst_95569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:286707*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286707*0 + 3*337*FLEN/8, x4, x1, x2)

inst_95570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:286710*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286710*0 + 3*338*FLEN/8, x4, x1, x2)

inst_95571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:286713*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286713*0 + 3*339*FLEN/8, x4, x1, x2)

inst_95572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:286716*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286716*0 + 3*340*FLEN/8, x4, x1, x2)

inst_95573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:286719*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286719*0 + 3*341*FLEN/8, x4, x1, x2)

inst_95574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:286722*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286722*0 + 3*342*FLEN/8, x4, x1, x2)

inst_95575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:286725*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286725*0 + 3*343*FLEN/8, x4, x1, x2)

inst_95576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:286728*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286728*0 + 3*344*FLEN/8, x4, x1, x2)

inst_95577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:286731*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286731*0 + 3*345*FLEN/8, x4, x1, x2)

inst_95578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:286734*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286734*0 + 3*346*FLEN/8, x4, x1, x2)

inst_95579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:286737*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286737*0 + 3*347*FLEN/8, x4, x1, x2)

inst_95580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:286740*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286740*0 + 3*348*FLEN/8, x4, x1, x2)

inst_95581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:286743*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286743*0 + 3*349*FLEN/8, x4, x1, x2)

inst_95582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:286746*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286746*0 + 3*350*FLEN/8, x4, x1, x2)

inst_95583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:286749*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286749*0 + 3*351*FLEN/8, x4, x1, x2)

inst_95584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:286752*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286752*0 + 3*352*FLEN/8, x4, x1, x2)

inst_95585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:286755*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286755*0 + 3*353*FLEN/8, x4, x1, x2)

inst_95586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:286758*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286758*0 + 3*354*FLEN/8, x4, x1, x2)

inst_95587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:286761*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286761*0 + 3*355*FLEN/8, x4, x1, x2)

inst_95588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:286764*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286764*0 + 3*356*FLEN/8, x4, x1, x2)

inst_95589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:286767*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286767*0 + 3*357*FLEN/8, x4, x1, x2)

inst_95590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000000000; valaddr_reg:x3; val_offset:286770*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286770*0 + 3*358*FLEN/8, x4, x1, x2)

inst_95591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000000001; valaddr_reg:x3; val_offset:286773*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286773*0 + 3*359*FLEN/8, x4, x1, x2)

inst_95592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000000003; valaddr_reg:x3; val_offset:286776*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286776*0 + 3*360*FLEN/8, x4, x1, x2)

inst_95593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000000007; valaddr_reg:x3; val_offset:286779*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286779*0 + 3*361*FLEN/8, x4, x1, x2)

inst_95594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000000000f; valaddr_reg:x3; val_offset:286782*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286782*0 + 3*362*FLEN/8, x4, x1, x2)

inst_95595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000000001f; valaddr_reg:x3; val_offset:286785*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286785*0 + 3*363*FLEN/8, x4, x1, x2)

inst_95596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000000003f; valaddr_reg:x3; val_offset:286788*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286788*0 + 3*364*FLEN/8, x4, x1, x2)

inst_95597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000000007f; valaddr_reg:x3; val_offset:286791*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286791*0 + 3*365*FLEN/8, x4, x1, x2)

inst_95598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000000000ff; valaddr_reg:x3; val_offset:286794*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286794*0 + 3*366*FLEN/8, x4, x1, x2)

inst_95599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000000001ff; valaddr_reg:x3; val_offset:286797*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286797*0 + 3*367*FLEN/8, x4, x1, x2)

inst_95600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000000003ff; valaddr_reg:x3; val_offset:286800*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286800*0 + 3*368*FLEN/8, x4, x1, x2)

inst_95601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000000007ff; valaddr_reg:x3; val_offset:286803*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286803*0 + 3*369*FLEN/8, x4, x1, x2)

inst_95602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000000fff; valaddr_reg:x3; val_offset:286806*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286806*0 + 3*370*FLEN/8, x4, x1, x2)

inst_95603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000001fff; valaddr_reg:x3; val_offset:286809*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286809*0 + 3*371*FLEN/8, x4, x1, x2)

inst_95604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000003fff; valaddr_reg:x3; val_offset:286812*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286812*0 + 3*372*FLEN/8, x4, x1, x2)

inst_95605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000007fff; valaddr_reg:x3; val_offset:286815*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286815*0 + 3*373*FLEN/8, x4, x1, x2)

inst_95606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000000ffff; valaddr_reg:x3; val_offset:286818*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286818*0 + 3*374*FLEN/8, x4, x1, x2)

inst_95607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000001ffff; valaddr_reg:x3; val_offset:286821*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286821*0 + 3*375*FLEN/8, x4, x1, x2)

inst_95608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000003ffff; valaddr_reg:x3; val_offset:286824*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286824*0 + 3*376*FLEN/8, x4, x1, x2)

inst_95609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000007ffff; valaddr_reg:x3; val_offset:286827*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286827*0 + 3*377*FLEN/8, x4, x1, x2)

inst_95610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000000fffff; valaddr_reg:x3; val_offset:286830*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286830*0 + 3*378*FLEN/8, x4, x1, x2)

inst_95611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000001fffff; valaddr_reg:x3; val_offset:286833*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286833*0 + 3*379*FLEN/8, x4, x1, x2)

inst_95612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000003fffff; valaddr_reg:x3; val_offset:286836*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286836*0 + 3*380*FLEN/8, x4, x1, x2)

inst_95613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000007fffff; valaddr_reg:x3; val_offset:286839*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286839*0 + 3*381*FLEN/8, x4, x1, x2)

inst_95614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000000ffffff; valaddr_reg:x3; val_offset:286842*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286842*0 + 3*382*FLEN/8, x4, x1, x2)

inst_95615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000001ffffff; valaddr_reg:x3; val_offset:286845*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286845*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_95616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000003ffffff; valaddr_reg:x3; val_offset:286848*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286848*0 + 3*384*FLEN/8, x4, x1, x2)

inst_95617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000007ffffff; valaddr_reg:x3; val_offset:286851*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286851*0 + 3*385*FLEN/8, x4, x1, x2)

inst_95618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000000fffffff; valaddr_reg:x3; val_offset:286854*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286854*0 + 3*386*FLEN/8, x4, x1, x2)

inst_95619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000001fffffff; valaddr_reg:x3; val_offset:286857*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286857*0 + 3*387*FLEN/8, x4, x1, x2)

inst_95620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000003fffffff; valaddr_reg:x3; val_offset:286860*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286860*0 + 3*388*FLEN/8, x4, x1, x2)

inst_95621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000007fffffff; valaddr_reg:x3; val_offset:286863*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286863*0 + 3*389*FLEN/8, x4, x1, x2)

inst_95622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600000ffffffff; valaddr_reg:x3; val_offset:286866*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286866*0 + 3*390*FLEN/8, x4, x1, x2)

inst_95623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600001ffffffff; valaddr_reg:x3; val_offset:286869*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286869*0 + 3*391*FLEN/8, x4, x1, x2)

inst_95624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600003ffffffff; valaddr_reg:x3; val_offset:286872*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286872*0 + 3*392*FLEN/8, x4, x1, x2)

inst_95625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600007ffffffff; valaddr_reg:x3; val_offset:286875*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286875*0 + 3*393*FLEN/8, x4, x1, x2)

inst_95626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360000fffffffff; valaddr_reg:x3; val_offset:286878*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286878*0 + 3*394*FLEN/8, x4, x1, x2)

inst_95627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360001fffffffff; valaddr_reg:x3; val_offset:286881*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286881*0 + 3*395*FLEN/8, x4, x1, x2)

inst_95628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360003fffffffff; valaddr_reg:x3; val_offset:286884*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286884*0 + 3*396*FLEN/8, x4, x1, x2)

inst_95629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360007fffffffff; valaddr_reg:x3; val_offset:286887*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286887*0 + 3*397*FLEN/8, x4, x1, x2)

inst_95630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836000ffffffffff; valaddr_reg:x3; val_offset:286890*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286890*0 + 3*398*FLEN/8, x4, x1, x2)

inst_95631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836001ffffffffff; valaddr_reg:x3; val_offset:286893*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286893*0 + 3*399*FLEN/8, x4, x1, x2)

inst_95632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836003ffffffffff; valaddr_reg:x3; val_offset:286896*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286896*0 + 3*400*FLEN/8, x4, x1, x2)

inst_95633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836007ffffffffff; valaddr_reg:x3; val_offset:286899*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286899*0 + 3*401*FLEN/8, x4, x1, x2)

inst_95634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83600fffffffffff; valaddr_reg:x3; val_offset:286902*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286902*0 + 3*402*FLEN/8, x4, x1, x2)

inst_95635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83601fffffffffff; valaddr_reg:x3; val_offset:286905*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286905*0 + 3*403*FLEN/8, x4, x1, x2)

inst_95636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83603fffffffffff; valaddr_reg:x3; val_offset:286908*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286908*0 + 3*404*FLEN/8, x4, x1, x2)

inst_95637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x83607fffffffffff; valaddr_reg:x3; val_offset:286911*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286911*0 + 3*405*FLEN/8, x4, x1, x2)

inst_95638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8360ffffffffffff; valaddr_reg:x3; val_offset:286914*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286914*0 + 3*406*FLEN/8, x4, x1, x2)

inst_95639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8361ffffffffffff; valaddr_reg:x3; val_offset:286917*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286917*0 + 3*407*FLEN/8, x4, x1, x2)

inst_95640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8363ffffffffffff; valaddr_reg:x3; val_offset:286920*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286920*0 + 3*408*FLEN/8, x4, x1, x2)

inst_95641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8367ffffffffffff; valaddr_reg:x3; val_offset:286923*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286923*0 + 3*409*FLEN/8, x4, x1, x2)

inst_95642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x8368000000000000; valaddr_reg:x3; val_offset:286926*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286926*0 + 3*410*FLEN/8, x4, x1, x2)

inst_95643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836c000000000000; valaddr_reg:x3; val_offset:286929*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286929*0 + 3*411*FLEN/8, x4, x1, x2)

inst_95644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836e000000000000; valaddr_reg:x3; val_offset:286932*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286932*0 + 3*412*FLEN/8, x4, x1, x2)

inst_95645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836f000000000000; valaddr_reg:x3; val_offset:286935*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286935*0 + 3*413*FLEN/8, x4, x1, x2)

inst_95646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836f800000000000; valaddr_reg:x3; val_offset:286938*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286938*0 + 3*414*FLEN/8, x4, x1, x2)

inst_95647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fc00000000000; valaddr_reg:x3; val_offset:286941*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286941*0 + 3*415*FLEN/8, x4, x1, x2)

inst_95648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fe00000000000; valaddr_reg:x3; val_offset:286944*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286944*0 + 3*416*FLEN/8, x4, x1, x2)

inst_95649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ff00000000000; valaddr_reg:x3; val_offset:286947*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286947*0 + 3*417*FLEN/8, x4, x1, x2)

inst_95650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ff80000000000; valaddr_reg:x3; val_offset:286950*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286950*0 + 3*418*FLEN/8, x4, x1, x2)

inst_95651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffc0000000000; valaddr_reg:x3; val_offset:286953*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286953*0 + 3*419*FLEN/8, x4, x1, x2)

inst_95652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffe0000000000; valaddr_reg:x3; val_offset:286956*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286956*0 + 3*420*FLEN/8, x4, x1, x2)

inst_95653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fff0000000000; valaddr_reg:x3; val_offset:286959*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286959*0 + 3*421*FLEN/8, x4, x1, x2)

inst_95654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fff8000000000; valaddr_reg:x3; val_offset:286962*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286962*0 + 3*422*FLEN/8, x4, x1, x2)

inst_95655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffc000000000; valaddr_reg:x3; val_offset:286965*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286965*0 + 3*423*FLEN/8, x4, x1, x2)

inst_95656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffe000000000; valaddr_reg:x3; val_offset:286968*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286968*0 + 3*424*FLEN/8, x4, x1, x2)

inst_95657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffff000000000; valaddr_reg:x3; val_offset:286971*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286971*0 + 3*425*FLEN/8, x4, x1, x2)

inst_95658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffff800000000; valaddr_reg:x3; val_offset:286974*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286974*0 + 3*426*FLEN/8, x4, x1, x2)

inst_95659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffc00000000; valaddr_reg:x3; val_offset:286977*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286977*0 + 3*427*FLEN/8, x4, x1, x2)

inst_95660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffe00000000; valaddr_reg:x3; val_offset:286980*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286980*0 + 3*428*FLEN/8, x4, x1, x2)

inst_95661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffff00000000; valaddr_reg:x3; val_offset:286983*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286983*0 + 3*429*FLEN/8, x4, x1, x2)

inst_95662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffff80000000; valaddr_reg:x3; val_offset:286986*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286986*0 + 3*430*FLEN/8, x4, x1, x2)

inst_95663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffc0000000; valaddr_reg:x3; val_offset:286989*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286989*0 + 3*431*FLEN/8, x4, x1, x2)

inst_95664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffe0000000; valaddr_reg:x3; val_offset:286992*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286992*0 + 3*432*FLEN/8, x4, x1, x2)

inst_95665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffff0000000; valaddr_reg:x3; val_offset:286995*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286995*0 + 3*433*FLEN/8, x4, x1, x2)

inst_95666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffff8000000; valaddr_reg:x3; val_offset:286998*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 286998*0 + 3*434*FLEN/8, x4, x1, x2)

inst_95667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffc000000; valaddr_reg:x3; val_offset:287001*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287001*0 + 3*435*FLEN/8, x4, x1, x2)

inst_95668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffe000000; valaddr_reg:x3; val_offset:287004*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287004*0 + 3*436*FLEN/8, x4, x1, x2)

inst_95669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffff000000; valaddr_reg:x3; val_offset:287007*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287007*0 + 3*437*FLEN/8, x4, x1, x2)

inst_95670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffff800000; valaddr_reg:x3; val_offset:287010*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287010*0 + 3*438*FLEN/8, x4, x1, x2)

inst_95671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffc00000; valaddr_reg:x3; val_offset:287013*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287013*0 + 3*439*FLEN/8, x4, x1, x2)

inst_95672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffe00000; valaddr_reg:x3; val_offset:287016*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287016*0 + 3*440*FLEN/8, x4, x1, x2)

inst_95673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffff00000; valaddr_reg:x3; val_offset:287019*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287019*0 + 3*441*FLEN/8, x4, x1, x2)

inst_95674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffff80000; valaddr_reg:x3; val_offset:287022*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287022*0 + 3*442*FLEN/8, x4, x1, x2)

inst_95675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffc0000; valaddr_reg:x3; val_offset:287025*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287025*0 + 3*443*FLEN/8, x4, x1, x2)

inst_95676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffe0000; valaddr_reg:x3; val_offset:287028*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287028*0 + 3*444*FLEN/8, x4, x1, x2)

inst_95677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffff0000; valaddr_reg:x3; val_offset:287031*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287031*0 + 3*445*FLEN/8, x4, x1, x2)

inst_95678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffff8000; valaddr_reg:x3; val_offset:287034*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287034*0 + 3*446*FLEN/8, x4, x1, x2)

inst_95679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffc000; valaddr_reg:x3; val_offset:287037*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287037*0 + 3*447*FLEN/8, x4, x1, x2)

inst_95680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffe000; valaddr_reg:x3; val_offset:287040*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287040*0 + 3*448*FLEN/8, x4, x1, x2)

inst_95681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffff000; valaddr_reg:x3; val_offset:287043*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287043*0 + 3*449*FLEN/8, x4, x1, x2)

inst_95682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffff800; valaddr_reg:x3; val_offset:287046*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287046*0 + 3*450*FLEN/8, x4, x1, x2)

inst_95683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffc00; valaddr_reg:x3; val_offset:287049*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287049*0 + 3*451*FLEN/8, x4, x1, x2)

inst_95684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffe00; valaddr_reg:x3; val_offset:287052*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287052*0 + 3*452*FLEN/8, x4, x1, x2)

inst_95685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffff00; valaddr_reg:x3; val_offset:287055*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287055*0 + 3*453*FLEN/8, x4, x1, x2)

inst_95686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffff80; valaddr_reg:x3; val_offset:287058*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287058*0 + 3*454*FLEN/8, x4, x1, x2)

inst_95687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffffc0; valaddr_reg:x3; val_offset:287061*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287061*0 + 3*455*FLEN/8, x4, x1, x2)

inst_95688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffffe0; valaddr_reg:x3; val_offset:287064*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287064*0 + 3*456*FLEN/8, x4, x1, x2)

inst_95689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffff0; valaddr_reg:x3; val_offset:287067*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287067*0 + 3*457*FLEN/8, x4, x1, x2)

inst_95690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffff8; valaddr_reg:x3; val_offset:287070*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287070*0 + 3*458*FLEN/8, x4, x1, x2)

inst_95691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffffc; valaddr_reg:x3; val_offset:287073*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287073*0 + 3*459*FLEN/8, x4, x1, x2)

inst_95692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836ffffffffffffe; valaddr_reg:x3; val_offset:287076*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287076*0 + 3*460*FLEN/8, x4, x1, x2)

inst_95693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdb66e519c7902 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadb66e519c7902; op2val:0x8000;
op3val:0x836fffffffffffff; valaddr_reg:x3; val_offset:287079*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287079*0 + 3*461*FLEN/8, x4, x1, x2)

inst_95694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:287082*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287082*0 + 3*462*FLEN/8, x4, x1, x2)

inst_95695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:287085*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287085*0 + 3*463*FLEN/8, x4, x1, x2)

inst_95696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:287088*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287088*0 + 3*464*FLEN/8, x4, x1, x2)

inst_95697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:287091*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287091*0 + 3*465*FLEN/8, x4, x1, x2)

inst_95698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:287094*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287094*0 + 3*466*FLEN/8, x4, x1, x2)

inst_95699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:287097*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287097*0 + 3*467*FLEN/8, x4, x1, x2)

inst_95700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:287100*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287100*0 + 3*468*FLEN/8, x4, x1, x2)

inst_95701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:287103*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287103*0 + 3*469*FLEN/8, x4, x1, x2)

inst_95702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:287106*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287106*0 + 3*470*FLEN/8, x4, x1, x2)

inst_95703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:287109*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287109*0 + 3*471*FLEN/8, x4, x1, x2)

inst_95704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:287112*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287112*0 + 3*472*FLEN/8, x4, x1, x2)

inst_95705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:287115*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287115*0 + 3*473*FLEN/8, x4, x1, x2)

inst_95706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:287118*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287118*0 + 3*474*FLEN/8, x4, x1, x2)

inst_95707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:287121*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287121*0 + 3*475*FLEN/8, x4, x1, x2)

inst_95708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:287124*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287124*0 + 3*476*FLEN/8, x4, x1, x2)

inst_95709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:287127*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287127*0 + 3*477*FLEN/8, x4, x1, x2)

inst_95710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:287130*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287130*0 + 3*478*FLEN/8, x4, x1, x2)

inst_95711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:287133*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287133*0 + 3*479*FLEN/8, x4, x1, x2)

inst_95712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:287136*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287136*0 + 3*480*FLEN/8, x4, x1, x2)

inst_95713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:287139*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287139*0 + 3*481*FLEN/8, x4, x1, x2)

inst_95714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:287142*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287142*0 + 3*482*FLEN/8, x4, x1, x2)

inst_95715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:287145*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287145*0 + 3*483*FLEN/8, x4, x1, x2)

inst_95716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000000000; valaddr_reg:x3; val_offset:287148*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287148*0 + 3*484*FLEN/8, x4, x1, x2)

inst_95717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000000001; valaddr_reg:x3; val_offset:287151*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287151*0 + 3*485*FLEN/8, x4, x1, x2)

inst_95718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000000003; valaddr_reg:x3; val_offset:287154*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287154*0 + 3*486*FLEN/8, x4, x1, x2)

inst_95719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000000007; valaddr_reg:x3; val_offset:287157*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287157*0 + 3*487*FLEN/8, x4, x1, x2)

inst_95720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000000000f; valaddr_reg:x3; val_offset:287160*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287160*0 + 3*488*FLEN/8, x4, x1, x2)

inst_95721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000000001f; valaddr_reg:x3; val_offset:287163*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287163*0 + 3*489*FLEN/8, x4, x1, x2)

inst_95722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000000003f; valaddr_reg:x3; val_offset:287166*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287166*0 + 3*490*FLEN/8, x4, x1, x2)

inst_95723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000000007f; valaddr_reg:x3; val_offset:287169*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287169*0 + 3*491*FLEN/8, x4, x1, x2)

inst_95724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000000000ff; valaddr_reg:x3; val_offset:287172*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287172*0 + 3*492*FLEN/8, x4, x1, x2)

inst_95725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000000001ff; valaddr_reg:x3; val_offset:287175*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287175*0 + 3*493*FLEN/8, x4, x1, x2)

inst_95726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000000003ff; valaddr_reg:x3; val_offset:287178*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287178*0 + 3*494*FLEN/8, x4, x1, x2)

inst_95727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000000007ff; valaddr_reg:x3; val_offset:287181*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287181*0 + 3*495*FLEN/8, x4, x1, x2)

inst_95728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000000fff; valaddr_reg:x3; val_offset:287184*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287184*0 + 3*496*FLEN/8, x4, x1, x2)

inst_95729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000001fff; valaddr_reg:x3; val_offset:287187*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287187*0 + 3*497*FLEN/8, x4, x1, x2)

inst_95730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000003fff; valaddr_reg:x3; val_offset:287190*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287190*0 + 3*498*FLEN/8, x4, x1, x2)

inst_95731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000007fff; valaddr_reg:x3; val_offset:287193*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287193*0 + 3*499*FLEN/8, x4, x1, x2)

inst_95732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000000ffff; valaddr_reg:x3; val_offset:287196*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287196*0 + 3*500*FLEN/8, x4, x1, x2)

inst_95733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000001ffff; valaddr_reg:x3; val_offset:287199*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287199*0 + 3*501*FLEN/8, x4, x1, x2)

inst_95734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000003ffff; valaddr_reg:x3; val_offset:287202*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287202*0 + 3*502*FLEN/8, x4, x1, x2)

inst_95735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000007ffff; valaddr_reg:x3; val_offset:287205*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287205*0 + 3*503*FLEN/8, x4, x1, x2)

inst_95736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000000fffff; valaddr_reg:x3; val_offset:287208*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287208*0 + 3*504*FLEN/8, x4, x1, x2)

inst_95737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000001fffff; valaddr_reg:x3; val_offset:287211*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287211*0 + 3*505*FLEN/8, x4, x1, x2)

inst_95738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000003fffff; valaddr_reg:x3; val_offset:287214*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287214*0 + 3*506*FLEN/8, x4, x1, x2)

inst_95739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000007fffff; valaddr_reg:x3; val_offset:287217*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287217*0 + 3*507*FLEN/8, x4, x1, x2)

inst_95740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000000ffffff; valaddr_reg:x3; val_offset:287220*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287220*0 + 3*508*FLEN/8, x4, x1, x2)

inst_95741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000001ffffff; valaddr_reg:x3; val_offset:287223*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287223*0 + 3*509*FLEN/8, x4, x1, x2)

inst_95742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000003ffffff; valaddr_reg:x3; val_offset:287226*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287226*0 + 3*510*FLEN/8, x4, x1, x2)

inst_95743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000007ffffff; valaddr_reg:x3; val_offset:287229*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287229*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_95744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000000fffffff; valaddr_reg:x3; val_offset:287232*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287232*0 + 3*512*FLEN/8, x4, x1, x2)

inst_95745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000001fffffff; valaddr_reg:x3; val_offset:287235*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287235*0 + 3*513*FLEN/8, x4, x1, x2)

inst_95746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000003fffffff; valaddr_reg:x3; val_offset:287238*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287238*0 + 3*514*FLEN/8, x4, x1, x2)

inst_95747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000007fffffff; valaddr_reg:x3; val_offset:287241*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287241*0 + 3*515*FLEN/8, x4, x1, x2)

inst_95748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200000ffffffff; valaddr_reg:x3; val_offset:287244*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287244*0 + 3*516*FLEN/8, x4, x1, x2)

inst_95749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200001ffffffff; valaddr_reg:x3; val_offset:287247*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287247*0 + 3*517*FLEN/8, x4, x1, x2)

inst_95750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200003ffffffff; valaddr_reg:x3; val_offset:287250*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287250*0 + 3*518*FLEN/8, x4, x1, x2)

inst_95751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200007ffffffff; valaddr_reg:x3; val_offset:287253*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287253*0 + 3*519*FLEN/8, x4, x1, x2)

inst_95752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120000fffffffff; valaddr_reg:x3; val_offset:287256*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287256*0 + 3*520*FLEN/8, x4, x1, x2)

inst_95753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120001fffffffff; valaddr_reg:x3; val_offset:287259*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287259*0 + 3*521*FLEN/8, x4, x1, x2)

inst_95754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120003fffffffff; valaddr_reg:x3; val_offset:287262*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287262*0 + 3*522*FLEN/8, x4, x1, x2)

inst_95755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120007fffffffff; valaddr_reg:x3; val_offset:287265*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287265*0 + 3*523*FLEN/8, x4, x1, x2)

inst_95756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812000ffffffffff; valaddr_reg:x3; val_offset:287268*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287268*0 + 3*524*FLEN/8, x4, x1, x2)

inst_95757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812001ffffffffff; valaddr_reg:x3; val_offset:287271*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287271*0 + 3*525*FLEN/8, x4, x1, x2)

inst_95758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812003ffffffffff; valaddr_reg:x3; val_offset:287274*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287274*0 + 3*526*FLEN/8, x4, x1, x2)

inst_95759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812007ffffffffff; valaddr_reg:x3; val_offset:287277*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287277*0 + 3*527*FLEN/8, x4, x1, x2)

inst_95760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81200fffffffffff; valaddr_reg:x3; val_offset:287280*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287280*0 + 3*528*FLEN/8, x4, x1, x2)

inst_95761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81201fffffffffff; valaddr_reg:x3; val_offset:287283*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287283*0 + 3*529*FLEN/8, x4, x1, x2)

inst_95762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81203fffffffffff; valaddr_reg:x3; val_offset:287286*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287286*0 + 3*530*FLEN/8, x4, x1, x2)

inst_95763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x81207fffffffffff; valaddr_reg:x3; val_offset:287289*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287289*0 + 3*531*FLEN/8, x4, x1, x2)

inst_95764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8120ffffffffffff; valaddr_reg:x3; val_offset:287292*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287292*0 + 3*532*FLEN/8, x4, x1, x2)

inst_95765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8121ffffffffffff; valaddr_reg:x3; val_offset:287295*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287295*0 + 3*533*FLEN/8, x4, x1, x2)

inst_95766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8123ffffffffffff; valaddr_reg:x3; val_offset:287298*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287298*0 + 3*534*FLEN/8, x4, x1, x2)

inst_95767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8127ffffffffffff; valaddr_reg:x3; val_offset:287301*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287301*0 + 3*535*FLEN/8, x4, x1, x2)

inst_95768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x8128000000000000; valaddr_reg:x3; val_offset:287304*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287304*0 + 3*536*FLEN/8, x4, x1, x2)

inst_95769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812c000000000000; valaddr_reg:x3; val_offset:287307*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287307*0 + 3*537*FLEN/8, x4, x1, x2)

inst_95770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812e000000000000; valaddr_reg:x3; val_offset:287310*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287310*0 + 3*538*FLEN/8, x4, x1, x2)

inst_95771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812f000000000000; valaddr_reg:x3; val_offset:287313*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287313*0 + 3*539*FLEN/8, x4, x1, x2)

inst_95772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812f800000000000; valaddr_reg:x3; val_offset:287316*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287316*0 + 3*540*FLEN/8, x4, x1, x2)

inst_95773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fc00000000000; valaddr_reg:x3; val_offset:287319*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287319*0 + 3*541*FLEN/8, x4, x1, x2)

inst_95774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fe00000000000; valaddr_reg:x3; val_offset:287322*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287322*0 + 3*542*FLEN/8, x4, x1, x2)

inst_95775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ff00000000000; valaddr_reg:x3; val_offset:287325*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287325*0 + 3*543*FLEN/8, x4, x1, x2)

inst_95776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ff80000000000; valaddr_reg:x3; val_offset:287328*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287328*0 + 3*544*FLEN/8, x4, x1, x2)

inst_95777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffc0000000000; valaddr_reg:x3; val_offset:287331*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287331*0 + 3*545*FLEN/8, x4, x1, x2)

inst_95778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffe0000000000; valaddr_reg:x3; val_offset:287334*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287334*0 + 3*546*FLEN/8, x4, x1, x2)

inst_95779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fff0000000000; valaddr_reg:x3; val_offset:287337*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287337*0 + 3*547*FLEN/8, x4, x1, x2)

inst_95780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fff8000000000; valaddr_reg:x3; val_offset:287340*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287340*0 + 3*548*FLEN/8, x4, x1, x2)

inst_95781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffc000000000; valaddr_reg:x3; val_offset:287343*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287343*0 + 3*549*FLEN/8, x4, x1, x2)

inst_95782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffe000000000; valaddr_reg:x3; val_offset:287346*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287346*0 + 3*550*FLEN/8, x4, x1, x2)

inst_95783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffff000000000; valaddr_reg:x3; val_offset:287349*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287349*0 + 3*551*FLEN/8, x4, x1, x2)

inst_95784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffff800000000; valaddr_reg:x3; val_offset:287352*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287352*0 + 3*552*FLEN/8, x4, x1, x2)

inst_95785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffc00000000; valaddr_reg:x3; val_offset:287355*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287355*0 + 3*553*FLEN/8, x4, x1, x2)

inst_95786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffe00000000; valaddr_reg:x3; val_offset:287358*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287358*0 + 3*554*FLEN/8, x4, x1, x2)

inst_95787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffff00000000; valaddr_reg:x3; val_offset:287361*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287361*0 + 3*555*FLEN/8, x4, x1, x2)

inst_95788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffff80000000; valaddr_reg:x3; val_offset:287364*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287364*0 + 3*556*FLEN/8, x4, x1, x2)

inst_95789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffc0000000; valaddr_reg:x3; val_offset:287367*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287367*0 + 3*557*FLEN/8, x4, x1, x2)

inst_95790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffe0000000; valaddr_reg:x3; val_offset:287370*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287370*0 + 3*558*FLEN/8, x4, x1, x2)

inst_95791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffff0000000; valaddr_reg:x3; val_offset:287373*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287373*0 + 3*559*FLEN/8, x4, x1, x2)

inst_95792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffff8000000; valaddr_reg:x3; val_offset:287376*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287376*0 + 3*560*FLEN/8, x4, x1, x2)

inst_95793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffc000000; valaddr_reg:x3; val_offset:287379*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287379*0 + 3*561*FLEN/8, x4, x1, x2)

inst_95794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffe000000; valaddr_reg:x3; val_offset:287382*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287382*0 + 3*562*FLEN/8, x4, x1, x2)

inst_95795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffff000000; valaddr_reg:x3; val_offset:287385*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287385*0 + 3*563*FLEN/8, x4, x1, x2)

inst_95796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffff800000; valaddr_reg:x3; val_offset:287388*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287388*0 + 3*564*FLEN/8, x4, x1, x2)

inst_95797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffc00000; valaddr_reg:x3; val_offset:287391*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287391*0 + 3*565*FLEN/8, x4, x1, x2)

inst_95798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffe00000; valaddr_reg:x3; val_offset:287394*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287394*0 + 3*566*FLEN/8, x4, x1, x2)

inst_95799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffff00000; valaddr_reg:x3; val_offset:287397*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287397*0 + 3*567*FLEN/8, x4, x1, x2)

inst_95800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffff80000; valaddr_reg:x3; val_offset:287400*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287400*0 + 3*568*FLEN/8, x4, x1, x2)

inst_95801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffc0000; valaddr_reg:x3; val_offset:287403*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287403*0 + 3*569*FLEN/8, x4, x1, x2)

inst_95802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffe0000; valaddr_reg:x3; val_offset:287406*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287406*0 + 3*570*FLEN/8, x4, x1, x2)

inst_95803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffff0000; valaddr_reg:x3; val_offset:287409*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287409*0 + 3*571*FLEN/8, x4, x1, x2)

inst_95804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffff8000; valaddr_reg:x3; val_offset:287412*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287412*0 + 3*572*FLEN/8, x4, x1, x2)

inst_95805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffc000; valaddr_reg:x3; val_offset:287415*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287415*0 + 3*573*FLEN/8, x4, x1, x2)

inst_95806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffe000; valaddr_reg:x3; val_offset:287418*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287418*0 + 3*574*FLEN/8, x4, x1, x2)

inst_95807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffff000; valaddr_reg:x3; val_offset:287421*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287421*0 + 3*575*FLEN/8, x4, x1, x2)

inst_95808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffff800; valaddr_reg:x3; val_offset:287424*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287424*0 + 3*576*FLEN/8, x4, x1, x2)

inst_95809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffc00; valaddr_reg:x3; val_offset:287427*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287427*0 + 3*577*FLEN/8, x4, x1, x2)

inst_95810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffe00; valaddr_reg:x3; val_offset:287430*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287430*0 + 3*578*FLEN/8, x4, x1, x2)

inst_95811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffff00; valaddr_reg:x3; val_offset:287433*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287433*0 + 3*579*FLEN/8, x4, x1, x2)

inst_95812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffff80; valaddr_reg:x3; val_offset:287436*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287436*0 + 3*580*FLEN/8, x4, x1, x2)

inst_95813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffffc0; valaddr_reg:x3; val_offset:287439*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287439*0 + 3*581*FLEN/8, x4, x1, x2)

inst_95814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffffe0; valaddr_reg:x3; val_offset:287442*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287442*0 + 3*582*FLEN/8, x4, x1, x2)

inst_95815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffff0; valaddr_reg:x3; val_offset:287445*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287445*0 + 3*583*FLEN/8, x4, x1, x2)

inst_95816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffff8; valaddr_reg:x3; val_offset:287448*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287448*0 + 3*584*FLEN/8, x4, x1, x2)

inst_95817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffffc; valaddr_reg:x3; val_offset:287451*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287451*0 + 3*585*FLEN/8, x4, x1, x2)

inst_95818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812ffffffffffffe; valaddr_reg:x3; val_offset:287454*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287454*0 + 3*586*FLEN/8, x4, x1, x2)

inst_95819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xdda78a7d8be93 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x012 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fadda78a7d8be93; op2val:0x8000;
op3val:0x812fffffffffffff; valaddr_reg:x3; val_offset:287457*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287457*0 + 3*587*FLEN/8, x4, x1, x2)

inst_95820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:287460*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287460*0 + 3*588*FLEN/8, x4, x1, x2)

inst_95821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:287463*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287463*0 + 3*589*FLEN/8, x4, x1, x2)

inst_95822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:287466*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287466*0 + 3*590*FLEN/8, x4, x1, x2)

inst_95823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:287469*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287469*0 + 3*591*FLEN/8, x4, x1, x2)

inst_95824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:287472*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287472*0 + 3*592*FLEN/8, x4, x1, x2)

inst_95825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:287475*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287475*0 + 3*593*FLEN/8, x4, x1, x2)

inst_95826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:287478*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287478*0 + 3*594*FLEN/8, x4, x1, x2)

inst_95827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:287481*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287481*0 + 3*595*FLEN/8, x4, x1, x2)

inst_95828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:287484*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287484*0 + 3*596*FLEN/8, x4, x1, x2)

inst_95829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:287487*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287487*0 + 3*597*FLEN/8, x4, x1, x2)

inst_95830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:287490*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287490*0 + 3*598*FLEN/8, x4, x1, x2)

inst_95831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:287493*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287493*0 + 3*599*FLEN/8, x4, x1, x2)

inst_95832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:287496*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287496*0 + 3*600*FLEN/8, x4, x1, x2)

inst_95833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:287499*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287499*0 + 3*601*FLEN/8, x4, x1, x2)

inst_95834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:287502*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287502*0 + 3*602*FLEN/8, x4, x1, x2)

inst_95835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:287505*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287505*0 + 3*603*FLEN/8, x4, x1, x2)

inst_95836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:287508*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287508*0 + 3*604*FLEN/8, x4, x1, x2)

inst_95837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:287511*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287511*0 + 3*605*FLEN/8, x4, x1, x2)

inst_95838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:287514*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287514*0 + 3*606*FLEN/8, x4, x1, x2)

inst_95839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:287517*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287517*0 + 3*607*FLEN/8, x4, x1, x2)

inst_95840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:287520*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287520*0 + 3*608*FLEN/8, x4, x1, x2)

inst_95841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:287523*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287523*0 + 3*609*FLEN/8, x4, x1, x2)

inst_95842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000000000; valaddr_reg:x3; val_offset:287526*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287526*0 + 3*610*FLEN/8, x4, x1, x2)

inst_95843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000000001; valaddr_reg:x3; val_offset:287529*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287529*0 + 3*611*FLEN/8, x4, x1, x2)

inst_95844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000000003; valaddr_reg:x3; val_offset:287532*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287532*0 + 3*612*FLEN/8, x4, x1, x2)

inst_95845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000000007; valaddr_reg:x3; val_offset:287535*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287535*0 + 3*613*FLEN/8, x4, x1, x2)

inst_95846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000000000f; valaddr_reg:x3; val_offset:287538*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287538*0 + 3*614*FLEN/8, x4, x1, x2)

inst_95847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000000001f; valaddr_reg:x3; val_offset:287541*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287541*0 + 3*615*FLEN/8, x4, x1, x2)

inst_95848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000000003f; valaddr_reg:x3; val_offset:287544*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287544*0 + 3*616*FLEN/8, x4, x1, x2)

inst_95849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000000007f; valaddr_reg:x3; val_offset:287547*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287547*0 + 3*617*FLEN/8, x4, x1, x2)

inst_95850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000000000ff; valaddr_reg:x3; val_offset:287550*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287550*0 + 3*618*FLEN/8, x4, x1, x2)

inst_95851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000000001ff; valaddr_reg:x3; val_offset:287553*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287553*0 + 3*619*FLEN/8, x4, x1, x2)

inst_95852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000000003ff; valaddr_reg:x3; val_offset:287556*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287556*0 + 3*620*FLEN/8, x4, x1, x2)

inst_95853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000000007ff; valaddr_reg:x3; val_offset:287559*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287559*0 + 3*621*FLEN/8, x4, x1, x2)

inst_95854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000000fff; valaddr_reg:x3; val_offset:287562*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287562*0 + 3*622*FLEN/8, x4, x1, x2)

inst_95855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000001fff; valaddr_reg:x3; val_offset:287565*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287565*0 + 3*623*FLEN/8, x4, x1, x2)

inst_95856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000003fff; valaddr_reg:x3; val_offset:287568*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287568*0 + 3*624*FLEN/8, x4, x1, x2)

inst_95857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000007fff; valaddr_reg:x3; val_offset:287571*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287571*0 + 3*625*FLEN/8, x4, x1, x2)

inst_95858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000000ffff; valaddr_reg:x3; val_offset:287574*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287574*0 + 3*626*FLEN/8, x4, x1, x2)

inst_95859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000001ffff; valaddr_reg:x3; val_offset:287577*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287577*0 + 3*627*FLEN/8, x4, x1, x2)

inst_95860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000003ffff; valaddr_reg:x3; val_offset:287580*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287580*0 + 3*628*FLEN/8, x4, x1, x2)

inst_95861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000007ffff; valaddr_reg:x3; val_offset:287583*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287583*0 + 3*629*FLEN/8, x4, x1, x2)

inst_95862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000000fffff; valaddr_reg:x3; val_offset:287586*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287586*0 + 3*630*FLEN/8, x4, x1, x2)

inst_95863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000001fffff; valaddr_reg:x3; val_offset:287589*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287589*0 + 3*631*FLEN/8, x4, x1, x2)

inst_95864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000003fffff; valaddr_reg:x3; val_offset:287592*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287592*0 + 3*632*FLEN/8, x4, x1, x2)

inst_95865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000007fffff; valaddr_reg:x3; val_offset:287595*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287595*0 + 3*633*FLEN/8, x4, x1, x2)

inst_95866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000000ffffff; valaddr_reg:x3; val_offset:287598*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287598*0 + 3*634*FLEN/8, x4, x1, x2)

inst_95867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000001ffffff; valaddr_reg:x3; val_offset:287601*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287601*0 + 3*635*FLEN/8, x4, x1, x2)

inst_95868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000003ffffff; valaddr_reg:x3; val_offset:287604*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287604*0 + 3*636*FLEN/8, x4, x1, x2)

inst_95869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000007ffffff; valaddr_reg:x3; val_offset:287607*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287607*0 + 3*637*FLEN/8, x4, x1, x2)

inst_95870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000000fffffff; valaddr_reg:x3; val_offset:287610*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287610*0 + 3*638*FLEN/8, x4, x1, x2)

inst_95871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000001fffffff; valaddr_reg:x3; val_offset:287613*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287613*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_95872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000003fffffff; valaddr_reg:x3; val_offset:287616*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287616*0 + 3*640*FLEN/8, x4, x1, x2)

inst_95873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000007fffffff; valaddr_reg:x3; val_offset:287619*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287619*0 + 3*641*FLEN/8, x4, x1, x2)

inst_95874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200000ffffffff; valaddr_reg:x3; val_offset:287622*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287622*0 + 3*642*FLEN/8, x4, x1, x2)

inst_95875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200001ffffffff; valaddr_reg:x3; val_offset:287625*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287625*0 + 3*643*FLEN/8, x4, x1, x2)

inst_95876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200003ffffffff; valaddr_reg:x3; val_offset:287628*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287628*0 + 3*644*FLEN/8, x4, x1, x2)

inst_95877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200007ffffffff; valaddr_reg:x3; val_offset:287631*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287631*0 + 3*645*FLEN/8, x4, x1, x2)

inst_95878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20000fffffffff; valaddr_reg:x3; val_offset:287634*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287634*0 + 3*646*FLEN/8, x4, x1, x2)

inst_95879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20001fffffffff; valaddr_reg:x3; val_offset:287637*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287637*0 + 3*647*FLEN/8, x4, x1, x2)

inst_95880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20003fffffffff; valaddr_reg:x3; val_offset:287640*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287640*0 + 3*648*FLEN/8, x4, x1, x2)

inst_95881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20007fffffffff; valaddr_reg:x3; val_offset:287643*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287643*0 + 3*649*FLEN/8, x4, x1, x2)

inst_95882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2000ffffffffff; valaddr_reg:x3; val_offset:287646*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287646*0 + 3*650*FLEN/8, x4, x1, x2)

inst_95883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2001ffffffffff; valaddr_reg:x3; val_offset:287649*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287649*0 + 3*651*FLEN/8, x4, x1, x2)

inst_95884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2003ffffffffff; valaddr_reg:x3; val_offset:287652*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287652*0 + 3*652*FLEN/8, x4, x1, x2)

inst_95885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2007ffffffffff; valaddr_reg:x3; val_offset:287655*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287655*0 + 3*653*FLEN/8, x4, x1, x2)

inst_95886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x200fffffffffff; valaddr_reg:x3; val_offset:287658*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287658*0 + 3*654*FLEN/8, x4, x1, x2)

inst_95887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x201fffffffffff; valaddr_reg:x3; val_offset:287661*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287661*0 + 3*655*FLEN/8, x4, x1, x2)

inst_95888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x203fffffffffff; valaddr_reg:x3; val_offset:287664*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287664*0 + 3*656*FLEN/8, x4, x1, x2)

inst_95889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x207fffffffffff; valaddr_reg:x3; val_offset:287667*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287667*0 + 3*657*FLEN/8, x4, x1, x2)

inst_95890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x20ffffffffffff; valaddr_reg:x3; val_offset:287670*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287670*0 + 3*658*FLEN/8, x4, x1, x2)

inst_95891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x21ffffffffffff; valaddr_reg:x3; val_offset:287673*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287673*0 + 3*659*FLEN/8, x4, x1, x2)

inst_95892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x23ffffffffffff; valaddr_reg:x3; val_offset:287676*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287676*0 + 3*660*FLEN/8, x4, x1, x2)

inst_95893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x27ffffffffffff; valaddr_reg:x3; val_offset:287679*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287679*0 + 3*661*FLEN/8, x4, x1, x2)

inst_95894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x28000000000000; valaddr_reg:x3; val_offset:287682*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287682*0 + 3*662*FLEN/8, x4, x1, x2)

inst_95895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2c000000000000; valaddr_reg:x3; val_offset:287685*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287685*0 + 3*663*FLEN/8, x4, x1, x2)

inst_95896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2e000000000000; valaddr_reg:x3; val_offset:287688*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287688*0 + 3*664*FLEN/8, x4, x1, x2)

inst_95897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2f000000000000; valaddr_reg:x3; val_offset:287691*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287691*0 + 3*665*FLEN/8, x4, x1, x2)

inst_95898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2f800000000000; valaddr_reg:x3; val_offset:287694*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287694*0 + 3*666*FLEN/8, x4, x1, x2)

inst_95899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fc00000000000; valaddr_reg:x3; val_offset:287697*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287697*0 + 3*667*FLEN/8, x4, x1, x2)

inst_95900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fe00000000000; valaddr_reg:x3; val_offset:287700*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287700*0 + 3*668*FLEN/8, x4, x1, x2)

inst_95901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ff00000000000; valaddr_reg:x3; val_offset:287703*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287703*0 + 3*669*FLEN/8, x4, x1, x2)

inst_95902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ff80000000000; valaddr_reg:x3; val_offset:287706*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287706*0 + 3*670*FLEN/8, x4, x1, x2)

inst_95903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffc0000000000; valaddr_reg:x3; val_offset:287709*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287709*0 + 3*671*FLEN/8, x4, x1, x2)

inst_95904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffe0000000000; valaddr_reg:x3; val_offset:287712*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287712*0 + 3*672*FLEN/8, x4, x1, x2)

inst_95905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fff0000000000; valaddr_reg:x3; val_offset:287715*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287715*0 + 3*673*FLEN/8, x4, x1, x2)

inst_95906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fff8000000000; valaddr_reg:x3; val_offset:287718*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287718*0 + 3*674*FLEN/8, x4, x1, x2)

inst_95907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffc000000000; valaddr_reg:x3; val_offset:287721*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287721*0 + 3*675*FLEN/8, x4, x1, x2)

inst_95908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffe000000000; valaddr_reg:x3; val_offset:287724*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287724*0 + 3*676*FLEN/8, x4, x1, x2)

inst_95909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffff000000000; valaddr_reg:x3; val_offset:287727*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287727*0 + 3*677*FLEN/8, x4, x1, x2)

inst_95910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffff800000000; valaddr_reg:x3; val_offset:287730*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287730*0 + 3*678*FLEN/8, x4, x1, x2)

inst_95911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffc00000000; valaddr_reg:x3; val_offset:287733*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287733*0 + 3*679*FLEN/8, x4, x1, x2)

inst_95912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffe00000000; valaddr_reg:x3; val_offset:287736*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287736*0 + 3*680*FLEN/8, x4, x1, x2)

inst_95913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffff00000000; valaddr_reg:x3; val_offset:287739*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287739*0 + 3*681*FLEN/8, x4, x1, x2)

inst_95914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffff80000000; valaddr_reg:x3; val_offset:287742*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287742*0 + 3*682*FLEN/8, x4, x1, x2)

inst_95915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffc0000000; valaddr_reg:x3; val_offset:287745*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287745*0 + 3*683*FLEN/8, x4, x1, x2)

inst_95916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffe0000000; valaddr_reg:x3; val_offset:287748*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287748*0 + 3*684*FLEN/8, x4, x1, x2)

inst_95917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffff0000000; valaddr_reg:x3; val_offset:287751*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287751*0 + 3*685*FLEN/8, x4, x1, x2)

inst_95918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffff8000000; valaddr_reg:x3; val_offset:287754*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287754*0 + 3*686*FLEN/8, x4, x1, x2)

inst_95919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffc000000; valaddr_reg:x3; val_offset:287757*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287757*0 + 3*687*FLEN/8, x4, x1, x2)

inst_95920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffe000000; valaddr_reg:x3; val_offset:287760*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287760*0 + 3*688*FLEN/8, x4, x1, x2)

inst_95921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffff000000; valaddr_reg:x3; val_offset:287763*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287763*0 + 3*689*FLEN/8, x4, x1, x2)

inst_95922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffff800000; valaddr_reg:x3; val_offset:287766*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287766*0 + 3*690*FLEN/8, x4, x1, x2)

inst_95923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffc00000; valaddr_reg:x3; val_offset:287769*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287769*0 + 3*691*FLEN/8, x4, x1, x2)

inst_95924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffe00000; valaddr_reg:x3; val_offset:287772*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287772*0 + 3*692*FLEN/8, x4, x1, x2)

inst_95925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffff00000; valaddr_reg:x3; val_offset:287775*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287775*0 + 3*693*FLEN/8, x4, x1, x2)

inst_95926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffff80000; valaddr_reg:x3; val_offset:287778*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287778*0 + 3*694*FLEN/8, x4, x1, x2)

inst_95927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffc0000; valaddr_reg:x3; val_offset:287781*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287781*0 + 3*695*FLEN/8, x4, x1, x2)

inst_95928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffe0000; valaddr_reg:x3; val_offset:287784*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287784*0 + 3*696*FLEN/8, x4, x1, x2)

inst_95929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffff0000; valaddr_reg:x3; val_offset:287787*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287787*0 + 3*697*FLEN/8, x4, x1, x2)

inst_95930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffff8000; valaddr_reg:x3; val_offset:287790*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287790*0 + 3*698*FLEN/8, x4, x1, x2)

inst_95931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffc000; valaddr_reg:x3; val_offset:287793*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287793*0 + 3*699*FLEN/8, x4, x1, x2)

inst_95932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffe000; valaddr_reg:x3; val_offset:287796*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287796*0 + 3*700*FLEN/8, x4, x1, x2)

inst_95933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffff000; valaddr_reg:x3; val_offset:287799*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287799*0 + 3*701*FLEN/8, x4, x1, x2)

inst_95934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffff800; valaddr_reg:x3; val_offset:287802*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287802*0 + 3*702*FLEN/8, x4, x1, x2)

inst_95935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffc00; valaddr_reg:x3; val_offset:287805*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287805*0 + 3*703*FLEN/8, x4, x1, x2)

inst_95936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffe00; valaddr_reg:x3; val_offset:287808*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287808*0 + 3*704*FLEN/8, x4, x1, x2)

inst_95937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffff00; valaddr_reg:x3; val_offset:287811*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287811*0 + 3*705*FLEN/8, x4, x1, x2)

inst_95938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffff80; valaddr_reg:x3; val_offset:287814*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287814*0 + 3*706*FLEN/8, x4, x1, x2)

inst_95939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffffc0; valaddr_reg:x3; val_offset:287817*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287817*0 + 3*707*FLEN/8, x4, x1, x2)

inst_95940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffffe0; valaddr_reg:x3; val_offset:287820*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287820*0 + 3*708*FLEN/8, x4, x1, x2)

inst_95941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffff0; valaddr_reg:x3; val_offset:287823*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287823*0 + 3*709*FLEN/8, x4, x1, x2)

inst_95942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffff8; valaddr_reg:x3; val_offset:287826*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287826*0 + 3*710*FLEN/8, x4, x1, x2)

inst_95943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffffc; valaddr_reg:x3; val_offset:287829*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287829*0 + 3*711*FLEN/8, x4, x1, x2)

inst_95944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2ffffffffffffe; valaddr_reg:x3; val_offset:287832*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287832*0 + 3*712*FLEN/8, x4, x1, x2)

inst_95945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde17f4d0520cb and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x002 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade17f4d0520cb; op2val:0x0;
op3val:0x2fffffffffffff; valaddr_reg:x3; val_offset:287835*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287835*0 + 3*713*FLEN/8, x4, x1, x2)

inst_95946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000000000; valaddr_reg:x3; val_offset:287838*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287838*0 + 3*714*FLEN/8, x4, x1, x2)

inst_95947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000000001; valaddr_reg:x3; val_offset:287841*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287841*0 + 3*715*FLEN/8, x4, x1, x2)

inst_95948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000000003; valaddr_reg:x3; val_offset:287844*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287844*0 + 3*716*FLEN/8, x4, x1, x2)

inst_95949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000000007; valaddr_reg:x3; val_offset:287847*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287847*0 + 3*717*FLEN/8, x4, x1, x2)

inst_95950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000000000f; valaddr_reg:x3; val_offset:287850*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287850*0 + 3*718*FLEN/8, x4, x1, x2)

inst_95951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000000001f; valaddr_reg:x3; val_offset:287853*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287853*0 + 3*719*FLEN/8, x4, x1, x2)

inst_95952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000000003f; valaddr_reg:x3; val_offset:287856*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287856*0 + 3*720*FLEN/8, x4, x1, x2)

inst_95953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000000007f; valaddr_reg:x3; val_offset:287859*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287859*0 + 3*721*FLEN/8, x4, x1, x2)

inst_95954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000000000ff; valaddr_reg:x3; val_offset:287862*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287862*0 + 3*722*FLEN/8, x4, x1, x2)

inst_95955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000000001ff; valaddr_reg:x3; val_offset:287865*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287865*0 + 3*723*FLEN/8, x4, x1, x2)

inst_95956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000000003ff; valaddr_reg:x3; val_offset:287868*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287868*0 + 3*724*FLEN/8, x4, x1, x2)

inst_95957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000000007ff; valaddr_reg:x3; val_offset:287871*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287871*0 + 3*725*FLEN/8, x4, x1, x2)

inst_95958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000000fff; valaddr_reg:x3; val_offset:287874*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287874*0 + 3*726*FLEN/8, x4, x1, x2)

inst_95959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000001fff; valaddr_reg:x3; val_offset:287877*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287877*0 + 3*727*FLEN/8, x4, x1, x2)

inst_95960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000003fff; valaddr_reg:x3; val_offset:287880*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287880*0 + 3*728*FLEN/8, x4, x1, x2)

inst_95961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000007fff; valaddr_reg:x3; val_offset:287883*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287883*0 + 3*729*FLEN/8, x4, x1, x2)

inst_95962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000000ffff; valaddr_reg:x3; val_offset:287886*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287886*0 + 3*730*FLEN/8, x4, x1, x2)

inst_95963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000001ffff; valaddr_reg:x3; val_offset:287889*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287889*0 + 3*731*FLEN/8, x4, x1, x2)

inst_95964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000003ffff; valaddr_reg:x3; val_offset:287892*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287892*0 + 3*732*FLEN/8, x4, x1, x2)

inst_95965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000007ffff; valaddr_reg:x3; val_offset:287895*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287895*0 + 3*733*FLEN/8, x4, x1, x2)

inst_95966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000000fffff; valaddr_reg:x3; val_offset:287898*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287898*0 + 3*734*FLEN/8, x4, x1, x2)

inst_95967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000001fffff; valaddr_reg:x3; val_offset:287901*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287901*0 + 3*735*FLEN/8, x4, x1, x2)

inst_95968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000003fffff; valaddr_reg:x3; val_offset:287904*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287904*0 + 3*736*FLEN/8, x4, x1, x2)

inst_95969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000007fffff; valaddr_reg:x3; val_offset:287907*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287907*0 + 3*737*FLEN/8, x4, x1, x2)

inst_95970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000000ffffff; valaddr_reg:x3; val_offset:287910*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287910*0 + 3*738*FLEN/8, x4, x1, x2)

inst_95971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000001ffffff; valaddr_reg:x3; val_offset:287913*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287913*0 + 3*739*FLEN/8, x4, x1, x2)

inst_95972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000003ffffff; valaddr_reg:x3; val_offset:287916*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287916*0 + 3*740*FLEN/8, x4, x1, x2)

inst_95973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000007ffffff; valaddr_reg:x3; val_offset:287919*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287919*0 + 3*741*FLEN/8, x4, x1, x2)

inst_95974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000000fffffff; valaddr_reg:x3; val_offset:287922*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287922*0 + 3*742*FLEN/8, x4, x1, x2)

inst_95975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000001fffffff; valaddr_reg:x3; val_offset:287925*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287925*0 + 3*743*FLEN/8, x4, x1, x2)

inst_95976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000003fffffff; valaddr_reg:x3; val_offset:287928*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287928*0 + 3*744*FLEN/8, x4, x1, x2)

inst_95977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000007fffffff; valaddr_reg:x3; val_offset:287931*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287931*0 + 3*745*FLEN/8, x4, x1, x2)

inst_95978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00000ffffffff; valaddr_reg:x3; val_offset:287934*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287934*0 + 3*746*FLEN/8, x4, x1, x2)

inst_95979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00001ffffffff; valaddr_reg:x3; val_offset:287937*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287937*0 + 3*747*FLEN/8, x4, x1, x2)

inst_95980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00003ffffffff; valaddr_reg:x3; val_offset:287940*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287940*0 + 3*748*FLEN/8, x4, x1, x2)

inst_95981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00007ffffffff; valaddr_reg:x3; val_offset:287943*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287943*0 + 3*749*FLEN/8, x4, x1, x2)

inst_95982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0000fffffffff; valaddr_reg:x3; val_offset:287946*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287946*0 + 3*750*FLEN/8, x4, x1, x2)

inst_95983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0001fffffffff; valaddr_reg:x3; val_offset:287949*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287949*0 + 3*751*FLEN/8, x4, x1, x2)

inst_95984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0003fffffffff; valaddr_reg:x3; val_offset:287952*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287952*0 + 3*752*FLEN/8, x4, x1, x2)

inst_95985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0007fffffffff; valaddr_reg:x3; val_offset:287955*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287955*0 + 3*753*FLEN/8, x4, x1, x2)

inst_95986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf000ffffffffff; valaddr_reg:x3; val_offset:287958*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287958*0 + 3*754*FLEN/8, x4, x1, x2)

inst_95987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf001ffffffffff; valaddr_reg:x3; val_offset:287961*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287961*0 + 3*755*FLEN/8, x4, x1, x2)

inst_95988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf003ffffffffff; valaddr_reg:x3; val_offset:287964*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287964*0 + 3*756*FLEN/8, x4, x1, x2)

inst_95989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf007ffffffffff; valaddr_reg:x3; val_offset:287967*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287967*0 + 3*757*FLEN/8, x4, x1, x2)

inst_95990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf00fffffffffff; valaddr_reg:x3; val_offset:287970*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287970*0 + 3*758*FLEN/8, x4, x1, x2)

inst_95991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf01fffffffffff; valaddr_reg:x3; val_offset:287973*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287973*0 + 3*759*FLEN/8, x4, x1, x2)

inst_95992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf03fffffffffff; valaddr_reg:x3; val_offset:287976*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287976*0 + 3*760*FLEN/8, x4, x1, x2)

inst_95993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf07fffffffffff; valaddr_reg:x3; val_offset:287979*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287979*0 + 3*761*FLEN/8, x4, x1, x2)

inst_95994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf0ffffffffffff; valaddr_reg:x3; val_offset:287982*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287982*0 + 3*762*FLEN/8, x4, x1, x2)

inst_95995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf1ffffffffffff; valaddr_reg:x3; val_offset:287985*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287985*0 + 3*763*FLEN/8, x4, x1, x2)

inst_95996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf3ffffffffffff; valaddr_reg:x3; val_offset:287988*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287988*0 + 3*764*FLEN/8, x4, x1, x2)

inst_95997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf7ffffffffffff; valaddr_reg:x3; val_offset:287991*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287991*0 + 3*765*FLEN/8, x4, x1, x2)

inst_95998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbaf8000000000000; valaddr_reg:x3; val_offset:287994*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287994*0 + 3*766*FLEN/8, x4, x1, x2)

inst_95999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0xde7ef4a369968 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x11eccd7c6a1fb and fs3 == 1 and fe3 == 0x3af and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fade7ef4a369968; op2val:0x9fc11eccd7c6a1fb;
op3val:0xbafc000000000000; valaddr_reg:x3; val_offset:287997*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 287997*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998137901055,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998138949631,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998141046783,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998145241087,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998153629695,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998170406911,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998203961343,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998271070207,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998405287935,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517998673723391,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22517999210594303,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518000284336127,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518002431819775,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518006726787071,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518015316721663,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518032496590847,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518066856329215,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518135575805951,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518273014759423,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22518547892666367,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22519097648480255,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22520197160108031,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22522396183363583,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22526794229874687,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22535590322896895,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22553182508941311,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22588366881030143,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22658735625207807,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(22799473113563135,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23080948090273791,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(23643898043695103,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537727,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(24769797950537728,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(25895697857380352,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26458647810801664,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26740122787512320,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26880860275867648,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26951229020045312,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(26986413392134144,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27004005578178560,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27012801671200768,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27017199717711872,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27019398740967424,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27020498252595200,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021048008409088,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021322886316032,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021460325269504,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021529044746240,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021563404484608,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021580584353792,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021589174288384,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021593469255680,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021595616739328,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021596690481152,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597227352064,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597495787520,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597630005248,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597697114112,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597730668544,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597747445760,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597755834368,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597760028672,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597762125824,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763174400,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763698688,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597763960832,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764091904,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764157440,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764190208,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764206592,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764214784,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764218880,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764220928,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764221952,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222464,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222720,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222848,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222912,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222944,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222960,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222968,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222972,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222974,64,FLEN)
NAN_BOXED(6894322237347975760,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222975,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739776,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739777,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739779,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739783,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739791,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739807,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739839,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873739903,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740031,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740287,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873740799,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873741823,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873743871,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873747967,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873756159,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873772543,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873805311,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833873870847,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874001919,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874264063,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833874788351,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833875836927,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833877934079,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833882128383,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833890516991,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833907294207,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400833940848639,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834007957503,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834142175231,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834410610687,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400834947481599,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400836021223423,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400838168707071,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400842463674367,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400851053608959,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400868233478143,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400902593216511,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259400971312693247,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401108751646719,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401383629553663,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259401933385367551,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259403032896995327,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259405231920250879,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259409629966761983,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259418426059784191,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259436018245828607,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259471202617917439,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259541571362095103,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259682308850450431,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9259963783827161087,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9260526733780582399,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425023,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9261652633687425024,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9262778533594267648,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263341483547688960,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263622958524399616,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263763696012754944,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263834064756932608,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263869249129021440,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263886841315065856,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263895637408088064,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263900035454599168,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263902234477854720,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263903333989482496,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263903883745296384,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904158623203328,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904296062156800,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904364781633536,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904399141371904,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904416321241088,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904424911175680,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904429206142976,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904431353626624,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904432427368448,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904432964239360,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433232674816,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433366892544,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433434001408,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433467555840,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433484333056,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433492721664,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433496915968,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433499013120,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500061696,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500585984,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500848128,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433500979200,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501044736,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501077504,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501093888,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501102080,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501106176,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501108224,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501109248,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501109760,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110016,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110144,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110208,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110240,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110256,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110264,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110268,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110270,64,FLEN)
NAN_BOXED(6894325866494818209,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9263904433501110271,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557440,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557441,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557443,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557447,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557455,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557471,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557503,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557567,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557695,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410557951,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410558463,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410559487,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410561535,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410565631,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410573823,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410590207,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410622975,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410688511,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994410819583,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994411081727,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994411606015,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994412654591,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994414751743,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994418946047,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994427334655,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994444111871,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994477666303,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994544775167,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994678992895,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553994947428351,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553995484299263,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553996558041087,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67553998705524735,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554003000492031,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554011590426623,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554028770295807,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554063130034175,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554131849510911,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554269288464383,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67554544166371327,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67555093922185215,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67556193433812991,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67558392457068543,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67562790503579647,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67571586596601855,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67589178782646271,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67624363154735103,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67694731898912767,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(67835469387268095,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68116944363978751,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(68679894317400063,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(69805794224242687,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(69805794224242688,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(70931694131085312,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71494644084506624,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71776119061217280,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71916856549572608,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(71987225293750272,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72022409665839104,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72040001851883520,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72048797944905728,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72053195991416832,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72055395014672384,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72056494526300160,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057044282114048,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057319160020992,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057456598974464,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057525318451200,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057559678189568,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057576858058752,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057585447993344,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057589742960640,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057591890444288,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057592964186112,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593501057024,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593769492480,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593903710208,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057593970819072,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594004373504,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594021150720,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594029539328,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594033733632,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594035830784,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594036879360,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037403648,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037665792,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037796864,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037862400,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037895168,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037911552,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037919744,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037923840,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037925888,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037926912,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927424,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927680,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927808,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927872,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927904,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927920,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927928,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927932,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927934,64,FLEN)
NAN_BOXED(6894343014820854991,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(72057594037927935,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782592,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782593,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782595,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782599,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782607,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782623,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782655,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782719,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782847,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783103,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783615,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732784639,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732786687,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732790783,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732798975,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732815359,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732848127,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732913663,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733044735,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733306879,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733831167,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416734879743,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416736976895,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416741171199,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416749559807,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416766337023,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416799891455,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416867000319,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417001218047,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417269653503,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417806524415,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566418880266239,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566421027749887,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566425322717183,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566433912651775,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566451092520959,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566485452259327,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566554171736063,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566691610689535,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566966488596479,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466567516244410367,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466568615756038143,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466570814779293695,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466575212825804799,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466584008918827007,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466601601104871423,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466636785476960255,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466707154221137919,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466847891709493247,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467129366686203903,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467692316639625215,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467839,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467840,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9469944116453310464,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470507066406731776,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470788541383442432,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470929278871797760,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470999647615975424,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471034831988064256,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471052424174108672,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471061220267130880,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471065618313641984,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471067817336897536,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471068916848525312,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069466604339200,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069741482246144,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069878921199616,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069947640676352,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069982000414720,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069999180283904,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070007770218496,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070012065185792,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070014212669440,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015286411264,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015823282176,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016091717632,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016225935360,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016293044224,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016326598656,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016343375872,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016351764480,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016355958784,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016358055936,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359104512,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359628800,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359890944,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360022016,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360087552,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360120320,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360136704,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360144896,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360148992,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360151040,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152064,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152576,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152832,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152960,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153024,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153056,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153072,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153080,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153084,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153086,64,FLEN)
NAN_BOXED(6894367189505964290,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153087,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444736,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444737,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444739,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444743,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444751,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444767,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444799,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444863,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147444991,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445247,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147445759,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147446783,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147448831,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147452927,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147461119,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147477503,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147510271,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147575807,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147706879,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830147969023,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830148493311,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830149541887,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830151639039,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830155833343,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830164221951,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830180999167,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830214553599,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830281662463,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830415880191,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436830684315647,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436831221186559,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436832294928383,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436834442412031,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436838737379327,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436847327313919,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436864507183103,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436898866921471,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304436967586398207,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437105025351679,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437379903258623,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304437929659072511,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304439029170700287,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304441228193955839,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304445626240466943,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304454422333489151,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304472014519533567,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304507198891622399,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304577567635800063,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304718305124155391,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9304999780100866047,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9305562730054287359,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129983,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9306688629961129984,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9307814529867972608,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308377479821393920,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308658954798104576,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308799692286459904,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308870061030637568,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308905245402726400,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308922837588770816,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308931633681793024,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308936031728304128,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308938230751559680,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939330263187456,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308939880019001344,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940154896908288,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940292335861760,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940361055338496,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940395415076864,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940412594946048,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940421184880640,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940425479847936,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940427627331584,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940428701073408,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429237944320,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429506379776,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429640597504,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429707706368,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429741260800,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429758038016,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429766426624,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429770620928,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429772718080,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429773766656,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774290944,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774553088,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774684160,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774749696,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774782464,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774798848,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774807040,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774811136,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774813184,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814208,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814720,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774814976,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815104,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815168,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815200,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815216,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815224,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815228,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815230,64,FLEN)
NAN_BOXED(6894406816321027731,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815231,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740992,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740993,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740995,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740999,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741007,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741023,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741055,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741119,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741247,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254741503,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254742015,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254743039,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254745087,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254749183,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254757375,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254773759,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254806527,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254872063,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255003135,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255265279,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199255789567,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199256838143,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199258935295,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199263129599,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199271518207,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199288295423,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199321849855,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199388958719,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199523176447,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199791611903,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007200328482815,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007201402224639,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007203549708287,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007207844675583,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007216434610175,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007233614479359,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007267974217727,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007336693694463,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007474132647935,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007749010554879,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9008298766368767,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9009398277996543,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9011597301252095,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9015995347763199,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9024791440785407,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9042383626829823,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9077567998918655,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9147936743096319,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9288674231451647,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9570149208162303,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(10133099161583615,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426239,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(11258999068426240,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12384898975268864,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(12947848928690176,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13229323905400832,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13370061393756160,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13440430137933824,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13475614510022656,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13493206696067072,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13502002789089280,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13506400835600384,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13508599858855936,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13509699370483712,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510249126297600,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510524004204544,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510661443158016,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510730162634752,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510764522373120,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510781702242304,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510790292176896,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510794587144192,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510796734627840,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510797808369664,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798345240576,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798613676032,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798747893760,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798815002624,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798848557056,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798865334272,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798873722880,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798877917184,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798880014336,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881062912,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881587200,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881849344,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798881980416,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882045952,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882078720,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882095104,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882103296,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882107392,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882109440,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110464,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882110976,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111232,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111360,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111424,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111456,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111472,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111480,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111484,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111486,64,FLEN)
NAN_BOXED(6894414541443375307,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(13510798882111487,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153536,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153537,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153539,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153543,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153551,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153567,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153599,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153663,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465153791,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465154047,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465154559,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465155583,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465157631,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465161727,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465169919,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465186303,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465219071,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465284607,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465415679,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485465677823,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485466202111,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485467250687,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485469347839,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485473542143,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485481930751,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485498707967,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485532262399,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485599371263,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266485733588991,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266486002024447,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266486538895359,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266487612637183,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266489760120831,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266494055088127,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266502645022719,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266519824891903,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266554184630271,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266622904107007,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470266760343060479,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470267035220967423,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470267584976781311,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470268684488409087,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470270883511664639,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470275281558175743,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470284077651197951,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470301669837242367,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470336854209331199,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470407222953508863,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470547960441864191,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13470829435418574847,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13471392385371996159,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13472518285278838783,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13472518285278838784,64,FLEN)
NAN_BOXED(6894421619502389608,64,FLEN)
NAN_BOXED(11511515987677979131,64,FLEN)
NAN_BOXED(13473644185185681408,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
