
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_13056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207f800000000000; valaddr_reg:x3; val_offset:39168*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39168*0 + 3*0*FLEN/8, x4, x1, x2)

inst_13057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fc00000000000; valaddr_reg:x3; val_offset:39171*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39171*0 + 3*1*FLEN/8, x4, x1, x2)

inst_13058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fe00000000000; valaddr_reg:x3; val_offset:39174*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39174*0 + 3*2*FLEN/8, x4, x1, x2)

inst_13059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ff00000000000; valaddr_reg:x3; val_offset:39177*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39177*0 + 3*3*FLEN/8, x4, x1, x2)

inst_13060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ff80000000000; valaddr_reg:x3; val_offset:39180*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39180*0 + 3*4*FLEN/8, x4, x1, x2)

inst_13061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffc0000000000; valaddr_reg:x3; val_offset:39183*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39183*0 + 3*5*FLEN/8, x4, x1, x2)

inst_13062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffe0000000000; valaddr_reg:x3; val_offset:39186*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39186*0 + 3*6*FLEN/8, x4, x1, x2)

inst_13063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fff0000000000; valaddr_reg:x3; val_offset:39189*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39189*0 + 3*7*FLEN/8, x4, x1, x2)

inst_13064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fff8000000000; valaddr_reg:x3; val_offset:39192*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39192*0 + 3*8*FLEN/8, x4, x1, x2)

inst_13065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffc000000000; valaddr_reg:x3; val_offset:39195*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39195*0 + 3*9*FLEN/8, x4, x1, x2)

inst_13066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffe000000000; valaddr_reg:x3; val_offset:39198*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39198*0 + 3*10*FLEN/8, x4, x1, x2)

inst_13067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffff000000000; valaddr_reg:x3; val_offset:39201*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39201*0 + 3*11*FLEN/8, x4, x1, x2)

inst_13068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffff800000000; valaddr_reg:x3; val_offset:39204*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39204*0 + 3*12*FLEN/8, x4, x1, x2)

inst_13069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffc00000000; valaddr_reg:x3; val_offset:39207*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39207*0 + 3*13*FLEN/8, x4, x1, x2)

inst_13070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffe00000000; valaddr_reg:x3; val_offset:39210*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39210*0 + 3*14*FLEN/8, x4, x1, x2)

inst_13071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffff00000000; valaddr_reg:x3; val_offset:39213*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39213*0 + 3*15*FLEN/8, x4, x1, x2)

inst_13072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffff80000000; valaddr_reg:x3; val_offset:39216*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39216*0 + 3*16*FLEN/8, x4, x1, x2)

inst_13073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffc0000000; valaddr_reg:x3; val_offset:39219*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39219*0 + 3*17*FLEN/8, x4, x1, x2)

inst_13074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffe0000000; valaddr_reg:x3; val_offset:39222*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39222*0 + 3*18*FLEN/8, x4, x1, x2)

inst_13075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffff0000000; valaddr_reg:x3; val_offset:39225*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39225*0 + 3*19*FLEN/8, x4, x1, x2)

inst_13076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffff8000000; valaddr_reg:x3; val_offset:39228*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39228*0 + 3*20*FLEN/8, x4, x1, x2)

inst_13077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffc000000; valaddr_reg:x3; val_offset:39231*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39231*0 + 3*21*FLEN/8, x4, x1, x2)

inst_13078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffe000000; valaddr_reg:x3; val_offset:39234*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39234*0 + 3*22*FLEN/8, x4, x1, x2)

inst_13079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffff000000; valaddr_reg:x3; val_offset:39237*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39237*0 + 3*23*FLEN/8, x4, x1, x2)

inst_13080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffff800000; valaddr_reg:x3; val_offset:39240*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39240*0 + 3*24*FLEN/8, x4, x1, x2)

inst_13081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffc00000; valaddr_reg:x3; val_offset:39243*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39243*0 + 3*25*FLEN/8, x4, x1, x2)

inst_13082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffe00000; valaddr_reg:x3; val_offset:39246*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39246*0 + 3*26*FLEN/8, x4, x1, x2)

inst_13083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffff00000; valaddr_reg:x3; val_offset:39249*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39249*0 + 3*27*FLEN/8, x4, x1, x2)

inst_13084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffff80000; valaddr_reg:x3; val_offset:39252*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39252*0 + 3*28*FLEN/8, x4, x1, x2)

inst_13085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffc0000; valaddr_reg:x3; val_offset:39255*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39255*0 + 3*29*FLEN/8, x4, x1, x2)

inst_13086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffe0000; valaddr_reg:x3; val_offset:39258*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39258*0 + 3*30*FLEN/8, x4, x1, x2)

inst_13087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffff0000; valaddr_reg:x3; val_offset:39261*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39261*0 + 3*31*FLEN/8, x4, x1, x2)

inst_13088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffff8000; valaddr_reg:x3; val_offset:39264*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39264*0 + 3*32*FLEN/8, x4, x1, x2)

inst_13089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffc000; valaddr_reg:x3; val_offset:39267*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39267*0 + 3*33*FLEN/8, x4, x1, x2)

inst_13090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffe000; valaddr_reg:x3; val_offset:39270*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39270*0 + 3*34*FLEN/8, x4, x1, x2)

inst_13091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffff000; valaddr_reg:x3; val_offset:39273*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39273*0 + 3*35*FLEN/8, x4, x1, x2)

inst_13092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffff800; valaddr_reg:x3; val_offset:39276*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39276*0 + 3*36*FLEN/8, x4, x1, x2)

inst_13093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffc00; valaddr_reg:x3; val_offset:39279*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39279*0 + 3*37*FLEN/8, x4, x1, x2)

inst_13094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffe00; valaddr_reg:x3; val_offset:39282*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39282*0 + 3*38*FLEN/8, x4, x1, x2)

inst_13095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffff00; valaddr_reg:x3; val_offset:39285*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39285*0 + 3*39*FLEN/8, x4, x1, x2)

inst_13096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffff80; valaddr_reg:x3; val_offset:39288*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39288*0 + 3*40*FLEN/8, x4, x1, x2)

inst_13097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffffc0; valaddr_reg:x3; val_offset:39291*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39291*0 + 3*41*FLEN/8, x4, x1, x2)

inst_13098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffffe0; valaddr_reg:x3; val_offset:39294*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39294*0 + 3*42*FLEN/8, x4, x1, x2)

inst_13099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffff0; valaddr_reg:x3; val_offset:39297*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39297*0 + 3*43*FLEN/8, x4, x1, x2)

inst_13100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffff8; valaddr_reg:x3; val_offset:39300*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39300*0 + 3*44*FLEN/8, x4, x1, x2)

inst_13101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffffc; valaddr_reg:x3; val_offset:39303*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39303*0 + 3*45*FLEN/8, x4, x1, x2)

inst_13102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207ffffffffffffe; valaddr_reg:x3; val_offset:39306*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39306*0 + 3*46*FLEN/8, x4, x1, x2)

inst_13103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xc9016521cb58f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x207 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7c9016521cb58f; op2val:0x0;
op3val:0x207fffffffffffff; valaddr_reg:x3; val_offset:39309*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39309*0 + 3*47*FLEN/8, x4, x1, x2)

inst_13104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:39312*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39312*0 + 3*48*FLEN/8, x4, x1, x2)

inst_13105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:39315*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39315*0 + 3*49*FLEN/8, x4, x1, x2)

inst_13106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:39318*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39318*0 + 3*50*FLEN/8, x4, x1, x2)

inst_13107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:39321*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39321*0 + 3*51*FLEN/8, x4, x1, x2)

inst_13108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:39324*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39324*0 + 3*52*FLEN/8, x4, x1, x2)

inst_13109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:39327*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39327*0 + 3*53*FLEN/8, x4, x1, x2)

inst_13110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:39330*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39330*0 + 3*54*FLEN/8, x4, x1, x2)

inst_13111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:39333*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39333*0 + 3*55*FLEN/8, x4, x1, x2)

inst_13112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:39336*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39336*0 + 3*56*FLEN/8, x4, x1, x2)

inst_13113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:39339*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39339*0 + 3*57*FLEN/8, x4, x1, x2)

inst_13114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:39342*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39342*0 + 3*58*FLEN/8, x4, x1, x2)

inst_13115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:39345*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39345*0 + 3*59*FLEN/8, x4, x1, x2)

inst_13116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:39348*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39348*0 + 3*60*FLEN/8, x4, x1, x2)

inst_13117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:39351*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39351*0 + 3*61*FLEN/8, x4, x1, x2)

inst_13118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:39354*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39354*0 + 3*62*FLEN/8, x4, x1, x2)

inst_13119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:39357*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39357*0 + 3*63*FLEN/8, x4, x1, x2)

inst_13120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:39360*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39360*0 + 3*64*FLEN/8, x4, x1, x2)

inst_13121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:39363*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39363*0 + 3*65*FLEN/8, x4, x1, x2)

inst_13122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:39366*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39366*0 + 3*66*FLEN/8, x4, x1, x2)

inst_13123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:39369*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39369*0 + 3*67*FLEN/8, x4, x1, x2)

inst_13124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:39372*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39372*0 + 3*68*FLEN/8, x4, x1, x2)

inst_13125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:39375*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39375*0 + 3*69*FLEN/8, x4, x1, x2)

inst_13126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000000000; valaddr_reg:x3; val_offset:39378*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39378*0 + 3*70*FLEN/8, x4, x1, x2)

inst_13127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000000001; valaddr_reg:x3; val_offset:39381*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39381*0 + 3*71*FLEN/8, x4, x1, x2)

inst_13128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000000003; valaddr_reg:x3; val_offset:39384*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39384*0 + 3*72*FLEN/8, x4, x1, x2)

inst_13129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000000007; valaddr_reg:x3; val_offset:39387*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39387*0 + 3*73*FLEN/8, x4, x1, x2)

inst_13130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000000000f; valaddr_reg:x3; val_offset:39390*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39390*0 + 3*74*FLEN/8, x4, x1, x2)

inst_13131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000000001f; valaddr_reg:x3; val_offset:39393*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39393*0 + 3*75*FLEN/8, x4, x1, x2)

inst_13132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000000003f; valaddr_reg:x3; val_offset:39396*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39396*0 + 3*76*FLEN/8, x4, x1, x2)

inst_13133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000000007f; valaddr_reg:x3; val_offset:39399*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39399*0 + 3*77*FLEN/8, x4, x1, x2)

inst_13134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000000000ff; valaddr_reg:x3; val_offset:39402*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39402*0 + 3*78*FLEN/8, x4, x1, x2)

inst_13135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000000001ff; valaddr_reg:x3; val_offset:39405*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39405*0 + 3*79*FLEN/8, x4, x1, x2)

inst_13136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000000003ff; valaddr_reg:x3; val_offset:39408*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39408*0 + 3*80*FLEN/8, x4, x1, x2)

inst_13137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000000007ff; valaddr_reg:x3; val_offset:39411*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39411*0 + 3*81*FLEN/8, x4, x1, x2)

inst_13138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000000fff; valaddr_reg:x3; val_offset:39414*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39414*0 + 3*82*FLEN/8, x4, x1, x2)

inst_13139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000001fff; valaddr_reg:x3; val_offset:39417*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39417*0 + 3*83*FLEN/8, x4, x1, x2)

inst_13140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000003fff; valaddr_reg:x3; val_offset:39420*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39420*0 + 3*84*FLEN/8, x4, x1, x2)

inst_13141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000007fff; valaddr_reg:x3; val_offset:39423*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39423*0 + 3*85*FLEN/8, x4, x1, x2)

inst_13142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000000ffff; valaddr_reg:x3; val_offset:39426*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39426*0 + 3*86*FLEN/8, x4, x1, x2)

inst_13143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000001ffff; valaddr_reg:x3; val_offset:39429*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39429*0 + 3*87*FLEN/8, x4, x1, x2)

inst_13144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000003ffff; valaddr_reg:x3; val_offset:39432*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39432*0 + 3*88*FLEN/8, x4, x1, x2)

inst_13145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000007ffff; valaddr_reg:x3; val_offset:39435*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39435*0 + 3*89*FLEN/8, x4, x1, x2)

inst_13146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000000fffff; valaddr_reg:x3; val_offset:39438*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39438*0 + 3*90*FLEN/8, x4, x1, x2)

inst_13147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000001fffff; valaddr_reg:x3; val_offset:39441*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39441*0 + 3*91*FLEN/8, x4, x1, x2)

inst_13148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000003fffff; valaddr_reg:x3; val_offset:39444*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39444*0 + 3*92*FLEN/8, x4, x1, x2)

inst_13149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000007fffff; valaddr_reg:x3; val_offset:39447*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39447*0 + 3*93*FLEN/8, x4, x1, x2)

inst_13150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000000ffffff; valaddr_reg:x3; val_offset:39450*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39450*0 + 3*94*FLEN/8, x4, x1, x2)

inst_13151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000001ffffff; valaddr_reg:x3; val_offset:39453*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39453*0 + 3*95*FLEN/8, x4, x1, x2)

inst_13152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000003ffffff; valaddr_reg:x3; val_offset:39456*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39456*0 + 3*96*FLEN/8, x4, x1, x2)

inst_13153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000007ffffff; valaddr_reg:x3; val_offset:39459*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39459*0 + 3*97*FLEN/8, x4, x1, x2)

inst_13154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000000fffffff; valaddr_reg:x3; val_offset:39462*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39462*0 + 3*98*FLEN/8, x4, x1, x2)

inst_13155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000001fffffff; valaddr_reg:x3; val_offset:39465*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39465*0 + 3*99*FLEN/8, x4, x1, x2)

inst_13156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000003fffffff; valaddr_reg:x3; val_offset:39468*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39468*0 + 3*100*FLEN/8, x4, x1, x2)

inst_13157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000007fffffff; valaddr_reg:x3; val_offset:39471*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39471*0 + 3*101*FLEN/8, x4, x1, x2)

inst_13158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400000ffffffff; valaddr_reg:x3; val_offset:39474*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39474*0 + 3*102*FLEN/8, x4, x1, x2)

inst_13159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400001ffffffff; valaddr_reg:x3; val_offset:39477*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39477*0 + 3*103*FLEN/8, x4, x1, x2)

inst_13160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400003ffffffff; valaddr_reg:x3; val_offset:39480*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39480*0 + 3*104*FLEN/8, x4, x1, x2)

inst_13161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400007ffffffff; valaddr_reg:x3; val_offset:39483*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39483*0 + 3*105*FLEN/8, x4, x1, x2)

inst_13162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240000fffffffff; valaddr_reg:x3; val_offset:39486*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39486*0 + 3*106*FLEN/8, x4, x1, x2)

inst_13163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240001fffffffff; valaddr_reg:x3; val_offset:39489*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39489*0 + 3*107*FLEN/8, x4, x1, x2)

inst_13164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240003fffffffff; valaddr_reg:x3; val_offset:39492*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39492*0 + 3*108*FLEN/8, x4, x1, x2)

inst_13165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240007fffffffff; valaddr_reg:x3; val_offset:39495*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39495*0 + 3*109*FLEN/8, x4, x1, x2)

inst_13166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24000ffffffffff; valaddr_reg:x3; val_offset:39498*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39498*0 + 3*110*FLEN/8, x4, x1, x2)

inst_13167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24001ffffffffff; valaddr_reg:x3; val_offset:39501*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39501*0 + 3*111*FLEN/8, x4, x1, x2)

inst_13168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24003ffffffffff; valaddr_reg:x3; val_offset:39504*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39504*0 + 3*112*FLEN/8, x4, x1, x2)

inst_13169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24007ffffffffff; valaddr_reg:x3; val_offset:39507*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39507*0 + 3*113*FLEN/8, x4, x1, x2)

inst_13170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2400fffffffffff; valaddr_reg:x3; val_offset:39510*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39510*0 + 3*114*FLEN/8, x4, x1, x2)

inst_13171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2401fffffffffff; valaddr_reg:x3; val_offset:39513*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39513*0 + 3*115*FLEN/8, x4, x1, x2)

inst_13172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2403fffffffffff; valaddr_reg:x3; val_offset:39516*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39516*0 + 3*116*FLEN/8, x4, x1, x2)

inst_13173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x2407fffffffffff; valaddr_reg:x3; val_offset:39519*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39519*0 + 3*117*FLEN/8, x4, x1, x2)

inst_13174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x240ffffffffffff; valaddr_reg:x3; val_offset:39522*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39522*0 + 3*118*FLEN/8, x4, x1, x2)

inst_13175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x241ffffffffffff; valaddr_reg:x3; val_offset:39525*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39525*0 + 3*119*FLEN/8, x4, x1, x2)

inst_13176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x243ffffffffffff; valaddr_reg:x3; val_offset:39528*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39528*0 + 3*120*FLEN/8, x4, x1, x2)

inst_13177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x247ffffffffffff; valaddr_reg:x3; val_offset:39531*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39531*0 + 3*121*FLEN/8, x4, x1, x2)

inst_13178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x248000000000000; valaddr_reg:x3; val_offset:39534*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39534*0 + 3*122*FLEN/8, x4, x1, x2)

inst_13179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24c000000000000; valaddr_reg:x3; val_offset:39537*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39537*0 + 3*123*FLEN/8, x4, x1, x2)

inst_13180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24e000000000000; valaddr_reg:x3; val_offset:39540*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39540*0 + 3*124*FLEN/8, x4, x1, x2)

inst_13181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24f000000000000; valaddr_reg:x3; val_offset:39543*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39543*0 + 3*125*FLEN/8, x4, x1, x2)

inst_13182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24f800000000000; valaddr_reg:x3; val_offset:39546*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39546*0 + 3*126*FLEN/8, x4, x1, x2)

inst_13183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fc00000000000; valaddr_reg:x3; val_offset:39549*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39549*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_13184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fe00000000000; valaddr_reg:x3; val_offset:39552*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39552*0 + 3*128*FLEN/8, x4, x1, x2)

inst_13185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ff00000000000; valaddr_reg:x3; val_offset:39555*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39555*0 + 3*129*FLEN/8, x4, x1, x2)

inst_13186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ff80000000000; valaddr_reg:x3; val_offset:39558*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39558*0 + 3*130*FLEN/8, x4, x1, x2)

inst_13187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffc0000000000; valaddr_reg:x3; val_offset:39561*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39561*0 + 3*131*FLEN/8, x4, x1, x2)

inst_13188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffe0000000000; valaddr_reg:x3; val_offset:39564*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39564*0 + 3*132*FLEN/8, x4, x1, x2)

inst_13189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fff0000000000; valaddr_reg:x3; val_offset:39567*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39567*0 + 3*133*FLEN/8, x4, x1, x2)

inst_13190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fff8000000000; valaddr_reg:x3; val_offset:39570*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39570*0 + 3*134*FLEN/8, x4, x1, x2)

inst_13191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffc000000000; valaddr_reg:x3; val_offset:39573*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39573*0 + 3*135*FLEN/8, x4, x1, x2)

inst_13192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffe000000000; valaddr_reg:x3; val_offset:39576*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39576*0 + 3*136*FLEN/8, x4, x1, x2)

inst_13193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffff000000000; valaddr_reg:x3; val_offset:39579*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39579*0 + 3*137*FLEN/8, x4, x1, x2)

inst_13194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffff800000000; valaddr_reg:x3; val_offset:39582*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39582*0 + 3*138*FLEN/8, x4, x1, x2)

inst_13195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffc00000000; valaddr_reg:x3; val_offset:39585*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39585*0 + 3*139*FLEN/8, x4, x1, x2)

inst_13196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffe00000000; valaddr_reg:x3; val_offset:39588*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39588*0 + 3*140*FLEN/8, x4, x1, x2)

inst_13197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffff00000000; valaddr_reg:x3; val_offset:39591*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39591*0 + 3*141*FLEN/8, x4, x1, x2)

inst_13198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffff80000000; valaddr_reg:x3; val_offset:39594*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39594*0 + 3*142*FLEN/8, x4, x1, x2)

inst_13199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffc0000000; valaddr_reg:x3; val_offset:39597*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39597*0 + 3*143*FLEN/8, x4, x1, x2)

inst_13200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffe0000000; valaddr_reg:x3; val_offset:39600*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39600*0 + 3*144*FLEN/8, x4, x1, x2)

inst_13201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffff0000000; valaddr_reg:x3; val_offset:39603*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39603*0 + 3*145*FLEN/8, x4, x1, x2)

inst_13202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffff8000000; valaddr_reg:x3; val_offset:39606*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39606*0 + 3*146*FLEN/8, x4, x1, x2)

inst_13203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffc000000; valaddr_reg:x3; val_offset:39609*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39609*0 + 3*147*FLEN/8, x4, x1, x2)

inst_13204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffe000000; valaddr_reg:x3; val_offset:39612*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39612*0 + 3*148*FLEN/8, x4, x1, x2)

inst_13205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffff000000; valaddr_reg:x3; val_offset:39615*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39615*0 + 3*149*FLEN/8, x4, x1, x2)

inst_13206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffff800000; valaddr_reg:x3; val_offset:39618*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39618*0 + 3*150*FLEN/8, x4, x1, x2)

inst_13207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffc00000; valaddr_reg:x3; val_offset:39621*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39621*0 + 3*151*FLEN/8, x4, x1, x2)

inst_13208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffe00000; valaddr_reg:x3; val_offset:39624*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39624*0 + 3*152*FLEN/8, x4, x1, x2)

inst_13209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffff00000; valaddr_reg:x3; val_offset:39627*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39627*0 + 3*153*FLEN/8, x4, x1, x2)

inst_13210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffff80000; valaddr_reg:x3; val_offset:39630*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39630*0 + 3*154*FLEN/8, x4, x1, x2)

inst_13211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffc0000; valaddr_reg:x3; val_offset:39633*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39633*0 + 3*155*FLEN/8, x4, x1, x2)

inst_13212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffe0000; valaddr_reg:x3; val_offset:39636*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39636*0 + 3*156*FLEN/8, x4, x1, x2)

inst_13213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffff0000; valaddr_reg:x3; val_offset:39639*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39639*0 + 3*157*FLEN/8, x4, x1, x2)

inst_13214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffff8000; valaddr_reg:x3; val_offset:39642*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39642*0 + 3*158*FLEN/8, x4, x1, x2)

inst_13215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffc000; valaddr_reg:x3; val_offset:39645*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39645*0 + 3*159*FLEN/8, x4, x1, x2)

inst_13216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffe000; valaddr_reg:x3; val_offset:39648*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39648*0 + 3*160*FLEN/8, x4, x1, x2)

inst_13217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffff000; valaddr_reg:x3; val_offset:39651*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39651*0 + 3*161*FLEN/8, x4, x1, x2)

inst_13218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffff800; valaddr_reg:x3; val_offset:39654*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39654*0 + 3*162*FLEN/8, x4, x1, x2)

inst_13219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffc00; valaddr_reg:x3; val_offset:39657*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39657*0 + 3*163*FLEN/8, x4, x1, x2)

inst_13220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffe00; valaddr_reg:x3; val_offset:39660*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39660*0 + 3*164*FLEN/8, x4, x1, x2)

inst_13221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffff00; valaddr_reg:x3; val_offset:39663*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39663*0 + 3*165*FLEN/8, x4, x1, x2)

inst_13222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffff80; valaddr_reg:x3; val_offset:39666*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39666*0 + 3*166*FLEN/8, x4, x1, x2)

inst_13223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffffc0; valaddr_reg:x3; val_offset:39669*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39669*0 + 3*167*FLEN/8, x4, x1, x2)

inst_13224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffffe0; valaddr_reg:x3; val_offset:39672*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39672*0 + 3*168*FLEN/8, x4, x1, x2)

inst_13225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffff0; valaddr_reg:x3; val_offset:39675*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39675*0 + 3*169*FLEN/8, x4, x1, x2)

inst_13226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffff8; valaddr_reg:x3; val_offset:39678*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39678*0 + 3*170*FLEN/8, x4, x1, x2)

inst_13227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffffc; valaddr_reg:x3; val_offset:39681*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39681*0 + 3*171*FLEN/8, x4, x1, x2)

inst_13228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24ffffffffffffe; valaddr_reg:x3; val_offset:39684*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39684*0 + 3*172*FLEN/8, x4, x1, x2)

inst_13229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb32b475b8aef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x024 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb32b475b8aef; op2val:0x0;
op3val:0x24fffffffffffff; valaddr_reg:x3; val_offset:39687*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39687*0 + 3*173*FLEN/8, x4, x1, x2)

inst_13230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:39690*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39690*0 + 3*174*FLEN/8, x4, x1, x2)

inst_13231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:39693*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39693*0 + 3*175*FLEN/8, x4, x1, x2)

inst_13232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:39696*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39696*0 + 3*176*FLEN/8, x4, x1, x2)

inst_13233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:39699*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39699*0 + 3*177*FLEN/8, x4, x1, x2)

inst_13234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:39702*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39702*0 + 3*178*FLEN/8, x4, x1, x2)

inst_13235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:39705*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39705*0 + 3*179*FLEN/8, x4, x1, x2)

inst_13236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:39708*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39708*0 + 3*180*FLEN/8, x4, x1, x2)

inst_13237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:39711*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39711*0 + 3*181*FLEN/8, x4, x1, x2)

inst_13238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:39714*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39714*0 + 3*182*FLEN/8, x4, x1, x2)

inst_13239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:39717*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39717*0 + 3*183*FLEN/8, x4, x1, x2)

inst_13240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:39720*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39720*0 + 3*184*FLEN/8, x4, x1, x2)

inst_13241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:39723*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39723*0 + 3*185*FLEN/8, x4, x1, x2)

inst_13242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:39726*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39726*0 + 3*186*FLEN/8, x4, x1, x2)

inst_13243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:39729*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39729*0 + 3*187*FLEN/8, x4, x1, x2)

inst_13244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:39732*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39732*0 + 3*188*FLEN/8, x4, x1, x2)

inst_13245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:39735*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39735*0 + 3*189*FLEN/8, x4, x1, x2)

inst_13246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:39738*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39738*0 + 3*190*FLEN/8, x4, x1, x2)

inst_13247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:39741*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39741*0 + 3*191*FLEN/8, x4, x1, x2)

inst_13248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:39744*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39744*0 + 3*192*FLEN/8, x4, x1, x2)

inst_13249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:39747*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39747*0 + 3*193*FLEN/8, x4, x1, x2)

inst_13250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:39750*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39750*0 + 3*194*FLEN/8, x4, x1, x2)

inst_13251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:39753*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39753*0 + 3*195*FLEN/8, x4, x1, x2)

inst_13252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000000000; valaddr_reg:x3; val_offset:39756*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39756*0 + 3*196*FLEN/8, x4, x1, x2)

inst_13253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000000001; valaddr_reg:x3; val_offset:39759*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39759*0 + 3*197*FLEN/8, x4, x1, x2)

inst_13254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000000003; valaddr_reg:x3; val_offset:39762*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39762*0 + 3*198*FLEN/8, x4, x1, x2)

inst_13255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000000007; valaddr_reg:x3; val_offset:39765*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39765*0 + 3*199*FLEN/8, x4, x1, x2)

inst_13256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000000000f; valaddr_reg:x3; val_offset:39768*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39768*0 + 3*200*FLEN/8, x4, x1, x2)

inst_13257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000000001f; valaddr_reg:x3; val_offset:39771*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39771*0 + 3*201*FLEN/8, x4, x1, x2)

inst_13258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000000003f; valaddr_reg:x3; val_offset:39774*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39774*0 + 3*202*FLEN/8, x4, x1, x2)

inst_13259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000000007f; valaddr_reg:x3; val_offset:39777*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39777*0 + 3*203*FLEN/8, x4, x1, x2)

inst_13260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000000000ff; valaddr_reg:x3; val_offset:39780*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39780*0 + 3*204*FLEN/8, x4, x1, x2)

inst_13261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000000001ff; valaddr_reg:x3; val_offset:39783*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39783*0 + 3*205*FLEN/8, x4, x1, x2)

inst_13262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000000003ff; valaddr_reg:x3; val_offset:39786*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39786*0 + 3*206*FLEN/8, x4, x1, x2)

inst_13263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000000007ff; valaddr_reg:x3; val_offset:39789*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39789*0 + 3*207*FLEN/8, x4, x1, x2)

inst_13264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000000fff; valaddr_reg:x3; val_offset:39792*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39792*0 + 3*208*FLEN/8, x4, x1, x2)

inst_13265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000001fff; valaddr_reg:x3; val_offset:39795*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39795*0 + 3*209*FLEN/8, x4, x1, x2)

inst_13266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000003fff; valaddr_reg:x3; val_offset:39798*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39798*0 + 3*210*FLEN/8, x4, x1, x2)

inst_13267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000007fff; valaddr_reg:x3; val_offset:39801*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39801*0 + 3*211*FLEN/8, x4, x1, x2)

inst_13268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000000ffff; valaddr_reg:x3; val_offset:39804*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39804*0 + 3*212*FLEN/8, x4, x1, x2)

inst_13269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000001ffff; valaddr_reg:x3; val_offset:39807*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39807*0 + 3*213*FLEN/8, x4, x1, x2)

inst_13270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000003ffff; valaddr_reg:x3; val_offset:39810*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39810*0 + 3*214*FLEN/8, x4, x1, x2)

inst_13271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000007ffff; valaddr_reg:x3; val_offset:39813*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39813*0 + 3*215*FLEN/8, x4, x1, x2)

inst_13272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000000fffff; valaddr_reg:x3; val_offset:39816*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39816*0 + 3*216*FLEN/8, x4, x1, x2)

inst_13273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000001fffff; valaddr_reg:x3; val_offset:39819*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39819*0 + 3*217*FLEN/8, x4, x1, x2)

inst_13274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000003fffff; valaddr_reg:x3; val_offset:39822*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39822*0 + 3*218*FLEN/8, x4, x1, x2)

inst_13275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000007fffff; valaddr_reg:x3; val_offset:39825*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39825*0 + 3*219*FLEN/8, x4, x1, x2)

inst_13276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000000ffffff; valaddr_reg:x3; val_offset:39828*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39828*0 + 3*220*FLEN/8, x4, x1, x2)

inst_13277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000001ffffff; valaddr_reg:x3; val_offset:39831*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39831*0 + 3*221*FLEN/8, x4, x1, x2)

inst_13278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000003ffffff; valaddr_reg:x3; val_offset:39834*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39834*0 + 3*222*FLEN/8, x4, x1, x2)

inst_13279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000007ffffff; valaddr_reg:x3; val_offset:39837*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39837*0 + 3*223*FLEN/8, x4, x1, x2)

inst_13280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000000fffffff; valaddr_reg:x3; val_offset:39840*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39840*0 + 3*224*FLEN/8, x4, x1, x2)

inst_13281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000001fffffff; valaddr_reg:x3; val_offset:39843*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39843*0 + 3*225*FLEN/8, x4, x1, x2)

inst_13282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000003fffffff; valaddr_reg:x3; val_offset:39846*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39846*0 + 3*226*FLEN/8, x4, x1, x2)

inst_13283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000007fffffff; valaddr_reg:x3; val_offset:39849*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39849*0 + 3*227*FLEN/8, x4, x1, x2)

inst_13284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300000ffffffff; valaddr_reg:x3; val_offset:39852*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39852*0 + 3*228*FLEN/8, x4, x1, x2)

inst_13285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300001ffffffff; valaddr_reg:x3; val_offset:39855*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39855*0 + 3*229*FLEN/8, x4, x1, x2)

inst_13286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300003ffffffff; valaddr_reg:x3; val_offset:39858*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39858*0 + 3*230*FLEN/8, x4, x1, x2)

inst_13287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300007ffffffff; valaddr_reg:x3; val_offset:39861*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39861*0 + 3*231*FLEN/8, x4, x1, x2)

inst_13288:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130000fffffffff; valaddr_reg:x3; val_offset:39864*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39864*0 + 3*232*FLEN/8, x4, x1, x2)

inst_13289:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130001fffffffff; valaddr_reg:x3; val_offset:39867*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39867*0 + 3*233*FLEN/8, x4, x1, x2)

inst_13290:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130003fffffffff; valaddr_reg:x3; val_offset:39870*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39870*0 + 3*234*FLEN/8, x4, x1, x2)

inst_13291:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130007fffffffff; valaddr_reg:x3; val_offset:39873*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39873*0 + 3*235*FLEN/8, x4, x1, x2)

inst_13292:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813000ffffffffff; valaddr_reg:x3; val_offset:39876*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39876*0 + 3*236*FLEN/8, x4, x1, x2)

inst_13293:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813001ffffffffff; valaddr_reg:x3; val_offset:39879*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39879*0 + 3*237*FLEN/8, x4, x1, x2)

inst_13294:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813003ffffffffff; valaddr_reg:x3; val_offset:39882*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39882*0 + 3*238*FLEN/8, x4, x1, x2)

inst_13295:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813007ffffffffff; valaddr_reg:x3; val_offset:39885*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39885*0 + 3*239*FLEN/8, x4, x1, x2)

inst_13296:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81300fffffffffff; valaddr_reg:x3; val_offset:39888*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39888*0 + 3*240*FLEN/8, x4, x1, x2)

inst_13297:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81301fffffffffff; valaddr_reg:x3; val_offset:39891*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39891*0 + 3*241*FLEN/8, x4, x1, x2)

inst_13298:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81303fffffffffff; valaddr_reg:x3; val_offset:39894*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39894*0 + 3*242*FLEN/8, x4, x1, x2)

inst_13299:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x81307fffffffffff; valaddr_reg:x3; val_offset:39897*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39897*0 + 3*243*FLEN/8, x4, x1, x2)

inst_13300:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8130ffffffffffff; valaddr_reg:x3; val_offset:39900*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39900*0 + 3*244*FLEN/8, x4, x1, x2)

inst_13301:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8131ffffffffffff; valaddr_reg:x3; val_offset:39903*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39903*0 + 3*245*FLEN/8, x4, x1, x2)

inst_13302:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8133ffffffffffff; valaddr_reg:x3; val_offset:39906*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39906*0 + 3*246*FLEN/8, x4, x1, x2)

inst_13303:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8137ffffffffffff; valaddr_reg:x3; val_offset:39909*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39909*0 + 3*247*FLEN/8, x4, x1, x2)

inst_13304:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x8138000000000000; valaddr_reg:x3; val_offset:39912*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39912*0 + 3*248*FLEN/8, x4, x1, x2)

inst_13305:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813c000000000000; valaddr_reg:x3; val_offset:39915*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39915*0 + 3*249*FLEN/8, x4, x1, x2)

inst_13306:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813e000000000000; valaddr_reg:x3; val_offset:39918*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39918*0 + 3*250*FLEN/8, x4, x1, x2)

inst_13307:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813f000000000000; valaddr_reg:x3; val_offset:39921*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39921*0 + 3*251*FLEN/8, x4, x1, x2)

inst_13308:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813f800000000000; valaddr_reg:x3; val_offset:39924*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39924*0 + 3*252*FLEN/8, x4, x1, x2)

inst_13309:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fc00000000000; valaddr_reg:x3; val_offset:39927*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39927*0 + 3*253*FLEN/8, x4, x1, x2)

inst_13310:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fe00000000000; valaddr_reg:x3; val_offset:39930*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39930*0 + 3*254*FLEN/8, x4, x1, x2)

inst_13311:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ff00000000000; valaddr_reg:x3; val_offset:39933*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39933*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_13312:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ff80000000000; valaddr_reg:x3; val_offset:39936*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39936*0 + 3*256*FLEN/8, x4, x1, x2)

inst_13313:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffc0000000000; valaddr_reg:x3; val_offset:39939*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39939*0 + 3*257*FLEN/8, x4, x1, x2)

inst_13314:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffe0000000000; valaddr_reg:x3; val_offset:39942*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39942*0 + 3*258*FLEN/8, x4, x1, x2)

inst_13315:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fff0000000000; valaddr_reg:x3; val_offset:39945*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39945*0 + 3*259*FLEN/8, x4, x1, x2)

inst_13316:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fff8000000000; valaddr_reg:x3; val_offset:39948*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39948*0 + 3*260*FLEN/8, x4, x1, x2)

inst_13317:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffc000000000; valaddr_reg:x3; val_offset:39951*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39951*0 + 3*261*FLEN/8, x4, x1, x2)

inst_13318:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffe000000000; valaddr_reg:x3; val_offset:39954*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39954*0 + 3*262*FLEN/8, x4, x1, x2)

inst_13319:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffff000000000; valaddr_reg:x3; val_offset:39957*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39957*0 + 3*263*FLEN/8, x4, x1, x2)

inst_13320:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffff800000000; valaddr_reg:x3; val_offset:39960*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39960*0 + 3*264*FLEN/8, x4, x1, x2)

inst_13321:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffc00000000; valaddr_reg:x3; val_offset:39963*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39963*0 + 3*265*FLEN/8, x4, x1, x2)

inst_13322:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffe00000000; valaddr_reg:x3; val_offset:39966*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39966*0 + 3*266*FLEN/8, x4, x1, x2)

inst_13323:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffff00000000; valaddr_reg:x3; val_offset:39969*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39969*0 + 3*267*FLEN/8, x4, x1, x2)

inst_13324:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffff80000000; valaddr_reg:x3; val_offset:39972*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39972*0 + 3*268*FLEN/8, x4, x1, x2)

inst_13325:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffc0000000; valaddr_reg:x3; val_offset:39975*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39975*0 + 3*269*FLEN/8, x4, x1, x2)

inst_13326:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffe0000000; valaddr_reg:x3; val_offset:39978*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39978*0 + 3*270*FLEN/8, x4, x1, x2)

inst_13327:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffff0000000; valaddr_reg:x3; val_offset:39981*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39981*0 + 3*271*FLEN/8, x4, x1, x2)

inst_13328:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffff8000000; valaddr_reg:x3; val_offset:39984*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39984*0 + 3*272*FLEN/8, x4, x1, x2)

inst_13329:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffc000000; valaddr_reg:x3; val_offset:39987*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39987*0 + 3*273*FLEN/8, x4, x1, x2)

inst_13330:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffe000000; valaddr_reg:x3; val_offset:39990*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39990*0 + 3*274*FLEN/8, x4, x1, x2)

inst_13331:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffff000000; valaddr_reg:x3; val_offset:39993*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39993*0 + 3*275*FLEN/8, x4, x1, x2)

inst_13332:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffff800000; valaddr_reg:x3; val_offset:39996*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39996*0 + 3*276*FLEN/8, x4, x1, x2)

inst_13333:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffc00000; valaddr_reg:x3; val_offset:39999*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 39999*0 + 3*277*FLEN/8, x4, x1, x2)

inst_13334:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffe00000; valaddr_reg:x3; val_offset:40002*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40002*0 + 3*278*FLEN/8, x4, x1, x2)

inst_13335:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffff00000; valaddr_reg:x3; val_offset:40005*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40005*0 + 3*279*FLEN/8, x4, x1, x2)

inst_13336:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffff80000; valaddr_reg:x3; val_offset:40008*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40008*0 + 3*280*FLEN/8, x4, x1, x2)

inst_13337:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffc0000; valaddr_reg:x3; val_offset:40011*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40011*0 + 3*281*FLEN/8, x4, x1, x2)

inst_13338:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffe0000; valaddr_reg:x3; val_offset:40014*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40014*0 + 3*282*FLEN/8, x4, x1, x2)

inst_13339:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffff0000; valaddr_reg:x3; val_offset:40017*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40017*0 + 3*283*FLEN/8, x4, x1, x2)

inst_13340:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffff8000; valaddr_reg:x3; val_offset:40020*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40020*0 + 3*284*FLEN/8, x4, x1, x2)

inst_13341:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffc000; valaddr_reg:x3; val_offset:40023*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40023*0 + 3*285*FLEN/8, x4, x1, x2)

inst_13342:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffe000; valaddr_reg:x3; val_offset:40026*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40026*0 + 3*286*FLEN/8, x4, x1, x2)

inst_13343:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffff000; valaddr_reg:x3; val_offset:40029*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40029*0 + 3*287*FLEN/8, x4, x1, x2)

inst_13344:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffff800; valaddr_reg:x3; val_offset:40032*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40032*0 + 3*288*FLEN/8, x4, x1, x2)

inst_13345:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffc00; valaddr_reg:x3; val_offset:40035*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40035*0 + 3*289*FLEN/8, x4, x1, x2)

inst_13346:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffe00; valaddr_reg:x3; val_offset:40038*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40038*0 + 3*290*FLEN/8, x4, x1, x2)

inst_13347:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffff00; valaddr_reg:x3; val_offset:40041*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40041*0 + 3*291*FLEN/8, x4, x1, x2)

inst_13348:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffff80; valaddr_reg:x3; val_offset:40044*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40044*0 + 3*292*FLEN/8, x4, x1, x2)

inst_13349:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffffc0; valaddr_reg:x3; val_offset:40047*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40047*0 + 3*293*FLEN/8, x4, x1, x2)

inst_13350:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffffe0; valaddr_reg:x3; val_offset:40050*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40050*0 + 3*294*FLEN/8, x4, x1, x2)

inst_13351:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffff0; valaddr_reg:x3; val_offset:40053*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40053*0 + 3*295*FLEN/8, x4, x1, x2)

inst_13352:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffff8; valaddr_reg:x3; val_offset:40056*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40056*0 + 3*296*FLEN/8, x4, x1, x2)

inst_13353:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffffc; valaddr_reg:x3; val_offset:40059*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40059*0 + 3*297*FLEN/8, x4, x1, x2)

inst_13354:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813ffffffffffffe; valaddr_reg:x3; val_offset:40062*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40062*0 + 3*298*FLEN/8, x4, x1, x2)

inst_13355:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcb49c04d9c3af and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x013 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cb49c04d9c3af; op2val:0x8000;
op3val:0x813fffffffffffff; valaddr_reg:x3; val_offset:40065*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40065*0 + 3*299*FLEN/8, x4, x1, x2)

inst_13356:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:40068*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40068*0 + 3*300*FLEN/8, x4, x1, x2)

inst_13357:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:40071*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40071*0 + 3*301*FLEN/8, x4, x1, x2)

inst_13358:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:40074*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40074*0 + 3*302*FLEN/8, x4, x1, x2)

inst_13359:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:40077*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40077*0 + 3*303*FLEN/8, x4, x1, x2)

inst_13360:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:40080*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40080*0 + 3*304*FLEN/8, x4, x1, x2)

inst_13361:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:40083*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40083*0 + 3*305*FLEN/8, x4, x1, x2)

inst_13362:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:40086*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40086*0 + 3*306*FLEN/8, x4, x1, x2)

inst_13363:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:40089*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40089*0 + 3*307*FLEN/8, x4, x1, x2)

inst_13364:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:40092*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40092*0 + 3*308*FLEN/8, x4, x1, x2)

inst_13365:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:40095*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40095*0 + 3*309*FLEN/8, x4, x1, x2)

inst_13366:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:40098*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40098*0 + 3*310*FLEN/8, x4, x1, x2)

inst_13367:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:40101*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40101*0 + 3*311*FLEN/8, x4, x1, x2)

inst_13368:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:40104*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40104*0 + 3*312*FLEN/8, x4, x1, x2)

inst_13369:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:40107*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40107*0 + 3*313*FLEN/8, x4, x1, x2)

inst_13370:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:40110*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40110*0 + 3*314*FLEN/8, x4, x1, x2)

inst_13371:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:40113*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40113*0 + 3*315*FLEN/8, x4, x1, x2)

inst_13372:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:40116*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40116*0 + 3*316*FLEN/8, x4, x1, x2)

inst_13373:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:40119*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40119*0 + 3*317*FLEN/8, x4, x1, x2)

inst_13374:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:40122*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40122*0 + 3*318*FLEN/8, x4, x1, x2)

inst_13375:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:40125*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40125*0 + 3*319*FLEN/8, x4, x1, x2)

inst_13376:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:40128*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40128*0 + 3*320*FLEN/8, x4, x1, x2)

inst_13377:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:40131*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40131*0 + 3*321*FLEN/8, x4, x1, x2)

inst_13378:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000000000; valaddr_reg:x3; val_offset:40134*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40134*0 + 3*322*FLEN/8, x4, x1, x2)

inst_13379:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000000001; valaddr_reg:x3; val_offset:40137*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40137*0 + 3*323*FLEN/8, x4, x1, x2)

inst_13380:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000000003; valaddr_reg:x3; val_offset:40140*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40140*0 + 3*324*FLEN/8, x4, x1, x2)

inst_13381:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000000007; valaddr_reg:x3; val_offset:40143*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40143*0 + 3*325*FLEN/8, x4, x1, x2)

inst_13382:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000000000f; valaddr_reg:x3; val_offset:40146*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40146*0 + 3*326*FLEN/8, x4, x1, x2)

inst_13383:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000000001f; valaddr_reg:x3; val_offset:40149*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40149*0 + 3*327*FLEN/8, x4, x1, x2)

inst_13384:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000000003f; valaddr_reg:x3; val_offset:40152*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40152*0 + 3*328*FLEN/8, x4, x1, x2)

inst_13385:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000000007f; valaddr_reg:x3; val_offset:40155*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40155*0 + 3*329*FLEN/8, x4, x1, x2)

inst_13386:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000000000ff; valaddr_reg:x3; val_offset:40158*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40158*0 + 3*330*FLEN/8, x4, x1, x2)

inst_13387:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000000001ff; valaddr_reg:x3; val_offset:40161*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40161*0 + 3*331*FLEN/8, x4, x1, x2)

inst_13388:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000000003ff; valaddr_reg:x3; val_offset:40164*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40164*0 + 3*332*FLEN/8, x4, x1, x2)

inst_13389:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000000007ff; valaddr_reg:x3; val_offset:40167*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40167*0 + 3*333*FLEN/8, x4, x1, x2)

inst_13390:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000000fff; valaddr_reg:x3; val_offset:40170*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40170*0 + 3*334*FLEN/8, x4, x1, x2)

inst_13391:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000001fff; valaddr_reg:x3; val_offset:40173*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40173*0 + 3*335*FLEN/8, x4, x1, x2)

inst_13392:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000003fff; valaddr_reg:x3; val_offset:40176*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40176*0 + 3*336*FLEN/8, x4, x1, x2)

inst_13393:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000007fff; valaddr_reg:x3; val_offset:40179*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40179*0 + 3*337*FLEN/8, x4, x1, x2)

inst_13394:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000000ffff; valaddr_reg:x3; val_offset:40182*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40182*0 + 3*338*FLEN/8, x4, x1, x2)

inst_13395:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000001ffff; valaddr_reg:x3; val_offset:40185*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40185*0 + 3*339*FLEN/8, x4, x1, x2)

inst_13396:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000003ffff; valaddr_reg:x3; val_offset:40188*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40188*0 + 3*340*FLEN/8, x4, x1, x2)

inst_13397:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000007ffff; valaddr_reg:x3; val_offset:40191*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40191*0 + 3*341*FLEN/8, x4, x1, x2)

inst_13398:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000000fffff; valaddr_reg:x3; val_offset:40194*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40194*0 + 3*342*FLEN/8, x4, x1, x2)

inst_13399:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000001fffff; valaddr_reg:x3; val_offset:40197*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40197*0 + 3*343*FLEN/8, x4, x1, x2)

inst_13400:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000003fffff; valaddr_reg:x3; val_offset:40200*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40200*0 + 3*344*FLEN/8, x4, x1, x2)

inst_13401:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000007fffff; valaddr_reg:x3; val_offset:40203*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40203*0 + 3*345*FLEN/8, x4, x1, x2)

inst_13402:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000000ffffff; valaddr_reg:x3; val_offset:40206*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40206*0 + 3*346*FLEN/8, x4, x1, x2)

inst_13403:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000001ffffff; valaddr_reg:x3; val_offset:40209*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40209*0 + 3*347*FLEN/8, x4, x1, x2)

inst_13404:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000003ffffff; valaddr_reg:x3; val_offset:40212*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40212*0 + 3*348*FLEN/8, x4, x1, x2)

inst_13405:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000007ffffff; valaddr_reg:x3; val_offset:40215*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40215*0 + 3*349*FLEN/8, x4, x1, x2)

inst_13406:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000000fffffff; valaddr_reg:x3; val_offset:40218*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40218*0 + 3*350*FLEN/8, x4, x1, x2)

inst_13407:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000001fffffff; valaddr_reg:x3; val_offset:40221*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40221*0 + 3*351*FLEN/8, x4, x1, x2)

inst_13408:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000003fffffff; valaddr_reg:x3; val_offset:40224*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40224*0 + 3*352*FLEN/8, x4, x1, x2)

inst_13409:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000007fffffff; valaddr_reg:x3; val_offset:40227*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40227*0 + 3*353*FLEN/8, x4, x1, x2)

inst_13410:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600000ffffffff; valaddr_reg:x3; val_offset:40230*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40230*0 + 3*354*FLEN/8, x4, x1, x2)

inst_13411:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600001ffffffff; valaddr_reg:x3; val_offset:40233*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40233*0 + 3*355*FLEN/8, x4, x1, x2)

inst_13412:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600003ffffffff; valaddr_reg:x3; val_offset:40236*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40236*0 + 3*356*FLEN/8, x4, x1, x2)

inst_13413:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600007ffffffff; valaddr_reg:x3; val_offset:40239*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40239*0 + 3*357*FLEN/8, x4, x1, x2)

inst_13414:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160000fffffffff; valaddr_reg:x3; val_offset:40242*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40242*0 + 3*358*FLEN/8, x4, x1, x2)

inst_13415:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160001fffffffff; valaddr_reg:x3; val_offset:40245*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40245*0 + 3*359*FLEN/8, x4, x1, x2)

inst_13416:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160003fffffffff; valaddr_reg:x3; val_offset:40248*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40248*0 + 3*360*FLEN/8, x4, x1, x2)

inst_13417:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160007fffffffff; valaddr_reg:x3; val_offset:40251*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40251*0 + 3*361*FLEN/8, x4, x1, x2)

inst_13418:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816000ffffffffff; valaddr_reg:x3; val_offset:40254*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40254*0 + 3*362*FLEN/8, x4, x1, x2)

inst_13419:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816001ffffffffff; valaddr_reg:x3; val_offset:40257*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40257*0 + 3*363*FLEN/8, x4, x1, x2)

inst_13420:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816003ffffffffff; valaddr_reg:x3; val_offset:40260*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40260*0 + 3*364*FLEN/8, x4, x1, x2)

inst_13421:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816007ffffffffff; valaddr_reg:x3; val_offset:40263*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40263*0 + 3*365*FLEN/8, x4, x1, x2)

inst_13422:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81600fffffffffff; valaddr_reg:x3; val_offset:40266*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40266*0 + 3*366*FLEN/8, x4, x1, x2)

inst_13423:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81601fffffffffff; valaddr_reg:x3; val_offset:40269*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40269*0 + 3*367*FLEN/8, x4, x1, x2)

inst_13424:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81603fffffffffff; valaddr_reg:x3; val_offset:40272*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40272*0 + 3*368*FLEN/8, x4, x1, x2)

inst_13425:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x81607fffffffffff; valaddr_reg:x3; val_offset:40275*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40275*0 + 3*369*FLEN/8, x4, x1, x2)

inst_13426:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8160ffffffffffff; valaddr_reg:x3; val_offset:40278*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40278*0 + 3*370*FLEN/8, x4, x1, x2)

inst_13427:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8161ffffffffffff; valaddr_reg:x3; val_offset:40281*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40281*0 + 3*371*FLEN/8, x4, x1, x2)

inst_13428:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8163ffffffffffff; valaddr_reg:x3; val_offset:40284*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40284*0 + 3*372*FLEN/8, x4, x1, x2)

inst_13429:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8167ffffffffffff; valaddr_reg:x3; val_offset:40287*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40287*0 + 3*373*FLEN/8, x4, x1, x2)

inst_13430:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x8168000000000000; valaddr_reg:x3; val_offset:40290*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40290*0 + 3*374*FLEN/8, x4, x1, x2)

inst_13431:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816c000000000000; valaddr_reg:x3; val_offset:40293*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40293*0 + 3*375*FLEN/8, x4, x1, x2)

inst_13432:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816e000000000000; valaddr_reg:x3; val_offset:40296*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40296*0 + 3*376*FLEN/8, x4, x1, x2)

inst_13433:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816f000000000000; valaddr_reg:x3; val_offset:40299*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40299*0 + 3*377*FLEN/8, x4, x1, x2)

inst_13434:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816f800000000000; valaddr_reg:x3; val_offset:40302*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40302*0 + 3*378*FLEN/8, x4, x1, x2)

inst_13435:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fc00000000000; valaddr_reg:x3; val_offset:40305*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40305*0 + 3*379*FLEN/8, x4, x1, x2)

inst_13436:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fe00000000000; valaddr_reg:x3; val_offset:40308*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40308*0 + 3*380*FLEN/8, x4, x1, x2)

inst_13437:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ff00000000000; valaddr_reg:x3; val_offset:40311*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40311*0 + 3*381*FLEN/8, x4, x1, x2)

inst_13438:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ff80000000000; valaddr_reg:x3; val_offset:40314*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40314*0 + 3*382*FLEN/8, x4, x1, x2)

inst_13439:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffc0000000000; valaddr_reg:x3; val_offset:40317*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40317*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_13440:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffe0000000000; valaddr_reg:x3; val_offset:40320*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40320*0 + 3*384*FLEN/8, x4, x1, x2)

inst_13441:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fff0000000000; valaddr_reg:x3; val_offset:40323*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40323*0 + 3*385*FLEN/8, x4, x1, x2)

inst_13442:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fff8000000000; valaddr_reg:x3; val_offset:40326*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40326*0 + 3*386*FLEN/8, x4, x1, x2)

inst_13443:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffc000000000; valaddr_reg:x3; val_offset:40329*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40329*0 + 3*387*FLEN/8, x4, x1, x2)

inst_13444:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffe000000000; valaddr_reg:x3; val_offset:40332*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40332*0 + 3*388*FLEN/8, x4, x1, x2)

inst_13445:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffff000000000; valaddr_reg:x3; val_offset:40335*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40335*0 + 3*389*FLEN/8, x4, x1, x2)

inst_13446:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffff800000000; valaddr_reg:x3; val_offset:40338*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40338*0 + 3*390*FLEN/8, x4, x1, x2)

inst_13447:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffc00000000; valaddr_reg:x3; val_offset:40341*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40341*0 + 3*391*FLEN/8, x4, x1, x2)

inst_13448:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffe00000000; valaddr_reg:x3; val_offset:40344*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40344*0 + 3*392*FLEN/8, x4, x1, x2)

inst_13449:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffff00000000; valaddr_reg:x3; val_offset:40347*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40347*0 + 3*393*FLEN/8, x4, x1, x2)

inst_13450:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffff80000000; valaddr_reg:x3; val_offset:40350*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40350*0 + 3*394*FLEN/8, x4, x1, x2)

inst_13451:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffc0000000; valaddr_reg:x3; val_offset:40353*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40353*0 + 3*395*FLEN/8, x4, x1, x2)

inst_13452:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffe0000000; valaddr_reg:x3; val_offset:40356*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40356*0 + 3*396*FLEN/8, x4, x1, x2)

inst_13453:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffff0000000; valaddr_reg:x3; val_offset:40359*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40359*0 + 3*397*FLEN/8, x4, x1, x2)

inst_13454:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffff8000000; valaddr_reg:x3; val_offset:40362*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40362*0 + 3*398*FLEN/8, x4, x1, x2)

inst_13455:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffc000000; valaddr_reg:x3; val_offset:40365*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40365*0 + 3*399*FLEN/8, x4, x1, x2)

inst_13456:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffe000000; valaddr_reg:x3; val_offset:40368*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40368*0 + 3*400*FLEN/8, x4, x1, x2)

inst_13457:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffff000000; valaddr_reg:x3; val_offset:40371*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40371*0 + 3*401*FLEN/8, x4, x1, x2)

inst_13458:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffff800000; valaddr_reg:x3; val_offset:40374*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40374*0 + 3*402*FLEN/8, x4, x1, x2)

inst_13459:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffc00000; valaddr_reg:x3; val_offset:40377*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40377*0 + 3*403*FLEN/8, x4, x1, x2)

inst_13460:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffe00000; valaddr_reg:x3; val_offset:40380*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40380*0 + 3*404*FLEN/8, x4, x1, x2)

inst_13461:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffff00000; valaddr_reg:x3; val_offset:40383*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40383*0 + 3*405*FLEN/8, x4, x1, x2)

inst_13462:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffff80000; valaddr_reg:x3; val_offset:40386*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40386*0 + 3*406*FLEN/8, x4, x1, x2)

inst_13463:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffc0000; valaddr_reg:x3; val_offset:40389*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40389*0 + 3*407*FLEN/8, x4, x1, x2)

inst_13464:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffe0000; valaddr_reg:x3; val_offset:40392*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40392*0 + 3*408*FLEN/8, x4, x1, x2)

inst_13465:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffff0000; valaddr_reg:x3; val_offset:40395*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40395*0 + 3*409*FLEN/8, x4, x1, x2)

inst_13466:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffff8000; valaddr_reg:x3; val_offset:40398*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40398*0 + 3*410*FLEN/8, x4, x1, x2)

inst_13467:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffc000; valaddr_reg:x3; val_offset:40401*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40401*0 + 3*411*FLEN/8, x4, x1, x2)

inst_13468:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffe000; valaddr_reg:x3; val_offset:40404*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40404*0 + 3*412*FLEN/8, x4, x1, x2)

inst_13469:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffff000; valaddr_reg:x3; val_offset:40407*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40407*0 + 3*413*FLEN/8, x4, x1, x2)

inst_13470:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffff800; valaddr_reg:x3; val_offset:40410*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40410*0 + 3*414*FLEN/8, x4, x1, x2)

inst_13471:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffc00; valaddr_reg:x3; val_offset:40413*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40413*0 + 3*415*FLEN/8, x4, x1, x2)

inst_13472:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffe00; valaddr_reg:x3; val_offset:40416*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40416*0 + 3*416*FLEN/8, x4, x1, x2)

inst_13473:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffff00; valaddr_reg:x3; val_offset:40419*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40419*0 + 3*417*FLEN/8, x4, x1, x2)

inst_13474:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffff80; valaddr_reg:x3; val_offset:40422*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40422*0 + 3*418*FLEN/8, x4, x1, x2)

inst_13475:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffffc0; valaddr_reg:x3; val_offset:40425*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40425*0 + 3*419*FLEN/8, x4, x1, x2)

inst_13476:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffffe0; valaddr_reg:x3; val_offset:40428*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40428*0 + 3*420*FLEN/8, x4, x1, x2)

inst_13477:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffff0; valaddr_reg:x3; val_offset:40431*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40431*0 + 3*421*FLEN/8, x4, x1, x2)

inst_13478:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffff8; valaddr_reg:x3; val_offset:40434*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40434*0 + 3*422*FLEN/8, x4, x1, x2)

inst_13479:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffffc; valaddr_reg:x3; val_offset:40437*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40437*0 + 3*423*FLEN/8, x4, x1, x2)

inst_13480:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816ffffffffffffe; valaddr_reg:x3; val_offset:40440*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40440*0 + 3*424*FLEN/8, x4, x1, x2)

inst_13481:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xcd8e8d20f398f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x016 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7cd8e8d20f398f; op2val:0x8000;
op3val:0x816fffffffffffff; valaddr_reg:x3; val_offset:40443*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40443*0 + 3*425*FLEN/8, x4, x1, x2)

inst_13482:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000000000; valaddr_reg:x3; val_offset:40446*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40446*0 + 3*426*FLEN/8, x4, x1, x2)

inst_13483:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000000001; valaddr_reg:x3; val_offset:40449*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40449*0 + 3*427*FLEN/8, x4, x1, x2)

inst_13484:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000000003; valaddr_reg:x3; val_offset:40452*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40452*0 + 3*428*FLEN/8, x4, x1, x2)

inst_13485:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000000007; valaddr_reg:x3; val_offset:40455*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40455*0 + 3*429*FLEN/8, x4, x1, x2)

inst_13486:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000000000f; valaddr_reg:x3; val_offset:40458*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40458*0 + 3*430*FLEN/8, x4, x1, x2)

inst_13487:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000000001f; valaddr_reg:x3; val_offset:40461*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40461*0 + 3*431*FLEN/8, x4, x1, x2)

inst_13488:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000000003f; valaddr_reg:x3; val_offset:40464*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40464*0 + 3*432*FLEN/8, x4, x1, x2)

inst_13489:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000000007f; valaddr_reg:x3; val_offset:40467*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40467*0 + 3*433*FLEN/8, x4, x1, x2)

inst_13490:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000000000ff; valaddr_reg:x3; val_offset:40470*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40470*0 + 3*434*FLEN/8, x4, x1, x2)

inst_13491:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000000001ff; valaddr_reg:x3; val_offset:40473*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40473*0 + 3*435*FLEN/8, x4, x1, x2)

inst_13492:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000000003ff; valaddr_reg:x3; val_offset:40476*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40476*0 + 3*436*FLEN/8, x4, x1, x2)

inst_13493:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000000007ff; valaddr_reg:x3; val_offset:40479*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40479*0 + 3*437*FLEN/8, x4, x1, x2)

inst_13494:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000000fff; valaddr_reg:x3; val_offset:40482*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40482*0 + 3*438*FLEN/8, x4, x1, x2)

inst_13495:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000001fff; valaddr_reg:x3; val_offset:40485*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40485*0 + 3*439*FLEN/8, x4, x1, x2)

inst_13496:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000003fff; valaddr_reg:x3; val_offset:40488*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40488*0 + 3*440*FLEN/8, x4, x1, x2)

inst_13497:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000007fff; valaddr_reg:x3; val_offset:40491*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40491*0 + 3*441*FLEN/8, x4, x1, x2)

inst_13498:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000000ffff; valaddr_reg:x3; val_offset:40494*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40494*0 + 3*442*FLEN/8, x4, x1, x2)

inst_13499:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000001ffff; valaddr_reg:x3; val_offset:40497*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40497*0 + 3*443*FLEN/8, x4, x1, x2)

inst_13500:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000003ffff; valaddr_reg:x3; val_offset:40500*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40500*0 + 3*444*FLEN/8, x4, x1, x2)

inst_13501:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000007ffff; valaddr_reg:x3; val_offset:40503*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40503*0 + 3*445*FLEN/8, x4, x1, x2)

inst_13502:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000000fffff; valaddr_reg:x3; val_offset:40506*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40506*0 + 3*446*FLEN/8, x4, x1, x2)

inst_13503:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000001fffff; valaddr_reg:x3; val_offset:40509*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40509*0 + 3*447*FLEN/8, x4, x1, x2)

inst_13504:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000003fffff; valaddr_reg:x3; val_offset:40512*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40512*0 + 3*448*FLEN/8, x4, x1, x2)

inst_13505:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000007fffff; valaddr_reg:x3; val_offset:40515*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40515*0 + 3*449*FLEN/8, x4, x1, x2)

inst_13506:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000000ffffff; valaddr_reg:x3; val_offset:40518*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40518*0 + 3*450*FLEN/8, x4, x1, x2)

inst_13507:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000001ffffff; valaddr_reg:x3; val_offset:40521*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40521*0 + 3*451*FLEN/8, x4, x1, x2)

inst_13508:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000003ffffff; valaddr_reg:x3; val_offset:40524*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40524*0 + 3*452*FLEN/8, x4, x1, x2)

inst_13509:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000007ffffff; valaddr_reg:x3; val_offset:40527*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40527*0 + 3*453*FLEN/8, x4, x1, x2)

inst_13510:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000000fffffff; valaddr_reg:x3; val_offset:40530*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40530*0 + 3*454*FLEN/8, x4, x1, x2)

inst_13511:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000001fffffff; valaddr_reg:x3; val_offset:40533*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40533*0 + 3*455*FLEN/8, x4, x1, x2)

inst_13512:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000003fffffff; valaddr_reg:x3; val_offset:40536*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40536*0 + 3*456*FLEN/8, x4, x1, x2)

inst_13513:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000007fffffff; valaddr_reg:x3; val_offset:40539*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40539*0 + 3*457*FLEN/8, x4, x1, x2)

inst_13514:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00000ffffffff; valaddr_reg:x3; val_offset:40542*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40542*0 + 3*458*FLEN/8, x4, x1, x2)

inst_13515:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00001ffffffff; valaddr_reg:x3; val_offset:40545*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40545*0 + 3*459*FLEN/8, x4, x1, x2)

inst_13516:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00003ffffffff; valaddr_reg:x3; val_offset:40548*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40548*0 + 3*460*FLEN/8, x4, x1, x2)

inst_13517:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00007ffffffff; valaddr_reg:x3; val_offset:40551*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40551*0 + 3*461*FLEN/8, x4, x1, x2)

inst_13518:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0000fffffffff; valaddr_reg:x3; val_offset:40554*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40554*0 + 3*462*FLEN/8, x4, x1, x2)

inst_13519:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0001fffffffff; valaddr_reg:x3; val_offset:40557*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40557*0 + 3*463*FLEN/8, x4, x1, x2)

inst_13520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0003fffffffff; valaddr_reg:x3; val_offset:40560*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40560*0 + 3*464*FLEN/8, x4, x1, x2)

inst_13521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0007fffffffff; valaddr_reg:x3; val_offset:40563*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40563*0 + 3*465*FLEN/8, x4, x1, x2)

inst_13522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf000ffffffffff; valaddr_reg:x3; val_offset:40566*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40566*0 + 3*466*FLEN/8, x4, x1, x2)

inst_13523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf001ffffffffff; valaddr_reg:x3; val_offset:40569*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40569*0 + 3*467*FLEN/8, x4, x1, x2)

inst_13524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf003ffffffffff; valaddr_reg:x3; val_offset:40572*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40572*0 + 3*468*FLEN/8, x4, x1, x2)

inst_13525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf007ffffffffff; valaddr_reg:x3; val_offset:40575*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40575*0 + 3*469*FLEN/8, x4, x1, x2)

inst_13526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf00fffffffffff; valaddr_reg:x3; val_offset:40578*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40578*0 + 3*470*FLEN/8, x4, x1, x2)

inst_13527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf01fffffffffff; valaddr_reg:x3; val_offset:40581*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40581*0 + 3*471*FLEN/8, x4, x1, x2)

inst_13528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf03fffffffffff; valaddr_reg:x3; val_offset:40584*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40584*0 + 3*472*FLEN/8, x4, x1, x2)

inst_13529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf07fffffffffff; valaddr_reg:x3; val_offset:40587*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40587*0 + 3*473*FLEN/8, x4, x1, x2)

inst_13530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf0ffffffffffff; valaddr_reg:x3; val_offset:40590*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40590*0 + 3*474*FLEN/8, x4, x1, x2)

inst_13531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf1ffffffffffff; valaddr_reg:x3; val_offset:40593*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40593*0 + 3*475*FLEN/8, x4, x1, x2)

inst_13532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf3ffffffffffff; valaddr_reg:x3; val_offset:40596*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40596*0 + 3*476*FLEN/8, x4, x1, x2)

inst_13533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf7ffffffffffff; valaddr_reg:x3; val_offset:40599*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40599*0 + 3*477*FLEN/8, x4, x1, x2)

inst_13534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cf8000000000000; valaddr_reg:x3; val_offset:40602*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40602*0 + 3*478*FLEN/8, x4, x1, x2)

inst_13535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfc000000000000; valaddr_reg:x3; val_offset:40605*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40605*0 + 3*479*FLEN/8, x4, x1, x2)

inst_13536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfe000000000000; valaddr_reg:x3; val_offset:40608*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40608*0 + 3*480*FLEN/8, x4, x1, x2)

inst_13537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cff000000000000; valaddr_reg:x3; val_offset:40611*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40611*0 + 3*481*FLEN/8, x4, x1, x2)

inst_13538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cff800000000000; valaddr_reg:x3; val_offset:40614*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40614*0 + 3*482*FLEN/8, x4, x1, x2)

inst_13539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffc00000000000; valaddr_reg:x3; val_offset:40617*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40617*0 + 3*483*FLEN/8, x4, x1, x2)

inst_13540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffe00000000000; valaddr_reg:x3; val_offset:40620*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40620*0 + 3*484*FLEN/8, x4, x1, x2)

inst_13541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfff00000000000; valaddr_reg:x3; val_offset:40623*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40623*0 + 3*485*FLEN/8, x4, x1, x2)

inst_13542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfff80000000000; valaddr_reg:x3; val_offset:40626*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40626*0 + 3*486*FLEN/8, x4, x1, x2)

inst_13543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffc0000000000; valaddr_reg:x3; val_offset:40629*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40629*0 + 3*487*FLEN/8, x4, x1, x2)

inst_13544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffe0000000000; valaddr_reg:x3; val_offset:40632*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40632*0 + 3*488*FLEN/8, x4, x1, x2)

inst_13545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffff0000000000; valaddr_reg:x3; val_offset:40635*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40635*0 + 3*489*FLEN/8, x4, x1, x2)

inst_13546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffff8000000000; valaddr_reg:x3; val_offset:40638*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40638*0 + 3*490*FLEN/8, x4, x1, x2)

inst_13547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffc000000000; valaddr_reg:x3; val_offset:40641*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40641*0 + 3*491*FLEN/8, x4, x1, x2)

inst_13548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffe000000000; valaddr_reg:x3; val_offset:40644*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40644*0 + 3*492*FLEN/8, x4, x1, x2)

inst_13549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffff000000000; valaddr_reg:x3; val_offset:40647*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40647*0 + 3*493*FLEN/8, x4, x1, x2)

inst_13550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffff800000000; valaddr_reg:x3; val_offset:40650*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40650*0 + 3*494*FLEN/8, x4, x1, x2)

inst_13551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffc00000000; valaddr_reg:x3; val_offset:40653*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40653*0 + 3*495*FLEN/8, x4, x1, x2)

inst_13552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffe00000000; valaddr_reg:x3; val_offset:40656*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40656*0 + 3*496*FLEN/8, x4, x1, x2)

inst_13553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffff00000000; valaddr_reg:x3; val_offset:40659*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40659*0 + 3*497*FLEN/8, x4, x1, x2)

inst_13554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffff80000000; valaddr_reg:x3; val_offset:40662*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40662*0 + 3*498*FLEN/8, x4, x1, x2)

inst_13555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffc0000000; valaddr_reg:x3; val_offset:40665*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40665*0 + 3*499*FLEN/8, x4, x1, x2)

inst_13556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffe0000000; valaddr_reg:x3; val_offset:40668*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40668*0 + 3*500*FLEN/8, x4, x1, x2)

inst_13557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffff0000000; valaddr_reg:x3; val_offset:40671*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40671*0 + 3*501*FLEN/8, x4, x1, x2)

inst_13558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffff8000000; valaddr_reg:x3; val_offset:40674*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40674*0 + 3*502*FLEN/8, x4, x1, x2)

inst_13559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffc000000; valaddr_reg:x3; val_offset:40677*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40677*0 + 3*503*FLEN/8, x4, x1, x2)

inst_13560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffe000000; valaddr_reg:x3; val_offset:40680*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40680*0 + 3*504*FLEN/8, x4, x1, x2)

inst_13561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffff000000; valaddr_reg:x3; val_offset:40683*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40683*0 + 3*505*FLEN/8, x4, x1, x2)

inst_13562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffff800000; valaddr_reg:x3; val_offset:40686*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40686*0 + 3*506*FLEN/8, x4, x1, x2)

inst_13563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffc00000; valaddr_reg:x3; val_offset:40689*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40689*0 + 3*507*FLEN/8, x4, x1, x2)

inst_13564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffe00000; valaddr_reg:x3; val_offset:40692*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40692*0 + 3*508*FLEN/8, x4, x1, x2)

inst_13565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffff00000; valaddr_reg:x3; val_offset:40695*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40695*0 + 3*509*FLEN/8, x4, x1, x2)

inst_13566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffff80000; valaddr_reg:x3; val_offset:40698*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40698*0 + 3*510*FLEN/8, x4, x1, x2)

inst_13567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffc0000; valaddr_reg:x3; val_offset:40701*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40701*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_13568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffe0000; valaddr_reg:x3; val_offset:40704*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40704*0 + 3*512*FLEN/8, x4, x1, x2)

inst_13569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffff0000; valaddr_reg:x3; val_offset:40707*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40707*0 + 3*513*FLEN/8, x4, x1, x2)

inst_13570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffff8000; valaddr_reg:x3; val_offset:40710*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40710*0 + 3*514*FLEN/8, x4, x1, x2)

inst_13571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffc000; valaddr_reg:x3; val_offset:40713*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40713*0 + 3*515*FLEN/8, x4, x1, x2)

inst_13572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffe000; valaddr_reg:x3; val_offset:40716*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40716*0 + 3*516*FLEN/8, x4, x1, x2)

inst_13573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffff000; valaddr_reg:x3; val_offset:40719*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40719*0 + 3*517*FLEN/8, x4, x1, x2)

inst_13574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffff800; valaddr_reg:x3; val_offset:40722*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40722*0 + 3*518*FLEN/8, x4, x1, x2)

inst_13575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffc00; valaddr_reg:x3; val_offset:40725*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40725*0 + 3*519*FLEN/8, x4, x1, x2)

inst_13576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffe00; valaddr_reg:x3; val_offset:40728*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40728*0 + 3*520*FLEN/8, x4, x1, x2)

inst_13577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffff00; valaddr_reg:x3; val_offset:40731*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40731*0 + 3*521*FLEN/8, x4, x1, x2)

inst_13578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffff80; valaddr_reg:x3; val_offset:40734*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40734*0 + 3*522*FLEN/8, x4, x1, x2)

inst_13579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffffc0; valaddr_reg:x3; val_offset:40737*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40737*0 + 3*523*FLEN/8, x4, x1, x2)

inst_13580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffffe0; valaddr_reg:x3; val_offset:40740*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40740*0 + 3*524*FLEN/8, x4, x1, x2)

inst_13581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffff0; valaddr_reg:x3; val_offset:40743*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40743*0 + 3*525*FLEN/8, x4, x1, x2)

inst_13582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffff8; valaddr_reg:x3; val_offset:40746*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40746*0 + 3*526*FLEN/8, x4, x1, x2)

inst_13583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffffc; valaddr_reg:x3; val_offset:40749*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40749*0 + 3*527*FLEN/8, x4, x1, x2)

inst_13584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cfffffffffffffe; valaddr_reg:x3; val_offset:40752*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40752*0 + 3*528*FLEN/8, x4, x1, x2)

inst_13585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3cf and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3cffffffffffffff; valaddr_reg:x3; val_offset:40755*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40755*0 + 3*529*FLEN/8, x4, x1, x2)

inst_13586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:40758*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40758*0 + 3*530*FLEN/8, x4, x1, x2)

inst_13587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:40761*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40761*0 + 3*531*FLEN/8, x4, x1, x2)

inst_13588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:40764*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40764*0 + 3*532*FLEN/8, x4, x1, x2)

inst_13589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:40767*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40767*0 + 3*533*FLEN/8, x4, x1, x2)

inst_13590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:40770*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40770*0 + 3*534*FLEN/8, x4, x1, x2)

inst_13591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:40773*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40773*0 + 3*535*FLEN/8, x4, x1, x2)

inst_13592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:40776*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40776*0 + 3*536*FLEN/8, x4, x1, x2)

inst_13593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:40779*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40779*0 + 3*537*FLEN/8, x4, x1, x2)

inst_13594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:40782*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40782*0 + 3*538*FLEN/8, x4, x1, x2)

inst_13595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:40785*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40785*0 + 3*539*FLEN/8, x4, x1, x2)

inst_13596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:40788*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40788*0 + 3*540*FLEN/8, x4, x1, x2)

inst_13597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:40791*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40791*0 + 3*541*FLEN/8, x4, x1, x2)

inst_13598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:40794*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40794*0 + 3*542*FLEN/8, x4, x1, x2)

inst_13599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:40797*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40797*0 + 3*543*FLEN/8, x4, x1, x2)

inst_13600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:40800*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40800*0 + 3*544*FLEN/8, x4, x1, x2)

inst_13601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:40803*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40803*0 + 3*545*FLEN/8, x4, x1, x2)

inst_13602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:40806*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40806*0 + 3*546*FLEN/8, x4, x1, x2)

inst_13603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:40809*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40809*0 + 3*547*FLEN/8, x4, x1, x2)

inst_13604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:40812*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40812*0 + 3*548*FLEN/8, x4, x1, x2)

inst_13605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:40815*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40815*0 + 3*549*FLEN/8, x4, x1, x2)

inst_13606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:40818*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40818*0 + 3*550*FLEN/8, x4, x1, x2)

inst_13607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd140ecaec5c67 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x19b8bbed7e2b1 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d140ecaec5c67; op2val:0x20619b8bbed7e2b1;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:40821*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40821*0 + 3*551*FLEN/8, x4, x1, x2)

inst_13608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:40824*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40824*0 + 3*552*FLEN/8, x4, x1, x2)

inst_13609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:40827*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40827*0 + 3*553*FLEN/8, x4, x1, x2)

inst_13610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:40830*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40830*0 + 3*554*FLEN/8, x4, x1, x2)

inst_13611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:40833*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40833*0 + 3*555*FLEN/8, x4, x1, x2)

inst_13612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:40836*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40836*0 + 3*556*FLEN/8, x4, x1, x2)

inst_13613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:40839*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40839*0 + 3*557*FLEN/8, x4, x1, x2)

inst_13614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:40842*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40842*0 + 3*558*FLEN/8, x4, x1, x2)

inst_13615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:40845*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40845*0 + 3*559*FLEN/8, x4, x1, x2)

inst_13616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:40848*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40848*0 + 3*560*FLEN/8, x4, x1, x2)

inst_13617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:40851*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40851*0 + 3*561*FLEN/8, x4, x1, x2)

inst_13618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:40854*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40854*0 + 3*562*FLEN/8, x4, x1, x2)

inst_13619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:40857*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40857*0 + 3*563*FLEN/8, x4, x1, x2)

inst_13620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:40860*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40860*0 + 3*564*FLEN/8, x4, x1, x2)

inst_13621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:40863*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40863*0 + 3*565*FLEN/8, x4, x1, x2)

inst_13622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:40866*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40866*0 + 3*566*FLEN/8, x4, x1, x2)

inst_13623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:40869*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40869*0 + 3*567*FLEN/8, x4, x1, x2)

inst_13624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:40872*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40872*0 + 3*568*FLEN/8, x4, x1, x2)

inst_13625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:40875*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40875*0 + 3*569*FLEN/8, x4, x1, x2)

inst_13626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:40878*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40878*0 + 3*570*FLEN/8, x4, x1, x2)

inst_13627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:40881*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40881*0 + 3*571*FLEN/8, x4, x1, x2)

inst_13628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:40884*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40884*0 + 3*572*FLEN/8, x4, x1, x2)

inst_13629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:40887*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40887*0 + 3*573*FLEN/8, x4, x1, x2)

inst_13630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000000000; valaddr_reg:x3; val_offset:40890*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40890*0 + 3*574*FLEN/8, x4, x1, x2)

inst_13631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000000001; valaddr_reg:x3; val_offset:40893*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40893*0 + 3*575*FLEN/8, x4, x1, x2)

inst_13632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000000003; valaddr_reg:x3; val_offset:40896*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40896*0 + 3*576*FLEN/8, x4, x1, x2)

inst_13633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000000007; valaddr_reg:x3; val_offset:40899*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40899*0 + 3*577*FLEN/8, x4, x1, x2)

inst_13634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000000000f; valaddr_reg:x3; val_offset:40902*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40902*0 + 3*578*FLEN/8, x4, x1, x2)

inst_13635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000000001f; valaddr_reg:x3; val_offset:40905*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40905*0 + 3*579*FLEN/8, x4, x1, x2)

inst_13636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000000003f; valaddr_reg:x3; val_offset:40908*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40908*0 + 3*580*FLEN/8, x4, x1, x2)

inst_13637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000000007f; valaddr_reg:x3; val_offset:40911*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40911*0 + 3*581*FLEN/8, x4, x1, x2)

inst_13638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000000000ff; valaddr_reg:x3; val_offset:40914*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40914*0 + 3*582*FLEN/8, x4, x1, x2)

inst_13639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000000001ff; valaddr_reg:x3; val_offset:40917*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40917*0 + 3*583*FLEN/8, x4, x1, x2)

inst_13640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000000003ff; valaddr_reg:x3; val_offset:40920*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40920*0 + 3*584*FLEN/8, x4, x1, x2)

inst_13641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000000007ff; valaddr_reg:x3; val_offset:40923*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40923*0 + 3*585*FLEN/8, x4, x1, x2)

inst_13642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000000fff; valaddr_reg:x3; val_offset:40926*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40926*0 + 3*586*FLEN/8, x4, x1, x2)

inst_13643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000001fff; valaddr_reg:x3; val_offset:40929*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40929*0 + 3*587*FLEN/8, x4, x1, x2)

inst_13644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000003fff; valaddr_reg:x3; val_offset:40932*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40932*0 + 3*588*FLEN/8, x4, x1, x2)

inst_13645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000007fff; valaddr_reg:x3; val_offset:40935*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40935*0 + 3*589*FLEN/8, x4, x1, x2)

inst_13646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000000ffff; valaddr_reg:x3; val_offset:40938*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40938*0 + 3*590*FLEN/8, x4, x1, x2)

inst_13647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000001ffff; valaddr_reg:x3; val_offset:40941*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40941*0 + 3*591*FLEN/8, x4, x1, x2)

inst_13648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000003ffff; valaddr_reg:x3; val_offset:40944*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40944*0 + 3*592*FLEN/8, x4, x1, x2)

inst_13649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000007ffff; valaddr_reg:x3; val_offset:40947*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40947*0 + 3*593*FLEN/8, x4, x1, x2)

inst_13650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000000fffff; valaddr_reg:x3; val_offset:40950*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40950*0 + 3*594*FLEN/8, x4, x1, x2)

inst_13651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000001fffff; valaddr_reg:x3; val_offset:40953*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40953*0 + 3*595*FLEN/8, x4, x1, x2)

inst_13652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000003fffff; valaddr_reg:x3; val_offset:40956*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40956*0 + 3*596*FLEN/8, x4, x1, x2)

inst_13653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000007fffff; valaddr_reg:x3; val_offset:40959*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40959*0 + 3*597*FLEN/8, x4, x1, x2)

inst_13654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000000ffffff; valaddr_reg:x3; val_offset:40962*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40962*0 + 3*598*FLEN/8, x4, x1, x2)

inst_13655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000001ffffff; valaddr_reg:x3; val_offset:40965*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40965*0 + 3*599*FLEN/8, x4, x1, x2)

inst_13656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000003ffffff; valaddr_reg:x3; val_offset:40968*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40968*0 + 3*600*FLEN/8, x4, x1, x2)

inst_13657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000007ffffff; valaddr_reg:x3; val_offset:40971*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40971*0 + 3*601*FLEN/8, x4, x1, x2)

inst_13658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000000fffffff; valaddr_reg:x3; val_offset:40974*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40974*0 + 3*602*FLEN/8, x4, x1, x2)

inst_13659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000001fffffff; valaddr_reg:x3; val_offset:40977*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40977*0 + 3*603*FLEN/8, x4, x1, x2)

inst_13660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000003fffffff; valaddr_reg:x3; val_offset:40980*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40980*0 + 3*604*FLEN/8, x4, x1, x2)

inst_13661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000007fffffff; valaddr_reg:x3; val_offset:40983*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40983*0 + 3*605*FLEN/8, x4, x1, x2)

inst_13662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200000ffffffff; valaddr_reg:x3; val_offset:40986*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40986*0 + 3*606*FLEN/8, x4, x1, x2)

inst_13663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200001ffffffff; valaddr_reg:x3; val_offset:40989*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40989*0 + 3*607*FLEN/8, x4, x1, x2)

inst_13664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200003ffffffff; valaddr_reg:x3; val_offset:40992*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40992*0 + 3*608*FLEN/8, x4, x1, x2)

inst_13665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200007ffffffff; valaddr_reg:x3; val_offset:40995*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40995*0 + 3*609*FLEN/8, x4, x1, x2)

inst_13666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320000fffffffff; valaddr_reg:x3; val_offset:40998*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 40998*0 + 3*610*FLEN/8, x4, x1, x2)

inst_13667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320001fffffffff; valaddr_reg:x3; val_offset:41001*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41001*0 + 3*611*FLEN/8, x4, x1, x2)

inst_13668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320003fffffffff; valaddr_reg:x3; val_offset:41004*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41004*0 + 3*612*FLEN/8, x4, x1, x2)

inst_13669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320007fffffffff; valaddr_reg:x3; val_offset:41007*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41007*0 + 3*613*FLEN/8, x4, x1, x2)

inst_13670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832000ffffffffff; valaddr_reg:x3; val_offset:41010*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41010*0 + 3*614*FLEN/8, x4, x1, x2)

inst_13671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832001ffffffffff; valaddr_reg:x3; val_offset:41013*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41013*0 + 3*615*FLEN/8, x4, x1, x2)

inst_13672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832003ffffffffff; valaddr_reg:x3; val_offset:41016*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41016*0 + 3*616*FLEN/8, x4, x1, x2)

inst_13673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832007ffffffffff; valaddr_reg:x3; val_offset:41019*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41019*0 + 3*617*FLEN/8, x4, x1, x2)

inst_13674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83200fffffffffff; valaddr_reg:x3; val_offset:41022*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41022*0 + 3*618*FLEN/8, x4, x1, x2)

inst_13675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83201fffffffffff; valaddr_reg:x3; val_offset:41025*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41025*0 + 3*619*FLEN/8, x4, x1, x2)

inst_13676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83203fffffffffff; valaddr_reg:x3; val_offset:41028*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41028*0 + 3*620*FLEN/8, x4, x1, x2)

inst_13677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x83207fffffffffff; valaddr_reg:x3; val_offset:41031*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41031*0 + 3*621*FLEN/8, x4, x1, x2)

inst_13678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8320ffffffffffff; valaddr_reg:x3; val_offset:41034*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41034*0 + 3*622*FLEN/8, x4, x1, x2)

inst_13679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8321ffffffffffff; valaddr_reg:x3; val_offset:41037*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41037*0 + 3*623*FLEN/8, x4, x1, x2)

inst_13680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8323ffffffffffff; valaddr_reg:x3; val_offset:41040*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41040*0 + 3*624*FLEN/8, x4, x1, x2)

inst_13681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8327ffffffffffff; valaddr_reg:x3; val_offset:41043*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41043*0 + 3*625*FLEN/8, x4, x1, x2)

inst_13682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x8328000000000000; valaddr_reg:x3; val_offset:41046*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41046*0 + 3*626*FLEN/8, x4, x1, x2)

inst_13683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832c000000000000; valaddr_reg:x3; val_offset:41049*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41049*0 + 3*627*FLEN/8, x4, x1, x2)

inst_13684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832e000000000000; valaddr_reg:x3; val_offset:41052*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41052*0 + 3*628*FLEN/8, x4, x1, x2)

inst_13685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832f000000000000; valaddr_reg:x3; val_offset:41055*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41055*0 + 3*629*FLEN/8, x4, x1, x2)

inst_13686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832f800000000000; valaddr_reg:x3; val_offset:41058*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41058*0 + 3*630*FLEN/8, x4, x1, x2)

inst_13687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fc00000000000; valaddr_reg:x3; val_offset:41061*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41061*0 + 3*631*FLEN/8, x4, x1, x2)

inst_13688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fe00000000000; valaddr_reg:x3; val_offset:41064*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41064*0 + 3*632*FLEN/8, x4, x1, x2)

inst_13689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ff00000000000; valaddr_reg:x3; val_offset:41067*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41067*0 + 3*633*FLEN/8, x4, x1, x2)

inst_13690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ff80000000000; valaddr_reg:x3; val_offset:41070*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41070*0 + 3*634*FLEN/8, x4, x1, x2)

inst_13691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffc0000000000; valaddr_reg:x3; val_offset:41073*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41073*0 + 3*635*FLEN/8, x4, x1, x2)

inst_13692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffe0000000000; valaddr_reg:x3; val_offset:41076*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41076*0 + 3*636*FLEN/8, x4, x1, x2)

inst_13693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fff0000000000; valaddr_reg:x3; val_offset:41079*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41079*0 + 3*637*FLEN/8, x4, x1, x2)

inst_13694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fff8000000000; valaddr_reg:x3; val_offset:41082*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41082*0 + 3*638*FLEN/8, x4, x1, x2)

inst_13695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffc000000000; valaddr_reg:x3; val_offset:41085*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41085*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_13696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffe000000000; valaddr_reg:x3; val_offset:41088*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41088*0 + 3*640*FLEN/8, x4, x1, x2)

inst_13697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffff000000000; valaddr_reg:x3; val_offset:41091*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41091*0 + 3*641*FLEN/8, x4, x1, x2)

inst_13698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffff800000000; valaddr_reg:x3; val_offset:41094*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41094*0 + 3*642*FLEN/8, x4, x1, x2)

inst_13699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffc00000000; valaddr_reg:x3; val_offset:41097*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41097*0 + 3*643*FLEN/8, x4, x1, x2)

inst_13700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffe00000000; valaddr_reg:x3; val_offset:41100*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41100*0 + 3*644*FLEN/8, x4, x1, x2)

inst_13701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffff00000000; valaddr_reg:x3; val_offset:41103*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41103*0 + 3*645*FLEN/8, x4, x1, x2)

inst_13702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffff80000000; valaddr_reg:x3; val_offset:41106*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41106*0 + 3*646*FLEN/8, x4, x1, x2)

inst_13703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffc0000000; valaddr_reg:x3; val_offset:41109*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41109*0 + 3*647*FLEN/8, x4, x1, x2)

inst_13704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffe0000000; valaddr_reg:x3; val_offset:41112*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41112*0 + 3*648*FLEN/8, x4, x1, x2)

inst_13705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffff0000000; valaddr_reg:x3; val_offset:41115*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41115*0 + 3*649*FLEN/8, x4, x1, x2)

inst_13706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffff8000000; valaddr_reg:x3; val_offset:41118*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41118*0 + 3*650*FLEN/8, x4, x1, x2)

inst_13707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffc000000; valaddr_reg:x3; val_offset:41121*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41121*0 + 3*651*FLEN/8, x4, x1, x2)

inst_13708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffe000000; valaddr_reg:x3; val_offset:41124*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41124*0 + 3*652*FLEN/8, x4, x1, x2)

inst_13709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffff000000; valaddr_reg:x3; val_offset:41127*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41127*0 + 3*653*FLEN/8, x4, x1, x2)

inst_13710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffff800000; valaddr_reg:x3; val_offset:41130*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41130*0 + 3*654*FLEN/8, x4, x1, x2)

inst_13711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffc00000; valaddr_reg:x3; val_offset:41133*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41133*0 + 3*655*FLEN/8, x4, x1, x2)

inst_13712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffe00000; valaddr_reg:x3; val_offset:41136*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41136*0 + 3*656*FLEN/8, x4, x1, x2)

inst_13713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffff00000; valaddr_reg:x3; val_offset:41139*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41139*0 + 3*657*FLEN/8, x4, x1, x2)

inst_13714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffff80000; valaddr_reg:x3; val_offset:41142*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41142*0 + 3*658*FLEN/8, x4, x1, x2)

inst_13715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffc0000; valaddr_reg:x3; val_offset:41145*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41145*0 + 3*659*FLEN/8, x4, x1, x2)

inst_13716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffe0000; valaddr_reg:x3; val_offset:41148*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41148*0 + 3*660*FLEN/8, x4, x1, x2)

inst_13717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffff0000; valaddr_reg:x3; val_offset:41151*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41151*0 + 3*661*FLEN/8, x4, x1, x2)

inst_13718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffff8000; valaddr_reg:x3; val_offset:41154*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41154*0 + 3*662*FLEN/8, x4, x1, x2)

inst_13719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffc000; valaddr_reg:x3; val_offset:41157*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41157*0 + 3*663*FLEN/8, x4, x1, x2)

inst_13720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffe000; valaddr_reg:x3; val_offset:41160*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41160*0 + 3*664*FLEN/8, x4, x1, x2)

inst_13721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffff000; valaddr_reg:x3; val_offset:41163*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41163*0 + 3*665*FLEN/8, x4, x1, x2)

inst_13722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffff800; valaddr_reg:x3; val_offset:41166*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41166*0 + 3*666*FLEN/8, x4, x1, x2)

inst_13723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffc00; valaddr_reg:x3; val_offset:41169*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41169*0 + 3*667*FLEN/8, x4, x1, x2)

inst_13724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffe00; valaddr_reg:x3; val_offset:41172*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41172*0 + 3*668*FLEN/8, x4, x1, x2)

inst_13725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffff00; valaddr_reg:x3; val_offset:41175*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41175*0 + 3*669*FLEN/8, x4, x1, x2)

inst_13726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffff80; valaddr_reg:x3; val_offset:41178*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41178*0 + 3*670*FLEN/8, x4, x1, x2)

inst_13727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffffc0; valaddr_reg:x3; val_offset:41181*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41181*0 + 3*671*FLEN/8, x4, x1, x2)

inst_13728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffffe0; valaddr_reg:x3; val_offset:41184*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41184*0 + 3*672*FLEN/8, x4, x1, x2)

inst_13729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffff0; valaddr_reg:x3; val_offset:41187*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41187*0 + 3*673*FLEN/8, x4, x1, x2)

inst_13730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffff8; valaddr_reg:x3; val_offset:41190*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41190*0 + 3*674*FLEN/8, x4, x1, x2)

inst_13731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffffc; valaddr_reg:x3; val_offset:41193*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41193*0 + 3*675*FLEN/8, x4, x1, x2)

inst_13732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832ffffffffffffe; valaddr_reg:x3; val_offset:41196*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41196*0 + 3*676*FLEN/8, x4, x1, x2)

inst_13733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xd5b40f03d436f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7d5b40f03d436f; op2val:0x8000;
op3val:0x832fffffffffffff; valaddr_reg:x3; val_offset:41199*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41199*0 + 3*677*FLEN/8, x4, x1, x2)

inst_13734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000000000; valaddr_reg:x3; val_offset:41202*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41202*0 + 3*678*FLEN/8, x4, x1, x2)

inst_13735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:41205*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41205*0 + 3*679*FLEN/8, x4, x1, x2)

inst_13736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:41208*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41208*0 + 3*680*FLEN/8, x4, x1, x2)

inst_13737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:41211*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41211*0 + 3*681*FLEN/8, x4, x1, x2)

inst_13738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:41214*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41214*0 + 3*682*FLEN/8, x4, x1, x2)

inst_13739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:41217*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41217*0 + 3*683*FLEN/8, x4, x1, x2)

inst_13740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:41220*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41220*0 + 3*684*FLEN/8, x4, x1, x2)

inst_13741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000000007f; valaddr_reg:x3; val_offset:41223*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41223*0 + 3*685*FLEN/8, x4, x1, x2)

inst_13742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000000000ff; valaddr_reg:x3; val_offset:41226*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41226*0 + 3*686*FLEN/8, x4, x1, x2)

inst_13743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000000001ff; valaddr_reg:x3; val_offset:41229*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41229*0 + 3*687*FLEN/8, x4, x1, x2)

inst_13744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000000003ff; valaddr_reg:x3; val_offset:41232*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41232*0 + 3*688*FLEN/8, x4, x1, x2)

inst_13745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000000007ff; valaddr_reg:x3; val_offset:41235*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41235*0 + 3*689*FLEN/8, x4, x1, x2)

inst_13746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000000fff; valaddr_reg:x3; val_offset:41238*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41238*0 + 3*690*FLEN/8, x4, x1, x2)

inst_13747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000001fff; valaddr_reg:x3; val_offset:41241*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41241*0 + 3*691*FLEN/8, x4, x1, x2)

inst_13748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000003fff; valaddr_reg:x3; val_offset:41244*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41244*0 + 3*692*FLEN/8, x4, x1, x2)

inst_13749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000007fff; valaddr_reg:x3; val_offset:41247*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41247*0 + 3*693*FLEN/8, x4, x1, x2)

inst_13750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000000ffff; valaddr_reg:x3; val_offset:41250*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41250*0 + 3*694*FLEN/8, x4, x1, x2)

inst_13751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000001ffff; valaddr_reg:x3; val_offset:41253*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41253*0 + 3*695*FLEN/8, x4, x1, x2)

inst_13752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000003ffff; valaddr_reg:x3; val_offset:41256*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41256*0 + 3*696*FLEN/8, x4, x1, x2)

inst_13753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000007ffff; valaddr_reg:x3; val_offset:41259*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41259*0 + 3*697*FLEN/8, x4, x1, x2)

inst_13754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000000fffff; valaddr_reg:x3; val_offset:41262*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41262*0 + 3*698*FLEN/8, x4, x1, x2)

inst_13755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000001fffff; valaddr_reg:x3; val_offset:41265*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41265*0 + 3*699*FLEN/8, x4, x1, x2)

inst_13756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000003fffff; valaddr_reg:x3; val_offset:41268*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41268*0 + 3*700*FLEN/8, x4, x1, x2)

inst_13757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000007fffff; valaddr_reg:x3; val_offset:41271*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41271*0 + 3*701*FLEN/8, x4, x1, x2)

inst_13758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000000ffffff; valaddr_reg:x3; val_offset:41274*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41274*0 + 3*702*FLEN/8, x4, x1, x2)

inst_13759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000001ffffff; valaddr_reg:x3; val_offset:41277*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41277*0 + 3*703*FLEN/8, x4, x1, x2)

inst_13760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000003ffffff; valaddr_reg:x3; val_offset:41280*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41280*0 + 3*704*FLEN/8, x4, x1, x2)

inst_13761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000007ffffff; valaddr_reg:x3; val_offset:41283*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41283*0 + 3*705*FLEN/8, x4, x1, x2)

inst_13762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000000fffffff; valaddr_reg:x3; val_offset:41286*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41286*0 + 3*706*FLEN/8, x4, x1, x2)

inst_13763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000001fffffff; valaddr_reg:x3; val_offset:41289*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41289*0 + 3*707*FLEN/8, x4, x1, x2)

inst_13764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000003fffffff; valaddr_reg:x3; val_offset:41292*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41292*0 + 3*708*FLEN/8, x4, x1, x2)

inst_13765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000007fffffff; valaddr_reg:x3; val_offset:41295*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41295*0 + 3*709*FLEN/8, x4, x1, x2)

inst_13766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100000ffffffff; valaddr_reg:x3; val_offset:41298*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41298*0 + 3*710*FLEN/8, x4, x1, x2)

inst_13767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100001ffffffff; valaddr_reg:x3; val_offset:41301*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41301*0 + 3*711*FLEN/8, x4, x1, x2)

inst_13768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100003ffffffff; valaddr_reg:x3; val_offset:41304*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41304*0 + 3*712*FLEN/8, x4, x1, x2)

inst_13769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100007ffffffff; valaddr_reg:x3; val_offset:41307*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41307*0 + 3*713*FLEN/8, x4, x1, x2)

inst_13770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010000fffffffff; valaddr_reg:x3; val_offset:41310*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41310*0 + 3*714*FLEN/8, x4, x1, x2)

inst_13771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010001fffffffff; valaddr_reg:x3; val_offset:41313*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41313*0 + 3*715*FLEN/8, x4, x1, x2)

inst_13772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010003fffffffff; valaddr_reg:x3; val_offset:41316*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41316*0 + 3*716*FLEN/8, x4, x1, x2)

inst_13773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010007fffffffff; valaddr_reg:x3; val_offset:41319*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41319*0 + 3*717*FLEN/8, x4, x1, x2)

inst_13774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801000ffffffffff; valaddr_reg:x3; val_offset:41322*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41322*0 + 3*718*FLEN/8, x4, x1, x2)

inst_13775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801001ffffffffff; valaddr_reg:x3; val_offset:41325*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41325*0 + 3*719*FLEN/8, x4, x1, x2)

inst_13776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801003ffffffffff; valaddr_reg:x3; val_offset:41328*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41328*0 + 3*720*FLEN/8, x4, x1, x2)

inst_13777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801007ffffffffff; valaddr_reg:x3; val_offset:41331*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41331*0 + 3*721*FLEN/8, x4, x1, x2)

inst_13778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80100fffffffffff; valaddr_reg:x3; val_offset:41334*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41334*0 + 3*722*FLEN/8, x4, x1, x2)

inst_13779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80101fffffffffff; valaddr_reg:x3; val_offset:41337*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41337*0 + 3*723*FLEN/8, x4, x1, x2)

inst_13780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80103fffffffffff; valaddr_reg:x3; val_offset:41340*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41340*0 + 3*724*FLEN/8, x4, x1, x2)

inst_13781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x80107fffffffffff; valaddr_reg:x3; val_offset:41343*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41343*0 + 3*725*FLEN/8, x4, x1, x2)

inst_13782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8010ffffffffffff; valaddr_reg:x3; val_offset:41346*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41346*0 + 3*726*FLEN/8, x4, x1, x2)

inst_13783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8011ffffffffffff; valaddr_reg:x3; val_offset:41349*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41349*0 + 3*727*FLEN/8, x4, x1, x2)

inst_13784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:41352*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41352*0 + 3*728*FLEN/8, x4, x1, x2)

inst_13785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8013ffffffffffff; valaddr_reg:x3; val_offset:41355*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41355*0 + 3*729*FLEN/8, x4, x1, x2)

inst_13786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:41358*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41358*0 + 3*730*FLEN/8, x4, x1, x2)

inst_13787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:41361*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41361*0 + 3*731*FLEN/8, x4, x1, x2)

inst_13788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:41364*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41364*0 + 3*732*FLEN/8, x4, x1, x2)

inst_13789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:41367*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41367*0 + 3*733*FLEN/8, x4, x1, x2)

inst_13790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8017ffffffffffff; valaddr_reg:x3; val_offset:41370*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41370*0 + 3*734*FLEN/8, x4, x1, x2)

inst_13791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8018000000000000; valaddr_reg:x3; val_offset:41373*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41373*0 + 3*735*FLEN/8, x4, x1, x2)

inst_13792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:41376*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41376*0 + 3*736*FLEN/8, x4, x1, x2)

inst_13793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:41379*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41379*0 + 3*737*FLEN/8, x4, x1, x2)

inst_13794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:41382*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41382*0 + 3*738*FLEN/8, x4, x1, x2)

inst_13795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801c000000000000; valaddr_reg:x3; val_offset:41385*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41385*0 + 3*739*FLEN/8, x4, x1, x2)

inst_13796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:41388*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41388*0 + 3*740*FLEN/8, x4, x1, x2)

inst_13797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:41391*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41391*0 + 3*741*FLEN/8, x4, x1, x2)

inst_13798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801e000000000000; valaddr_reg:x3; val_offset:41394*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41394*0 + 3*742*FLEN/8, x4, x1, x2)

inst_13799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801f000000000000; valaddr_reg:x3; val_offset:41397*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41397*0 + 3*743*FLEN/8, x4, x1, x2)

inst_13800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801f800000000000; valaddr_reg:x3; val_offset:41400*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41400*0 + 3*744*FLEN/8, x4, x1, x2)

inst_13801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fc00000000000; valaddr_reg:x3; val_offset:41403*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41403*0 + 3*745*FLEN/8, x4, x1, x2)

inst_13802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fe00000000000; valaddr_reg:x3; val_offset:41406*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41406*0 + 3*746*FLEN/8, x4, x1, x2)

inst_13803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ff00000000000; valaddr_reg:x3; val_offset:41409*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41409*0 + 3*747*FLEN/8, x4, x1, x2)

inst_13804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ff80000000000; valaddr_reg:x3; val_offset:41412*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41412*0 + 3*748*FLEN/8, x4, x1, x2)

inst_13805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffc0000000000; valaddr_reg:x3; val_offset:41415*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41415*0 + 3*749*FLEN/8, x4, x1, x2)

inst_13806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffe0000000000; valaddr_reg:x3; val_offset:41418*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41418*0 + 3*750*FLEN/8, x4, x1, x2)

inst_13807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fff0000000000; valaddr_reg:x3; val_offset:41421*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41421*0 + 3*751*FLEN/8, x4, x1, x2)

inst_13808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fff8000000000; valaddr_reg:x3; val_offset:41424*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41424*0 + 3*752*FLEN/8, x4, x1, x2)

inst_13809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffc000000000; valaddr_reg:x3; val_offset:41427*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41427*0 + 3*753*FLEN/8, x4, x1, x2)

inst_13810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffe000000000; valaddr_reg:x3; val_offset:41430*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41430*0 + 3*754*FLEN/8, x4, x1, x2)

inst_13811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffff000000000; valaddr_reg:x3; val_offset:41433*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41433*0 + 3*755*FLEN/8, x4, x1, x2)

inst_13812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffff800000000; valaddr_reg:x3; val_offset:41436*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41436*0 + 3*756*FLEN/8, x4, x1, x2)

inst_13813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffc00000000; valaddr_reg:x3; val_offset:41439*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41439*0 + 3*757*FLEN/8, x4, x1, x2)

inst_13814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffe00000000; valaddr_reg:x3; val_offset:41442*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41442*0 + 3*758*FLEN/8, x4, x1, x2)

inst_13815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffff00000000; valaddr_reg:x3; val_offset:41445*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41445*0 + 3*759*FLEN/8, x4, x1, x2)

inst_13816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffff80000000; valaddr_reg:x3; val_offset:41448*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41448*0 + 3*760*FLEN/8, x4, x1, x2)

inst_13817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffc0000000; valaddr_reg:x3; val_offset:41451*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41451*0 + 3*761*FLEN/8, x4, x1, x2)

inst_13818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffe0000000; valaddr_reg:x3; val_offset:41454*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41454*0 + 3*762*FLEN/8, x4, x1, x2)

inst_13819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffff0000000; valaddr_reg:x3; val_offset:41457*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41457*0 + 3*763*FLEN/8, x4, x1, x2)

inst_13820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffff8000000; valaddr_reg:x3; val_offset:41460*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41460*0 + 3*764*FLEN/8, x4, x1, x2)

inst_13821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffc000000; valaddr_reg:x3; val_offset:41463*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41463*0 + 3*765*FLEN/8, x4, x1, x2)

inst_13822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801ffffffe000000; valaddr_reg:x3; val_offset:41466*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41466*0 + 3*766*FLEN/8, x4, x1, x2)

inst_13823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xdee4b9140fab7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7dee4b9140fab7; op2val:0x8000;
op3val:0x801fffffff000000; valaddr_reg:x3; val_offset:41469*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 41469*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341731068744302592,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341801437488480256,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341836621860569088,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341854214046613504,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341863010139635712,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341867408186146816,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341869607209402368,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341870706721030144,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871256476844032,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871531354750976,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871668793704448,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871737513181184,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871771872919552,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871789052788736,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871797642723328,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871801937690624,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871804085174272,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871805158916096,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871805695787008,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871805964222464,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806098440192,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806165549056,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806199103488,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806215880704,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806224269312,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806228463616,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806230560768,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806231609344,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232133632,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232395776,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232526848,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232592384,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232625152,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232641536,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232649728,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232653824,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232655872,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232656896,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657408,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657664,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657792,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657856,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657888,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657904,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657912,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657916,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657918,64,FLEN)
NAN_BOXED(6880532756256568719,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2341871806232657919,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337856,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337857,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337859,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337863,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337871,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337887,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337919,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585337983,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338111,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338367,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585338879,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585339903,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585341951,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585346047,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585354239,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585370623,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585403391,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585468927,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585599999,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586585862143,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586586386431,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586587435007,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586589532159,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586593726463,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586602115071,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586618892287,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586652446719,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586719555583,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129586853773311,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587122208767,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129587659079679,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129588732821503,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129590880305151,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129595175272447,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129603765207039,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129620945076223,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129655304814591,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129724024291327,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162129861463244799,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130136341151743,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162130686096965631,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162131785608593407,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162133984631848959,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162138382678360063,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162147178771382271,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162164770957426687,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162199955329515519,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162270324073693183,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162411061562048511,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(162692536538759167,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(163255486492180479,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023103,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(164381386399023104,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(165507286305865728,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166070236259287040,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166351711235997696,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166492448724353024,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166562817468530688,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166598001840619520,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166615594026663936,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166624390119686144,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166628788166197248,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166630987189452800,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632086701080576,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632636456894464,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166632911334801408,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633048773754880,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633117493231616,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633151852969984,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633169032839168,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633177622773760,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633181917741056,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633184065224704,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185138966528,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185675837440,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633185944272896,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186078490624,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186145599488,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186179153920,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186195931136,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186204319744,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186208514048,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186210611200,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186211659776,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212184064,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212446208,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212577280,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212642816,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212675584,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212691968,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212700160,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212704256,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212706304,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707328,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212707840,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708096,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708224,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708288,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708320,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708336,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708344,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708348,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708350,64,FLEN)
NAN_BOXED(6880571329177422575,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(166633186212708351,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815232,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815233,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815235,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815239,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815247,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815263,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815295,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815359,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815487,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774815743,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774816255,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774817279,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774819327,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774823423,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774831615,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774847999,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774880767,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429774946303,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775077375,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775339519,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429775863807,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429776912383,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429779009535,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429783203839,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429791592447,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429808369663,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429841924095,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940429909032959,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430043250687,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430311686143,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940430848557055,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940431922298879,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940434069782527,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940438364749823,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940446954684415,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940464134553599,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940498494291967,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940567213768703,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940704652722175,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308940979530629119,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308941529286443007,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308942628798070783,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308944827821326335,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308949225867837439,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308958021960859647,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9308975614146904063,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309010798518992895,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309081167263170559,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309221904751525887,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9309503379728236543,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9310066329681657855,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500479,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9311192229588500480,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312318129495343104,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9312881079448764416,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313162554425475072,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313303291913830400,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313373660658008064,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313408845030096896,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313426437216141312,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313435233309163520,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313439631355674624,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313441830378930176,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313442929890557952,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443479646371840,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443754524278784,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443891963232256,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443960682708992,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313443995042447360,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444012222316544,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444020812251136,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444025107218432,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444027254702080,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028328443904,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444028865314816,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029133750272,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029267968000,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029335076864,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029368631296,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029385408512,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029393797120,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029397991424,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029400088576,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401137152,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401661440,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029401923584,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402054656,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402120192,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402152960,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402169344,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402177536,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402181632,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402183680,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402184704,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185216,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185472,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185600,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185664,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185696,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185712,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185720,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185724,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185726,64,FLEN)
NAN_BOXED(6880572912904553391,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185727,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926720,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926721,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926723,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926727,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926735,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926751,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926783,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926847,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926975,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927231,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656927743,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656928767,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656930815,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656934911,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656943103,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656959487,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656992255,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657057791,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657188863,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657451007,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228657975295,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228659023871,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228661121023,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228665315327,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228673703935,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228690481151,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228724035583,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228791144447,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228925362175,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229193797631,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451229730668543,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451230804410367,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451232951894015,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451237246861311,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451245836795903,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451263016665087,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451297376403455,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451366095880191,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451503534833663,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451778412740607,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322452328168554495,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322453427680182271,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322455626703437823,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322460024749948927,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322468820842971135,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322486413029015551,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322521597401104383,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322591966145282047,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322732703633637375,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9323014178610348031,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9323577128563769343,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9324703028470611967,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9324703028470611968,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9325828928377454592,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326391878330875904,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326673353307586560,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326814090795941888,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326884459540119552,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326919643912208384,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326937236098252800,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326946032191275008,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326950430237786112,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326952629261041664,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326953728772669440,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954278528483328,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954553406390272,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954690845343744,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954759564820480,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954793924558848,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954811104428032,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954819694362624,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954823989329920,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954826136813568,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954827210555392,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954827747426304,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828015861760,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828150079488,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828217188352,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828250742784,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828267520000,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828275908608,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828280102912,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828282200064,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828283248640,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828283772928,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284035072,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284166144,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284231680,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284264448,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284280832,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284289024,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284293120,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284295168,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296192,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296704,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284296960,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297088,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297152,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297184,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297200,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297208,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297212,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297214,64,FLEN)
NAN_BOXED(6880612825183500687,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9326954828284297215,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233600,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233601,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233603,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233607,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233615,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233631,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233663,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233727,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686233855,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686234111,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686234623,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686235647,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686237695,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686241791,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686249983,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686266367,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686299135,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686364671,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686495743,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636686757887,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636687282175,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636688330751,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636690427903,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636694622207,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636703010815,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636719788031,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636753342463,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636820451327,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009636954669055,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009637223104511,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009637759975423,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009638833717247,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009640981200895,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009645276168191,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009653866102783,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009671045971967,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009705405710335,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009774125187071,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391009911564140543,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391010186442047487,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391010736197861375,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391011835709489151,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391014034732744703,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391018432779255807,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391027228872278015,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391044821058322431,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391080005430411263,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391150374174588927,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391291111662944255,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4391572586639654911,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4392135536593076223,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4393261436499918847,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4393261436499918848,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4394387336406761472,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4394950286360182784,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395231761336893440,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395372498825248768,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395442867569426432,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395478051941515264,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395495644127559680,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395504440220581888,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395508838267092992,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395511037290348544,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395512136801976320,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395512686557790208,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395512961435697152,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513098874650624,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513167594127360,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513201953865728,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513219133734912,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513227723669504,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513232018636800,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513234166120448,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513235239862272,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513235776733184,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236045168640,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236179386368,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236246495232,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236280049664,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236296826880,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236305215488,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236309409792,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236311506944,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236312555520,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313079808,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313341952,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313473024,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313538560,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313571328,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313587712,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313595904,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313600000,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313602048,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313603072,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313603584,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313603840,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313603968,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604032,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604064,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604080,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604088,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604092,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604094,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4395513236313604095,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6880677859458571367,64,FLEN)
NAN_BOXED(2333317106459206321,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300608,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300609,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300611,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300615,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300623,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300639,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300671,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300735,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223300863,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301119,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223301631,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223302655,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223304703,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223308799,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223316991,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223333375,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223366143,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223431679,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223562751,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018223824895,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018224349183,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018225397759,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018227494911,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018231689215,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018240077823,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018256855039,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018290409471,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018357518335,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018491736063,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552018760171519,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552019297042431,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552020370784255,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552022518267903,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552026813235199,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552035403169791,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552052583038975,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552086942777343,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552155662254079,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552293101207551,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448552567979114495,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448553117734928383,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448554217246556159,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448556416269811711,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448560814316322815,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448569610409345023,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448587202595389439,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448622386967478271,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448692755711655935,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9448833493200011263,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449114968176721919,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9449677918130143231,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985855,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9450803818036985856,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9451929717943828480,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452492667897249792,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452774142873960448,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452914880362315776,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9452985249106493440,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453020433478582272,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453038025664626688,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453046821757648896,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453051219804160000,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453053418827415552,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453054518339043328,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055068094857216,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055342972764160,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055480411717632,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055549131194368,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055583490932736,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055600670801920,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055609260736512,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055613555703808,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055615703187456,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055616776929280,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617313800192,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617582235648,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617716453376,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617783562240,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617817116672,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617833893888,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617842282496,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617846476800,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617848573952,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617849622528,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850146816,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850408960,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850540032,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850605568,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850638336,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850654720,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850662912,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850667008,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850669056,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670080,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670592,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670848,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850670976,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671040,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671072,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671088,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671096,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671100,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671102,64,FLEN)
NAN_BOXED(6880756140158567279,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9453055617850671103,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146304,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146431,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146559,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146815,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482147327,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482148351,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482150399,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482154495,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482162687,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482179071,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482211839,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482277375,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482408447,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482670591,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636483194879,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636484243455,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636486340607,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636490534911,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636498923519,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636515700735,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636549255167,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636616364031,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636750581759,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637019017215,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875637555888127,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875638629629951,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875640777113599,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875645072080895,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875653662015487,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875670841884671,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875705201623039,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875773921099775,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875911360053247,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876186237960191,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227876735993774079,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227877835505401855,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227880034528657407,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227884432575168511,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227893228668190719,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227910820854235135,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227946005226323967,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228016373970501631,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228157111458856959,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228438586435567615,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229001536388988927,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831551,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230127436295831552,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231253336202674176,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231816286156095488,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232097761132806144,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232238498621161472,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232308867365339136,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232344051737427968,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232361643923472384,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232370440016494592,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232374838063005696,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232377037086261248,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378136597889024,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378686353702912,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232378961231609856,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379098670563328,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379167390040064,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379201749778432,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379218929647616,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379227519582208,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379231814549504,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379233962033152,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235035774976,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235572645888,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235841081344,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379235975299072,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236042407936,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236075962368,64,FLEN)
NAN_BOXED(6880917814018898615,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236092739584,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
