
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_55296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bf800000000000; valaddr_reg:x3; val_offset:165888*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165888*0 + 3*0*FLEN/8, x4, x1, x2)

inst_55297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfc00000000000; valaddr_reg:x3; val_offset:165891*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165891*0 + 3*1*FLEN/8, x4, x1, x2)

inst_55298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfe00000000000; valaddr_reg:x3; val_offset:165894*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165894*0 + 3*2*FLEN/8, x4, x1, x2)

inst_55299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bff00000000000; valaddr_reg:x3; val_offset:165897*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165897*0 + 3*3*FLEN/8, x4, x1, x2)

inst_55300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bff80000000000; valaddr_reg:x3; val_offset:165900*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165900*0 + 3*4*FLEN/8, x4, x1, x2)

inst_55301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffc0000000000; valaddr_reg:x3; val_offset:165903*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165903*0 + 3*5*FLEN/8, x4, x1, x2)

inst_55302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffe0000000000; valaddr_reg:x3; val_offset:165906*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165906*0 + 3*6*FLEN/8, x4, x1, x2)

inst_55303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfff0000000000; valaddr_reg:x3; val_offset:165909*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165909*0 + 3*7*FLEN/8, x4, x1, x2)

inst_55304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfff8000000000; valaddr_reg:x3; val_offset:165912*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165912*0 + 3*8*FLEN/8, x4, x1, x2)

inst_55305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffc000000000; valaddr_reg:x3; val_offset:165915*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165915*0 + 3*9*FLEN/8, x4, x1, x2)

inst_55306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffe000000000; valaddr_reg:x3; val_offset:165918*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165918*0 + 3*10*FLEN/8, x4, x1, x2)

inst_55307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffff000000000; valaddr_reg:x3; val_offset:165921*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165921*0 + 3*11*FLEN/8, x4, x1, x2)

inst_55308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffff800000000; valaddr_reg:x3; val_offset:165924*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165924*0 + 3*12*FLEN/8, x4, x1, x2)

inst_55309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffc00000000; valaddr_reg:x3; val_offset:165927*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165927*0 + 3*13*FLEN/8, x4, x1, x2)

inst_55310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffe00000000; valaddr_reg:x3; val_offset:165930*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165930*0 + 3*14*FLEN/8, x4, x1, x2)

inst_55311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffff00000000; valaddr_reg:x3; val_offset:165933*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165933*0 + 3*15*FLEN/8, x4, x1, x2)

inst_55312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffff80000000; valaddr_reg:x3; val_offset:165936*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165936*0 + 3*16*FLEN/8, x4, x1, x2)

inst_55313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffc0000000; valaddr_reg:x3; val_offset:165939*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165939*0 + 3*17*FLEN/8, x4, x1, x2)

inst_55314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffe0000000; valaddr_reg:x3; val_offset:165942*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165942*0 + 3*18*FLEN/8, x4, x1, x2)

inst_55315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffff0000000; valaddr_reg:x3; val_offset:165945*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165945*0 + 3*19*FLEN/8, x4, x1, x2)

inst_55316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffff8000000; valaddr_reg:x3; val_offset:165948*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165948*0 + 3*20*FLEN/8, x4, x1, x2)

inst_55317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffc000000; valaddr_reg:x3; val_offset:165951*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165951*0 + 3*21*FLEN/8, x4, x1, x2)

inst_55318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffe000000; valaddr_reg:x3; val_offset:165954*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165954*0 + 3*22*FLEN/8, x4, x1, x2)

inst_55319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffff000000; valaddr_reg:x3; val_offset:165957*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165957*0 + 3*23*FLEN/8, x4, x1, x2)

inst_55320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffff800000; valaddr_reg:x3; val_offset:165960*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165960*0 + 3*24*FLEN/8, x4, x1, x2)

inst_55321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffc00000; valaddr_reg:x3; val_offset:165963*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165963*0 + 3*25*FLEN/8, x4, x1, x2)

inst_55322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffe00000; valaddr_reg:x3; val_offset:165966*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165966*0 + 3*26*FLEN/8, x4, x1, x2)

inst_55323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffff00000; valaddr_reg:x3; val_offset:165969*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165969*0 + 3*27*FLEN/8, x4, x1, x2)

inst_55324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffff80000; valaddr_reg:x3; val_offset:165972*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165972*0 + 3*28*FLEN/8, x4, x1, x2)

inst_55325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffc0000; valaddr_reg:x3; val_offset:165975*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165975*0 + 3*29*FLEN/8, x4, x1, x2)

inst_55326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffe0000; valaddr_reg:x3; val_offset:165978*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165978*0 + 3*30*FLEN/8, x4, x1, x2)

inst_55327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffff0000; valaddr_reg:x3; val_offset:165981*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165981*0 + 3*31*FLEN/8, x4, x1, x2)

inst_55328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffff8000; valaddr_reg:x3; val_offset:165984*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165984*0 + 3*32*FLEN/8, x4, x1, x2)

inst_55329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffc000; valaddr_reg:x3; val_offset:165987*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165987*0 + 3*33*FLEN/8, x4, x1, x2)

inst_55330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffe000; valaddr_reg:x3; val_offset:165990*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165990*0 + 3*34*FLEN/8, x4, x1, x2)

inst_55331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffff000; valaddr_reg:x3; val_offset:165993*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165993*0 + 3*35*FLEN/8, x4, x1, x2)

inst_55332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffff800; valaddr_reg:x3; val_offset:165996*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165996*0 + 3*36*FLEN/8, x4, x1, x2)

inst_55333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffc00; valaddr_reg:x3; val_offset:165999*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 165999*0 + 3*37*FLEN/8, x4, x1, x2)

inst_55334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffe00; valaddr_reg:x3; val_offset:166002*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166002*0 + 3*38*FLEN/8, x4, x1, x2)

inst_55335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffff00; valaddr_reg:x3; val_offset:166005*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166005*0 + 3*39*FLEN/8, x4, x1, x2)

inst_55336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffff80; valaddr_reg:x3; val_offset:166008*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166008*0 + 3*40*FLEN/8, x4, x1, x2)

inst_55337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffffc0; valaddr_reg:x3; val_offset:166011*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166011*0 + 3*41*FLEN/8, x4, x1, x2)

inst_55338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffffe0; valaddr_reg:x3; val_offset:166014*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166014*0 + 3*42*FLEN/8, x4, x1, x2)

inst_55339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffff0; valaddr_reg:x3; val_offset:166017*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166017*0 + 3*43*FLEN/8, x4, x1, x2)

inst_55340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffff8; valaddr_reg:x3; val_offset:166020*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166020*0 + 3*44*FLEN/8, x4, x1, x2)

inst_55341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffffc; valaddr_reg:x3; val_offset:166023*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166023*0 + 3*45*FLEN/8, x4, x1, x2)

inst_55342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bffffffffffffe; valaddr_reg:x3; val_offset:166026*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166026*0 + 3*46*FLEN/8, x4, x1, x2)

inst_55343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0d25fe47403e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0d25fe47403e0; op2val:0x0;
op3val:0x2bfffffffffffff; valaddr_reg:x3; val_offset:166029*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166029*0 + 3*47*FLEN/8, x4, x1, x2)

inst_55344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:166032*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166032*0 + 3*48*FLEN/8, x4, x1, x2)

inst_55345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:166035*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166035*0 + 3*49*FLEN/8, x4, x1, x2)

inst_55346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:166038*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166038*0 + 3*50*FLEN/8, x4, x1, x2)

inst_55347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:166041*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166041*0 + 3*51*FLEN/8, x4, x1, x2)

inst_55348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:166044*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166044*0 + 3*52*FLEN/8, x4, x1, x2)

inst_55349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:166047*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166047*0 + 3*53*FLEN/8, x4, x1, x2)

inst_55350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:166050*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166050*0 + 3*54*FLEN/8, x4, x1, x2)

inst_55351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:166053*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166053*0 + 3*55*FLEN/8, x4, x1, x2)

inst_55352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:166056*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166056*0 + 3*56*FLEN/8, x4, x1, x2)

inst_55353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:166059*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166059*0 + 3*57*FLEN/8, x4, x1, x2)

inst_55354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:166062*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166062*0 + 3*58*FLEN/8, x4, x1, x2)

inst_55355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:166065*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166065*0 + 3*59*FLEN/8, x4, x1, x2)

inst_55356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:166068*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166068*0 + 3*60*FLEN/8, x4, x1, x2)

inst_55357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:166071*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166071*0 + 3*61*FLEN/8, x4, x1, x2)

inst_55358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:166074*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166074*0 + 3*62*FLEN/8, x4, x1, x2)

inst_55359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:166077*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166077*0 + 3*63*FLEN/8, x4, x1, x2)

inst_55360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:166080*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166080*0 + 3*64*FLEN/8, x4, x1, x2)

inst_55361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:166083*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166083*0 + 3*65*FLEN/8, x4, x1, x2)

inst_55362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:166086*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166086*0 + 3*66*FLEN/8, x4, x1, x2)

inst_55363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:166089*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166089*0 + 3*67*FLEN/8, x4, x1, x2)

inst_55364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:166092*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166092*0 + 3*68*FLEN/8, x4, x1, x2)

inst_55365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:166095*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166095*0 + 3*69*FLEN/8, x4, x1, x2)

inst_55366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000000000; valaddr_reg:x3; val_offset:166098*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166098*0 + 3*70*FLEN/8, x4, x1, x2)

inst_55367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000000001; valaddr_reg:x3; val_offset:166101*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166101*0 + 3*71*FLEN/8, x4, x1, x2)

inst_55368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000000003; valaddr_reg:x3; val_offset:166104*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166104*0 + 3*72*FLEN/8, x4, x1, x2)

inst_55369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000000007; valaddr_reg:x3; val_offset:166107*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166107*0 + 3*73*FLEN/8, x4, x1, x2)

inst_55370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000000000f; valaddr_reg:x3; val_offset:166110*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166110*0 + 3*74*FLEN/8, x4, x1, x2)

inst_55371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000000001f; valaddr_reg:x3; val_offset:166113*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166113*0 + 3*75*FLEN/8, x4, x1, x2)

inst_55372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000000003f; valaddr_reg:x3; val_offset:166116*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166116*0 + 3*76*FLEN/8, x4, x1, x2)

inst_55373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000000007f; valaddr_reg:x3; val_offset:166119*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166119*0 + 3*77*FLEN/8, x4, x1, x2)

inst_55374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000000000ff; valaddr_reg:x3; val_offset:166122*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166122*0 + 3*78*FLEN/8, x4, x1, x2)

inst_55375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000000001ff; valaddr_reg:x3; val_offset:166125*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166125*0 + 3*79*FLEN/8, x4, x1, x2)

inst_55376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000000003ff; valaddr_reg:x3; val_offset:166128*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166128*0 + 3*80*FLEN/8, x4, x1, x2)

inst_55377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000000007ff; valaddr_reg:x3; val_offset:166131*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166131*0 + 3*81*FLEN/8, x4, x1, x2)

inst_55378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000000fff; valaddr_reg:x3; val_offset:166134*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166134*0 + 3*82*FLEN/8, x4, x1, x2)

inst_55379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000001fff; valaddr_reg:x3; val_offset:166137*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166137*0 + 3*83*FLEN/8, x4, x1, x2)

inst_55380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000003fff; valaddr_reg:x3; val_offset:166140*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166140*0 + 3*84*FLEN/8, x4, x1, x2)

inst_55381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000007fff; valaddr_reg:x3; val_offset:166143*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166143*0 + 3*85*FLEN/8, x4, x1, x2)

inst_55382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000000ffff; valaddr_reg:x3; val_offset:166146*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166146*0 + 3*86*FLEN/8, x4, x1, x2)

inst_55383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000001ffff; valaddr_reg:x3; val_offset:166149*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166149*0 + 3*87*FLEN/8, x4, x1, x2)

inst_55384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000003ffff; valaddr_reg:x3; val_offset:166152*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166152*0 + 3*88*FLEN/8, x4, x1, x2)

inst_55385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000007ffff; valaddr_reg:x3; val_offset:166155*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166155*0 + 3*89*FLEN/8, x4, x1, x2)

inst_55386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000000fffff; valaddr_reg:x3; val_offset:166158*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166158*0 + 3*90*FLEN/8, x4, x1, x2)

inst_55387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000001fffff; valaddr_reg:x3; val_offset:166161*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166161*0 + 3*91*FLEN/8, x4, x1, x2)

inst_55388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000003fffff; valaddr_reg:x3; val_offset:166164*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166164*0 + 3*92*FLEN/8, x4, x1, x2)

inst_55389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000007fffff; valaddr_reg:x3; val_offset:166167*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166167*0 + 3*93*FLEN/8, x4, x1, x2)

inst_55390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000000ffffff; valaddr_reg:x3; val_offset:166170*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166170*0 + 3*94*FLEN/8, x4, x1, x2)

inst_55391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000001ffffff; valaddr_reg:x3; val_offset:166173*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166173*0 + 3*95*FLEN/8, x4, x1, x2)

inst_55392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000003ffffff; valaddr_reg:x3; val_offset:166176*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166176*0 + 3*96*FLEN/8, x4, x1, x2)

inst_55393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000007ffffff; valaddr_reg:x3; val_offset:166179*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166179*0 + 3*97*FLEN/8, x4, x1, x2)

inst_55394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000000fffffff; valaddr_reg:x3; val_offset:166182*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166182*0 + 3*98*FLEN/8, x4, x1, x2)

inst_55395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000001fffffff; valaddr_reg:x3; val_offset:166185*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166185*0 + 3*99*FLEN/8, x4, x1, x2)

inst_55396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000003fffffff; valaddr_reg:x3; val_offset:166188*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166188*0 + 3*100*FLEN/8, x4, x1, x2)

inst_55397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000007fffffff; valaddr_reg:x3; val_offset:166191*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166191*0 + 3*101*FLEN/8, x4, x1, x2)

inst_55398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00000ffffffff; valaddr_reg:x3; val_offset:166194*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166194*0 + 3*102*FLEN/8, x4, x1, x2)

inst_55399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00001ffffffff; valaddr_reg:x3; val_offset:166197*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166197*0 + 3*103*FLEN/8, x4, x1, x2)

inst_55400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00003ffffffff; valaddr_reg:x3; val_offset:166200*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166200*0 + 3*104*FLEN/8, x4, x1, x2)

inst_55401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00007ffffffff; valaddr_reg:x3; val_offset:166203*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166203*0 + 3*105*FLEN/8, x4, x1, x2)

inst_55402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0000fffffffff; valaddr_reg:x3; val_offset:166206*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166206*0 + 3*106*FLEN/8, x4, x1, x2)

inst_55403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0001fffffffff; valaddr_reg:x3; val_offset:166209*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166209*0 + 3*107*FLEN/8, x4, x1, x2)

inst_55404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0003fffffffff; valaddr_reg:x3; val_offset:166212*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166212*0 + 3*108*FLEN/8, x4, x1, x2)

inst_55405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0007fffffffff; valaddr_reg:x3; val_offset:166215*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166215*0 + 3*109*FLEN/8, x4, x1, x2)

inst_55406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c000ffffffffff; valaddr_reg:x3; val_offset:166218*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166218*0 + 3*110*FLEN/8, x4, x1, x2)

inst_55407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c001ffffffffff; valaddr_reg:x3; val_offset:166221*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166221*0 + 3*111*FLEN/8, x4, x1, x2)

inst_55408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c003ffffffffff; valaddr_reg:x3; val_offset:166224*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166224*0 + 3*112*FLEN/8, x4, x1, x2)

inst_55409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c007ffffffffff; valaddr_reg:x3; val_offset:166227*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166227*0 + 3*113*FLEN/8, x4, x1, x2)

inst_55410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c00fffffffffff; valaddr_reg:x3; val_offset:166230*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166230*0 + 3*114*FLEN/8, x4, x1, x2)

inst_55411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c01fffffffffff; valaddr_reg:x3; val_offset:166233*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166233*0 + 3*115*FLEN/8, x4, x1, x2)

inst_55412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c03fffffffffff; valaddr_reg:x3; val_offset:166236*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166236*0 + 3*116*FLEN/8, x4, x1, x2)

inst_55413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c07fffffffffff; valaddr_reg:x3; val_offset:166239*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166239*0 + 3*117*FLEN/8, x4, x1, x2)

inst_55414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c0ffffffffffff; valaddr_reg:x3; val_offset:166242*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166242*0 + 3*118*FLEN/8, x4, x1, x2)

inst_55415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c1ffffffffffff; valaddr_reg:x3; val_offset:166245*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166245*0 + 3*119*FLEN/8, x4, x1, x2)

inst_55416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c3ffffffffffff; valaddr_reg:x3; val_offset:166248*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166248*0 + 3*120*FLEN/8, x4, x1, x2)

inst_55417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c7ffffffffffff; valaddr_reg:x3; val_offset:166251*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166251*0 + 3*121*FLEN/8, x4, x1, x2)

inst_55418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1c8000000000000; valaddr_reg:x3; val_offset:166254*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166254*0 + 3*122*FLEN/8, x4, x1, x2)

inst_55419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cc000000000000; valaddr_reg:x3; val_offset:166257*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166257*0 + 3*123*FLEN/8, x4, x1, x2)

inst_55420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1ce000000000000; valaddr_reg:x3; val_offset:166260*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166260*0 + 3*124*FLEN/8, x4, x1, x2)

inst_55421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cf000000000000; valaddr_reg:x3; val_offset:166263*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166263*0 + 3*125*FLEN/8, x4, x1, x2)

inst_55422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cf800000000000; valaddr_reg:x3; val_offset:166266*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166266*0 + 3*126*FLEN/8, x4, x1, x2)

inst_55423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfc00000000000; valaddr_reg:x3; val_offset:166269*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166269*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_55424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfe00000000000; valaddr_reg:x3; val_offset:166272*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166272*0 + 3*128*FLEN/8, x4, x1, x2)

inst_55425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cff00000000000; valaddr_reg:x3; val_offset:166275*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166275*0 + 3*129*FLEN/8, x4, x1, x2)

inst_55426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cff80000000000; valaddr_reg:x3; val_offset:166278*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166278*0 + 3*130*FLEN/8, x4, x1, x2)

inst_55427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffc0000000000; valaddr_reg:x3; val_offset:166281*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166281*0 + 3*131*FLEN/8, x4, x1, x2)

inst_55428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffe0000000000; valaddr_reg:x3; val_offset:166284*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166284*0 + 3*132*FLEN/8, x4, x1, x2)

inst_55429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfff0000000000; valaddr_reg:x3; val_offset:166287*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166287*0 + 3*133*FLEN/8, x4, x1, x2)

inst_55430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfff8000000000; valaddr_reg:x3; val_offset:166290*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166290*0 + 3*134*FLEN/8, x4, x1, x2)

inst_55431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffc000000000; valaddr_reg:x3; val_offset:166293*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166293*0 + 3*135*FLEN/8, x4, x1, x2)

inst_55432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffe000000000; valaddr_reg:x3; val_offset:166296*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166296*0 + 3*136*FLEN/8, x4, x1, x2)

inst_55433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffff000000000; valaddr_reg:x3; val_offset:166299*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166299*0 + 3*137*FLEN/8, x4, x1, x2)

inst_55434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffff800000000; valaddr_reg:x3; val_offset:166302*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166302*0 + 3*138*FLEN/8, x4, x1, x2)

inst_55435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffc00000000; valaddr_reg:x3; val_offset:166305*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166305*0 + 3*139*FLEN/8, x4, x1, x2)

inst_55436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffe00000000; valaddr_reg:x3; val_offset:166308*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166308*0 + 3*140*FLEN/8, x4, x1, x2)

inst_55437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffff00000000; valaddr_reg:x3; val_offset:166311*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166311*0 + 3*141*FLEN/8, x4, x1, x2)

inst_55438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffff80000000; valaddr_reg:x3; val_offset:166314*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166314*0 + 3*142*FLEN/8, x4, x1, x2)

inst_55439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffc0000000; valaddr_reg:x3; val_offset:166317*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166317*0 + 3*143*FLEN/8, x4, x1, x2)

inst_55440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffe0000000; valaddr_reg:x3; val_offset:166320*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166320*0 + 3*144*FLEN/8, x4, x1, x2)

inst_55441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffff0000000; valaddr_reg:x3; val_offset:166323*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166323*0 + 3*145*FLEN/8, x4, x1, x2)

inst_55442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffff8000000; valaddr_reg:x3; val_offset:166326*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166326*0 + 3*146*FLEN/8, x4, x1, x2)

inst_55443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffc000000; valaddr_reg:x3; val_offset:166329*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166329*0 + 3*147*FLEN/8, x4, x1, x2)

inst_55444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffe000000; valaddr_reg:x3; val_offset:166332*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166332*0 + 3*148*FLEN/8, x4, x1, x2)

inst_55445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffff000000; valaddr_reg:x3; val_offset:166335*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166335*0 + 3*149*FLEN/8, x4, x1, x2)

inst_55446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffff800000; valaddr_reg:x3; val_offset:166338*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166338*0 + 3*150*FLEN/8, x4, x1, x2)

inst_55447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffc00000; valaddr_reg:x3; val_offset:166341*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166341*0 + 3*151*FLEN/8, x4, x1, x2)

inst_55448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffe00000; valaddr_reg:x3; val_offset:166344*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166344*0 + 3*152*FLEN/8, x4, x1, x2)

inst_55449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffff00000; valaddr_reg:x3; val_offset:166347*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166347*0 + 3*153*FLEN/8, x4, x1, x2)

inst_55450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffff80000; valaddr_reg:x3; val_offset:166350*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166350*0 + 3*154*FLEN/8, x4, x1, x2)

inst_55451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffc0000; valaddr_reg:x3; val_offset:166353*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166353*0 + 3*155*FLEN/8, x4, x1, x2)

inst_55452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffe0000; valaddr_reg:x3; val_offset:166356*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166356*0 + 3*156*FLEN/8, x4, x1, x2)

inst_55453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffff0000; valaddr_reg:x3; val_offset:166359*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166359*0 + 3*157*FLEN/8, x4, x1, x2)

inst_55454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffff8000; valaddr_reg:x3; val_offset:166362*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166362*0 + 3*158*FLEN/8, x4, x1, x2)

inst_55455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffc000; valaddr_reg:x3; val_offset:166365*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166365*0 + 3*159*FLEN/8, x4, x1, x2)

inst_55456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffe000; valaddr_reg:x3; val_offset:166368*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166368*0 + 3*160*FLEN/8, x4, x1, x2)

inst_55457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffff000; valaddr_reg:x3; val_offset:166371*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166371*0 + 3*161*FLEN/8, x4, x1, x2)

inst_55458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffff800; valaddr_reg:x3; val_offset:166374*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166374*0 + 3*162*FLEN/8, x4, x1, x2)

inst_55459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffc00; valaddr_reg:x3; val_offset:166377*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166377*0 + 3*163*FLEN/8, x4, x1, x2)

inst_55460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffe00; valaddr_reg:x3; val_offset:166380*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166380*0 + 3*164*FLEN/8, x4, x1, x2)

inst_55461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffff00; valaddr_reg:x3; val_offset:166383*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166383*0 + 3*165*FLEN/8, x4, x1, x2)

inst_55462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffff80; valaddr_reg:x3; val_offset:166386*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166386*0 + 3*166*FLEN/8, x4, x1, x2)

inst_55463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffffc0; valaddr_reg:x3; val_offset:166389*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166389*0 + 3*167*FLEN/8, x4, x1, x2)

inst_55464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffffe0; valaddr_reg:x3; val_offset:166392*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166392*0 + 3*168*FLEN/8, x4, x1, x2)

inst_55465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffff0; valaddr_reg:x3; val_offset:166395*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166395*0 + 3*169*FLEN/8, x4, x1, x2)

inst_55466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffff8; valaddr_reg:x3; val_offset:166398*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166398*0 + 3*170*FLEN/8, x4, x1, x2)

inst_55467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffffc; valaddr_reg:x3; val_offset:166401*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166401*0 + 3*171*FLEN/8, x4, x1, x2)

inst_55468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cffffffffffffe; valaddr_reg:x3; val_offset:166404*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166404*0 + 3*172*FLEN/8, x4, x1, x2)

inst_55469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e125b3a29280 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01c and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e125b3a29280; op2val:0x0;
op3val:0x1cfffffffffffff; valaddr_reg:x3; val_offset:166407*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166407*0 + 3*173*FLEN/8, x4, x1, x2)

inst_55470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:166410*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166410*0 + 3*174*FLEN/8, x4, x1, x2)

inst_55471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:166413*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166413*0 + 3*175*FLEN/8, x4, x1, x2)

inst_55472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:166416*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166416*0 + 3*176*FLEN/8, x4, x1, x2)

inst_55473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:166419*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166419*0 + 3*177*FLEN/8, x4, x1, x2)

inst_55474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:166422*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166422*0 + 3*178*FLEN/8, x4, x1, x2)

inst_55475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:166425*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166425*0 + 3*179*FLEN/8, x4, x1, x2)

inst_55476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:166428*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166428*0 + 3*180*FLEN/8, x4, x1, x2)

inst_55477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:166431*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166431*0 + 3*181*FLEN/8, x4, x1, x2)

inst_55478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:166434*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166434*0 + 3*182*FLEN/8, x4, x1, x2)

inst_55479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:166437*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166437*0 + 3*183*FLEN/8, x4, x1, x2)

inst_55480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:166440*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166440*0 + 3*184*FLEN/8, x4, x1, x2)

inst_55481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:166443*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166443*0 + 3*185*FLEN/8, x4, x1, x2)

inst_55482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:166446*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166446*0 + 3*186*FLEN/8, x4, x1, x2)

inst_55483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:166449*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166449*0 + 3*187*FLEN/8, x4, x1, x2)

inst_55484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:166452*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166452*0 + 3*188*FLEN/8, x4, x1, x2)

inst_55485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:166455*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166455*0 + 3*189*FLEN/8, x4, x1, x2)

inst_55486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:166458*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166458*0 + 3*190*FLEN/8, x4, x1, x2)

inst_55487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:166461*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166461*0 + 3*191*FLEN/8, x4, x1, x2)

inst_55488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:166464*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166464*0 + 3*192*FLEN/8, x4, x1, x2)

inst_55489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:166467*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166467*0 + 3*193*FLEN/8, x4, x1, x2)

inst_55490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:166470*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166470*0 + 3*194*FLEN/8, x4, x1, x2)

inst_55491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:166473*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166473*0 + 3*195*FLEN/8, x4, x1, x2)

inst_55492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000000000; valaddr_reg:x3; val_offset:166476*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166476*0 + 3*196*FLEN/8, x4, x1, x2)

inst_55493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000000001; valaddr_reg:x3; val_offset:166479*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166479*0 + 3*197*FLEN/8, x4, x1, x2)

inst_55494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000000003; valaddr_reg:x3; val_offset:166482*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166482*0 + 3*198*FLEN/8, x4, x1, x2)

inst_55495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000000007; valaddr_reg:x3; val_offset:166485*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166485*0 + 3*199*FLEN/8, x4, x1, x2)

inst_55496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000000000f; valaddr_reg:x3; val_offset:166488*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166488*0 + 3*200*FLEN/8, x4, x1, x2)

inst_55497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000000001f; valaddr_reg:x3; val_offset:166491*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166491*0 + 3*201*FLEN/8, x4, x1, x2)

inst_55498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000000003f; valaddr_reg:x3; val_offset:166494*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166494*0 + 3*202*FLEN/8, x4, x1, x2)

inst_55499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000000007f; valaddr_reg:x3; val_offset:166497*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166497*0 + 3*203*FLEN/8, x4, x1, x2)

inst_55500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000000000ff; valaddr_reg:x3; val_offset:166500*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166500*0 + 3*204*FLEN/8, x4, x1, x2)

inst_55501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000000001ff; valaddr_reg:x3; val_offset:166503*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166503*0 + 3*205*FLEN/8, x4, x1, x2)

inst_55502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000000003ff; valaddr_reg:x3; val_offset:166506*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166506*0 + 3*206*FLEN/8, x4, x1, x2)

inst_55503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000000007ff; valaddr_reg:x3; val_offset:166509*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166509*0 + 3*207*FLEN/8, x4, x1, x2)

inst_55504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000000fff; valaddr_reg:x3; val_offset:166512*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166512*0 + 3*208*FLEN/8, x4, x1, x2)

inst_55505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000001fff; valaddr_reg:x3; val_offset:166515*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166515*0 + 3*209*FLEN/8, x4, x1, x2)

inst_55506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000003fff; valaddr_reg:x3; val_offset:166518*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166518*0 + 3*210*FLEN/8, x4, x1, x2)

inst_55507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000007fff; valaddr_reg:x3; val_offset:166521*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166521*0 + 3*211*FLEN/8, x4, x1, x2)

inst_55508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000000ffff; valaddr_reg:x3; val_offset:166524*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166524*0 + 3*212*FLEN/8, x4, x1, x2)

inst_55509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000001ffff; valaddr_reg:x3; val_offset:166527*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166527*0 + 3*213*FLEN/8, x4, x1, x2)

inst_55510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000003ffff; valaddr_reg:x3; val_offset:166530*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166530*0 + 3*214*FLEN/8, x4, x1, x2)

inst_55511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000007ffff; valaddr_reg:x3; val_offset:166533*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166533*0 + 3*215*FLEN/8, x4, x1, x2)

inst_55512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000000fffff; valaddr_reg:x3; val_offset:166536*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166536*0 + 3*216*FLEN/8, x4, x1, x2)

inst_55513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000001fffff; valaddr_reg:x3; val_offset:166539*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166539*0 + 3*217*FLEN/8, x4, x1, x2)

inst_55514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000003fffff; valaddr_reg:x3; val_offset:166542*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166542*0 + 3*218*FLEN/8, x4, x1, x2)

inst_55515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000007fffff; valaddr_reg:x3; val_offset:166545*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166545*0 + 3*219*FLEN/8, x4, x1, x2)

inst_55516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000000ffffff; valaddr_reg:x3; val_offset:166548*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166548*0 + 3*220*FLEN/8, x4, x1, x2)

inst_55517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000001ffffff; valaddr_reg:x3; val_offset:166551*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166551*0 + 3*221*FLEN/8, x4, x1, x2)

inst_55518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000003ffffff; valaddr_reg:x3; val_offset:166554*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166554*0 + 3*222*FLEN/8, x4, x1, x2)

inst_55519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000007ffffff; valaddr_reg:x3; val_offset:166557*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166557*0 + 3*223*FLEN/8, x4, x1, x2)

inst_55520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000000fffffff; valaddr_reg:x3; val_offset:166560*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166560*0 + 3*224*FLEN/8, x4, x1, x2)

inst_55521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000001fffffff; valaddr_reg:x3; val_offset:166563*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166563*0 + 3*225*FLEN/8, x4, x1, x2)

inst_55522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000003fffffff; valaddr_reg:x3; val_offset:166566*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166566*0 + 3*226*FLEN/8, x4, x1, x2)

inst_55523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000007fffffff; valaddr_reg:x3; val_offset:166569*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166569*0 + 3*227*FLEN/8, x4, x1, x2)

inst_55524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300000ffffffff; valaddr_reg:x3; val_offset:166572*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166572*0 + 3*228*FLEN/8, x4, x1, x2)

inst_55525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300001ffffffff; valaddr_reg:x3; val_offset:166575*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166575*0 + 3*229*FLEN/8, x4, x1, x2)

inst_55526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300003ffffffff; valaddr_reg:x3; val_offset:166578*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166578*0 + 3*230*FLEN/8, x4, x1, x2)

inst_55527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300007ffffffff; valaddr_reg:x3; val_offset:166581*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166581*0 + 3*231*FLEN/8, x4, x1, x2)

inst_55528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230000fffffffff; valaddr_reg:x3; val_offset:166584*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166584*0 + 3*232*FLEN/8, x4, x1, x2)

inst_55529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230001fffffffff; valaddr_reg:x3; val_offset:166587*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166587*0 + 3*233*FLEN/8, x4, x1, x2)

inst_55530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230003fffffffff; valaddr_reg:x3; val_offset:166590*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166590*0 + 3*234*FLEN/8, x4, x1, x2)

inst_55531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230007fffffffff; valaddr_reg:x3; val_offset:166593*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166593*0 + 3*235*FLEN/8, x4, x1, x2)

inst_55532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823000ffffffffff; valaddr_reg:x3; val_offset:166596*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166596*0 + 3*236*FLEN/8, x4, x1, x2)

inst_55533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823001ffffffffff; valaddr_reg:x3; val_offset:166599*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166599*0 + 3*237*FLEN/8, x4, x1, x2)

inst_55534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823003ffffffffff; valaddr_reg:x3; val_offset:166602*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166602*0 + 3*238*FLEN/8, x4, x1, x2)

inst_55535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823007ffffffffff; valaddr_reg:x3; val_offset:166605*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166605*0 + 3*239*FLEN/8, x4, x1, x2)

inst_55536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82300fffffffffff; valaddr_reg:x3; val_offset:166608*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166608*0 + 3*240*FLEN/8, x4, x1, x2)

inst_55537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82301fffffffffff; valaddr_reg:x3; val_offset:166611*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166611*0 + 3*241*FLEN/8, x4, x1, x2)

inst_55538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82303fffffffffff; valaddr_reg:x3; val_offset:166614*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166614*0 + 3*242*FLEN/8, x4, x1, x2)

inst_55539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x82307fffffffffff; valaddr_reg:x3; val_offset:166617*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166617*0 + 3*243*FLEN/8, x4, x1, x2)

inst_55540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8230ffffffffffff; valaddr_reg:x3; val_offset:166620*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166620*0 + 3*244*FLEN/8, x4, x1, x2)

inst_55541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8231ffffffffffff; valaddr_reg:x3; val_offset:166623*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166623*0 + 3*245*FLEN/8, x4, x1, x2)

inst_55542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8233ffffffffffff; valaddr_reg:x3; val_offset:166626*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166626*0 + 3*246*FLEN/8, x4, x1, x2)

inst_55543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8237ffffffffffff; valaddr_reg:x3; val_offset:166629*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166629*0 + 3*247*FLEN/8, x4, x1, x2)

inst_55544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x8238000000000000; valaddr_reg:x3; val_offset:166632*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166632*0 + 3*248*FLEN/8, x4, x1, x2)

inst_55545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823c000000000000; valaddr_reg:x3; val_offset:166635*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166635*0 + 3*249*FLEN/8, x4, x1, x2)

inst_55546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823e000000000000; valaddr_reg:x3; val_offset:166638*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166638*0 + 3*250*FLEN/8, x4, x1, x2)

inst_55547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823f000000000000; valaddr_reg:x3; val_offset:166641*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166641*0 + 3*251*FLEN/8, x4, x1, x2)

inst_55548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823f800000000000; valaddr_reg:x3; val_offset:166644*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166644*0 + 3*252*FLEN/8, x4, x1, x2)

inst_55549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fc00000000000; valaddr_reg:x3; val_offset:166647*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166647*0 + 3*253*FLEN/8, x4, x1, x2)

inst_55550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fe00000000000; valaddr_reg:x3; val_offset:166650*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166650*0 + 3*254*FLEN/8, x4, x1, x2)

inst_55551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ff00000000000; valaddr_reg:x3; val_offset:166653*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166653*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_55552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ff80000000000; valaddr_reg:x3; val_offset:166656*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166656*0 + 3*256*FLEN/8, x4, x1, x2)

inst_55553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffc0000000000; valaddr_reg:x3; val_offset:166659*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166659*0 + 3*257*FLEN/8, x4, x1, x2)

inst_55554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffe0000000000; valaddr_reg:x3; val_offset:166662*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166662*0 + 3*258*FLEN/8, x4, x1, x2)

inst_55555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fff0000000000; valaddr_reg:x3; val_offset:166665*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166665*0 + 3*259*FLEN/8, x4, x1, x2)

inst_55556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fff8000000000; valaddr_reg:x3; val_offset:166668*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166668*0 + 3*260*FLEN/8, x4, x1, x2)

inst_55557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffc000000000; valaddr_reg:x3; val_offset:166671*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166671*0 + 3*261*FLEN/8, x4, x1, x2)

inst_55558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffe000000000; valaddr_reg:x3; val_offset:166674*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166674*0 + 3*262*FLEN/8, x4, x1, x2)

inst_55559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffff000000000; valaddr_reg:x3; val_offset:166677*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166677*0 + 3*263*FLEN/8, x4, x1, x2)

inst_55560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffff800000000; valaddr_reg:x3; val_offset:166680*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166680*0 + 3*264*FLEN/8, x4, x1, x2)

inst_55561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffc00000000; valaddr_reg:x3; val_offset:166683*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166683*0 + 3*265*FLEN/8, x4, x1, x2)

inst_55562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffe00000000; valaddr_reg:x3; val_offset:166686*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166686*0 + 3*266*FLEN/8, x4, x1, x2)

inst_55563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffff00000000; valaddr_reg:x3; val_offset:166689*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166689*0 + 3*267*FLEN/8, x4, x1, x2)

inst_55564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffff80000000; valaddr_reg:x3; val_offset:166692*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166692*0 + 3*268*FLEN/8, x4, x1, x2)

inst_55565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffc0000000; valaddr_reg:x3; val_offset:166695*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166695*0 + 3*269*FLEN/8, x4, x1, x2)

inst_55566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffe0000000; valaddr_reg:x3; val_offset:166698*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166698*0 + 3*270*FLEN/8, x4, x1, x2)

inst_55567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffff0000000; valaddr_reg:x3; val_offset:166701*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166701*0 + 3*271*FLEN/8, x4, x1, x2)

inst_55568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffff8000000; valaddr_reg:x3; val_offset:166704*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166704*0 + 3*272*FLEN/8, x4, x1, x2)

inst_55569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffc000000; valaddr_reg:x3; val_offset:166707*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166707*0 + 3*273*FLEN/8, x4, x1, x2)

inst_55570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffe000000; valaddr_reg:x3; val_offset:166710*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166710*0 + 3*274*FLEN/8, x4, x1, x2)

inst_55571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffff000000; valaddr_reg:x3; val_offset:166713*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166713*0 + 3*275*FLEN/8, x4, x1, x2)

inst_55572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffff800000; valaddr_reg:x3; val_offset:166716*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166716*0 + 3*276*FLEN/8, x4, x1, x2)

inst_55573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffc00000; valaddr_reg:x3; val_offset:166719*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166719*0 + 3*277*FLEN/8, x4, x1, x2)

inst_55574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffe00000; valaddr_reg:x3; val_offset:166722*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166722*0 + 3*278*FLEN/8, x4, x1, x2)

inst_55575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffff00000; valaddr_reg:x3; val_offset:166725*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166725*0 + 3*279*FLEN/8, x4, x1, x2)

inst_55576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffff80000; valaddr_reg:x3; val_offset:166728*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166728*0 + 3*280*FLEN/8, x4, x1, x2)

inst_55577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffc0000; valaddr_reg:x3; val_offset:166731*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166731*0 + 3*281*FLEN/8, x4, x1, x2)

inst_55578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffe0000; valaddr_reg:x3; val_offset:166734*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166734*0 + 3*282*FLEN/8, x4, x1, x2)

inst_55579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffff0000; valaddr_reg:x3; val_offset:166737*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166737*0 + 3*283*FLEN/8, x4, x1, x2)

inst_55580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffff8000; valaddr_reg:x3; val_offset:166740*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166740*0 + 3*284*FLEN/8, x4, x1, x2)

inst_55581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffc000; valaddr_reg:x3; val_offset:166743*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166743*0 + 3*285*FLEN/8, x4, x1, x2)

inst_55582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffe000; valaddr_reg:x3; val_offset:166746*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166746*0 + 3*286*FLEN/8, x4, x1, x2)

inst_55583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffff000; valaddr_reg:x3; val_offset:166749*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166749*0 + 3*287*FLEN/8, x4, x1, x2)

inst_55584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffff800; valaddr_reg:x3; val_offset:166752*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166752*0 + 3*288*FLEN/8, x4, x1, x2)

inst_55585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffc00; valaddr_reg:x3; val_offset:166755*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166755*0 + 3*289*FLEN/8, x4, x1, x2)

inst_55586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffe00; valaddr_reg:x3; val_offset:166758*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166758*0 + 3*290*FLEN/8, x4, x1, x2)

inst_55587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffff00; valaddr_reg:x3; val_offset:166761*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166761*0 + 3*291*FLEN/8, x4, x1, x2)

inst_55588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffff80; valaddr_reg:x3; val_offset:166764*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166764*0 + 3*292*FLEN/8, x4, x1, x2)

inst_55589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffffc0; valaddr_reg:x3; val_offset:166767*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166767*0 + 3*293*FLEN/8, x4, x1, x2)

inst_55590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffffe0; valaddr_reg:x3; val_offset:166770*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166770*0 + 3*294*FLEN/8, x4, x1, x2)

inst_55591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffff0; valaddr_reg:x3; val_offset:166773*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166773*0 + 3*295*FLEN/8, x4, x1, x2)

inst_55592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffff8; valaddr_reg:x3; val_offset:166776*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166776*0 + 3*296*FLEN/8, x4, x1, x2)

inst_55593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffffc; valaddr_reg:x3; val_offset:166779*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166779*0 + 3*297*FLEN/8, x4, x1, x2)

inst_55594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823ffffffffffffe; valaddr_reg:x3; val_offset:166782*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166782*0 + 3*298*FLEN/8, x4, x1, x2)

inst_55595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e21bf0ae6b53 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x023 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e21bf0ae6b53; op2val:0x8000;
op3val:0x823fffffffffffff; valaddr_reg:x3; val_offset:166785*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166785*0 + 3*299*FLEN/8, x4, x1, x2)

inst_55596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:166788*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166788*0 + 3*300*FLEN/8, x4, x1, x2)

inst_55597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:166791*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166791*0 + 3*301*FLEN/8, x4, x1, x2)

inst_55598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:166794*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166794*0 + 3*302*FLEN/8, x4, x1, x2)

inst_55599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:166797*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166797*0 + 3*303*FLEN/8, x4, x1, x2)

inst_55600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:166800*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166800*0 + 3*304*FLEN/8, x4, x1, x2)

inst_55601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:166803*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166803*0 + 3*305*FLEN/8, x4, x1, x2)

inst_55602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:166806*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166806*0 + 3*306*FLEN/8, x4, x1, x2)

inst_55603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:166809*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166809*0 + 3*307*FLEN/8, x4, x1, x2)

inst_55604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:166812*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166812*0 + 3*308*FLEN/8, x4, x1, x2)

inst_55605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:166815*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166815*0 + 3*309*FLEN/8, x4, x1, x2)

inst_55606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:166818*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166818*0 + 3*310*FLEN/8, x4, x1, x2)

inst_55607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:166821*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166821*0 + 3*311*FLEN/8, x4, x1, x2)

inst_55608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:166824*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166824*0 + 3*312*FLEN/8, x4, x1, x2)

inst_55609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:166827*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166827*0 + 3*313*FLEN/8, x4, x1, x2)

inst_55610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:166830*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166830*0 + 3*314*FLEN/8, x4, x1, x2)

inst_55611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:166833*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166833*0 + 3*315*FLEN/8, x4, x1, x2)

inst_55612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:166836*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166836*0 + 3*316*FLEN/8, x4, x1, x2)

inst_55613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:166839*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166839*0 + 3*317*FLEN/8, x4, x1, x2)

inst_55614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:166842*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166842*0 + 3*318*FLEN/8, x4, x1, x2)

inst_55615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:166845*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166845*0 + 3*319*FLEN/8, x4, x1, x2)

inst_55616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:166848*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166848*0 + 3*320*FLEN/8, x4, x1, x2)

inst_55617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:166851*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166851*0 + 3*321*FLEN/8, x4, x1, x2)

inst_55618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000000000; valaddr_reg:x3; val_offset:166854*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166854*0 + 3*322*FLEN/8, x4, x1, x2)

inst_55619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000000001; valaddr_reg:x3; val_offset:166857*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166857*0 + 3*323*FLEN/8, x4, x1, x2)

inst_55620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000000003; valaddr_reg:x3; val_offset:166860*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166860*0 + 3*324*FLEN/8, x4, x1, x2)

inst_55621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000000007; valaddr_reg:x3; val_offset:166863*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166863*0 + 3*325*FLEN/8, x4, x1, x2)

inst_55622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000000000f; valaddr_reg:x3; val_offset:166866*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166866*0 + 3*326*FLEN/8, x4, x1, x2)

inst_55623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000000001f; valaddr_reg:x3; val_offset:166869*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166869*0 + 3*327*FLEN/8, x4, x1, x2)

inst_55624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000000003f; valaddr_reg:x3; val_offset:166872*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166872*0 + 3*328*FLEN/8, x4, x1, x2)

inst_55625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000000007f; valaddr_reg:x3; val_offset:166875*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166875*0 + 3*329*FLEN/8, x4, x1, x2)

inst_55626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000000000ff; valaddr_reg:x3; val_offset:166878*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166878*0 + 3*330*FLEN/8, x4, x1, x2)

inst_55627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000000001ff; valaddr_reg:x3; val_offset:166881*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166881*0 + 3*331*FLEN/8, x4, x1, x2)

inst_55628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000000003ff; valaddr_reg:x3; val_offset:166884*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166884*0 + 3*332*FLEN/8, x4, x1, x2)

inst_55629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000000007ff; valaddr_reg:x3; val_offset:166887*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166887*0 + 3*333*FLEN/8, x4, x1, x2)

inst_55630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000000fff; valaddr_reg:x3; val_offset:166890*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166890*0 + 3*334*FLEN/8, x4, x1, x2)

inst_55631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000001fff; valaddr_reg:x3; val_offset:166893*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166893*0 + 3*335*FLEN/8, x4, x1, x2)

inst_55632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000003fff; valaddr_reg:x3; val_offset:166896*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166896*0 + 3*336*FLEN/8, x4, x1, x2)

inst_55633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000007fff; valaddr_reg:x3; val_offset:166899*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166899*0 + 3*337*FLEN/8, x4, x1, x2)

inst_55634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000000ffff; valaddr_reg:x3; val_offset:166902*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166902*0 + 3*338*FLEN/8, x4, x1, x2)

inst_55635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000001ffff; valaddr_reg:x3; val_offset:166905*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166905*0 + 3*339*FLEN/8, x4, x1, x2)

inst_55636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000003ffff; valaddr_reg:x3; val_offset:166908*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166908*0 + 3*340*FLEN/8, x4, x1, x2)

inst_55637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000007ffff; valaddr_reg:x3; val_offset:166911*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166911*0 + 3*341*FLEN/8, x4, x1, x2)

inst_55638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000000fffff; valaddr_reg:x3; val_offset:166914*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166914*0 + 3*342*FLEN/8, x4, x1, x2)

inst_55639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000001fffff; valaddr_reg:x3; val_offset:166917*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166917*0 + 3*343*FLEN/8, x4, x1, x2)

inst_55640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000003fffff; valaddr_reg:x3; val_offset:166920*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166920*0 + 3*344*FLEN/8, x4, x1, x2)

inst_55641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000007fffff; valaddr_reg:x3; val_offset:166923*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166923*0 + 3*345*FLEN/8, x4, x1, x2)

inst_55642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000000ffffff; valaddr_reg:x3; val_offset:166926*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166926*0 + 3*346*FLEN/8, x4, x1, x2)

inst_55643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000001ffffff; valaddr_reg:x3; val_offset:166929*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166929*0 + 3*347*FLEN/8, x4, x1, x2)

inst_55644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000003ffffff; valaddr_reg:x3; val_offset:166932*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166932*0 + 3*348*FLEN/8, x4, x1, x2)

inst_55645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000007ffffff; valaddr_reg:x3; val_offset:166935*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166935*0 + 3*349*FLEN/8, x4, x1, x2)

inst_55646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000000fffffff; valaddr_reg:x3; val_offset:166938*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166938*0 + 3*350*FLEN/8, x4, x1, x2)

inst_55647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000001fffffff; valaddr_reg:x3; val_offset:166941*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166941*0 + 3*351*FLEN/8, x4, x1, x2)

inst_55648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000003fffffff; valaddr_reg:x3; val_offset:166944*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166944*0 + 3*352*FLEN/8, x4, x1, x2)

inst_55649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000007fffffff; valaddr_reg:x3; val_offset:166947*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166947*0 + 3*353*FLEN/8, x4, x1, x2)

inst_55650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00000ffffffff; valaddr_reg:x3; val_offset:166950*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166950*0 + 3*354*FLEN/8, x4, x1, x2)

inst_55651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00001ffffffff; valaddr_reg:x3; val_offset:166953*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166953*0 + 3*355*FLEN/8, x4, x1, x2)

inst_55652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00003ffffffff; valaddr_reg:x3; val_offset:166956*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166956*0 + 3*356*FLEN/8, x4, x1, x2)

inst_55653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00007ffffffff; valaddr_reg:x3; val_offset:166959*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166959*0 + 3*357*FLEN/8, x4, x1, x2)

inst_55654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0000fffffffff; valaddr_reg:x3; val_offset:166962*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166962*0 + 3*358*FLEN/8, x4, x1, x2)

inst_55655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0001fffffffff; valaddr_reg:x3; val_offset:166965*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166965*0 + 3*359*FLEN/8, x4, x1, x2)

inst_55656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0003fffffffff; valaddr_reg:x3; val_offset:166968*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166968*0 + 3*360*FLEN/8, x4, x1, x2)

inst_55657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0007fffffffff; valaddr_reg:x3; val_offset:166971*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166971*0 + 3*361*FLEN/8, x4, x1, x2)

inst_55658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e000ffffffffff; valaddr_reg:x3; val_offset:166974*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166974*0 + 3*362*FLEN/8, x4, x1, x2)

inst_55659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e001ffffffffff; valaddr_reg:x3; val_offset:166977*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166977*0 + 3*363*FLEN/8, x4, x1, x2)

inst_55660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e003ffffffffff; valaddr_reg:x3; val_offset:166980*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166980*0 + 3*364*FLEN/8, x4, x1, x2)

inst_55661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e007ffffffffff; valaddr_reg:x3; val_offset:166983*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166983*0 + 3*365*FLEN/8, x4, x1, x2)

inst_55662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e00fffffffffff; valaddr_reg:x3; val_offset:166986*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166986*0 + 3*366*FLEN/8, x4, x1, x2)

inst_55663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e01fffffffffff; valaddr_reg:x3; val_offset:166989*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166989*0 + 3*367*FLEN/8, x4, x1, x2)

inst_55664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e03fffffffffff; valaddr_reg:x3; val_offset:166992*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166992*0 + 3*368*FLEN/8, x4, x1, x2)

inst_55665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e07fffffffffff; valaddr_reg:x3; val_offset:166995*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166995*0 + 3*369*FLEN/8, x4, x1, x2)

inst_55666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e0ffffffffffff; valaddr_reg:x3; val_offset:166998*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 166998*0 + 3*370*FLEN/8, x4, x1, x2)

inst_55667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e1ffffffffffff; valaddr_reg:x3; val_offset:167001*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167001*0 + 3*371*FLEN/8, x4, x1, x2)

inst_55668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e3ffffffffffff; valaddr_reg:x3; val_offset:167004*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167004*0 + 3*372*FLEN/8, x4, x1, x2)

inst_55669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e7ffffffffffff; valaddr_reg:x3; val_offset:167007*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167007*0 + 3*373*FLEN/8, x4, x1, x2)

inst_55670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1e8000000000000; valaddr_reg:x3; val_offset:167010*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167010*0 + 3*374*FLEN/8, x4, x1, x2)

inst_55671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1ec000000000000; valaddr_reg:x3; val_offset:167013*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167013*0 + 3*375*FLEN/8, x4, x1, x2)

inst_55672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1ee000000000000; valaddr_reg:x3; val_offset:167016*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167016*0 + 3*376*FLEN/8, x4, x1, x2)

inst_55673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1ef000000000000; valaddr_reg:x3; val_offset:167019*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167019*0 + 3*377*FLEN/8, x4, x1, x2)

inst_55674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1ef800000000000; valaddr_reg:x3; val_offset:167022*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167022*0 + 3*378*FLEN/8, x4, x1, x2)

inst_55675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efc00000000000; valaddr_reg:x3; val_offset:167025*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167025*0 + 3*379*FLEN/8, x4, x1, x2)

inst_55676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efe00000000000; valaddr_reg:x3; val_offset:167028*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167028*0 + 3*380*FLEN/8, x4, x1, x2)

inst_55677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1eff00000000000; valaddr_reg:x3; val_offset:167031*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167031*0 + 3*381*FLEN/8, x4, x1, x2)

inst_55678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1eff80000000000; valaddr_reg:x3; val_offset:167034*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167034*0 + 3*382*FLEN/8, x4, x1, x2)

inst_55679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effc0000000000; valaddr_reg:x3; val_offset:167037*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167037*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_55680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effe0000000000; valaddr_reg:x3; val_offset:167040*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167040*0 + 3*384*FLEN/8, x4, x1, x2)

inst_55681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efff0000000000; valaddr_reg:x3; val_offset:167043*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167043*0 + 3*385*FLEN/8, x4, x1, x2)

inst_55682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efff8000000000; valaddr_reg:x3; val_offset:167046*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167046*0 + 3*386*FLEN/8, x4, x1, x2)

inst_55683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffc000000000; valaddr_reg:x3; val_offset:167049*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167049*0 + 3*387*FLEN/8, x4, x1, x2)

inst_55684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffe000000000; valaddr_reg:x3; val_offset:167052*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167052*0 + 3*388*FLEN/8, x4, x1, x2)

inst_55685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effff000000000; valaddr_reg:x3; val_offset:167055*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167055*0 + 3*389*FLEN/8, x4, x1, x2)

inst_55686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effff800000000; valaddr_reg:x3; val_offset:167058*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167058*0 + 3*390*FLEN/8, x4, x1, x2)

inst_55687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffc00000000; valaddr_reg:x3; val_offset:167061*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167061*0 + 3*391*FLEN/8, x4, x1, x2)

inst_55688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffe00000000; valaddr_reg:x3; val_offset:167064*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167064*0 + 3*392*FLEN/8, x4, x1, x2)

inst_55689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffff00000000; valaddr_reg:x3; val_offset:167067*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167067*0 + 3*393*FLEN/8, x4, x1, x2)

inst_55690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffff80000000; valaddr_reg:x3; val_offset:167070*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167070*0 + 3*394*FLEN/8, x4, x1, x2)

inst_55691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffc0000000; valaddr_reg:x3; val_offset:167073*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167073*0 + 3*395*FLEN/8, x4, x1, x2)

inst_55692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffe0000000; valaddr_reg:x3; val_offset:167076*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167076*0 + 3*396*FLEN/8, x4, x1, x2)

inst_55693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffff0000000; valaddr_reg:x3; val_offset:167079*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167079*0 + 3*397*FLEN/8, x4, x1, x2)

inst_55694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffff8000000; valaddr_reg:x3; val_offset:167082*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167082*0 + 3*398*FLEN/8, x4, x1, x2)

inst_55695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffc000000; valaddr_reg:x3; val_offset:167085*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167085*0 + 3*399*FLEN/8, x4, x1, x2)

inst_55696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffe000000; valaddr_reg:x3; val_offset:167088*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167088*0 + 3*400*FLEN/8, x4, x1, x2)

inst_55697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffff000000; valaddr_reg:x3; val_offset:167091*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167091*0 + 3*401*FLEN/8, x4, x1, x2)

inst_55698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffff800000; valaddr_reg:x3; val_offset:167094*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167094*0 + 3*402*FLEN/8, x4, x1, x2)

inst_55699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffc00000; valaddr_reg:x3; val_offset:167097*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167097*0 + 3*403*FLEN/8, x4, x1, x2)

inst_55700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffe00000; valaddr_reg:x3; val_offset:167100*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167100*0 + 3*404*FLEN/8, x4, x1, x2)

inst_55701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffff00000; valaddr_reg:x3; val_offset:167103*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167103*0 + 3*405*FLEN/8, x4, x1, x2)

inst_55702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffff80000; valaddr_reg:x3; val_offset:167106*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167106*0 + 3*406*FLEN/8, x4, x1, x2)

inst_55703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffc0000; valaddr_reg:x3; val_offset:167109*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167109*0 + 3*407*FLEN/8, x4, x1, x2)

inst_55704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffe0000; valaddr_reg:x3; val_offset:167112*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167112*0 + 3*408*FLEN/8, x4, x1, x2)

inst_55705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffff0000; valaddr_reg:x3; val_offset:167115*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167115*0 + 3*409*FLEN/8, x4, x1, x2)

inst_55706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffff8000; valaddr_reg:x3; val_offset:167118*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167118*0 + 3*410*FLEN/8, x4, x1, x2)

inst_55707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffc000; valaddr_reg:x3; val_offset:167121*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167121*0 + 3*411*FLEN/8, x4, x1, x2)

inst_55708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffe000; valaddr_reg:x3; val_offset:167124*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167124*0 + 3*412*FLEN/8, x4, x1, x2)

inst_55709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffff000; valaddr_reg:x3; val_offset:167127*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167127*0 + 3*413*FLEN/8, x4, x1, x2)

inst_55710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffff800; valaddr_reg:x3; val_offset:167130*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167130*0 + 3*414*FLEN/8, x4, x1, x2)

inst_55711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffc00; valaddr_reg:x3; val_offset:167133*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167133*0 + 3*415*FLEN/8, x4, x1, x2)

inst_55712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffe00; valaddr_reg:x3; val_offset:167136*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167136*0 + 3*416*FLEN/8, x4, x1, x2)

inst_55713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffff00; valaddr_reg:x3; val_offset:167139*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167139*0 + 3*417*FLEN/8, x4, x1, x2)

inst_55714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffff80; valaddr_reg:x3; val_offset:167142*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167142*0 + 3*418*FLEN/8, x4, x1, x2)

inst_55715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffffc0; valaddr_reg:x3; val_offset:167145*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167145*0 + 3*419*FLEN/8, x4, x1, x2)

inst_55716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffffe0; valaddr_reg:x3; val_offset:167148*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167148*0 + 3*420*FLEN/8, x4, x1, x2)

inst_55717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffff0; valaddr_reg:x3; val_offset:167151*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167151*0 + 3*421*FLEN/8, x4, x1, x2)

inst_55718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffff8; valaddr_reg:x3; val_offset:167154*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167154*0 + 3*422*FLEN/8, x4, x1, x2)

inst_55719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffffc; valaddr_reg:x3; val_offset:167157*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167157*0 + 3*423*FLEN/8, x4, x1, x2)

inst_55720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1effffffffffffe; valaddr_reg:x3; val_offset:167160*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167160*0 + 3*424*FLEN/8, x4, x1, x2)

inst_55721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0e2d30bc3e0e0 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x01e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0e2d30bc3e0e0; op2val:0x0;
op3val:0x1efffffffffffff; valaddr_reg:x3; val_offset:167163*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167163*0 + 3*425*FLEN/8, x4, x1, x2)

inst_55722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:167166*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167166*0 + 3*426*FLEN/8, x4, x1, x2)

inst_55723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:167169*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167169*0 + 3*427*FLEN/8, x4, x1, x2)

inst_55724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:167172*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167172*0 + 3*428*FLEN/8, x4, x1, x2)

inst_55725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:167175*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167175*0 + 3*429*FLEN/8, x4, x1, x2)

inst_55726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:167178*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167178*0 + 3*430*FLEN/8, x4, x1, x2)

inst_55727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:167181*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167181*0 + 3*431*FLEN/8, x4, x1, x2)

inst_55728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:167184*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167184*0 + 3*432*FLEN/8, x4, x1, x2)

inst_55729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:167187*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167187*0 + 3*433*FLEN/8, x4, x1, x2)

inst_55730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:167190*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167190*0 + 3*434*FLEN/8, x4, x1, x2)

inst_55731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:167193*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167193*0 + 3*435*FLEN/8, x4, x1, x2)

inst_55732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:167196*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167196*0 + 3*436*FLEN/8, x4, x1, x2)

inst_55733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:167199*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167199*0 + 3*437*FLEN/8, x4, x1, x2)

inst_55734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:167202*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167202*0 + 3*438*FLEN/8, x4, x1, x2)

inst_55735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:167205*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167205*0 + 3*439*FLEN/8, x4, x1, x2)

inst_55736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:167208*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167208*0 + 3*440*FLEN/8, x4, x1, x2)

inst_55737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:167211*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167211*0 + 3*441*FLEN/8, x4, x1, x2)

inst_55738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:167214*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167214*0 + 3*442*FLEN/8, x4, x1, x2)

inst_55739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:167217*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167217*0 + 3*443*FLEN/8, x4, x1, x2)

inst_55740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:167220*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167220*0 + 3*444*FLEN/8, x4, x1, x2)

inst_55741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:167223*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167223*0 + 3*445*FLEN/8, x4, x1, x2)

inst_55742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:167226*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167226*0 + 3*446*FLEN/8, x4, x1, x2)

inst_55743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:167229*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167229*0 + 3*447*FLEN/8, x4, x1, x2)

inst_55744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000000000; valaddr_reg:x3; val_offset:167232*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167232*0 + 3*448*FLEN/8, x4, x1, x2)

inst_55745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000000001; valaddr_reg:x3; val_offset:167235*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167235*0 + 3*449*FLEN/8, x4, x1, x2)

inst_55746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000000003; valaddr_reg:x3; val_offset:167238*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167238*0 + 3*450*FLEN/8, x4, x1, x2)

inst_55747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000000007; valaddr_reg:x3; val_offset:167241*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167241*0 + 3*451*FLEN/8, x4, x1, x2)

inst_55748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000000000f; valaddr_reg:x3; val_offset:167244*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167244*0 + 3*452*FLEN/8, x4, x1, x2)

inst_55749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000000001f; valaddr_reg:x3; val_offset:167247*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167247*0 + 3*453*FLEN/8, x4, x1, x2)

inst_55750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000000003f; valaddr_reg:x3; val_offset:167250*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167250*0 + 3*454*FLEN/8, x4, x1, x2)

inst_55751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000000007f; valaddr_reg:x3; val_offset:167253*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167253*0 + 3*455*FLEN/8, x4, x1, x2)

inst_55752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000000000ff; valaddr_reg:x3; val_offset:167256*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167256*0 + 3*456*FLEN/8, x4, x1, x2)

inst_55753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000000001ff; valaddr_reg:x3; val_offset:167259*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167259*0 + 3*457*FLEN/8, x4, x1, x2)

inst_55754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000000003ff; valaddr_reg:x3; val_offset:167262*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167262*0 + 3*458*FLEN/8, x4, x1, x2)

inst_55755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000000007ff; valaddr_reg:x3; val_offset:167265*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167265*0 + 3*459*FLEN/8, x4, x1, x2)

inst_55756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000000fff; valaddr_reg:x3; val_offset:167268*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167268*0 + 3*460*FLEN/8, x4, x1, x2)

inst_55757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000001fff; valaddr_reg:x3; val_offset:167271*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167271*0 + 3*461*FLEN/8, x4, x1, x2)

inst_55758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000003fff; valaddr_reg:x3; val_offset:167274*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167274*0 + 3*462*FLEN/8, x4, x1, x2)

inst_55759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000007fff; valaddr_reg:x3; val_offset:167277*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167277*0 + 3*463*FLEN/8, x4, x1, x2)

inst_55760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000000ffff; valaddr_reg:x3; val_offset:167280*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167280*0 + 3*464*FLEN/8, x4, x1, x2)

inst_55761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000001ffff; valaddr_reg:x3; val_offset:167283*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167283*0 + 3*465*FLEN/8, x4, x1, x2)

inst_55762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000003ffff; valaddr_reg:x3; val_offset:167286*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167286*0 + 3*466*FLEN/8, x4, x1, x2)

inst_55763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000007ffff; valaddr_reg:x3; val_offset:167289*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167289*0 + 3*467*FLEN/8, x4, x1, x2)

inst_55764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000000fffff; valaddr_reg:x3; val_offset:167292*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167292*0 + 3*468*FLEN/8, x4, x1, x2)

inst_55765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000001fffff; valaddr_reg:x3; val_offset:167295*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167295*0 + 3*469*FLEN/8, x4, x1, x2)

inst_55766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000003fffff; valaddr_reg:x3; val_offset:167298*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167298*0 + 3*470*FLEN/8, x4, x1, x2)

inst_55767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000007fffff; valaddr_reg:x3; val_offset:167301*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167301*0 + 3*471*FLEN/8, x4, x1, x2)

inst_55768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000000ffffff; valaddr_reg:x3; val_offset:167304*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167304*0 + 3*472*FLEN/8, x4, x1, x2)

inst_55769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000001ffffff; valaddr_reg:x3; val_offset:167307*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167307*0 + 3*473*FLEN/8, x4, x1, x2)

inst_55770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000003ffffff; valaddr_reg:x3; val_offset:167310*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167310*0 + 3*474*FLEN/8, x4, x1, x2)

inst_55771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000007ffffff; valaddr_reg:x3; val_offset:167313*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167313*0 + 3*475*FLEN/8, x4, x1, x2)

inst_55772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000000fffffff; valaddr_reg:x3; val_offset:167316*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167316*0 + 3*476*FLEN/8, x4, x1, x2)

inst_55773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000001fffffff; valaddr_reg:x3; val_offset:167319*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167319*0 + 3*477*FLEN/8, x4, x1, x2)

inst_55774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000003fffffff; valaddr_reg:x3; val_offset:167322*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167322*0 + 3*478*FLEN/8, x4, x1, x2)

inst_55775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000007fffffff; valaddr_reg:x3; val_offset:167325*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167325*0 + 3*479*FLEN/8, x4, x1, x2)

inst_55776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00000ffffffff; valaddr_reg:x3; val_offset:167328*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167328*0 + 3*480*FLEN/8, x4, x1, x2)

inst_55777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00001ffffffff; valaddr_reg:x3; val_offset:167331*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167331*0 + 3*481*FLEN/8, x4, x1, x2)

inst_55778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00003ffffffff; valaddr_reg:x3; val_offset:167334*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167334*0 + 3*482*FLEN/8, x4, x1, x2)

inst_55779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00007ffffffff; valaddr_reg:x3; val_offset:167337*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167337*0 + 3*483*FLEN/8, x4, x1, x2)

inst_55780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0000fffffffff; valaddr_reg:x3; val_offset:167340*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167340*0 + 3*484*FLEN/8, x4, x1, x2)

inst_55781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0001fffffffff; valaddr_reg:x3; val_offset:167343*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167343*0 + 3*485*FLEN/8, x4, x1, x2)

inst_55782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0003fffffffff; valaddr_reg:x3; val_offset:167346*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167346*0 + 3*486*FLEN/8, x4, x1, x2)

inst_55783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0007fffffffff; valaddr_reg:x3; val_offset:167349*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167349*0 + 3*487*FLEN/8, x4, x1, x2)

inst_55784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e000ffffffffff; valaddr_reg:x3; val_offset:167352*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167352*0 + 3*488*FLEN/8, x4, x1, x2)

inst_55785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e001ffffffffff; valaddr_reg:x3; val_offset:167355*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167355*0 + 3*489*FLEN/8, x4, x1, x2)

inst_55786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e003ffffffffff; valaddr_reg:x3; val_offset:167358*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167358*0 + 3*490*FLEN/8, x4, x1, x2)

inst_55787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e007ffffffffff; valaddr_reg:x3; val_offset:167361*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167361*0 + 3*491*FLEN/8, x4, x1, x2)

inst_55788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e00fffffffffff; valaddr_reg:x3; val_offset:167364*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167364*0 + 3*492*FLEN/8, x4, x1, x2)

inst_55789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e01fffffffffff; valaddr_reg:x3; val_offset:167367*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167367*0 + 3*493*FLEN/8, x4, x1, x2)

inst_55790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e03fffffffffff; valaddr_reg:x3; val_offset:167370*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167370*0 + 3*494*FLEN/8, x4, x1, x2)

inst_55791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e07fffffffffff; valaddr_reg:x3; val_offset:167373*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167373*0 + 3*495*FLEN/8, x4, x1, x2)

inst_55792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e0ffffffffffff; valaddr_reg:x3; val_offset:167376*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167376*0 + 3*496*FLEN/8, x4, x1, x2)

inst_55793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e1ffffffffffff; valaddr_reg:x3; val_offset:167379*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167379*0 + 3*497*FLEN/8, x4, x1, x2)

inst_55794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e3ffffffffffff; valaddr_reg:x3; val_offset:167382*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167382*0 + 3*498*FLEN/8, x4, x1, x2)

inst_55795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e7ffffffffffff; valaddr_reg:x3; val_offset:167385*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167385*0 + 3*499*FLEN/8, x4, x1, x2)

inst_55796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83e8000000000000; valaddr_reg:x3; val_offset:167388*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167388*0 + 3*500*FLEN/8, x4, x1, x2)

inst_55797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83ec000000000000; valaddr_reg:x3; val_offset:167391*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167391*0 + 3*501*FLEN/8, x4, x1, x2)

inst_55798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83ee000000000000; valaddr_reg:x3; val_offset:167394*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167394*0 + 3*502*FLEN/8, x4, x1, x2)

inst_55799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83ef000000000000; valaddr_reg:x3; val_offset:167397*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167397*0 + 3*503*FLEN/8, x4, x1, x2)

inst_55800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83ef800000000000; valaddr_reg:x3; val_offset:167400*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167400*0 + 3*504*FLEN/8, x4, x1, x2)

inst_55801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efc00000000000; valaddr_reg:x3; val_offset:167403*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167403*0 + 3*505*FLEN/8, x4, x1, x2)

inst_55802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efe00000000000; valaddr_reg:x3; val_offset:167406*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167406*0 + 3*506*FLEN/8, x4, x1, x2)

inst_55803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83eff00000000000; valaddr_reg:x3; val_offset:167409*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167409*0 + 3*507*FLEN/8, x4, x1, x2)

inst_55804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83eff80000000000; valaddr_reg:x3; val_offset:167412*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167412*0 + 3*508*FLEN/8, x4, x1, x2)

inst_55805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effc0000000000; valaddr_reg:x3; val_offset:167415*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167415*0 + 3*509*FLEN/8, x4, x1, x2)

inst_55806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effe0000000000; valaddr_reg:x3; val_offset:167418*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167418*0 + 3*510*FLEN/8, x4, x1, x2)

inst_55807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efff0000000000; valaddr_reg:x3; val_offset:167421*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167421*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_55808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efff8000000000; valaddr_reg:x3; val_offset:167424*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167424*0 + 3*512*FLEN/8, x4, x1, x2)

inst_55809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffc000000000; valaddr_reg:x3; val_offset:167427*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167427*0 + 3*513*FLEN/8, x4, x1, x2)

inst_55810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffe000000000; valaddr_reg:x3; val_offset:167430*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167430*0 + 3*514*FLEN/8, x4, x1, x2)

inst_55811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effff000000000; valaddr_reg:x3; val_offset:167433*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167433*0 + 3*515*FLEN/8, x4, x1, x2)

inst_55812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effff800000000; valaddr_reg:x3; val_offset:167436*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167436*0 + 3*516*FLEN/8, x4, x1, x2)

inst_55813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffc00000000; valaddr_reg:x3; val_offset:167439*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167439*0 + 3*517*FLEN/8, x4, x1, x2)

inst_55814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffe00000000; valaddr_reg:x3; val_offset:167442*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167442*0 + 3*518*FLEN/8, x4, x1, x2)

inst_55815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffff00000000; valaddr_reg:x3; val_offset:167445*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167445*0 + 3*519*FLEN/8, x4, x1, x2)

inst_55816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffff80000000; valaddr_reg:x3; val_offset:167448*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167448*0 + 3*520*FLEN/8, x4, x1, x2)

inst_55817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffc0000000; valaddr_reg:x3; val_offset:167451*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167451*0 + 3*521*FLEN/8, x4, x1, x2)

inst_55818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffe0000000; valaddr_reg:x3; val_offset:167454*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167454*0 + 3*522*FLEN/8, x4, x1, x2)

inst_55819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffff0000000; valaddr_reg:x3; val_offset:167457*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167457*0 + 3*523*FLEN/8, x4, x1, x2)

inst_55820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffff8000000; valaddr_reg:x3; val_offset:167460*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167460*0 + 3*524*FLEN/8, x4, x1, x2)

inst_55821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffc000000; valaddr_reg:x3; val_offset:167463*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167463*0 + 3*525*FLEN/8, x4, x1, x2)

inst_55822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffe000000; valaddr_reg:x3; val_offset:167466*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167466*0 + 3*526*FLEN/8, x4, x1, x2)

inst_55823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffff000000; valaddr_reg:x3; val_offset:167469*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167469*0 + 3*527*FLEN/8, x4, x1, x2)

inst_55824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffff800000; valaddr_reg:x3; val_offset:167472*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167472*0 + 3*528*FLEN/8, x4, x1, x2)

inst_55825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffc00000; valaddr_reg:x3; val_offset:167475*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167475*0 + 3*529*FLEN/8, x4, x1, x2)

inst_55826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffe00000; valaddr_reg:x3; val_offset:167478*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167478*0 + 3*530*FLEN/8, x4, x1, x2)

inst_55827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffff00000; valaddr_reg:x3; val_offset:167481*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167481*0 + 3*531*FLEN/8, x4, x1, x2)

inst_55828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffff80000; valaddr_reg:x3; val_offset:167484*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167484*0 + 3*532*FLEN/8, x4, x1, x2)

inst_55829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffc0000; valaddr_reg:x3; val_offset:167487*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167487*0 + 3*533*FLEN/8, x4, x1, x2)

inst_55830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffe0000; valaddr_reg:x3; val_offset:167490*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167490*0 + 3*534*FLEN/8, x4, x1, x2)

inst_55831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffff0000; valaddr_reg:x3; val_offset:167493*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167493*0 + 3*535*FLEN/8, x4, x1, x2)

inst_55832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffff8000; valaddr_reg:x3; val_offset:167496*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167496*0 + 3*536*FLEN/8, x4, x1, x2)

inst_55833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffc000; valaddr_reg:x3; val_offset:167499*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167499*0 + 3*537*FLEN/8, x4, x1, x2)

inst_55834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffe000; valaddr_reg:x3; val_offset:167502*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167502*0 + 3*538*FLEN/8, x4, x1, x2)

inst_55835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffff000; valaddr_reg:x3; val_offset:167505*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167505*0 + 3*539*FLEN/8, x4, x1, x2)

inst_55836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffff800; valaddr_reg:x3; val_offset:167508*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167508*0 + 3*540*FLEN/8, x4, x1, x2)

inst_55837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffc00; valaddr_reg:x3; val_offset:167511*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167511*0 + 3*541*FLEN/8, x4, x1, x2)

inst_55838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffe00; valaddr_reg:x3; val_offset:167514*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167514*0 + 3*542*FLEN/8, x4, x1, x2)

inst_55839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffff00; valaddr_reg:x3; val_offset:167517*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167517*0 + 3*543*FLEN/8, x4, x1, x2)

inst_55840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffff80; valaddr_reg:x3; val_offset:167520*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167520*0 + 3*544*FLEN/8, x4, x1, x2)

inst_55841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffffc0; valaddr_reg:x3; val_offset:167523*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167523*0 + 3*545*FLEN/8, x4, x1, x2)

inst_55842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffffe0; valaddr_reg:x3; val_offset:167526*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167526*0 + 3*546*FLEN/8, x4, x1, x2)

inst_55843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffff0; valaddr_reg:x3; val_offset:167529*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167529*0 + 3*547*FLEN/8, x4, x1, x2)

inst_55844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffff8; valaddr_reg:x3; val_offset:167532*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167532*0 + 3*548*FLEN/8, x4, x1, x2)

inst_55845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffffc; valaddr_reg:x3; val_offset:167535*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167535*0 + 3*549*FLEN/8, x4, x1, x2)

inst_55846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83effffffffffffe; valaddr_reg:x3; val_offset:167538*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167538*0 + 3*550*FLEN/8, x4, x1, x2)

inst_55847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0f20e78d8f9d2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03e and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0f20e78d8f9d2; op2val:0x8000;
op3val:0x83efffffffffffff; valaddr_reg:x3; val_offset:167541*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167541*0 + 3*551*FLEN/8, x4, x1, x2)

inst_55848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:167544*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167544*0 + 3*552*FLEN/8, x4, x1, x2)

inst_55849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:167547*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167547*0 + 3*553*FLEN/8, x4, x1, x2)

inst_55850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:167550*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167550*0 + 3*554*FLEN/8, x4, x1, x2)

inst_55851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:167553*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167553*0 + 3*555*FLEN/8, x4, x1, x2)

inst_55852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:167556*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167556*0 + 3*556*FLEN/8, x4, x1, x2)

inst_55853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:167559*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167559*0 + 3*557*FLEN/8, x4, x1, x2)

inst_55854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:167562*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167562*0 + 3*558*FLEN/8, x4, x1, x2)

inst_55855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:167565*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167565*0 + 3*559*FLEN/8, x4, x1, x2)

inst_55856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:167568*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167568*0 + 3*560*FLEN/8, x4, x1, x2)

inst_55857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:167571*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167571*0 + 3*561*FLEN/8, x4, x1, x2)

inst_55858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:167574*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167574*0 + 3*562*FLEN/8, x4, x1, x2)

inst_55859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:167577*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167577*0 + 3*563*FLEN/8, x4, x1, x2)

inst_55860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:167580*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167580*0 + 3*564*FLEN/8, x4, x1, x2)

inst_55861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:167583*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167583*0 + 3*565*FLEN/8, x4, x1, x2)

inst_55862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:167586*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167586*0 + 3*566*FLEN/8, x4, x1, x2)

inst_55863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:167589*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167589*0 + 3*567*FLEN/8, x4, x1, x2)

inst_55864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:167592*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167592*0 + 3*568*FLEN/8, x4, x1, x2)

inst_55865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:167595*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167595*0 + 3*569*FLEN/8, x4, x1, x2)

inst_55866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:167598*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167598*0 + 3*570*FLEN/8, x4, x1, x2)

inst_55867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:167601*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167601*0 + 3*571*FLEN/8, x4, x1, x2)

inst_55868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:167604*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167604*0 + 3*572*FLEN/8, x4, x1, x2)

inst_55869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:167607*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167607*0 + 3*573*FLEN/8, x4, x1, x2)

inst_55870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000000000; valaddr_reg:x3; val_offset:167610*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167610*0 + 3*574*FLEN/8, x4, x1, x2)

inst_55871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000000001; valaddr_reg:x3; val_offset:167613*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167613*0 + 3*575*FLEN/8, x4, x1, x2)

inst_55872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000000003; valaddr_reg:x3; val_offset:167616*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167616*0 + 3*576*FLEN/8, x4, x1, x2)

inst_55873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000000007; valaddr_reg:x3; val_offset:167619*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167619*0 + 3*577*FLEN/8, x4, x1, x2)

inst_55874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000000000f; valaddr_reg:x3; val_offset:167622*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167622*0 + 3*578*FLEN/8, x4, x1, x2)

inst_55875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000000001f; valaddr_reg:x3; val_offset:167625*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167625*0 + 3*579*FLEN/8, x4, x1, x2)

inst_55876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000000003f; valaddr_reg:x3; val_offset:167628*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167628*0 + 3*580*FLEN/8, x4, x1, x2)

inst_55877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000000007f; valaddr_reg:x3; val_offset:167631*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167631*0 + 3*581*FLEN/8, x4, x1, x2)

inst_55878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000000000ff; valaddr_reg:x3; val_offset:167634*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167634*0 + 3*582*FLEN/8, x4, x1, x2)

inst_55879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000000001ff; valaddr_reg:x3; val_offset:167637*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167637*0 + 3*583*FLEN/8, x4, x1, x2)

inst_55880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000000003ff; valaddr_reg:x3; val_offset:167640*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167640*0 + 3*584*FLEN/8, x4, x1, x2)

inst_55881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000000007ff; valaddr_reg:x3; val_offset:167643*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167643*0 + 3*585*FLEN/8, x4, x1, x2)

inst_55882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000000fff; valaddr_reg:x3; val_offset:167646*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167646*0 + 3*586*FLEN/8, x4, x1, x2)

inst_55883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000001fff; valaddr_reg:x3; val_offset:167649*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167649*0 + 3*587*FLEN/8, x4, x1, x2)

inst_55884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000003fff; valaddr_reg:x3; val_offset:167652*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167652*0 + 3*588*FLEN/8, x4, x1, x2)

inst_55885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000007fff; valaddr_reg:x3; val_offset:167655*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167655*0 + 3*589*FLEN/8, x4, x1, x2)

inst_55886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000000ffff; valaddr_reg:x3; val_offset:167658*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167658*0 + 3*590*FLEN/8, x4, x1, x2)

inst_55887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000001ffff; valaddr_reg:x3; val_offset:167661*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167661*0 + 3*591*FLEN/8, x4, x1, x2)

inst_55888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000003ffff; valaddr_reg:x3; val_offset:167664*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167664*0 + 3*592*FLEN/8, x4, x1, x2)

inst_55889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000007ffff; valaddr_reg:x3; val_offset:167667*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167667*0 + 3*593*FLEN/8, x4, x1, x2)

inst_55890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000000fffff; valaddr_reg:x3; val_offset:167670*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167670*0 + 3*594*FLEN/8, x4, x1, x2)

inst_55891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000001fffff; valaddr_reg:x3; val_offset:167673*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167673*0 + 3*595*FLEN/8, x4, x1, x2)

inst_55892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000003fffff; valaddr_reg:x3; val_offset:167676*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167676*0 + 3*596*FLEN/8, x4, x1, x2)

inst_55893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000007fffff; valaddr_reg:x3; val_offset:167679*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167679*0 + 3*597*FLEN/8, x4, x1, x2)

inst_55894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000000ffffff; valaddr_reg:x3; val_offset:167682*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167682*0 + 3*598*FLEN/8, x4, x1, x2)

inst_55895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000001ffffff; valaddr_reg:x3; val_offset:167685*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167685*0 + 3*599*FLEN/8, x4, x1, x2)

inst_55896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000003ffffff; valaddr_reg:x3; val_offset:167688*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167688*0 + 3*600*FLEN/8, x4, x1, x2)

inst_55897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000007ffffff; valaddr_reg:x3; val_offset:167691*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167691*0 + 3*601*FLEN/8, x4, x1, x2)

inst_55898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000000fffffff; valaddr_reg:x3; val_offset:167694*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167694*0 + 3*602*FLEN/8, x4, x1, x2)

inst_55899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000001fffffff; valaddr_reg:x3; val_offset:167697*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167697*0 + 3*603*FLEN/8, x4, x1, x2)

inst_55900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000003fffffff; valaddr_reg:x3; val_offset:167700*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167700*0 + 3*604*FLEN/8, x4, x1, x2)

inst_55901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000007fffffff; valaddr_reg:x3; val_offset:167703*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167703*0 + 3*605*FLEN/8, x4, x1, x2)

inst_55902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600000ffffffff; valaddr_reg:x3; val_offset:167706*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167706*0 + 3*606*FLEN/8, x4, x1, x2)

inst_55903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600001ffffffff; valaddr_reg:x3; val_offset:167709*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167709*0 + 3*607*FLEN/8, x4, x1, x2)

inst_55904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600003ffffffff; valaddr_reg:x3; val_offset:167712*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167712*0 + 3*608*FLEN/8, x4, x1, x2)

inst_55905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600007ffffffff; valaddr_reg:x3; val_offset:167715*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167715*0 + 3*609*FLEN/8, x4, x1, x2)

inst_55906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360000fffffffff; valaddr_reg:x3; val_offset:167718*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167718*0 + 3*610*FLEN/8, x4, x1, x2)

inst_55907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360001fffffffff; valaddr_reg:x3; val_offset:167721*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167721*0 + 3*611*FLEN/8, x4, x1, x2)

inst_55908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360003fffffffff; valaddr_reg:x3; val_offset:167724*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167724*0 + 3*612*FLEN/8, x4, x1, x2)

inst_55909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360007fffffffff; valaddr_reg:x3; val_offset:167727*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167727*0 + 3*613*FLEN/8, x4, x1, x2)

inst_55910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36000ffffffffff; valaddr_reg:x3; val_offset:167730*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167730*0 + 3*614*FLEN/8, x4, x1, x2)

inst_55911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36001ffffffffff; valaddr_reg:x3; val_offset:167733*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167733*0 + 3*615*FLEN/8, x4, x1, x2)

inst_55912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36003ffffffffff; valaddr_reg:x3; val_offset:167736*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167736*0 + 3*616*FLEN/8, x4, x1, x2)

inst_55913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36007ffffffffff; valaddr_reg:x3; val_offset:167739*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167739*0 + 3*617*FLEN/8, x4, x1, x2)

inst_55914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3600fffffffffff; valaddr_reg:x3; val_offset:167742*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167742*0 + 3*618*FLEN/8, x4, x1, x2)

inst_55915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3601fffffffffff; valaddr_reg:x3; val_offset:167745*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167745*0 + 3*619*FLEN/8, x4, x1, x2)

inst_55916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3603fffffffffff; valaddr_reg:x3; val_offset:167748*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167748*0 + 3*620*FLEN/8, x4, x1, x2)

inst_55917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x3607fffffffffff; valaddr_reg:x3; val_offset:167751*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167751*0 + 3*621*FLEN/8, x4, x1, x2)

inst_55918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x360ffffffffffff; valaddr_reg:x3; val_offset:167754*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167754*0 + 3*622*FLEN/8, x4, x1, x2)

inst_55919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x361ffffffffffff; valaddr_reg:x3; val_offset:167757*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167757*0 + 3*623*FLEN/8, x4, x1, x2)

inst_55920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x363ffffffffffff; valaddr_reg:x3; val_offset:167760*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167760*0 + 3*624*FLEN/8, x4, x1, x2)

inst_55921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x367ffffffffffff; valaddr_reg:x3; val_offset:167763*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167763*0 + 3*625*FLEN/8, x4, x1, x2)

inst_55922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x368000000000000; valaddr_reg:x3; val_offset:167766*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167766*0 + 3*626*FLEN/8, x4, x1, x2)

inst_55923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36c000000000000; valaddr_reg:x3; val_offset:167769*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167769*0 + 3*627*FLEN/8, x4, x1, x2)

inst_55924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36e000000000000; valaddr_reg:x3; val_offset:167772*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167772*0 + 3*628*FLEN/8, x4, x1, x2)

inst_55925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36f000000000000; valaddr_reg:x3; val_offset:167775*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167775*0 + 3*629*FLEN/8, x4, x1, x2)

inst_55926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36f800000000000; valaddr_reg:x3; val_offset:167778*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167778*0 + 3*630*FLEN/8, x4, x1, x2)

inst_55927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fc00000000000; valaddr_reg:x3; val_offset:167781*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167781*0 + 3*631*FLEN/8, x4, x1, x2)

inst_55928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fe00000000000; valaddr_reg:x3; val_offset:167784*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167784*0 + 3*632*FLEN/8, x4, x1, x2)

inst_55929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ff00000000000; valaddr_reg:x3; val_offset:167787*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167787*0 + 3*633*FLEN/8, x4, x1, x2)

inst_55930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ff80000000000; valaddr_reg:x3; val_offset:167790*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167790*0 + 3*634*FLEN/8, x4, x1, x2)

inst_55931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffc0000000000; valaddr_reg:x3; val_offset:167793*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167793*0 + 3*635*FLEN/8, x4, x1, x2)

inst_55932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffe0000000000; valaddr_reg:x3; val_offset:167796*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167796*0 + 3*636*FLEN/8, x4, x1, x2)

inst_55933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fff0000000000; valaddr_reg:x3; val_offset:167799*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167799*0 + 3*637*FLEN/8, x4, x1, x2)

inst_55934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fff8000000000; valaddr_reg:x3; val_offset:167802*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167802*0 + 3*638*FLEN/8, x4, x1, x2)

inst_55935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffc000000000; valaddr_reg:x3; val_offset:167805*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167805*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_55936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffe000000000; valaddr_reg:x3; val_offset:167808*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167808*0 + 3*640*FLEN/8, x4, x1, x2)

inst_55937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffff000000000; valaddr_reg:x3; val_offset:167811*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167811*0 + 3*641*FLEN/8, x4, x1, x2)

inst_55938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffff800000000; valaddr_reg:x3; val_offset:167814*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167814*0 + 3*642*FLEN/8, x4, x1, x2)

inst_55939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffc00000000; valaddr_reg:x3; val_offset:167817*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167817*0 + 3*643*FLEN/8, x4, x1, x2)

inst_55940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffe00000000; valaddr_reg:x3; val_offset:167820*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167820*0 + 3*644*FLEN/8, x4, x1, x2)

inst_55941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffff00000000; valaddr_reg:x3; val_offset:167823*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167823*0 + 3*645*FLEN/8, x4, x1, x2)

inst_55942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffff80000000; valaddr_reg:x3; val_offset:167826*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167826*0 + 3*646*FLEN/8, x4, x1, x2)

inst_55943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffc0000000; valaddr_reg:x3; val_offset:167829*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167829*0 + 3*647*FLEN/8, x4, x1, x2)

inst_55944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffe0000000; valaddr_reg:x3; val_offset:167832*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167832*0 + 3*648*FLEN/8, x4, x1, x2)

inst_55945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffff0000000; valaddr_reg:x3; val_offset:167835*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167835*0 + 3*649*FLEN/8, x4, x1, x2)

inst_55946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffff8000000; valaddr_reg:x3; val_offset:167838*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167838*0 + 3*650*FLEN/8, x4, x1, x2)

inst_55947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffc000000; valaddr_reg:x3; val_offset:167841*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167841*0 + 3*651*FLEN/8, x4, x1, x2)

inst_55948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffe000000; valaddr_reg:x3; val_offset:167844*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167844*0 + 3*652*FLEN/8, x4, x1, x2)

inst_55949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffff000000; valaddr_reg:x3; val_offset:167847*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167847*0 + 3*653*FLEN/8, x4, x1, x2)

inst_55950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffff800000; valaddr_reg:x3; val_offset:167850*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167850*0 + 3*654*FLEN/8, x4, x1, x2)

inst_55951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffc00000; valaddr_reg:x3; val_offset:167853*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167853*0 + 3*655*FLEN/8, x4, x1, x2)

inst_55952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffe00000; valaddr_reg:x3; val_offset:167856*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167856*0 + 3*656*FLEN/8, x4, x1, x2)

inst_55953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffff00000; valaddr_reg:x3; val_offset:167859*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167859*0 + 3*657*FLEN/8, x4, x1, x2)

inst_55954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffff80000; valaddr_reg:x3; val_offset:167862*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167862*0 + 3*658*FLEN/8, x4, x1, x2)

inst_55955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffc0000; valaddr_reg:x3; val_offset:167865*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167865*0 + 3*659*FLEN/8, x4, x1, x2)

inst_55956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffe0000; valaddr_reg:x3; val_offset:167868*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167868*0 + 3*660*FLEN/8, x4, x1, x2)

inst_55957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffff0000; valaddr_reg:x3; val_offset:167871*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167871*0 + 3*661*FLEN/8, x4, x1, x2)

inst_55958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffff8000; valaddr_reg:x3; val_offset:167874*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167874*0 + 3*662*FLEN/8, x4, x1, x2)

inst_55959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffc000; valaddr_reg:x3; val_offset:167877*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167877*0 + 3*663*FLEN/8, x4, x1, x2)

inst_55960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffe000; valaddr_reg:x3; val_offset:167880*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167880*0 + 3*664*FLEN/8, x4, x1, x2)

inst_55961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffff000; valaddr_reg:x3; val_offset:167883*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167883*0 + 3*665*FLEN/8, x4, x1, x2)

inst_55962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffff800; valaddr_reg:x3; val_offset:167886*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167886*0 + 3*666*FLEN/8, x4, x1, x2)

inst_55963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffc00; valaddr_reg:x3; val_offset:167889*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167889*0 + 3*667*FLEN/8, x4, x1, x2)

inst_55964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffe00; valaddr_reg:x3; val_offset:167892*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167892*0 + 3*668*FLEN/8, x4, x1, x2)

inst_55965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffff00; valaddr_reg:x3; val_offset:167895*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167895*0 + 3*669*FLEN/8, x4, x1, x2)

inst_55966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffff80; valaddr_reg:x3; val_offset:167898*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167898*0 + 3*670*FLEN/8, x4, x1, x2)

inst_55967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffffc0; valaddr_reg:x3; val_offset:167901*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167901*0 + 3*671*FLEN/8, x4, x1, x2)

inst_55968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffffe0; valaddr_reg:x3; val_offset:167904*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167904*0 + 3*672*FLEN/8, x4, x1, x2)

inst_55969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffff0; valaddr_reg:x3; val_offset:167907*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167907*0 + 3*673*FLEN/8, x4, x1, x2)

inst_55970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffff8; valaddr_reg:x3; val_offset:167910*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167910*0 + 3*674*FLEN/8, x4, x1, x2)

inst_55971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffffc; valaddr_reg:x3; val_offset:167913*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167913*0 + 3*675*FLEN/8, x4, x1, x2)

inst_55972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36ffffffffffffe; valaddr_reg:x3; val_offset:167916*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167916*0 + 3*676*FLEN/8, x4, x1, x2)

inst_55973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x11510d0c7fc99 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa11510d0c7fc99; op2val:0x0;
op3val:0x36fffffffffffff; valaddr_reg:x3; val_offset:167919*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167919*0 + 3*677*FLEN/8, x4, x1, x2)

inst_55974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:167922*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167922*0 + 3*678*FLEN/8, x4, x1, x2)

inst_55975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:167925*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167925*0 + 3*679*FLEN/8, x4, x1, x2)

inst_55976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:167928*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167928*0 + 3*680*FLEN/8, x4, x1, x2)

inst_55977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:167931*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167931*0 + 3*681*FLEN/8, x4, x1, x2)

inst_55978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:167934*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167934*0 + 3*682*FLEN/8, x4, x1, x2)

inst_55979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:167937*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167937*0 + 3*683*FLEN/8, x4, x1, x2)

inst_55980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:167940*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167940*0 + 3*684*FLEN/8, x4, x1, x2)

inst_55981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:167943*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167943*0 + 3*685*FLEN/8, x4, x1, x2)

inst_55982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:167946*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167946*0 + 3*686*FLEN/8, x4, x1, x2)

inst_55983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:167949*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167949*0 + 3*687*FLEN/8, x4, x1, x2)

inst_55984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:167952*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167952*0 + 3*688*FLEN/8, x4, x1, x2)

inst_55985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:167955*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167955*0 + 3*689*FLEN/8, x4, x1, x2)

inst_55986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:167958*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167958*0 + 3*690*FLEN/8, x4, x1, x2)

inst_55987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:167961*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167961*0 + 3*691*FLEN/8, x4, x1, x2)

inst_55988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:167964*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167964*0 + 3*692*FLEN/8, x4, x1, x2)

inst_55989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:167967*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167967*0 + 3*693*FLEN/8, x4, x1, x2)

inst_55990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:167970*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167970*0 + 3*694*FLEN/8, x4, x1, x2)

inst_55991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:167973*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167973*0 + 3*695*FLEN/8, x4, x1, x2)

inst_55992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:167976*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167976*0 + 3*696*FLEN/8, x4, x1, x2)

inst_55993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:167979*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167979*0 + 3*697*FLEN/8, x4, x1, x2)

inst_55994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:167982*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167982*0 + 3*698*FLEN/8, x4, x1, x2)

inst_55995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:167985*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167985*0 + 3*699*FLEN/8, x4, x1, x2)

inst_55996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000000000; valaddr_reg:x3; val_offset:167988*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167988*0 + 3*700*FLEN/8, x4, x1, x2)

inst_55997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000000001; valaddr_reg:x3; val_offset:167991*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167991*0 + 3*701*FLEN/8, x4, x1, x2)

inst_55998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000000003; valaddr_reg:x3; val_offset:167994*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167994*0 + 3*702*FLEN/8, x4, x1, x2)

inst_55999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000000007; valaddr_reg:x3; val_offset:167997*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 167997*0 + 3*703*FLEN/8, x4, x1, x2)

inst_56000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000000000f; valaddr_reg:x3; val_offset:168000*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168000*0 + 3*704*FLEN/8, x4, x1, x2)

inst_56001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000000001f; valaddr_reg:x3; val_offset:168003*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168003*0 + 3*705*FLEN/8, x4, x1, x2)

inst_56002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000000003f; valaddr_reg:x3; val_offset:168006*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168006*0 + 3*706*FLEN/8, x4, x1, x2)

inst_56003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000000007f; valaddr_reg:x3; val_offset:168009*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168009*0 + 3*707*FLEN/8, x4, x1, x2)

inst_56004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000000000ff; valaddr_reg:x3; val_offset:168012*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168012*0 + 3*708*FLEN/8, x4, x1, x2)

inst_56005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000000001ff; valaddr_reg:x3; val_offset:168015*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168015*0 + 3*709*FLEN/8, x4, x1, x2)

inst_56006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000000003ff; valaddr_reg:x3; val_offset:168018*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168018*0 + 3*710*FLEN/8, x4, x1, x2)

inst_56007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000000007ff; valaddr_reg:x3; val_offset:168021*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168021*0 + 3*711*FLEN/8, x4, x1, x2)

inst_56008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000000fff; valaddr_reg:x3; val_offset:168024*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168024*0 + 3*712*FLEN/8, x4, x1, x2)

inst_56009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000001fff; valaddr_reg:x3; val_offset:168027*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168027*0 + 3*713*FLEN/8, x4, x1, x2)

inst_56010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000003fff; valaddr_reg:x3; val_offset:168030*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168030*0 + 3*714*FLEN/8, x4, x1, x2)

inst_56011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000007fff; valaddr_reg:x3; val_offset:168033*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168033*0 + 3*715*FLEN/8, x4, x1, x2)

inst_56012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000000ffff; valaddr_reg:x3; val_offset:168036*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168036*0 + 3*716*FLEN/8, x4, x1, x2)

inst_56013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000001ffff; valaddr_reg:x3; val_offset:168039*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168039*0 + 3*717*FLEN/8, x4, x1, x2)

inst_56014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000003ffff; valaddr_reg:x3; val_offset:168042*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168042*0 + 3*718*FLEN/8, x4, x1, x2)

inst_56015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000007ffff; valaddr_reg:x3; val_offset:168045*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168045*0 + 3*719*FLEN/8, x4, x1, x2)

inst_56016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000000fffff; valaddr_reg:x3; val_offset:168048*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168048*0 + 3*720*FLEN/8, x4, x1, x2)

inst_56017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000001fffff; valaddr_reg:x3; val_offset:168051*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168051*0 + 3*721*FLEN/8, x4, x1, x2)

inst_56018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000003fffff; valaddr_reg:x3; val_offset:168054*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168054*0 + 3*722*FLEN/8, x4, x1, x2)

inst_56019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000007fffff; valaddr_reg:x3; val_offset:168057*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168057*0 + 3*723*FLEN/8, x4, x1, x2)

inst_56020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000000ffffff; valaddr_reg:x3; val_offset:168060*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168060*0 + 3*724*FLEN/8, x4, x1, x2)

inst_56021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000001ffffff; valaddr_reg:x3; val_offset:168063*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168063*0 + 3*725*FLEN/8, x4, x1, x2)

inst_56022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000003ffffff; valaddr_reg:x3; val_offset:168066*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168066*0 + 3*726*FLEN/8, x4, x1, x2)

inst_56023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000007ffffff; valaddr_reg:x3; val_offset:168069*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168069*0 + 3*727*FLEN/8, x4, x1, x2)

inst_56024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000000fffffff; valaddr_reg:x3; val_offset:168072*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168072*0 + 3*728*FLEN/8, x4, x1, x2)

inst_56025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000001fffffff; valaddr_reg:x3; val_offset:168075*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168075*0 + 3*729*FLEN/8, x4, x1, x2)

inst_56026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000003fffffff; valaddr_reg:x3; val_offset:168078*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168078*0 + 3*730*FLEN/8, x4, x1, x2)

inst_56027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000007fffffff; valaddr_reg:x3; val_offset:168081*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168081*0 + 3*731*FLEN/8, x4, x1, x2)

inst_56028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00000ffffffff; valaddr_reg:x3; val_offset:168084*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168084*0 + 3*732*FLEN/8, x4, x1, x2)

inst_56029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00001ffffffff; valaddr_reg:x3; val_offset:168087*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168087*0 + 3*733*FLEN/8, x4, x1, x2)

inst_56030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00003ffffffff; valaddr_reg:x3; val_offset:168090*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168090*0 + 3*734*FLEN/8, x4, x1, x2)

inst_56031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00007ffffffff; valaddr_reg:x3; val_offset:168093*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168093*0 + 3*735*FLEN/8, x4, x1, x2)

inst_56032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0000fffffffff; valaddr_reg:x3; val_offset:168096*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168096*0 + 3*736*FLEN/8, x4, x1, x2)

inst_56033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0001fffffffff; valaddr_reg:x3; val_offset:168099*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168099*0 + 3*737*FLEN/8, x4, x1, x2)

inst_56034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0003fffffffff; valaddr_reg:x3; val_offset:168102*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168102*0 + 3*738*FLEN/8, x4, x1, x2)

inst_56035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0007fffffffff; valaddr_reg:x3; val_offset:168105*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168105*0 + 3*739*FLEN/8, x4, x1, x2)

inst_56036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c000ffffffffff; valaddr_reg:x3; val_offset:168108*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168108*0 + 3*740*FLEN/8, x4, x1, x2)

inst_56037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c001ffffffffff; valaddr_reg:x3; val_offset:168111*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168111*0 + 3*741*FLEN/8, x4, x1, x2)

inst_56038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c003ffffffffff; valaddr_reg:x3; val_offset:168114*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168114*0 + 3*742*FLEN/8, x4, x1, x2)

inst_56039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c007ffffffffff; valaddr_reg:x3; val_offset:168117*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168117*0 + 3*743*FLEN/8, x4, x1, x2)

inst_56040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c00fffffffffff; valaddr_reg:x3; val_offset:168120*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168120*0 + 3*744*FLEN/8, x4, x1, x2)

inst_56041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c01fffffffffff; valaddr_reg:x3; val_offset:168123*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168123*0 + 3*745*FLEN/8, x4, x1, x2)

inst_56042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c03fffffffffff; valaddr_reg:x3; val_offset:168126*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168126*0 + 3*746*FLEN/8, x4, x1, x2)

inst_56043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c07fffffffffff; valaddr_reg:x3; val_offset:168129*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168129*0 + 3*747*FLEN/8, x4, x1, x2)

inst_56044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c0ffffffffffff; valaddr_reg:x3; val_offset:168132*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168132*0 + 3*748*FLEN/8, x4, x1, x2)

inst_56045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c1ffffffffffff; valaddr_reg:x3; val_offset:168135*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168135*0 + 3*749*FLEN/8, x4, x1, x2)

inst_56046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c3ffffffffffff; valaddr_reg:x3; val_offset:168138*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168138*0 + 3*750*FLEN/8, x4, x1, x2)

inst_56047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c7ffffffffffff; valaddr_reg:x3; val_offset:168141*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168141*0 + 3*751*FLEN/8, x4, x1, x2)

inst_56048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2c8000000000000; valaddr_reg:x3; val_offset:168144*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168144*0 + 3*752*FLEN/8, x4, x1, x2)

inst_56049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cc000000000000; valaddr_reg:x3; val_offset:168147*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168147*0 + 3*753*FLEN/8, x4, x1, x2)

inst_56050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2ce000000000000; valaddr_reg:x3; val_offset:168150*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168150*0 + 3*754*FLEN/8, x4, x1, x2)

inst_56051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cf000000000000; valaddr_reg:x3; val_offset:168153*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168153*0 + 3*755*FLEN/8, x4, x1, x2)

inst_56052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cf800000000000; valaddr_reg:x3; val_offset:168156*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168156*0 + 3*756*FLEN/8, x4, x1, x2)

inst_56053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfc00000000000; valaddr_reg:x3; val_offset:168159*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168159*0 + 3*757*FLEN/8, x4, x1, x2)

inst_56054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfe00000000000; valaddr_reg:x3; val_offset:168162*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168162*0 + 3*758*FLEN/8, x4, x1, x2)

inst_56055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cff00000000000; valaddr_reg:x3; val_offset:168165*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168165*0 + 3*759*FLEN/8, x4, x1, x2)

inst_56056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cff80000000000; valaddr_reg:x3; val_offset:168168*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168168*0 + 3*760*FLEN/8, x4, x1, x2)

inst_56057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffc0000000000; valaddr_reg:x3; val_offset:168171*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168171*0 + 3*761*FLEN/8, x4, x1, x2)

inst_56058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffe0000000000; valaddr_reg:x3; val_offset:168174*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168174*0 + 3*762*FLEN/8, x4, x1, x2)

inst_56059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfff0000000000; valaddr_reg:x3; val_offset:168177*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168177*0 + 3*763*FLEN/8, x4, x1, x2)

inst_56060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfff8000000000; valaddr_reg:x3; val_offset:168180*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168180*0 + 3*764*FLEN/8, x4, x1, x2)

inst_56061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffc000000000; valaddr_reg:x3; val_offset:168183*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168183*0 + 3*765*FLEN/8, x4, x1, x2)

inst_56062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cfffe000000000; valaddr_reg:x3; val_offset:168186*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168186*0 + 3*766*FLEN/8, x4, x1, x2)

inst_56063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x1175f5a571da9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x02c and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa1175f5a571da9; op2val:0x0;
op3val:0x2cffff000000000; valaddr_reg:x3; val_offset:168189*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 168189*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198017646115946496,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198088014860124160,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198123199232212992,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198140791418257408,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198149587511279616,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198153985557790720,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198156184581046272,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157284092674048,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198157833848487936,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158108726394880,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158246165348352,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158314884825088,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158349244563456,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158366424432640,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158375014367232,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158379309334528,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158381456818176,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158382530560000,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383067430912,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383335866368,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383470084096,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383537192960,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383570747392,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383587524608,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383595913216,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383600107520,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383602204672,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603253248,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383603777536,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604039680,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604170752,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604236288,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604269056,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604285440,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604293632,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604297728,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604299776,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604300800,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301312,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301568,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301696,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301760,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301792,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301808,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301816,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301820,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301822,64,FLEN)
NAN_BOXED(6890738739173393376,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301823,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373888,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373889,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373891,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373895,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373903,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373919,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566373951,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374015,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374143,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374399,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566374911,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566375935,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566377983,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566382079,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566390271,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566406655,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566439423,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566504959,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566636031,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789566898175,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789567422463,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789568471039,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789570568191,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789574762495,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789583151103,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789599928319,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789633482751,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789700591615,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100789834809343,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790103244799,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100790640115711,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100791713857535,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100793861341183,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100798156308479,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100806746243071,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100823926112255,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100858285850623,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126100927005327359,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101064444280831,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101339322187775,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126101889078001663,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126102988589629439,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126105187612884991,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126109585659396095,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126118381752418303,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126135973938462719,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126171158310551551,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126241527054729215,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126382264543084543,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(126663739519795199,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(127226689473216511,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059135,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(128352589380059136,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(129478489286901760,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130041439240323072,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130322914217033728,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130463651705389056,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130534020449566720,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130569204821655552,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130586797007699968,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130595593100722176,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130599991147233280,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130602190170488832,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603289682116608,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130603839437930496,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604114315837440,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604251754790912,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604320474267648,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604354834006016,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604372013875200,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604380603809792,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604384898777088,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604387046260736,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388120002560,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388656873472,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604388925308928,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389059526656,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389126635520,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389160189952,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389176967168,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389185355776,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389189550080,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389191647232,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389192695808,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193220096,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193482240,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193613312,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193678848,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193711616,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193728000,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193736192,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193740288,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193742336,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743360,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193743872,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744128,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744256,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744320,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744352,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744368,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744376,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744380,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744382,64,FLEN)
NAN_BOXED(6890754981920674432,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(130604389193744383,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743168,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743169,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743171,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743175,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743183,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743199,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743231,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743295,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743423,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812743679,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812744191,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812745215,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812747263,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812751359,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812759551,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812775935,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812808703,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023812874239,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813005311,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813267455,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023813791743,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023814840319,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023816937471,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023821131775,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023829520383,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023846297599,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023879852031,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998023946960895,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024081178623,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024349614079,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998024886484991,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998025960226815,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998028107710463,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998032402677759,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998040992612351,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998058172481535,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998092532219903,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998161251696639,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998298690650111,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380998573568557055,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9380999123324370943,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381000222835998719,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381002421859254271,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381006819905765375,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381015615998787583,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381033208184831999,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381068392556920831,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381138761301098495,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381279498789453823,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9381560973766164479,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9382123923719585791,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428415,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9383249823626428416,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384375723533271040,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9384938673486692352,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385220148463403008,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385360885951758336,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385431254695936000,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385466439068024832,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385484031254069248,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385492827347091456,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385497225393602560,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385499424416858112,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385500523928485888,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501073684299776,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501348562206720,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501486001160192,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501554720636928,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501589080375296,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501606260244480,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501614850179072,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501619145146368,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501621292630016,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622366371840,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501622903242752,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623171678208,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623305895936,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623373004800,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623406559232,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623423336448,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623431725056,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623435919360,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623438016512,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439065088,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439589376,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439851520,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623439982592,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440048128,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440080896,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440097280,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440105472,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440109568,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440111616,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440112640,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113152,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113408,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113536,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113600,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113632,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113648,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113656,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113660,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113662,64,FLEN)
NAN_BOXED(6890756039506815827,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9385501623440113663,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114880,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114881,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114883,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114887,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114895,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114911,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821114943,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115007,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115135,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115391,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821115903,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821116927,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821118975,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821123071,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821131263,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821147647,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821180415,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821245951,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821377023,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988821639167,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988822163455,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988823212031,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988825309183,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988829503487,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988837892095,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988854669311,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988888223743,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107988955332607,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989089550335,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989357985791,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107989894856703,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107990968598527,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107993116082175,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135107997411049471,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108006000984063,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108023180853247,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108057540591615,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108126260068351,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108263699021823,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135108538576928767,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135109088332742655,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135110187844370431,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135112386867625983,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135116784914137087,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135125581007159295,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135143173193203711,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135178357565292543,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135248726309470207,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135389463797825535,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(135670938774536191,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(136233888727957503,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800127,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(137359788634800128,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(138485688541642752,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139048638495064064,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139330113471774720,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139470850960130048,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139541219704307712,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139576404076396544,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139593996262440960,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139602792355463168,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139607190401974272,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139609389425229824,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139610488936857600,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611038692671488,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611313570578432,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611451009531904,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611519729008640,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611554088747008,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611571268616192,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611579858550784,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611584153518080,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611586301001728,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587374743552,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611587911614464,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588180049920,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588314267648,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588381376512,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588414930944,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588431708160,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588440096768,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588444291072,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588446388224,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447436800,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588447961088,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448223232,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448354304,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448419840,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448452608,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448468992,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448477184,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448481280,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448483328,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484352,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448484864,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485120,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485248,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485312,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485344,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485360,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485368,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485372,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485374,64,FLEN)
NAN_BOXED(6890756825940222176,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(139611588448485375,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746560,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746561,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746563,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746567,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746575,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746591,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746623,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746687,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751746815,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747071,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751747583,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751748607,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751750655,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751754751,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751762943,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751779327,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751812095,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213751877631,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752008703,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752270847,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213752795135,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213753843711,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213755940863,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213760135167,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213768523775,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213785300991,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213818855423,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595213885964287,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214020182015,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214288617471,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595214825488383,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595215899230207,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595218046713855,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595222341681151,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595230931615743,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595248111484927,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595282471223295,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595351190700031,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595488629653503,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502595763507560447,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502596313263374335,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502597412775002111,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502599611798257663,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502604009844768767,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502612805937790975,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502630398123835391,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502665582495924223,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502735951240101887,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9502876688728457215,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503158163705167871,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9503721113658589183,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431807,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9504847013565431808,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9505972913472274432,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506535863425695744,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506817338402406400,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9506958075890761728,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507028444634939392,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507063629007028224,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507081221193072640,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507090017286094848,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507094415332605952,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507096614355861504,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507097713867489280,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098263623303168,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098538501210112,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098675940163584,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098744659640320,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098779019378688,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098796199247872,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098804789182464,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098809084149760,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098811231633408,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812305375232,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098812842246144,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813110681600,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813244899328,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813312008192,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813345562624,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813362339840,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813370728448,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813374922752,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813377019904,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378068480,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378592768,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378854912,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813378985984,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379051520,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379084288,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379100672,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379108864,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379112960,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379115008,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116032,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116544,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116800,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116928,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379116992,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117024,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117040,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117048,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117052,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117054,64,FLEN)
NAN_BOXED(6890773573847808466,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117055,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006784,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006785,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006787,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006791,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006799,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006815,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006847,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878006911,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007039,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007295,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878007807,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878008831,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878010879,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878014975,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878023167,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878039551,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878072319,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878137855,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878268927,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379878531071,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379879055359,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379880103935,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379882201087,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379886395391,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379894783999,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379911561215,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194379945115647,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380012224511,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380146442239,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380414877695,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194380951748607,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194382025490431,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194384172974079,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194388467941375,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194397057875967,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194414237745151,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194448597483519,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194517316960255,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194654755913727,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243194929633820671,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243195479389634559,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243196578901262335,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243198777924517887,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243203175971028991,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243211972064051199,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243229564250095615,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243264748622184447,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243335117366362111,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243475854854717439,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(243757329831428095,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(244320279784849407,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692031,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(245446179691692032,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(246572079598534656,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247135029551955968,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247416504528666624,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247557242017021952,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247627610761199616,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247662795133288448,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247680387319332864,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247689183412355072,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247693581458866176,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247695780482121728,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247696879993749504,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697429749563392,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697704627470336,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697842066423808,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697910785900544,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697945145638912,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697962325508096,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697970915442688,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697975210409984,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697977357893632,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978431635456,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697978968506368,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979236941824,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979371159552,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979438268416,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979471822848,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979488600064,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979496988672,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979501182976,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979503280128,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504328704,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979504852992,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505115136,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505246208,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505311744,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505344512,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505360896,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505369088,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505373184,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505375232,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376256,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505376768,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377024,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377152,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377216,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377248,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377264,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377272,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377276,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377278,64,FLEN)
NAN_BOXED(6890812066819996825,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(247697979505377279,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301824,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301825,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301827,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301831,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301839,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301855,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301887,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604301951,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302079,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302335,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604302847,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604303871,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604305919,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604310015,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604318207,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604334591,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604367359,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604432895,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604563967,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383604826111,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383605350399,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383606398975,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383608496127,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383612690431,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383621079039,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383637856255,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383671410687,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383738519551,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158383872737279,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384141172735,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158384678043647,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158385751785471,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158387899269119,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158392194236415,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158400784171007,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158417964040191,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158452323778559,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158521043255295,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158658482208767,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198158933360115711,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198159483115929599,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198160582627557375,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198162781650812927,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198167179697324031,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198175975790346239,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198193567976390655,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198228752348479487,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198299121092657151,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198439858581012479,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(198721333557723135,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(199284283511144447,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987071,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(200410183417987072,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(201536083324829696,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202099033278251008,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202380508254961664,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202521245743316992,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202591614487494656,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202626798859583488,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202644391045627904,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202653187138650112,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202657585185161216,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202659784208416768,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202660883720044544,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661433475858432,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661708353765376,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661845792718848,64,FLEN)
NAN_BOXED(6890814603158560169,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(202661914512195584,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
