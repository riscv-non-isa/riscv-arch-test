
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_1536:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000000003; valaddr_reg:x3; val_offset:4608*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4608*0 + 3*0*FLEN/8, x4, x1, x2)

inst_1537:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000000007; valaddr_reg:x3; val_offset:4611*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4611*0 + 3*1*FLEN/8, x4, x1, x2)

inst_1538:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000000000f; valaddr_reg:x3; val_offset:4614*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4614*0 + 3*2*FLEN/8, x4, x1, x2)

inst_1539:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000000001f; valaddr_reg:x3; val_offset:4617*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4617*0 + 3*3*FLEN/8, x4, x1, x2)

inst_1540:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000000003f; valaddr_reg:x3; val_offset:4620*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4620*0 + 3*4*FLEN/8, x4, x1, x2)

inst_1541:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000000007f; valaddr_reg:x3; val_offset:4623*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4623*0 + 3*5*FLEN/8, x4, x1, x2)

inst_1542:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000000000ff; valaddr_reg:x3; val_offset:4626*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4626*0 + 3*6*FLEN/8, x4, x1, x2)

inst_1543:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000000001ff; valaddr_reg:x3; val_offset:4629*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4629*0 + 3*7*FLEN/8, x4, x1, x2)

inst_1544:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000000003ff; valaddr_reg:x3; val_offset:4632*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4632*0 + 3*8*FLEN/8, x4, x1, x2)

inst_1545:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000000007ff; valaddr_reg:x3; val_offset:4635*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4635*0 + 3*9*FLEN/8, x4, x1, x2)

inst_1546:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000000fff; valaddr_reg:x3; val_offset:4638*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4638*0 + 3*10*FLEN/8, x4, x1, x2)

inst_1547:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000001fff; valaddr_reg:x3; val_offset:4641*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4641*0 + 3*11*FLEN/8, x4, x1, x2)

inst_1548:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000003fff; valaddr_reg:x3; val_offset:4644*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4644*0 + 3*12*FLEN/8, x4, x1, x2)

inst_1549:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000007fff; valaddr_reg:x3; val_offset:4647*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4647*0 + 3*13*FLEN/8, x4, x1, x2)

inst_1550:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000000ffff; valaddr_reg:x3; val_offset:4650*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4650*0 + 3*14*FLEN/8, x4, x1, x2)

inst_1551:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000001ffff; valaddr_reg:x3; val_offset:4653*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4653*0 + 3*15*FLEN/8, x4, x1, x2)

inst_1552:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000003ffff; valaddr_reg:x3; val_offset:4656*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4656*0 + 3*16*FLEN/8, x4, x1, x2)

inst_1553:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000007ffff; valaddr_reg:x3; val_offset:4659*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4659*0 + 3*17*FLEN/8, x4, x1, x2)

inst_1554:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000000fffff; valaddr_reg:x3; val_offset:4662*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4662*0 + 3*18*FLEN/8, x4, x1, x2)

inst_1555:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000001fffff; valaddr_reg:x3; val_offset:4665*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4665*0 + 3*19*FLEN/8, x4, x1, x2)

inst_1556:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000003fffff; valaddr_reg:x3; val_offset:4668*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4668*0 + 3*20*FLEN/8, x4, x1, x2)

inst_1557:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000007fffff; valaddr_reg:x3; val_offset:4671*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4671*0 + 3*21*FLEN/8, x4, x1, x2)

inst_1558:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000000ffffff; valaddr_reg:x3; val_offset:4674*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4674*0 + 3*22*FLEN/8, x4, x1, x2)

inst_1559:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000001ffffff; valaddr_reg:x3; val_offset:4677*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4677*0 + 3*23*FLEN/8, x4, x1, x2)

inst_1560:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000003ffffff; valaddr_reg:x3; val_offset:4680*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4680*0 + 3*24*FLEN/8, x4, x1, x2)

inst_1561:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000007ffffff; valaddr_reg:x3; val_offset:4683*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4683*0 + 3*25*FLEN/8, x4, x1, x2)

inst_1562:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000000fffffff; valaddr_reg:x3; val_offset:4686*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4686*0 + 3*26*FLEN/8, x4, x1, x2)

inst_1563:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000001fffffff; valaddr_reg:x3; val_offset:4689*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4689*0 + 3*27*FLEN/8, x4, x1, x2)

inst_1564:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000003fffffff; valaddr_reg:x3; val_offset:4692*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4692*0 + 3*28*FLEN/8, x4, x1, x2)

inst_1565:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000007fffffff; valaddr_reg:x3; val_offset:4695*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4695*0 + 3*29*FLEN/8, x4, x1, x2)

inst_1566:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800000ffffffff; valaddr_reg:x3; val_offset:4698*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4698*0 + 3*30*FLEN/8, x4, x1, x2)

inst_1567:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800001ffffffff; valaddr_reg:x3; val_offset:4701*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4701*0 + 3*31*FLEN/8, x4, x1, x2)

inst_1568:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800003ffffffff; valaddr_reg:x3; val_offset:4704*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4704*0 + 3*32*FLEN/8, x4, x1, x2)

inst_1569:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800007ffffffff; valaddr_reg:x3; val_offset:4707*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4707*0 + 3*33*FLEN/8, x4, x1, x2)

inst_1570:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380000fffffffff; valaddr_reg:x3; val_offset:4710*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4710*0 + 3*34*FLEN/8, x4, x1, x2)

inst_1571:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380001fffffffff; valaddr_reg:x3; val_offset:4713*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4713*0 + 3*35*FLEN/8, x4, x1, x2)

inst_1572:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380003fffffffff; valaddr_reg:x3; val_offset:4716*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4716*0 + 3*36*FLEN/8, x4, x1, x2)

inst_1573:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380007fffffffff; valaddr_reg:x3; val_offset:4719*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4719*0 + 3*37*FLEN/8, x4, x1, x2)

inst_1574:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838000ffffffffff; valaddr_reg:x3; val_offset:4722*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4722*0 + 3*38*FLEN/8, x4, x1, x2)

inst_1575:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838001ffffffffff; valaddr_reg:x3; val_offset:4725*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4725*0 + 3*39*FLEN/8, x4, x1, x2)

inst_1576:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838003ffffffffff; valaddr_reg:x3; val_offset:4728*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4728*0 + 3*40*FLEN/8, x4, x1, x2)

inst_1577:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838007ffffffffff; valaddr_reg:x3; val_offset:4731*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4731*0 + 3*41*FLEN/8, x4, x1, x2)

inst_1578:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83800fffffffffff; valaddr_reg:x3; val_offset:4734*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4734*0 + 3*42*FLEN/8, x4, x1, x2)

inst_1579:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83801fffffffffff; valaddr_reg:x3; val_offset:4737*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4737*0 + 3*43*FLEN/8, x4, x1, x2)

inst_1580:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83803fffffffffff; valaddr_reg:x3; val_offset:4740*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4740*0 + 3*44*FLEN/8, x4, x1, x2)

inst_1581:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x83807fffffffffff; valaddr_reg:x3; val_offset:4743*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4743*0 + 3*45*FLEN/8, x4, x1, x2)

inst_1582:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8380ffffffffffff; valaddr_reg:x3; val_offset:4746*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4746*0 + 3*46*FLEN/8, x4, x1, x2)

inst_1583:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8381ffffffffffff; valaddr_reg:x3; val_offset:4749*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4749*0 + 3*47*FLEN/8, x4, x1, x2)

inst_1584:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8383ffffffffffff; valaddr_reg:x3; val_offset:4752*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4752*0 + 3*48*FLEN/8, x4, x1, x2)

inst_1585:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8387ffffffffffff; valaddr_reg:x3; val_offset:4755*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4755*0 + 3*49*FLEN/8, x4, x1, x2)

inst_1586:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x8388000000000000; valaddr_reg:x3; val_offset:4758*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4758*0 + 3*50*FLEN/8, x4, x1, x2)

inst_1587:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838c000000000000; valaddr_reg:x3; val_offset:4761*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4761*0 + 3*51*FLEN/8, x4, x1, x2)

inst_1588:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838e000000000000; valaddr_reg:x3; val_offset:4764*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4764*0 + 3*52*FLEN/8, x4, x1, x2)

inst_1589:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838f000000000000; valaddr_reg:x3; val_offset:4767*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4767*0 + 3*53*FLEN/8, x4, x1, x2)

inst_1590:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838f800000000000; valaddr_reg:x3; val_offset:4770*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4770*0 + 3*54*FLEN/8, x4, x1, x2)

inst_1591:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fc00000000000; valaddr_reg:x3; val_offset:4773*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4773*0 + 3*55*FLEN/8, x4, x1, x2)

inst_1592:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fe00000000000; valaddr_reg:x3; val_offset:4776*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4776*0 + 3*56*FLEN/8, x4, x1, x2)

inst_1593:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ff00000000000; valaddr_reg:x3; val_offset:4779*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4779*0 + 3*57*FLEN/8, x4, x1, x2)

inst_1594:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ff80000000000; valaddr_reg:x3; val_offset:4782*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4782*0 + 3*58*FLEN/8, x4, x1, x2)

inst_1595:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffc0000000000; valaddr_reg:x3; val_offset:4785*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4785*0 + 3*59*FLEN/8, x4, x1, x2)

inst_1596:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffe0000000000; valaddr_reg:x3; val_offset:4788*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4788*0 + 3*60*FLEN/8, x4, x1, x2)

inst_1597:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fff0000000000; valaddr_reg:x3; val_offset:4791*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4791*0 + 3*61*FLEN/8, x4, x1, x2)

inst_1598:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fff8000000000; valaddr_reg:x3; val_offset:4794*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4794*0 + 3*62*FLEN/8, x4, x1, x2)

inst_1599:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffc000000000; valaddr_reg:x3; val_offset:4797*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4797*0 + 3*63*FLEN/8, x4, x1, x2)

inst_1600:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffe000000000; valaddr_reg:x3; val_offset:4800*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4800*0 + 3*64*FLEN/8, x4, x1, x2)

inst_1601:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffff000000000; valaddr_reg:x3; val_offset:4803*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4803*0 + 3*65*FLEN/8, x4, x1, x2)

inst_1602:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffff800000000; valaddr_reg:x3; val_offset:4806*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4806*0 + 3*66*FLEN/8, x4, x1, x2)

inst_1603:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffc00000000; valaddr_reg:x3; val_offset:4809*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4809*0 + 3*67*FLEN/8, x4, x1, x2)

inst_1604:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffe00000000; valaddr_reg:x3; val_offset:4812*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4812*0 + 3*68*FLEN/8, x4, x1, x2)

inst_1605:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffff00000000; valaddr_reg:x3; val_offset:4815*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4815*0 + 3*69*FLEN/8, x4, x1, x2)

inst_1606:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffff80000000; valaddr_reg:x3; val_offset:4818*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4818*0 + 3*70*FLEN/8, x4, x1, x2)

inst_1607:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffc0000000; valaddr_reg:x3; val_offset:4821*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4821*0 + 3*71*FLEN/8, x4, x1, x2)

inst_1608:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffe0000000; valaddr_reg:x3; val_offset:4824*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4824*0 + 3*72*FLEN/8, x4, x1, x2)

inst_1609:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffff0000000; valaddr_reg:x3; val_offset:4827*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4827*0 + 3*73*FLEN/8, x4, x1, x2)

inst_1610:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffff8000000; valaddr_reg:x3; val_offset:4830*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4830*0 + 3*74*FLEN/8, x4, x1, x2)

inst_1611:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffc000000; valaddr_reg:x3; val_offset:4833*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4833*0 + 3*75*FLEN/8, x4, x1, x2)

inst_1612:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffe000000; valaddr_reg:x3; val_offset:4836*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4836*0 + 3*76*FLEN/8, x4, x1, x2)

inst_1613:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffff000000; valaddr_reg:x3; val_offset:4839*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4839*0 + 3*77*FLEN/8, x4, x1, x2)

inst_1614:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffff800000; valaddr_reg:x3; val_offset:4842*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4842*0 + 3*78*FLEN/8, x4, x1, x2)

inst_1615:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffc00000; valaddr_reg:x3; val_offset:4845*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4845*0 + 3*79*FLEN/8, x4, x1, x2)

inst_1616:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffe00000; valaddr_reg:x3; val_offset:4848*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4848*0 + 3*80*FLEN/8, x4, x1, x2)

inst_1617:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffff00000; valaddr_reg:x3; val_offset:4851*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4851*0 + 3*81*FLEN/8, x4, x1, x2)

inst_1618:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffff80000; valaddr_reg:x3; val_offset:4854*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4854*0 + 3*82*FLEN/8, x4, x1, x2)

inst_1619:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffc0000; valaddr_reg:x3; val_offset:4857*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4857*0 + 3*83*FLEN/8, x4, x1, x2)

inst_1620:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffe0000; valaddr_reg:x3; val_offset:4860*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4860*0 + 3*84*FLEN/8, x4, x1, x2)

inst_1621:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffff0000; valaddr_reg:x3; val_offset:4863*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4863*0 + 3*85*FLEN/8, x4, x1, x2)

inst_1622:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffff8000; valaddr_reg:x3; val_offset:4866*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4866*0 + 3*86*FLEN/8, x4, x1, x2)

inst_1623:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffc000; valaddr_reg:x3; val_offset:4869*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4869*0 + 3*87*FLEN/8, x4, x1, x2)

inst_1624:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffe000; valaddr_reg:x3; val_offset:4872*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4872*0 + 3*88*FLEN/8, x4, x1, x2)

inst_1625:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffff000; valaddr_reg:x3; val_offset:4875*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4875*0 + 3*89*FLEN/8, x4, x1, x2)

inst_1626:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffff800; valaddr_reg:x3; val_offset:4878*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4878*0 + 3*90*FLEN/8, x4, x1, x2)

inst_1627:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffc00; valaddr_reg:x3; val_offset:4881*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4881*0 + 3*91*FLEN/8, x4, x1, x2)

inst_1628:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffe00; valaddr_reg:x3; val_offset:4884*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4884*0 + 3*92*FLEN/8, x4, x1, x2)

inst_1629:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffff00; valaddr_reg:x3; val_offset:4887*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4887*0 + 3*93*FLEN/8, x4, x1, x2)

inst_1630:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffff80; valaddr_reg:x3; val_offset:4890*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4890*0 + 3*94*FLEN/8, x4, x1, x2)

inst_1631:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffffc0; valaddr_reg:x3; val_offset:4893*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4893*0 + 3*95*FLEN/8, x4, x1, x2)

inst_1632:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffffe0; valaddr_reg:x3; val_offset:4896*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4896*0 + 3*96*FLEN/8, x4, x1, x2)

inst_1633:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffff0; valaddr_reg:x3; val_offset:4899*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4899*0 + 3*97*FLEN/8, x4, x1, x2)

inst_1634:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffff8; valaddr_reg:x3; val_offset:4902*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4902*0 + 3*98*FLEN/8, x4, x1, x2)

inst_1635:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffffc; valaddr_reg:x3; val_offset:4905*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4905*0 + 3*99*FLEN/8, x4, x1, x2)

inst_1636:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838ffffffffffffe; valaddr_reg:x3; val_offset:4908*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4908*0 + 3*100*FLEN/8, x4, x1, x2)

inst_1637:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6b7004b70b43f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56b7004b70b43f; op2val:0x8000;
op3val:0x838fffffffffffff; valaddr_reg:x3; val_offset:4911*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4911*0 + 3*101*FLEN/8, x4, x1, x2)

inst_1638:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:4914*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4914*0 + 3*102*FLEN/8, x4, x1, x2)

inst_1639:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:4917*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4917*0 + 3*103*FLEN/8, x4, x1, x2)

inst_1640:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:4920*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4920*0 + 3*104*FLEN/8, x4, x1, x2)

inst_1641:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:4923*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4923*0 + 3*105*FLEN/8, x4, x1, x2)

inst_1642:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:4926*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4926*0 + 3*106*FLEN/8, x4, x1, x2)

inst_1643:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:4929*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4929*0 + 3*107*FLEN/8, x4, x1, x2)

inst_1644:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:4932*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4932*0 + 3*108*FLEN/8, x4, x1, x2)

inst_1645:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:4935*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4935*0 + 3*109*FLEN/8, x4, x1, x2)

inst_1646:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:4938*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4938*0 + 3*110*FLEN/8, x4, x1, x2)

inst_1647:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:4941*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4941*0 + 3*111*FLEN/8, x4, x1, x2)

inst_1648:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:4944*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4944*0 + 3*112*FLEN/8, x4, x1, x2)

inst_1649:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:4947*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4947*0 + 3*113*FLEN/8, x4, x1, x2)

inst_1650:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:4950*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4950*0 + 3*114*FLEN/8, x4, x1, x2)

inst_1651:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:4953*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4953*0 + 3*115*FLEN/8, x4, x1, x2)

inst_1652:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:4956*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4956*0 + 3*116*FLEN/8, x4, x1, x2)

inst_1653:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:4959*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4959*0 + 3*117*FLEN/8, x4, x1, x2)

inst_1654:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:4962*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4962*0 + 3*118*FLEN/8, x4, x1, x2)

inst_1655:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:4965*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4965*0 + 3*119*FLEN/8, x4, x1, x2)

inst_1656:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:4968*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4968*0 + 3*120*FLEN/8, x4, x1, x2)

inst_1657:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:4971*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4971*0 + 3*121*FLEN/8, x4, x1, x2)

inst_1658:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:4974*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4974*0 + 3*122*FLEN/8, x4, x1, x2)

inst_1659:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:4977*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4977*0 + 3*123*FLEN/8, x4, x1, x2)

inst_1660:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000000000; valaddr_reg:x3; val_offset:4980*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4980*0 + 3*124*FLEN/8, x4, x1, x2)

inst_1661:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000000001; valaddr_reg:x3; val_offset:4983*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4983*0 + 3*125*FLEN/8, x4, x1, x2)

inst_1662:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000000003; valaddr_reg:x3; val_offset:4986*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4986*0 + 3*126*FLEN/8, x4, x1, x2)

inst_1663:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000000007; valaddr_reg:x3; val_offset:4989*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4989*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_1664:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000000000f; valaddr_reg:x3; val_offset:4992*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4992*0 + 3*128*FLEN/8, x4, x1, x2)

inst_1665:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000000001f; valaddr_reg:x3; val_offset:4995*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4995*0 + 3*129*FLEN/8, x4, x1, x2)

inst_1666:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000000003f; valaddr_reg:x3; val_offset:4998*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 4998*0 + 3*130*FLEN/8, x4, x1, x2)

inst_1667:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000000007f; valaddr_reg:x3; val_offset:5001*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5001*0 + 3*131*FLEN/8, x4, x1, x2)

inst_1668:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000000000ff; valaddr_reg:x3; val_offset:5004*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5004*0 + 3*132*FLEN/8, x4, x1, x2)

inst_1669:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000000001ff; valaddr_reg:x3; val_offset:5007*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5007*0 + 3*133*FLEN/8, x4, x1, x2)

inst_1670:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000000003ff; valaddr_reg:x3; val_offset:5010*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5010*0 + 3*134*FLEN/8, x4, x1, x2)

inst_1671:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000000007ff; valaddr_reg:x3; val_offset:5013*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5013*0 + 3*135*FLEN/8, x4, x1, x2)

inst_1672:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000000fff; valaddr_reg:x3; val_offset:5016*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5016*0 + 3*136*FLEN/8, x4, x1, x2)

inst_1673:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000001fff; valaddr_reg:x3; val_offset:5019*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5019*0 + 3*137*FLEN/8, x4, x1, x2)

inst_1674:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000003fff; valaddr_reg:x3; val_offset:5022*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5022*0 + 3*138*FLEN/8, x4, x1, x2)

inst_1675:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000007fff; valaddr_reg:x3; val_offset:5025*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5025*0 + 3*139*FLEN/8, x4, x1, x2)

inst_1676:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000000ffff; valaddr_reg:x3; val_offset:5028*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5028*0 + 3*140*FLEN/8, x4, x1, x2)

inst_1677:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000001ffff; valaddr_reg:x3; val_offset:5031*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5031*0 + 3*141*FLEN/8, x4, x1, x2)

inst_1678:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000003ffff; valaddr_reg:x3; val_offset:5034*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5034*0 + 3*142*FLEN/8, x4, x1, x2)

inst_1679:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000007ffff; valaddr_reg:x3; val_offset:5037*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5037*0 + 3*143*FLEN/8, x4, x1, x2)

inst_1680:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000000fffff; valaddr_reg:x3; val_offset:5040*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5040*0 + 3*144*FLEN/8, x4, x1, x2)

inst_1681:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000001fffff; valaddr_reg:x3; val_offset:5043*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5043*0 + 3*145*FLEN/8, x4, x1, x2)

inst_1682:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000003fffff; valaddr_reg:x3; val_offset:5046*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5046*0 + 3*146*FLEN/8, x4, x1, x2)

inst_1683:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000007fffff; valaddr_reg:x3; val_offset:5049*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5049*0 + 3*147*FLEN/8, x4, x1, x2)

inst_1684:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000000ffffff; valaddr_reg:x3; val_offset:5052*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5052*0 + 3*148*FLEN/8, x4, x1, x2)

inst_1685:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000001ffffff; valaddr_reg:x3; val_offset:5055*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5055*0 + 3*149*FLEN/8, x4, x1, x2)

inst_1686:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000003ffffff; valaddr_reg:x3; val_offset:5058*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5058*0 + 3*150*FLEN/8, x4, x1, x2)

inst_1687:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000007ffffff; valaddr_reg:x3; val_offset:5061*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5061*0 + 3*151*FLEN/8, x4, x1, x2)

inst_1688:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000000fffffff; valaddr_reg:x3; val_offset:5064*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5064*0 + 3*152*FLEN/8, x4, x1, x2)

inst_1689:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000001fffffff; valaddr_reg:x3; val_offset:5067*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5067*0 + 3*153*FLEN/8, x4, x1, x2)

inst_1690:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000003fffffff; valaddr_reg:x3; val_offset:5070*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5070*0 + 3*154*FLEN/8, x4, x1, x2)

inst_1691:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000007fffffff; valaddr_reg:x3; val_offset:5073*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5073*0 + 3*155*FLEN/8, x4, x1, x2)

inst_1692:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800000ffffffff; valaddr_reg:x3; val_offset:5076*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5076*0 + 3*156*FLEN/8, x4, x1, x2)

inst_1693:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800001ffffffff; valaddr_reg:x3; val_offset:5079*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5079*0 + 3*157*FLEN/8, x4, x1, x2)

inst_1694:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800003ffffffff; valaddr_reg:x3; val_offset:5082*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5082*0 + 3*158*FLEN/8, x4, x1, x2)

inst_1695:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800007ffffffff; valaddr_reg:x3; val_offset:5085*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5085*0 + 3*159*FLEN/8, x4, x1, x2)

inst_1696:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380000fffffffff; valaddr_reg:x3; val_offset:5088*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5088*0 + 3*160*FLEN/8, x4, x1, x2)

inst_1697:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380001fffffffff; valaddr_reg:x3; val_offset:5091*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5091*0 + 3*161*FLEN/8, x4, x1, x2)

inst_1698:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380003fffffffff; valaddr_reg:x3; val_offset:5094*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5094*0 + 3*162*FLEN/8, x4, x1, x2)

inst_1699:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380007fffffffff; valaddr_reg:x3; val_offset:5097*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5097*0 + 3*163*FLEN/8, x4, x1, x2)

inst_1700:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38000ffffffffff; valaddr_reg:x3; val_offset:5100*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5100*0 + 3*164*FLEN/8, x4, x1, x2)

inst_1701:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38001ffffffffff; valaddr_reg:x3; val_offset:5103*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5103*0 + 3*165*FLEN/8, x4, x1, x2)

inst_1702:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38003ffffffffff; valaddr_reg:x3; val_offset:5106*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5106*0 + 3*166*FLEN/8, x4, x1, x2)

inst_1703:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38007ffffffffff; valaddr_reg:x3; val_offset:5109*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5109*0 + 3*167*FLEN/8, x4, x1, x2)

inst_1704:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3800fffffffffff; valaddr_reg:x3; val_offset:5112*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5112*0 + 3*168*FLEN/8, x4, x1, x2)

inst_1705:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3801fffffffffff; valaddr_reg:x3; val_offset:5115*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5115*0 + 3*169*FLEN/8, x4, x1, x2)

inst_1706:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3803fffffffffff; valaddr_reg:x3; val_offset:5118*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5118*0 + 3*170*FLEN/8, x4, x1, x2)

inst_1707:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x3807fffffffffff; valaddr_reg:x3; val_offset:5121*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5121*0 + 3*171*FLEN/8, x4, x1, x2)

inst_1708:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x380ffffffffffff; valaddr_reg:x3; val_offset:5124*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5124*0 + 3*172*FLEN/8, x4, x1, x2)

inst_1709:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x381ffffffffffff; valaddr_reg:x3; val_offset:5127*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5127*0 + 3*173*FLEN/8, x4, x1, x2)

inst_1710:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x383ffffffffffff; valaddr_reg:x3; val_offset:5130*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5130*0 + 3*174*FLEN/8, x4, x1, x2)

inst_1711:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x387ffffffffffff; valaddr_reg:x3; val_offset:5133*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5133*0 + 3*175*FLEN/8, x4, x1, x2)

inst_1712:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x388000000000000; valaddr_reg:x3; val_offset:5136*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5136*0 + 3*176*FLEN/8, x4, x1, x2)

inst_1713:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38c000000000000; valaddr_reg:x3; val_offset:5139*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5139*0 + 3*177*FLEN/8, x4, x1, x2)

inst_1714:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38e000000000000; valaddr_reg:x3; val_offset:5142*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5142*0 + 3*178*FLEN/8, x4, x1, x2)

inst_1715:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38f000000000000; valaddr_reg:x3; val_offset:5145*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5145*0 + 3*179*FLEN/8, x4, x1, x2)

inst_1716:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38f800000000000; valaddr_reg:x3; val_offset:5148*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5148*0 + 3*180*FLEN/8, x4, x1, x2)

inst_1717:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fc00000000000; valaddr_reg:x3; val_offset:5151*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5151*0 + 3*181*FLEN/8, x4, x1, x2)

inst_1718:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fe00000000000; valaddr_reg:x3; val_offset:5154*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5154*0 + 3*182*FLEN/8, x4, x1, x2)

inst_1719:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ff00000000000; valaddr_reg:x3; val_offset:5157*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5157*0 + 3*183*FLEN/8, x4, x1, x2)

inst_1720:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ff80000000000; valaddr_reg:x3; val_offset:5160*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5160*0 + 3*184*FLEN/8, x4, x1, x2)

inst_1721:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffc0000000000; valaddr_reg:x3; val_offset:5163*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5163*0 + 3*185*FLEN/8, x4, x1, x2)

inst_1722:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffe0000000000; valaddr_reg:x3; val_offset:5166*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5166*0 + 3*186*FLEN/8, x4, x1, x2)

inst_1723:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fff0000000000; valaddr_reg:x3; val_offset:5169*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5169*0 + 3*187*FLEN/8, x4, x1, x2)

inst_1724:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fff8000000000; valaddr_reg:x3; val_offset:5172*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5172*0 + 3*188*FLEN/8, x4, x1, x2)

inst_1725:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffc000000000; valaddr_reg:x3; val_offset:5175*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5175*0 + 3*189*FLEN/8, x4, x1, x2)

inst_1726:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffe000000000; valaddr_reg:x3; val_offset:5178*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5178*0 + 3*190*FLEN/8, x4, x1, x2)

inst_1727:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffff000000000; valaddr_reg:x3; val_offset:5181*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5181*0 + 3*191*FLEN/8, x4, x1, x2)

inst_1728:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffff800000000; valaddr_reg:x3; val_offset:5184*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5184*0 + 3*192*FLEN/8, x4, x1, x2)

inst_1729:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffc00000000; valaddr_reg:x3; val_offset:5187*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5187*0 + 3*193*FLEN/8, x4, x1, x2)

inst_1730:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffe00000000; valaddr_reg:x3; val_offset:5190*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5190*0 + 3*194*FLEN/8, x4, x1, x2)

inst_1731:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffff00000000; valaddr_reg:x3; val_offset:5193*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5193*0 + 3*195*FLEN/8, x4, x1, x2)

inst_1732:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffff80000000; valaddr_reg:x3; val_offset:5196*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5196*0 + 3*196*FLEN/8, x4, x1, x2)

inst_1733:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffc0000000; valaddr_reg:x3; val_offset:5199*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5199*0 + 3*197*FLEN/8, x4, x1, x2)

inst_1734:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffe0000000; valaddr_reg:x3; val_offset:5202*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5202*0 + 3*198*FLEN/8, x4, x1, x2)

inst_1735:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffff0000000; valaddr_reg:x3; val_offset:5205*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5205*0 + 3*199*FLEN/8, x4, x1, x2)

inst_1736:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffff8000000; valaddr_reg:x3; val_offset:5208*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5208*0 + 3*200*FLEN/8, x4, x1, x2)

inst_1737:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffc000000; valaddr_reg:x3; val_offset:5211*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5211*0 + 3*201*FLEN/8, x4, x1, x2)

inst_1738:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffe000000; valaddr_reg:x3; val_offset:5214*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5214*0 + 3*202*FLEN/8, x4, x1, x2)

inst_1739:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffff000000; valaddr_reg:x3; val_offset:5217*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5217*0 + 3*203*FLEN/8, x4, x1, x2)

inst_1740:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffff800000; valaddr_reg:x3; val_offset:5220*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5220*0 + 3*204*FLEN/8, x4, x1, x2)

inst_1741:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffc00000; valaddr_reg:x3; val_offset:5223*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5223*0 + 3*205*FLEN/8, x4, x1, x2)

inst_1742:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffe00000; valaddr_reg:x3; val_offset:5226*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5226*0 + 3*206*FLEN/8, x4, x1, x2)

inst_1743:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffff00000; valaddr_reg:x3; val_offset:5229*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5229*0 + 3*207*FLEN/8, x4, x1, x2)

inst_1744:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffff80000; valaddr_reg:x3; val_offset:5232*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5232*0 + 3*208*FLEN/8, x4, x1, x2)

inst_1745:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffc0000; valaddr_reg:x3; val_offset:5235*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5235*0 + 3*209*FLEN/8, x4, x1, x2)

inst_1746:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffe0000; valaddr_reg:x3; val_offset:5238*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5238*0 + 3*210*FLEN/8, x4, x1, x2)

inst_1747:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffff0000; valaddr_reg:x3; val_offset:5241*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5241*0 + 3*211*FLEN/8, x4, x1, x2)

inst_1748:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffff8000; valaddr_reg:x3; val_offset:5244*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5244*0 + 3*212*FLEN/8, x4, x1, x2)

inst_1749:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffc000; valaddr_reg:x3; val_offset:5247*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5247*0 + 3*213*FLEN/8, x4, x1, x2)

inst_1750:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffe000; valaddr_reg:x3; val_offset:5250*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5250*0 + 3*214*FLEN/8, x4, x1, x2)

inst_1751:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffff000; valaddr_reg:x3; val_offset:5253*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5253*0 + 3*215*FLEN/8, x4, x1, x2)

inst_1752:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffff800; valaddr_reg:x3; val_offset:5256*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5256*0 + 3*216*FLEN/8, x4, x1, x2)

inst_1753:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffc00; valaddr_reg:x3; val_offset:5259*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5259*0 + 3*217*FLEN/8, x4, x1, x2)

inst_1754:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffe00; valaddr_reg:x3; val_offset:5262*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5262*0 + 3*218*FLEN/8, x4, x1, x2)

inst_1755:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffff00; valaddr_reg:x3; val_offset:5265*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5265*0 + 3*219*FLEN/8, x4, x1, x2)

inst_1756:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffff80; valaddr_reg:x3; val_offset:5268*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5268*0 + 3*220*FLEN/8, x4, x1, x2)

inst_1757:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffffc0; valaddr_reg:x3; val_offset:5271*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5271*0 + 3*221*FLEN/8, x4, x1, x2)

inst_1758:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffffe0; valaddr_reg:x3; val_offset:5274*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5274*0 + 3*222*FLEN/8, x4, x1, x2)

inst_1759:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffff0; valaddr_reg:x3; val_offset:5277*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5277*0 + 3*223*FLEN/8, x4, x1, x2)

inst_1760:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffff8; valaddr_reg:x3; val_offset:5280*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5280*0 + 3*224*FLEN/8, x4, x1, x2)

inst_1761:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffffc; valaddr_reg:x3; val_offset:5283*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5283*0 + 3*225*FLEN/8, x4, x1, x2)

inst_1762:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38ffffffffffffe; valaddr_reg:x3; val_offset:5286*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5286*0 + 3*226*FLEN/8, x4, x1, x2)

inst_1763:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x6c2b015db977f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f56c2b015db977f; op2val:0x0;
op3val:0x38fffffffffffff; valaddr_reg:x3; val_offset:5289*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5289*0 + 3*227*FLEN/8, x4, x1, x2)

inst_1764:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000000000; valaddr_reg:x3; val_offset:5292*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5292*0 + 3*228*FLEN/8, x4, x1, x2)

inst_1765:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000000001; valaddr_reg:x3; val_offset:5295*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5295*0 + 3*229*FLEN/8, x4, x1, x2)

inst_1766:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000000003; valaddr_reg:x3; val_offset:5298*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5298*0 + 3*230*FLEN/8, x4, x1, x2)

inst_1767:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000000007; valaddr_reg:x3; val_offset:5301*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5301*0 + 3*231*FLEN/8, x4, x1, x2)

inst_1768:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000000000f; valaddr_reg:x3; val_offset:5304*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5304*0 + 3*232*FLEN/8, x4, x1, x2)

inst_1769:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000000001f; valaddr_reg:x3; val_offset:5307*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5307*0 + 3*233*FLEN/8, x4, x1, x2)

inst_1770:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000000003f; valaddr_reg:x3; val_offset:5310*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5310*0 + 3*234*FLEN/8, x4, x1, x2)

inst_1771:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000000007f; valaddr_reg:x3; val_offset:5313*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5313*0 + 3*235*FLEN/8, x4, x1, x2)

inst_1772:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000000000ff; valaddr_reg:x3; val_offset:5316*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5316*0 + 3*236*FLEN/8, x4, x1, x2)

inst_1773:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000000001ff; valaddr_reg:x3; val_offset:5319*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5319*0 + 3*237*FLEN/8, x4, x1, x2)

inst_1774:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000000003ff; valaddr_reg:x3; val_offset:5322*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5322*0 + 3*238*FLEN/8, x4, x1, x2)

inst_1775:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000000007ff; valaddr_reg:x3; val_offset:5325*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5325*0 + 3*239*FLEN/8, x4, x1, x2)

inst_1776:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000000fff; valaddr_reg:x3; val_offset:5328*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5328*0 + 3*240*FLEN/8, x4, x1, x2)

inst_1777:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000001fff; valaddr_reg:x3; val_offset:5331*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5331*0 + 3*241*FLEN/8, x4, x1, x2)

inst_1778:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000003fff; valaddr_reg:x3; val_offset:5334*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5334*0 + 3*242*FLEN/8, x4, x1, x2)

inst_1779:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000007fff; valaddr_reg:x3; val_offset:5337*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5337*0 + 3*243*FLEN/8, x4, x1, x2)

inst_1780:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000000ffff; valaddr_reg:x3; val_offset:5340*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5340*0 + 3*244*FLEN/8, x4, x1, x2)

inst_1781:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000001ffff; valaddr_reg:x3; val_offset:5343*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5343*0 + 3*245*FLEN/8, x4, x1, x2)

inst_1782:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000003ffff; valaddr_reg:x3; val_offset:5346*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5346*0 + 3*246*FLEN/8, x4, x1, x2)

inst_1783:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000007ffff; valaddr_reg:x3; val_offset:5349*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5349*0 + 3*247*FLEN/8, x4, x1, x2)

inst_1784:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000000fffff; valaddr_reg:x3; val_offset:5352*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5352*0 + 3*248*FLEN/8, x4, x1, x2)

inst_1785:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000001fffff; valaddr_reg:x3; val_offset:5355*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5355*0 + 3*249*FLEN/8, x4, x1, x2)

inst_1786:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000003fffff; valaddr_reg:x3; val_offset:5358*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5358*0 + 3*250*FLEN/8, x4, x1, x2)

inst_1787:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000007fffff; valaddr_reg:x3; val_offset:5361*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5361*0 + 3*251*FLEN/8, x4, x1, x2)

inst_1788:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000000ffffff; valaddr_reg:x3; val_offset:5364*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5364*0 + 3*252*FLEN/8, x4, x1, x2)

inst_1789:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000001ffffff; valaddr_reg:x3; val_offset:5367*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5367*0 + 3*253*FLEN/8, x4, x1, x2)

inst_1790:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000003ffffff; valaddr_reg:x3; val_offset:5370*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5370*0 + 3*254*FLEN/8, x4, x1, x2)

inst_1791:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000007ffffff; valaddr_reg:x3; val_offset:5373*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5373*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_1792:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000000fffffff; valaddr_reg:x3; val_offset:5376*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5376*0 + 3*256*FLEN/8, x4, x1, x2)

inst_1793:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000001fffffff; valaddr_reg:x3; val_offset:5379*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5379*0 + 3*257*FLEN/8, x4, x1, x2)

inst_1794:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000003fffffff; valaddr_reg:x3; val_offset:5382*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5382*0 + 3*258*FLEN/8, x4, x1, x2)

inst_1795:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000007fffffff; valaddr_reg:x3; val_offset:5385*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5385*0 + 3*259*FLEN/8, x4, x1, x2)

inst_1796:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100000ffffffff; valaddr_reg:x3; val_offset:5388*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5388*0 + 3*260*FLEN/8, x4, x1, x2)

inst_1797:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100001ffffffff; valaddr_reg:x3; val_offset:5391*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5391*0 + 3*261*FLEN/8, x4, x1, x2)

inst_1798:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100003ffffffff; valaddr_reg:x3; val_offset:5394*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5394*0 + 3*262*FLEN/8, x4, x1, x2)

inst_1799:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100007ffffffff; valaddr_reg:x3; val_offset:5397*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5397*0 + 3*263*FLEN/8, x4, x1, x2)

inst_1800:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10000fffffffff; valaddr_reg:x3; val_offset:5400*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5400*0 + 3*264*FLEN/8, x4, x1, x2)

inst_1801:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10001fffffffff; valaddr_reg:x3; val_offset:5403*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5403*0 + 3*265*FLEN/8, x4, x1, x2)

inst_1802:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10003fffffffff; valaddr_reg:x3; val_offset:5406*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5406*0 + 3*266*FLEN/8, x4, x1, x2)

inst_1803:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10007fffffffff; valaddr_reg:x3; val_offset:5409*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5409*0 + 3*267*FLEN/8, x4, x1, x2)

inst_1804:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1000ffffffffff; valaddr_reg:x3; val_offset:5412*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5412*0 + 3*268*FLEN/8, x4, x1, x2)

inst_1805:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1001ffffffffff; valaddr_reg:x3; val_offset:5415*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5415*0 + 3*269*FLEN/8, x4, x1, x2)

inst_1806:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1003ffffffffff; valaddr_reg:x3; val_offset:5418*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5418*0 + 3*270*FLEN/8, x4, x1, x2)

inst_1807:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1007ffffffffff; valaddr_reg:x3; val_offset:5421*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5421*0 + 3*271*FLEN/8, x4, x1, x2)

inst_1808:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe100fffffffffff; valaddr_reg:x3; val_offset:5424*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5424*0 + 3*272*FLEN/8, x4, x1, x2)

inst_1809:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe101fffffffffff; valaddr_reg:x3; val_offset:5427*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5427*0 + 3*273*FLEN/8, x4, x1, x2)

inst_1810:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe103fffffffffff; valaddr_reg:x3; val_offset:5430*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5430*0 + 3*274*FLEN/8, x4, x1, x2)

inst_1811:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe107fffffffffff; valaddr_reg:x3; val_offset:5433*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5433*0 + 3*275*FLEN/8, x4, x1, x2)

inst_1812:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe10ffffffffffff; valaddr_reg:x3; val_offset:5436*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5436*0 + 3*276*FLEN/8, x4, x1, x2)

inst_1813:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe11ffffffffffff; valaddr_reg:x3; val_offset:5439*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5439*0 + 3*277*FLEN/8, x4, x1, x2)

inst_1814:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe13ffffffffffff; valaddr_reg:x3; val_offset:5442*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5442*0 + 3*278*FLEN/8, x4, x1, x2)

inst_1815:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe17ffffffffffff; valaddr_reg:x3; val_offset:5445*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5445*0 + 3*279*FLEN/8, x4, x1, x2)

inst_1816:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe18000000000000; valaddr_reg:x3; val_offset:5448*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5448*0 + 3*280*FLEN/8, x4, x1, x2)

inst_1817:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1c000000000000; valaddr_reg:x3; val_offset:5451*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5451*0 + 3*281*FLEN/8, x4, x1, x2)

inst_1818:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1e000000000000; valaddr_reg:x3; val_offset:5454*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5454*0 + 3*282*FLEN/8, x4, x1, x2)

inst_1819:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1f000000000000; valaddr_reg:x3; val_offset:5457*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5457*0 + 3*283*FLEN/8, x4, x1, x2)

inst_1820:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1f800000000000; valaddr_reg:x3; val_offset:5460*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5460*0 + 3*284*FLEN/8, x4, x1, x2)

inst_1821:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fc00000000000; valaddr_reg:x3; val_offset:5463*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5463*0 + 3*285*FLEN/8, x4, x1, x2)

inst_1822:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fe00000000000; valaddr_reg:x3; val_offset:5466*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5466*0 + 3*286*FLEN/8, x4, x1, x2)

inst_1823:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ff00000000000; valaddr_reg:x3; val_offset:5469*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5469*0 + 3*287*FLEN/8, x4, x1, x2)

inst_1824:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ff80000000000; valaddr_reg:x3; val_offset:5472*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5472*0 + 3*288*FLEN/8, x4, x1, x2)

inst_1825:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffc0000000000; valaddr_reg:x3; val_offset:5475*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5475*0 + 3*289*FLEN/8, x4, x1, x2)

inst_1826:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffe0000000000; valaddr_reg:x3; val_offset:5478*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5478*0 + 3*290*FLEN/8, x4, x1, x2)

inst_1827:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fff0000000000; valaddr_reg:x3; val_offset:5481*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5481*0 + 3*291*FLEN/8, x4, x1, x2)

inst_1828:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fff8000000000; valaddr_reg:x3; val_offset:5484*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5484*0 + 3*292*FLEN/8, x4, x1, x2)

inst_1829:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffc000000000; valaddr_reg:x3; val_offset:5487*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5487*0 + 3*293*FLEN/8, x4, x1, x2)

inst_1830:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffe000000000; valaddr_reg:x3; val_offset:5490*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5490*0 + 3*294*FLEN/8, x4, x1, x2)

inst_1831:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffff000000000; valaddr_reg:x3; val_offset:5493*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5493*0 + 3*295*FLEN/8, x4, x1, x2)

inst_1832:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffff800000000; valaddr_reg:x3; val_offset:5496*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5496*0 + 3*296*FLEN/8, x4, x1, x2)

inst_1833:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffc00000000; valaddr_reg:x3; val_offset:5499*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5499*0 + 3*297*FLEN/8, x4, x1, x2)

inst_1834:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffe00000000; valaddr_reg:x3; val_offset:5502*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5502*0 + 3*298*FLEN/8, x4, x1, x2)

inst_1835:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffff00000000; valaddr_reg:x3; val_offset:5505*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5505*0 + 3*299*FLEN/8, x4, x1, x2)

inst_1836:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffff80000000; valaddr_reg:x3; val_offset:5508*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5508*0 + 3*300*FLEN/8, x4, x1, x2)

inst_1837:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffc0000000; valaddr_reg:x3; val_offset:5511*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5511*0 + 3*301*FLEN/8, x4, x1, x2)

inst_1838:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffe0000000; valaddr_reg:x3; val_offset:5514*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5514*0 + 3*302*FLEN/8, x4, x1, x2)

inst_1839:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffff0000000; valaddr_reg:x3; val_offset:5517*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5517*0 + 3*303*FLEN/8, x4, x1, x2)

inst_1840:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffff8000000; valaddr_reg:x3; val_offset:5520*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5520*0 + 3*304*FLEN/8, x4, x1, x2)

inst_1841:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffc000000; valaddr_reg:x3; val_offset:5523*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5523*0 + 3*305*FLEN/8, x4, x1, x2)

inst_1842:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffe000000; valaddr_reg:x3; val_offset:5526*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5526*0 + 3*306*FLEN/8, x4, x1, x2)

inst_1843:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffff000000; valaddr_reg:x3; val_offset:5529*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5529*0 + 3*307*FLEN/8, x4, x1, x2)

inst_1844:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffff800000; valaddr_reg:x3; val_offset:5532*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5532*0 + 3*308*FLEN/8, x4, x1, x2)

inst_1845:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffc00000; valaddr_reg:x3; val_offset:5535*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5535*0 + 3*309*FLEN/8, x4, x1, x2)

inst_1846:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffe00000; valaddr_reg:x3; val_offset:5538*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5538*0 + 3*310*FLEN/8, x4, x1, x2)

inst_1847:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffff00000; valaddr_reg:x3; val_offset:5541*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5541*0 + 3*311*FLEN/8, x4, x1, x2)

inst_1848:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffff80000; valaddr_reg:x3; val_offset:5544*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5544*0 + 3*312*FLEN/8, x4, x1, x2)

inst_1849:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffc0000; valaddr_reg:x3; val_offset:5547*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5547*0 + 3*313*FLEN/8, x4, x1, x2)

inst_1850:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffe0000; valaddr_reg:x3; val_offset:5550*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5550*0 + 3*314*FLEN/8, x4, x1, x2)

inst_1851:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffff0000; valaddr_reg:x3; val_offset:5553*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5553*0 + 3*315*FLEN/8, x4, x1, x2)

inst_1852:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffff8000; valaddr_reg:x3; val_offset:5556*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5556*0 + 3*316*FLEN/8, x4, x1, x2)

inst_1853:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffc000; valaddr_reg:x3; val_offset:5559*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5559*0 + 3*317*FLEN/8, x4, x1, x2)

inst_1854:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffe000; valaddr_reg:x3; val_offset:5562*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5562*0 + 3*318*FLEN/8, x4, x1, x2)

inst_1855:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffff000; valaddr_reg:x3; val_offset:5565*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5565*0 + 3*319*FLEN/8, x4, x1, x2)

inst_1856:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffff800; valaddr_reg:x3; val_offset:5568*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5568*0 + 3*320*FLEN/8, x4, x1, x2)

inst_1857:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffc00; valaddr_reg:x3; val_offset:5571*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5571*0 + 3*321*FLEN/8, x4, x1, x2)

inst_1858:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffe00; valaddr_reg:x3; val_offset:5574*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5574*0 + 3*322*FLEN/8, x4, x1, x2)

inst_1859:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffff00; valaddr_reg:x3; val_offset:5577*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5577*0 + 3*323*FLEN/8, x4, x1, x2)

inst_1860:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffff80; valaddr_reg:x3; val_offset:5580*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5580*0 + 3*324*FLEN/8, x4, x1, x2)

inst_1861:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffffc0; valaddr_reg:x3; val_offset:5583*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5583*0 + 3*325*FLEN/8, x4, x1, x2)

inst_1862:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffffe0; valaddr_reg:x3; val_offset:5586*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5586*0 + 3*326*FLEN/8, x4, x1, x2)

inst_1863:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffff0; valaddr_reg:x3; val_offset:5589*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5589*0 + 3*327*FLEN/8, x4, x1, x2)

inst_1864:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffff8; valaddr_reg:x3; val_offset:5592*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5592*0 + 3*328*FLEN/8, x4, x1, x2)

inst_1865:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffffc; valaddr_reg:x3; val_offset:5595*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5595*0 + 3*329*FLEN/8, x4, x1, x2)

inst_1866:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1ffffffffffffe; valaddr_reg:x3; val_offset:5598*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5598*0 + 3*330*FLEN/8, x4, x1, x2)

inst_1867:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3e1 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbe1fffffffffffff; valaddr_reg:x3; val_offset:5601*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5601*0 + 3*331*FLEN/8, x4, x1, x2)

inst_1868:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:5604*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5604*0 + 3*332*FLEN/8, x4, x1, x2)

inst_1869:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:5607*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5607*0 + 3*333*FLEN/8, x4, x1, x2)

inst_1870:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:5610*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5610*0 + 3*334*FLEN/8, x4, x1, x2)

inst_1871:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:5613*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5613*0 + 3*335*FLEN/8, x4, x1, x2)

inst_1872:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:5616*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5616*0 + 3*336*FLEN/8, x4, x1, x2)

inst_1873:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:5619*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5619*0 + 3*337*FLEN/8, x4, x1, x2)

inst_1874:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:5622*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5622*0 + 3*338*FLEN/8, x4, x1, x2)

inst_1875:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:5625*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5625*0 + 3*339*FLEN/8, x4, x1, x2)

inst_1876:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:5628*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5628*0 + 3*340*FLEN/8, x4, x1, x2)

inst_1877:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:5631*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5631*0 + 3*341*FLEN/8, x4, x1, x2)

inst_1878:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:5634*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5634*0 + 3*342*FLEN/8, x4, x1, x2)

inst_1879:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:5637*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5637*0 + 3*343*FLEN/8, x4, x1, x2)

inst_1880:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:5640*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5640*0 + 3*344*FLEN/8, x4, x1, x2)

inst_1881:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:5643*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5643*0 + 3*345*FLEN/8, x4, x1, x2)

inst_1882:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:5646*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5646*0 + 3*346*FLEN/8, x4, x1, x2)

inst_1883:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:5649*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5649*0 + 3*347*FLEN/8, x4, x1, x2)

inst_1884:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:5652*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5652*0 + 3*348*FLEN/8, x4, x1, x2)

inst_1885:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:5655*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5655*0 + 3*349*FLEN/8, x4, x1, x2)

inst_1886:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:5658*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5658*0 + 3*350*FLEN/8, x4, x1, x2)

inst_1887:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:5661*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5661*0 + 3*351*FLEN/8, x4, x1, x2)

inst_1888:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:5664*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5664*0 + 3*352*FLEN/8, x4, x1, x2)

inst_1889:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ae042250e45f and fs2 == 1 and fe2 == 0x201 and fm2 == 0x59f31851407b8 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ae042250e45f; op2val:0xa0159f31851407b8;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:5667*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5667*0 + 3*353*FLEN/8, x4, x1, x2)

inst_1890:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:5670*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5670*0 + 3*354*FLEN/8, x4, x1, x2)

inst_1891:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:5673*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5673*0 + 3*355*FLEN/8, x4, x1, x2)

inst_1892:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:5676*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5676*0 + 3*356*FLEN/8, x4, x1, x2)

inst_1893:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:5679*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5679*0 + 3*357*FLEN/8, x4, x1, x2)

inst_1894:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:5682*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5682*0 + 3*358*FLEN/8, x4, x1, x2)

inst_1895:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:5685*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5685*0 + 3*359*FLEN/8, x4, x1, x2)

inst_1896:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:5688*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5688*0 + 3*360*FLEN/8, x4, x1, x2)

inst_1897:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:5691*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5691*0 + 3*361*FLEN/8, x4, x1, x2)

inst_1898:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:5694*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5694*0 + 3*362*FLEN/8, x4, x1, x2)

inst_1899:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:5697*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5697*0 + 3*363*FLEN/8, x4, x1, x2)

inst_1900:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:5700*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5700*0 + 3*364*FLEN/8, x4, x1, x2)

inst_1901:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:5703*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5703*0 + 3*365*FLEN/8, x4, x1, x2)

inst_1902:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:5706*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5706*0 + 3*366*FLEN/8, x4, x1, x2)

inst_1903:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:5709*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5709*0 + 3*367*FLEN/8, x4, x1, x2)

inst_1904:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:5712*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5712*0 + 3*368*FLEN/8, x4, x1, x2)

inst_1905:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:5715*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5715*0 + 3*369*FLEN/8, x4, x1, x2)

inst_1906:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:5718*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5718*0 + 3*370*FLEN/8, x4, x1, x2)

inst_1907:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:5721*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5721*0 + 3*371*FLEN/8, x4, x1, x2)

inst_1908:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:5724*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5724*0 + 3*372*FLEN/8, x4, x1, x2)

inst_1909:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:5727*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5727*0 + 3*373*FLEN/8, x4, x1, x2)

inst_1910:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:5730*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5730*0 + 3*374*FLEN/8, x4, x1, x2)

inst_1911:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:5733*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5733*0 + 3*375*FLEN/8, x4, x1, x2)

inst_1912:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000000000; valaddr_reg:x3; val_offset:5736*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5736*0 + 3*376*FLEN/8, x4, x1, x2)

inst_1913:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000000001; valaddr_reg:x3; val_offset:5739*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5739*0 + 3*377*FLEN/8, x4, x1, x2)

inst_1914:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000000003; valaddr_reg:x3; val_offset:5742*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5742*0 + 3*378*FLEN/8, x4, x1, x2)

inst_1915:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000000007; valaddr_reg:x3; val_offset:5745*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5745*0 + 3*379*FLEN/8, x4, x1, x2)

inst_1916:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000000000f; valaddr_reg:x3; val_offset:5748*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5748*0 + 3*380*FLEN/8, x4, x1, x2)

inst_1917:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000000001f; valaddr_reg:x3; val_offset:5751*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5751*0 + 3*381*FLEN/8, x4, x1, x2)

inst_1918:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000000003f; valaddr_reg:x3; val_offset:5754*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5754*0 + 3*382*FLEN/8, x4, x1, x2)

inst_1919:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000000007f; valaddr_reg:x3; val_offset:5757*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5757*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_1920:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000000000ff; valaddr_reg:x3; val_offset:5760*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5760*0 + 3*384*FLEN/8, x4, x1, x2)

inst_1921:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000000001ff; valaddr_reg:x3; val_offset:5763*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5763*0 + 3*385*FLEN/8, x4, x1, x2)

inst_1922:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000000003ff; valaddr_reg:x3; val_offset:5766*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5766*0 + 3*386*FLEN/8, x4, x1, x2)

inst_1923:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000000007ff; valaddr_reg:x3; val_offset:5769*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5769*0 + 3*387*FLEN/8, x4, x1, x2)

inst_1924:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000000fff; valaddr_reg:x3; val_offset:5772*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5772*0 + 3*388*FLEN/8, x4, x1, x2)

inst_1925:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000001fff; valaddr_reg:x3; val_offset:5775*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5775*0 + 3*389*FLEN/8, x4, x1, x2)

inst_1926:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000003fff; valaddr_reg:x3; val_offset:5778*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5778*0 + 3*390*FLEN/8, x4, x1, x2)

inst_1927:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000007fff; valaddr_reg:x3; val_offset:5781*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5781*0 + 3*391*FLEN/8, x4, x1, x2)

inst_1928:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000000ffff; valaddr_reg:x3; val_offset:5784*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5784*0 + 3*392*FLEN/8, x4, x1, x2)

inst_1929:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000001ffff; valaddr_reg:x3; val_offset:5787*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5787*0 + 3*393*FLEN/8, x4, x1, x2)

inst_1930:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000003ffff; valaddr_reg:x3; val_offset:5790*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5790*0 + 3*394*FLEN/8, x4, x1, x2)

inst_1931:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000007ffff; valaddr_reg:x3; val_offset:5793*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5793*0 + 3*395*FLEN/8, x4, x1, x2)

inst_1932:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000000fffff; valaddr_reg:x3; val_offset:5796*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5796*0 + 3*396*FLEN/8, x4, x1, x2)

inst_1933:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000001fffff; valaddr_reg:x3; val_offset:5799*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5799*0 + 3*397*FLEN/8, x4, x1, x2)

inst_1934:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000003fffff; valaddr_reg:x3; val_offset:5802*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5802*0 + 3*398*FLEN/8, x4, x1, x2)

inst_1935:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000007fffff; valaddr_reg:x3; val_offset:5805*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5805*0 + 3*399*FLEN/8, x4, x1, x2)

inst_1936:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000000ffffff; valaddr_reg:x3; val_offset:5808*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5808*0 + 3*400*FLEN/8, x4, x1, x2)

inst_1937:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000001ffffff; valaddr_reg:x3; val_offset:5811*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5811*0 + 3*401*FLEN/8, x4, x1, x2)

inst_1938:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000003ffffff; valaddr_reg:x3; val_offset:5814*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5814*0 + 3*402*FLEN/8, x4, x1, x2)

inst_1939:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000007ffffff; valaddr_reg:x3; val_offset:5817*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5817*0 + 3*403*FLEN/8, x4, x1, x2)

inst_1940:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000000fffffff; valaddr_reg:x3; val_offset:5820*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5820*0 + 3*404*FLEN/8, x4, x1, x2)

inst_1941:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000001fffffff; valaddr_reg:x3; val_offset:5823*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5823*0 + 3*405*FLEN/8, x4, x1, x2)

inst_1942:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000003fffffff; valaddr_reg:x3; val_offset:5826*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5826*0 + 3*406*FLEN/8, x4, x1, x2)

inst_1943:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000007fffffff; valaddr_reg:x3; val_offset:5829*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5829*0 + 3*407*FLEN/8, x4, x1, x2)

inst_1944:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600000ffffffff; valaddr_reg:x3; val_offset:5832*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5832*0 + 3*408*FLEN/8, x4, x1, x2)

inst_1945:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600001ffffffff; valaddr_reg:x3; val_offset:5835*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5835*0 + 3*409*FLEN/8, x4, x1, x2)

inst_1946:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600003ffffffff; valaddr_reg:x3; val_offset:5838*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5838*0 + 3*410*FLEN/8, x4, x1, x2)

inst_1947:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600007ffffffff; valaddr_reg:x3; val_offset:5841*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5841*0 + 3*411*FLEN/8, x4, x1, x2)

inst_1948:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260000fffffffff; valaddr_reg:x3; val_offset:5844*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5844*0 + 3*412*FLEN/8, x4, x1, x2)

inst_1949:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260001fffffffff; valaddr_reg:x3; val_offset:5847*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5847*0 + 3*413*FLEN/8, x4, x1, x2)

inst_1950:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260003fffffffff; valaddr_reg:x3; val_offset:5850*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5850*0 + 3*414*FLEN/8, x4, x1, x2)

inst_1951:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260007fffffffff; valaddr_reg:x3; val_offset:5853*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5853*0 + 3*415*FLEN/8, x4, x1, x2)

inst_1952:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26000ffffffffff; valaddr_reg:x3; val_offset:5856*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5856*0 + 3*416*FLEN/8, x4, x1, x2)

inst_1953:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26001ffffffffff; valaddr_reg:x3; val_offset:5859*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5859*0 + 3*417*FLEN/8, x4, x1, x2)

inst_1954:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26003ffffffffff; valaddr_reg:x3; val_offset:5862*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5862*0 + 3*418*FLEN/8, x4, x1, x2)

inst_1955:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26007ffffffffff; valaddr_reg:x3; val_offset:5865*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5865*0 + 3*419*FLEN/8, x4, x1, x2)

inst_1956:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2600fffffffffff; valaddr_reg:x3; val_offset:5868*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5868*0 + 3*420*FLEN/8, x4, x1, x2)

inst_1957:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2601fffffffffff; valaddr_reg:x3; val_offset:5871*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5871*0 + 3*421*FLEN/8, x4, x1, x2)

inst_1958:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2603fffffffffff; valaddr_reg:x3; val_offset:5874*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5874*0 + 3*422*FLEN/8, x4, x1, x2)

inst_1959:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x2607fffffffffff; valaddr_reg:x3; val_offset:5877*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5877*0 + 3*423*FLEN/8, x4, x1, x2)

inst_1960:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x260ffffffffffff; valaddr_reg:x3; val_offset:5880*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5880*0 + 3*424*FLEN/8, x4, x1, x2)

inst_1961:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x261ffffffffffff; valaddr_reg:x3; val_offset:5883*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5883*0 + 3*425*FLEN/8, x4, x1, x2)

inst_1962:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x263ffffffffffff; valaddr_reg:x3; val_offset:5886*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5886*0 + 3*426*FLEN/8, x4, x1, x2)

inst_1963:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x267ffffffffffff; valaddr_reg:x3; val_offset:5889*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5889*0 + 3*427*FLEN/8, x4, x1, x2)

inst_1964:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x268000000000000; valaddr_reg:x3; val_offset:5892*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5892*0 + 3*428*FLEN/8, x4, x1, x2)

inst_1965:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26c000000000000; valaddr_reg:x3; val_offset:5895*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5895*0 + 3*429*FLEN/8, x4, x1, x2)

inst_1966:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26e000000000000; valaddr_reg:x3; val_offset:5898*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5898*0 + 3*430*FLEN/8, x4, x1, x2)

inst_1967:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26f000000000000; valaddr_reg:x3; val_offset:5901*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5901*0 + 3*431*FLEN/8, x4, x1, x2)

inst_1968:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26f800000000000; valaddr_reg:x3; val_offset:5904*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5904*0 + 3*432*FLEN/8, x4, x1, x2)

inst_1969:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fc00000000000; valaddr_reg:x3; val_offset:5907*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5907*0 + 3*433*FLEN/8, x4, x1, x2)

inst_1970:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fe00000000000; valaddr_reg:x3; val_offset:5910*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5910*0 + 3*434*FLEN/8, x4, x1, x2)

inst_1971:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ff00000000000; valaddr_reg:x3; val_offset:5913*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5913*0 + 3*435*FLEN/8, x4, x1, x2)

inst_1972:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ff80000000000; valaddr_reg:x3; val_offset:5916*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5916*0 + 3*436*FLEN/8, x4, x1, x2)

inst_1973:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffc0000000000; valaddr_reg:x3; val_offset:5919*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5919*0 + 3*437*FLEN/8, x4, x1, x2)

inst_1974:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffe0000000000; valaddr_reg:x3; val_offset:5922*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5922*0 + 3*438*FLEN/8, x4, x1, x2)

inst_1975:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fff0000000000; valaddr_reg:x3; val_offset:5925*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5925*0 + 3*439*FLEN/8, x4, x1, x2)

inst_1976:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fff8000000000; valaddr_reg:x3; val_offset:5928*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5928*0 + 3*440*FLEN/8, x4, x1, x2)

inst_1977:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffc000000000; valaddr_reg:x3; val_offset:5931*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5931*0 + 3*441*FLEN/8, x4, x1, x2)

inst_1978:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffe000000000; valaddr_reg:x3; val_offset:5934*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5934*0 + 3*442*FLEN/8, x4, x1, x2)

inst_1979:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffff000000000; valaddr_reg:x3; val_offset:5937*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5937*0 + 3*443*FLEN/8, x4, x1, x2)

inst_1980:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffff800000000; valaddr_reg:x3; val_offset:5940*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5940*0 + 3*444*FLEN/8, x4, x1, x2)

inst_1981:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffc00000000; valaddr_reg:x3; val_offset:5943*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5943*0 + 3*445*FLEN/8, x4, x1, x2)

inst_1982:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffe00000000; valaddr_reg:x3; val_offset:5946*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5946*0 + 3*446*FLEN/8, x4, x1, x2)

inst_1983:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffff00000000; valaddr_reg:x3; val_offset:5949*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5949*0 + 3*447*FLEN/8, x4, x1, x2)

inst_1984:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffff80000000; valaddr_reg:x3; val_offset:5952*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5952*0 + 3*448*FLEN/8, x4, x1, x2)

inst_1985:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffc0000000; valaddr_reg:x3; val_offset:5955*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5955*0 + 3*449*FLEN/8, x4, x1, x2)

inst_1986:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffe0000000; valaddr_reg:x3; val_offset:5958*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5958*0 + 3*450*FLEN/8, x4, x1, x2)

inst_1987:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffff0000000; valaddr_reg:x3; val_offset:5961*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5961*0 + 3*451*FLEN/8, x4, x1, x2)

inst_1988:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffff8000000; valaddr_reg:x3; val_offset:5964*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5964*0 + 3*452*FLEN/8, x4, x1, x2)

inst_1989:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffc000000; valaddr_reg:x3; val_offset:5967*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5967*0 + 3*453*FLEN/8, x4, x1, x2)

inst_1990:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffe000000; valaddr_reg:x3; val_offset:5970*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5970*0 + 3*454*FLEN/8, x4, x1, x2)

inst_1991:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffff000000; valaddr_reg:x3; val_offset:5973*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5973*0 + 3*455*FLEN/8, x4, x1, x2)

inst_1992:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffff800000; valaddr_reg:x3; val_offset:5976*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5976*0 + 3*456*FLEN/8, x4, x1, x2)

inst_1993:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffc00000; valaddr_reg:x3; val_offset:5979*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5979*0 + 3*457*FLEN/8, x4, x1, x2)

inst_1994:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffe00000; valaddr_reg:x3; val_offset:5982*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5982*0 + 3*458*FLEN/8, x4, x1, x2)

inst_1995:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffff00000; valaddr_reg:x3; val_offset:5985*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5985*0 + 3*459*FLEN/8, x4, x1, x2)

inst_1996:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffff80000; valaddr_reg:x3; val_offset:5988*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5988*0 + 3*460*FLEN/8, x4, x1, x2)

inst_1997:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffc0000; valaddr_reg:x3; val_offset:5991*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5991*0 + 3*461*FLEN/8, x4, x1, x2)

inst_1998:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffe0000; valaddr_reg:x3; val_offset:5994*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5994*0 + 3*462*FLEN/8, x4, x1, x2)

inst_1999:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffff0000; valaddr_reg:x3; val_offset:5997*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 5997*0 + 3*463*FLEN/8, x4, x1, x2)

inst_2000:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffff8000; valaddr_reg:x3; val_offset:6000*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6000*0 + 3*464*FLEN/8, x4, x1, x2)

inst_2001:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffc000; valaddr_reg:x3; val_offset:6003*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6003*0 + 3*465*FLEN/8, x4, x1, x2)

inst_2002:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffe000; valaddr_reg:x3; val_offset:6006*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6006*0 + 3*466*FLEN/8, x4, x1, x2)

inst_2003:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffff000; valaddr_reg:x3; val_offset:6009*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6009*0 + 3*467*FLEN/8, x4, x1, x2)

inst_2004:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffff800; valaddr_reg:x3; val_offset:6012*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6012*0 + 3*468*FLEN/8, x4, x1, x2)

inst_2005:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffc00; valaddr_reg:x3; val_offset:6015*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6015*0 + 3*469*FLEN/8, x4, x1, x2)

inst_2006:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffe00; valaddr_reg:x3; val_offset:6018*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6018*0 + 3*470*FLEN/8, x4, x1, x2)

inst_2007:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffff00; valaddr_reg:x3; val_offset:6021*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6021*0 + 3*471*FLEN/8, x4, x1, x2)

inst_2008:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffff80; valaddr_reg:x3; val_offset:6024*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6024*0 + 3*472*FLEN/8, x4, x1, x2)

inst_2009:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffffc0; valaddr_reg:x3; val_offset:6027*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6027*0 + 3*473*FLEN/8, x4, x1, x2)

inst_2010:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffffe0; valaddr_reg:x3; val_offset:6030*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6030*0 + 3*474*FLEN/8, x4, x1, x2)

inst_2011:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffff0; valaddr_reg:x3; val_offset:6033*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6033*0 + 3*475*FLEN/8, x4, x1, x2)

inst_2012:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffff8; valaddr_reg:x3; val_offset:6036*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6036*0 + 3*476*FLEN/8, x4, x1, x2)

inst_2013:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffffc; valaddr_reg:x3; val_offset:6039*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6039*0 + 3*477*FLEN/8, x4, x1, x2)

inst_2014:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26ffffffffffffe; valaddr_reg:x3; val_offset:6042*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6042*0 + 3*478*FLEN/8, x4, x1, x2)

inst_2015:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x7ee20bb71a1ff and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x026 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f57ee20bb71a1ff; op2val:0x0;
op3val:0x26fffffffffffff; valaddr_reg:x3; val_offset:6045*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6045*0 + 3*479*FLEN/8, x4, x1, x2)

inst_2016:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000000000; valaddr_reg:x3; val_offset:6048*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6048*0 + 3*480*FLEN/8, x4, x1, x2)

inst_2017:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000000001; valaddr_reg:x3; val_offset:6051*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6051*0 + 3*481*FLEN/8, x4, x1, x2)

inst_2018:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000000003; valaddr_reg:x3; val_offset:6054*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6054*0 + 3*482*FLEN/8, x4, x1, x2)

inst_2019:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000000007; valaddr_reg:x3; val_offset:6057*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6057*0 + 3*483*FLEN/8, x4, x1, x2)

inst_2020:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000000000f; valaddr_reg:x3; val_offset:6060*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6060*0 + 3*484*FLEN/8, x4, x1, x2)

inst_2021:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000000001f; valaddr_reg:x3; val_offset:6063*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6063*0 + 3*485*FLEN/8, x4, x1, x2)

inst_2022:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000000003f; valaddr_reg:x3; val_offset:6066*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6066*0 + 3*486*FLEN/8, x4, x1, x2)

inst_2023:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000000007f; valaddr_reg:x3; val_offset:6069*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6069*0 + 3*487*FLEN/8, x4, x1, x2)

inst_2024:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000000000ff; valaddr_reg:x3; val_offset:6072*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6072*0 + 3*488*FLEN/8, x4, x1, x2)

inst_2025:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000000001ff; valaddr_reg:x3; val_offset:6075*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6075*0 + 3*489*FLEN/8, x4, x1, x2)

inst_2026:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000000003ff; valaddr_reg:x3; val_offset:6078*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6078*0 + 3*490*FLEN/8, x4, x1, x2)

inst_2027:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000000007ff; valaddr_reg:x3; val_offset:6081*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6081*0 + 3*491*FLEN/8, x4, x1, x2)

inst_2028:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000000fff; valaddr_reg:x3; val_offset:6084*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6084*0 + 3*492*FLEN/8, x4, x1, x2)

inst_2029:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000001fff; valaddr_reg:x3; val_offset:6087*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6087*0 + 3*493*FLEN/8, x4, x1, x2)

inst_2030:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000003fff; valaddr_reg:x3; val_offset:6090*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6090*0 + 3*494*FLEN/8, x4, x1, x2)

inst_2031:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000007fff; valaddr_reg:x3; val_offset:6093*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6093*0 + 3*495*FLEN/8, x4, x1, x2)

inst_2032:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000000ffff; valaddr_reg:x3; val_offset:6096*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6096*0 + 3*496*FLEN/8, x4, x1, x2)

inst_2033:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000001ffff; valaddr_reg:x3; val_offset:6099*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6099*0 + 3*497*FLEN/8, x4, x1, x2)

inst_2034:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000003ffff; valaddr_reg:x3; val_offset:6102*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6102*0 + 3*498*FLEN/8, x4, x1, x2)

inst_2035:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000007ffff; valaddr_reg:x3; val_offset:6105*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6105*0 + 3*499*FLEN/8, x4, x1, x2)

inst_2036:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000000fffff; valaddr_reg:x3; val_offset:6108*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6108*0 + 3*500*FLEN/8, x4, x1, x2)

inst_2037:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000001fffff; valaddr_reg:x3; val_offset:6111*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6111*0 + 3*501*FLEN/8, x4, x1, x2)

inst_2038:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000003fffff; valaddr_reg:x3; val_offset:6114*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6114*0 + 3*502*FLEN/8, x4, x1, x2)

inst_2039:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000007fffff; valaddr_reg:x3; val_offset:6117*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6117*0 + 3*503*FLEN/8, x4, x1, x2)

inst_2040:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000000ffffff; valaddr_reg:x3; val_offset:6120*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6120*0 + 3*504*FLEN/8, x4, x1, x2)

inst_2041:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000001ffffff; valaddr_reg:x3; val_offset:6123*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6123*0 + 3*505*FLEN/8, x4, x1, x2)

inst_2042:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000003ffffff; valaddr_reg:x3; val_offset:6126*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6126*0 + 3*506*FLEN/8, x4, x1, x2)

inst_2043:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000007ffffff; valaddr_reg:x3; val_offset:6129*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6129*0 + 3*507*FLEN/8, x4, x1, x2)

inst_2044:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000000fffffff; valaddr_reg:x3; val_offset:6132*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6132*0 + 3*508*FLEN/8, x4, x1, x2)

inst_2045:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000001fffffff; valaddr_reg:x3; val_offset:6135*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6135*0 + 3*509*FLEN/8, x4, x1, x2)

inst_2046:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000003fffffff; valaddr_reg:x3; val_offset:6138*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6138*0 + 3*510*FLEN/8, x4, x1, x2)

inst_2047:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000007fffffff; valaddr_reg:x3; val_offset:6141*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6141*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_2048:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000000ffffffff; valaddr_reg:x3; val_offset:6144*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6144*0 + 3*512*FLEN/8, x4, x1, x2)

inst_2049:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000001ffffffff; valaddr_reg:x3; val_offset:6147*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6147*0 + 3*513*FLEN/8, x4, x1, x2)

inst_2050:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000003ffffffff; valaddr_reg:x3; val_offset:6150*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6150*0 + 3*514*FLEN/8, x4, x1, x2)

inst_2051:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000007ffffffff; valaddr_reg:x3; val_offset:6153*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6153*0 + 3*515*FLEN/8, x4, x1, x2)

inst_2052:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00000fffffffff; valaddr_reg:x3; val_offset:6156*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6156*0 + 3*516*FLEN/8, x4, x1, x2)

inst_2053:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00001fffffffff; valaddr_reg:x3; val_offset:6159*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6159*0 + 3*517*FLEN/8, x4, x1, x2)

inst_2054:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00003fffffffff; valaddr_reg:x3; val_offset:6162*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6162*0 + 3*518*FLEN/8, x4, x1, x2)

inst_2055:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00007fffffffff; valaddr_reg:x3; val_offset:6165*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6165*0 + 3*519*FLEN/8, x4, x1, x2)

inst_2056:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0000ffffffffff; valaddr_reg:x3; val_offset:6168*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6168*0 + 3*520*FLEN/8, x4, x1, x2)

inst_2057:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0001ffffffffff; valaddr_reg:x3; val_offset:6171*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6171*0 + 3*521*FLEN/8, x4, x1, x2)

inst_2058:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0003ffffffffff; valaddr_reg:x3; val_offset:6174*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6174*0 + 3*522*FLEN/8, x4, x1, x2)

inst_2059:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0007ffffffffff; valaddr_reg:x3; val_offset:6177*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6177*0 + 3*523*FLEN/8, x4, x1, x2)

inst_2060:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba000fffffffffff; valaddr_reg:x3; val_offset:6180*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6180*0 + 3*524*FLEN/8, x4, x1, x2)

inst_2061:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba001fffffffffff; valaddr_reg:x3; val_offset:6183*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6183*0 + 3*525*FLEN/8, x4, x1, x2)

inst_2062:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba003fffffffffff; valaddr_reg:x3; val_offset:6186*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6186*0 + 3*526*FLEN/8, x4, x1, x2)

inst_2063:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba007fffffffffff; valaddr_reg:x3; val_offset:6189*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6189*0 + 3*527*FLEN/8, x4, x1, x2)

inst_2064:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba00ffffffffffff; valaddr_reg:x3; val_offset:6192*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6192*0 + 3*528*FLEN/8, x4, x1, x2)

inst_2065:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba01ffffffffffff; valaddr_reg:x3; val_offset:6195*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6195*0 + 3*529*FLEN/8, x4, x1, x2)

inst_2066:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba03ffffffffffff; valaddr_reg:x3; val_offset:6198*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6198*0 + 3*530*FLEN/8, x4, x1, x2)

inst_2067:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba07ffffffffffff; valaddr_reg:x3; val_offset:6201*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6201*0 + 3*531*FLEN/8, x4, x1, x2)

inst_2068:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba08000000000000; valaddr_reg:x3; val_offset:6204*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6204*0 + 3*532*FLEN/8, x4, x1, x2)

inst_2069:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0c000000000000; valaddr_reg:x3; val_offset:6207*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6207*0 + 3*533*FLEN/8, x4, x1, x2)

inst_2070:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0e000000000000; valaddr_reg:x3; val_offset:6210*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6210*0 + 3*534*FLEN/8, x4, x1, x2)

inst_2071:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0f000000000000; valaddr_reg:x3; val_offset:6213*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6213*0 + 3*535*FLEN/8, x4, x1, x2)

inst_2072:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0f800000000000; valaddr_reg:x3; val_offset:6216*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6216*0 + 3*536*FLEN/8, x4, x1, x2)

inst_2073:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fc00000000000; valaddr_reg:x3; val_offset:6219*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6219*0 + 3*537*FLEN/8, x4, x1, x2)

inst_2074:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fe00000000000; valaddr_reg:x3; val_offset:6222*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6222*0 + 3*538*FLEN/8, x4, x1, x2)

inst_2075:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ff00000000000; valaddr_reg:x3; val_offset:6225*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6225*0 + 3*539*FLEN/8, x4, x1, x2)

inst_2076:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ff80000000000; valaddr_reg:x3; val_offset:6228*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6228*0 + 3*540*FLEN/8, x4, x1, x2)

inst_2077:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffc0000000000; valaddr_reg:x3; val_offset:6231*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6231*0 + 3*541*FLEN/8, x4, x1, x2)

inst_2078:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffe0000000000; valaddr_reg:x3; val_offset:6234*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6234*0 + 3*542*FLEN/8, x4, x1, x2)

inst_2079:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fff0000000000; valaddr_reg:x3; val_offset:6237*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6237*0 + 3*543*FLEN/8, x4, x1, x2)

inst_2080:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fff8000000000; valaddr_reg:x3; val_offset:6240*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6240*0 + 3*544*FLEN/8, x4, x1, x2)

inst_2081:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffc000000000; valaddr_reg:x3; val_offset:6243*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6243*0 + 3*545*FLEN/8, x4, x1, x2)

inst_2082:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffe000000000; valaddr_reg:x3; val_offset:6246*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6246*0 + 3*546*FLEN/8, x4, x1, x2)

inst_2083:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffff000000000; valaddr_reg:x3; val_offset:6249*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6249*0 + 3*547*FLEN/8, x4, x1, x2)

inst_2084:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffff800000000; valaddr_reg:x3; val_offset:6252*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6252*0 + 3*548*FLEN/8, x4, x1, x2)

inst_2085:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffc00000000; valaddr_reg:x3; val_offset:6255*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6255*0 + 3*549*FLEN/8, x4, x1, x2)

inst_2086:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffe00000000; valaddr_reg:x3; val_offset:6258*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6258*0 + 3*550*FLEN/8, x4, x1, x2)

inst_2087:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffff00000000; valaddr_reg:x3; val_offset:6261*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6261*0 + 3*551*FLEN/8, x4, x1, x2)

inst_2088:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffff80000000; valaddr_reg:x3; val_offset:6264*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6264*0 + 3*552*FLEN/8, x4, x1, x2)

inst_2089:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffc0000000; valaddr_reg:x3; val_offset:6267*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6267*0 + 3*553*FLEN/8, x4, x1, x2)

inst_2090:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffe0000000; valaddr_reg:x3; val_offset:6270*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6270*0 + 3*554*FLEN/8, x4, x1, x2)

inst_2091:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffff0000000; valaddr_reg:x3; val_offset:6273*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6273*0 + 3*555*FLEN/8, x4, x1, x2)

inst_2092:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffff8000000; valaddr_reg:x3; val_offset:6276*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6276*0 + 3*556*FLEN/8, x4, x1, x2)

inst_2093:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffc000000; valaddr_reg:x3; val_offset:6279*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6279*0 + 3*557*FLEN/8, x4, x1, x2)

inst_2094:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffe000000; valaddr_reg:x3; val_offset:6282*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6282*0 + 3*558*FLEN/8, x4, x1, x2)

inst_2095:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffff000000; valaddr_reg:x3; val_offset:6285*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6285*0 + 3*559*FLEN/8, x4, x1, x2)

inst_2096:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffff800000; valaddr_reg:x3; val_offset:6288*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6288*0 + 3*560*FLEN/8, x4, x1, x2)

inst_2097:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffc00000; valaddr_reg:x3; val_offset:6291*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6291*0 + 3*561*FLEN/8, x4, x1, x2)

inst_2098:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffe00000; valaddr_reg:x3; val_offset:6294*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6294*0 + 3*562*FLEN/8, x4, x1, x2)

inst_2099:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffff00000; valaddr_reg:x3; val_offset:6297*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6297*0 + 3*563*FLEN/8, x4, x1, x2)

inst_2100:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffff80000; valaddr_reg:x3; val_offset:6300*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6300*0 + 3*564*FLEN/8, x4, x1, x2)

inst_2101:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffc0000; valaddr_reg:x3; val_offset:6303*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6303*0 + 3*565*FLEN/8, x4, x1, x2)

inst_2102:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffe0000; valaddr_reg:x3; val_offset:6306*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6306*0 + 3*566*FLEN/8, x4, x1, x2)

inst_2103:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffff0000; valaddr_reg:x3; val_offset:6309*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6309*0 + 3*567*FLEN/8, x4, x1, x2)

inst_2104:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffff8000; valaddr_reg:x3; val_offset:6312*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6312*0 + 3*568*FLEN/8, x4, x1, x2)

inst_2105:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffc000; valaddr_reg:x3; val_offset:6315*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6315*0 + 3*569*FLEN/8, x4, x1, x2)

inst_2106:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffe000; valaddr_reg:x3; val_offset:6318*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6318*0 + 3*570*FLEN/8, x4, x1, x2)

inst_2107:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffff000; valaddr_reg:x3; val_offset:6321*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6321*0 + 3*571*FLEN/8, x4, x1, x2)

inst_2108:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffff800; valaddr_reg:x3; val_offset:6324*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6324*0 + 3*572*FLEN/8, x4, x1, x2)

inst_2109:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffc00; valaddr_reg:x3; val_offset:6327*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6327*0 + 3*573*FLEN/8, x4, x1, x2)

inst_2110:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffe00; valaddr_reg:x3; val_offset:6330*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6330*0 + 3*574*FLEN/8, x4, x1, x2)

inst_2111:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffff00; valaddr_reg:x3; val_offset:6333*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6333*0 + 3*575*FLEN/8, x4, x1, x2)

inst_2112:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffff80; valaddr_reg:x3; val_offset:6336*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6336*0 + 3*576*FLEN/8, x4, x1, x2)

inst_2113:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffffc0; valaddr_reg:x3; val_offset:6339*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6339*0 + 3*577*FLEN/8, x4, x1, x2)

inst_2114:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffffe0; valaddr_reg:x3; val_offset:6342*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6342*0 + 3*578*FLEN/8, x4, x1, x2)

inst_2115:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffff0; valaddr_reg:x3; val_offset:6345*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6345*0 + 3*579*FLEN/8, x4, x1, x2)

inst_2116:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffff8; valaddr_reg:x3; val_offset:6348*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6348*0 + 3*580*FLEN/8, x4, x1, x2)

inst_2117:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffffc; valaddr_reg:x3; val_offset:6351*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6351*0 + 3*581*FLEN/8, x4, x1, x2)

inst_2118:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0ffffffffffffe; valaddr_reg:x3; val_offset:6354*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6354*0 + 3*582*FLEN/8, x4, x1, x2)

inst_2119:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3a0 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xba0fffffffffffff; valaddr_reg:x3; val_offset:6357*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6357*0 + 3*583*FLEN/8, x4, x1, x2)

inst_2120:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:6360*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6360*0 + 3*584*FLEN/8, x4, x1, x2)

inst_2121:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:6363*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6363*0 + 3*585*FLEN/8, x4, x1, x2)

inst_2122:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:6366*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6366*0 + 3*586*FLEN/8, x4, x1, x2)

inst_2123:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:6369*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6369*0 + 3*587*FLEN/8, x4, x1, x2)

inst_2124:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:6372*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6372*0 + 3*588*FLEN/8, x4, x1, x2)

inst_2125:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:6375*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6375*0 + 3*589*FLEN/8, x4, x1, x2)

inst_2126:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:6378*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6378*0 + 3*590*FLEN/8, x4, x1, x2)

inst_2127:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:6381*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6381*0 + 3*591*FLEN/8, x4, x1, x2)

inst_2128:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:6384*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6384*0 + 3*592*FLEN/8, x4, x1, x2)

inst_2129:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:6387*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6387*0 + 3*593*FLEN/8, x4, x1, x2)

inst_2130:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:6390*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6390*0 + 3*594*FLEN/8, x4, x1, x2)

inst_2131:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:6393*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6393*0 + 3*595*FLEN/8, x4, x1, x2)

inst_2132:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:6396*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6396*0 + 3*596*FLEN/8, x4, x1, x2)

inst_2133:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:6399*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6399*0 + 3*597*FLEN/8, x4, x1, x2)

inst_2134:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:6402*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6402*0 + 3*598*FLEN/8, x4, x1, x2)

inst_2135:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:6405*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6405*0 + 3*599*FLEN/8, x4, x1, x2)

inst_2136:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:6408*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6408*0 + 3*600*FLEN/8, x4, x1, x2)

inst_2137:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:6411*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6411*0 + 3*601*FLEN/8, x4, x1, x2)

inst_2138:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:6414*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6414*0 + 3*602*FLEN/8, x4, x1, x2)

inst_2139:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:6417*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6417*0 + 3*603*FLEN/8, x4, x1, x2)

inst_2140:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:6420*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6420*0 + 3*604*FLEN/8, x4, x1, x2)

inst_2141:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0x80d12abb5bebf and fs2 == 1 and fe2 == 0x201 and fm2 == 0x549bcd4c5de86 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f580d12abb5bebf; op2val:0xa01549bcd4c5de86;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:6423*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6423*0 + 3*605*FLEN/8, x4, x1, x2)

inst_2142:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:6426*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6426*0 + 3*606*FLEN/8, x4, x1, x2)

inst_2143:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:6429*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6429*0 + 3*607*FLEN/8, x4, x1, x2)

inst_2144:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:6432*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6432*0 + 3*608*FLEN/8, x4, x1, x2)

inst_2145:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:6435*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6435*0 + 3*609*FLEN/8, x4, x1, x2)

inst_2146:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:6438*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6438*0 + 3*610*FLEN/8, x4, x1, x2)

inst_2147:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:6441*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6441*0 + 3*611*FLEN/8, x4, x1, x2)

inst_2148:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:6444*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6444*0 + 3*612*FLEN/8, x4, x1, x2)

inst_2149:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:6447*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6447*0 + 3*613*FLEN/8, x4, x1, x2)

inst_2150:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:6450*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6450*0 + 3*614*FLEN/8, x4, x1, x2)

inst_2151:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:6453*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6453*0 + 3*615*FLEN/8, x4, x1, x2)

inst_2152:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:6456*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6456*0 + 3*616*FLEN/8, x4, x1, x2)

inst_2153:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:6459*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6459*0 + 3*617*FLEN/8, x4, x1, x2)

inst_2154:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:6462*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6462*0 + 3*618*FLEN/8, x4, x1, x2)

inst_2155:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:6465*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6465*0 + 3*619*FLEN/8, x4, x1, x2)

inst_2156:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:6468*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6468*0 + 3*620*FLEN/8, x4, x1, x2)

inst_2157:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:6471*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6471*0 + 3*621*FLEN/8, x4, x1, x2)

inst_2158:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:6474*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6474*0 + 3*622*FLEN/8, x4, x1, x2)

inst_2159:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:6477*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6477*0 + 3*623*FLEN/8, x4, x1, x2)

inst_2160:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:6480*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6480*0 + 3*624*FLEN/8, x4, x1, x2)

inst_2161:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:6483*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6483*0 + 3*625*FLEN/8, x4, x1, x2)

inst_2162:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:6486*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6486*0 + 3*626*FLEN/8, x4, x1, x2)

inst_2163:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:6489*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6489*0 + 3*627*FLEN/8, x4, x1, x2)

inst_2164:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000000000; valaddr_reg:x3; val_offset:6492*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6492*0 + 3*628*FLEN/8, x4, x1, x2)

inst_2165:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000000001; valaddr_reg:x3; val_offset:6495*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6495*0 + 3*629*FLEN/8, x4, x1, x2)

inst_2166:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000000003; valaddr_reg:x3; val_offset:6498*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6498*0 + 3*630*FLEN/8, x4, x1, x2)

inst_2167:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000000007; valaddr_reg:x3; val_offset:6501*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6501*0 + 3*631*FLEN/8, x4, x1, x2)

inst_2168:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000000000f; valaddr_reg:x3; val_offset:6504*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6504*0 + 3*632*FLEN/8, x4, x1, x2)

inst_2169:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000000001f; valaddr_reg:x3; val_offset:6507*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6507*0 + 3*633*FLEN/8, x4, x1, x2)

inst_2170:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000000003f; valaddr_reg:x3; val_offset:6510*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6510*0 + 3*634*FLEN/8, x4, x1, x2)

inst_2171:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000000007f; valaddr_reg:x3; val_offset:6513*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6513*0 + 3*635*FLEN/8, x4, x1, x2)

inst_2172:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000000000ff; valaddr_reg:x3; val_offset:6516*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6516*0 + 3*636*FLEN/8, x4, x1, x2)

inst_2173:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000000001ff; valaddr_reg:x3; val_offset:6519*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6519*0 + 3*637*FLEN/8, x4, x1, x2)

inst_2174:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000000003ff; valaddr_reg:x3; val_offset:6522*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6522*0 + 3*638*FLEN/8, x4, x1, x2)

inst_2175:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000000007ff; valaddr_reg:x3; val_offset:6525*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6525*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_2176:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000000fff; valaddr_reg:x3; val_offset:6528*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6528*0 + 3*640*FLEN/8, x4, x1, x2)

inst_2177:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000001fff; valaddr_reg:x3; val_offset:6531*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6531*0 + 3*641*FLEN/8, x4, x1, x2)

inst_2178:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000003fff; valaddr_reg:x3; val_offset:6534*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6534*0 + 3*642*FLEN/8, x4, x1, x2)

inst_2179:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000007fff; valaddr_reg:x3; val_offset:6537*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6537*0 + 3*643*FLEN/8, x4, x1, x2)

inst_2180:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000000ffff; valaddr_reg:x3; val_offset:6540*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6540*0 + 3*644*FLEN/8, x4, x1, x2)

inst_2181:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000001ffff; valaddr_reg:x3; val_offset:6543*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6543*0 + 3*645*FLEN/8, x4, x1, x2)

inst_2182:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000003ffff; valaddr_reg:x3; val_offset:6546*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6546*0 + 3*646*FLEN/8, x4, x1, x2)

inst_2183:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000007ffff; valaddr_reg:x3; val_offset:6549*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6549*0 + 3*647*FLEN/8, x4, x1, x2)

inst_2184:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000000fffff; valaddr_reg:x3; val_offset:6552*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6552*0 + 3*648*FLEN/8, x4, x1, x2)

inst_2185:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000001fffff; valaddr_reg:x3; val_offset:6555*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6555*0 + 3*649*FLEN/8, x4, x1, x2)

inst_2186:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000003fffff; valaddr_reg:x3; val_offset:6558*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6558*0 + 3*650*FLEN/8, x4, x1, x2)

inst_2187:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000007fffff; valaddr_reg:x3; val_offset:6561*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6561*0 + 3*651*FLEN/8, x4, x1, x2)

inst_2188:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000000ffffff; valaddr_reg:x3; val_offset:6564*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6564*0 + 3*652*FLEN/8, x4, x1, x2)

inst_2189:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000001ffffff; valaddr_reg:x3; val_offset:6567*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6567*0 + 3*653*FLEN/8, x4, x1, x2)

inst_2190:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000003ffffff; valaddr_reg:x3; val_offset:6570*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6570*0 + 3*654*FLEN/8, x4, x1, x2)

inst_2191:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000007ffffff; valaddr_reg:x3; val_offset:6573*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6573*0 + 3*655*FLEN/8, x4, x1, x2)

inst_2192:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000000fffffff; valaddr_reg:x3; val_offset:6576*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6576*0 + 3*656*FLEN/8, x4, x1, x2)

inst_2193:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000001fffffff; valaddr_reg:x3; val_offset:6579*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6579*0 + 3*657*FLEN/8, x4, x1, x2)

inst_2194:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000003fffffff; valaddr_reg:x3; val_offset:6582*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6582*0 + 3*658*FLEN/8, x4, x1, x2)

inst_2195:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000007fffffff; valaddr_reg:x3; val_offset:6585*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6585*0 + 3*659*FLEN/8, x4, x1, x2)

inst_2196:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600000ffffffff; valaddr_reg:x3; val_offset:6588*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6588*0 + 3*660*FLEN/8, x4, x1, x2)

inst_2197:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600001ffffffff; valaddr_reg:x3; val_offset:6591*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6591*0 + 3*661*FLEN/8, x4, x1, x2)

inst_2198:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600003ffffffff; valaddr_reg:x3; val_offset:6594*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6594*0 + 3*662*FLEN/8, x4, x1, x2)

inst_2199:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600007ffffffff; valaddr_reg:x3; val_offset:6597*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6597*0 + 3*663*FLEN/8, x4, x1, x2)

inst_2200:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60000fffffffff; valaddr_reg:x3; val_offset:6600*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6600*0 + 3*664*FLEN/8, x4, x1, x2)

inst_2201:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60001fffffffff; valaddr_reg:x3; val_offset:6603*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6603*0 + 3*665*FLEN/8, x4, x1, x2)

inst_2202:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60003fffffffff; valaddr_reg:x3; val_offset:6606*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6606*0 + 3*666*FLEN/8, x4, x1, x2)

inst_2203:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60007fffffffff; valaddr_reg:x3; val_offset:6609*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6609*0 + 3*667*FLEN/8, x4, x1, x2)

inst_2204:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6000ffffffffff; valaddr_reg:x3; val_offset:6612*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6612*0 + 3*668*FLEN/8, x4, x1, x2)

inst_2205:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6001ffffffffff; valaddr_reg:x3; val_offset:6615*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6615*0 + 3*669*FLEN/8, x4, x1, x2)

inst_2206:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6003ffffffffff; valaddr_reg:x3; val_offset:6618*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6618*0 + 3*670*FLEN/8, x4, x1, x2)

inst_2207:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6007ffffffffff; valaddr_reg:x3; val_offset:6621*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6621*0 + 3*671*FLEN/8, x4, x1, x2)

inst_2208:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x600fffffffffff; valaddr_reg:x3; val_offset:6624*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6624*0 + 3*672*FLEN/8, x4, x1, x2)

inst_2209:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x601fffffffffff; valaddr_reg:x3; val_offset:6627*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6627*0 + 3*673*FLEN/8, x4, x1, x2)

inst_2210:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x603fffffffffff; valaddr_reg:x3; val_offset:6630*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6630*0 + 3*674*FLEN/8, x4, x1, x2)

inst_2211:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x607fffffffffff; valaddr_reg:x3; val_offset:6633*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6633*0 + 3*675*FLEN/8, x4, x1, x2)

inst_2212:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x60ffffffffffff; valaddr_reg:x3; val_offset:6636*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6636*0 + 3*676*FLEN/8, x4, x1, x2)

inst_2213:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x61ffffffffffff; valaddr_reg:x3; val_offset:6639*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6639*0 + 3*677*FLEN/8, x4, x1, x2)

inst_2214:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x63ffffffffffff; valaddr_reg:x3; val_offset:6642*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6642*0 + 3*678*FLEN/8, x4, x1, x2)

inst_2215:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x67ffffffffffff; valaddr_reg:x3; val_offset:6645*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6645*0 + 3*679*FLEN/8, x4, x1, x2)

inst_2216:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x68000000000000; valaddr_reg:x3; val_offset:6648*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6648*0 + 3*680*FLEN/8, x4, x1, x2)

inst_2217:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6c000000000000; valaddr_reg:x3; val_offset:6651*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6651*0 + 3*681*FLEN/8, x4, x1, x2)

inst_2218:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6e000000000000; valaddr_reg:x3; val_offset:6654*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6654*0 + 3*682*FLEN/8, x4, x1, x2)

inst_2219:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6f000000000000; valaddr_reg:x3; val_offset:6657*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6657*0 + 3*683*FLEN/8, x4, x1, x2)

inst_2220:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6f800000000000; valaddr_reg:x3; val_offset:6660*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6660*0 + 3*684*FLEN/8, x4, x1, x2)

inst_2221:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fc00000000000; valaddr_reg:x3; val_offset:6663*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6663*0 + 3*685*FLEN/8, x4, x1, x2)

inst_2222:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fe00000000000; valaddr_reg:x3; val_offset:6666*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6666*0 + 3*686*FLEN/8, x4, x1, x2)

inst_2223:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ff00000000000; valaddr_reg:x3; val_offset:6669*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6669*0 + 3*687*FLEN/8, x4, x1, x2)

inst_2224:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ff80000000000; valaddr_reg:x3; val_offset:6672*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6672*0 + 3*688*FLEN/8, x4, x1, x2)

inst_2225:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffc0000000000; valaddr_reg:x3; val_offset:6675*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6675*0 + 3*689*FLEN/8, x4, x1, x2)

inst_2226:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffe0000000000; valaddr_reg:x3; val_offset:6678*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6678*0 + 3*690*FLEN/8, x4, x1, x2)

inst_2227:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fff0000000000; valaddr_reg:x3; val_offset:6681*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6681*0 + 3*691*FLEN/8, x4, x1, x2)

inst_2228:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fff8000000000; valaddr_reg:x3; val_offset:6684*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6684*0 + 3*692*FLEN/8, x4, x1, x2)

inst_2229:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffc000000000; valaddr_reg:x3; val_offset:6687*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6687*0 + 3*693*FLEN/8, x4, x1, x2)

inst_2230:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffe000000000; valaddr_reg:x3; val_offset:6690*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6690*0 + 3*694*FLEN/8, x4, x1, x2)

inst_2231:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffff000000000; valaddr_reg:x3; val_offset:6693*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6693*0 + 3*695*FLEN/8, x4, x1, x2)

inst_2232:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffff800000000; valaddr_reg:x3; val_offset:6696*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6696*0 + 3*696*FLEN/8, x4, x1, x2)

inst_2233:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffc00000000; valaddr_reg:x3; val_offset:6699*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6699*0 + 3*697*FLEN/8, x4, x1, x2)

inst_2234:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffe00000000; valaddr_reg:x3; val_offset:6702*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6702*0 + 3*698*FLEN/8, x4, x1, x2)

inst_2235:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffff00000000; valaddr_reg:x3; val_offset:6705*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6705*0 + 3*699*FLEN/8, x4, x1, x2)

inst_2236:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffff80000000; valaddr_reg:x3; val_offset:6708*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6708*0 + 3*700*FLEN/8, x4, x1, x2)

inst_2237:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffc0000000; valaddr_reg:x3; val_offset:6711*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6711*0 + 3*701*FLEN/8, x4, x1, x2)

inst_2238:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffe0000000; valaddr_reg:x3; val_offset:6714*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6714*0 + 3*702*FLEN/8, x4, x1, x2)

inst_2239:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffff0000000; valaddr_reg:x3; val_offset:6717*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6717*0 + 3*703*FLEN/8, x4, x1, x2)

inst_2240:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffff8000000; valaddr_reg:x3; val_offset:6720*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6720*0 + 3*704*FLEN/8, x4, x1, x2)

inst_2241:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffc000000; valaddr_reg:x3; val_offset:6723*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6723*0 + 3*705*FLEN/8, x4, x1, x2)

inst_2242:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffe000000; valaddr_reg:x3; val_offset:6726*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6726*0 + 3*706*FLEN/8, x4, x1, x2)

inst_2243:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffff000000; valaddr_reg:x3; val_offset:6729*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6729*0 + 3*707*FLEN/8, x4, x1, x2)

inst_2244:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffff800000; valaddr_reg:x3; val_offset:6732*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6732*0 + 3*708*FLEN/8, x4, x1, x2)

inst_2245:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffc00000; valaddr_reg:x3; val_offset:6735*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6735*0 + 3*709*FLEN/8, x4, x1, x2)

inst_2246:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffe00000; valaddr_reg:x3; val_offset:6738*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6738*0 + 3*710*FLEN/8, x4, x1, x2)

inst_2247:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffff00000; valaddr_reg:x3; val_offset:6741*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6741*0 + 3*711*FLEN/8, x4, x1, x2)

inst_2248:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffff80000; valaddr_reg:x3; val_offset:6744*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6744*0 + 3*712*FLEN/8, x4, x1, x2)

inst_2249:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffc0000; valaddr_reg:x3; val_offset:6747*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6747*0 + 3*713*FLEN/8, x4, x1, x2)

inst_2250:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffe0000; valaddr_reg:x3; val_offset:6750*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6750*0 + 3*714*FLEN/8, x4, x1, x2)

inst_2251:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffff0000; valaddr_reg:x3; val_offset:6753*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6753*0 + 3*715*FLEN/8, x4, x1, x2)

inst_2252:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffff8000; valaddr_reg:x3; val_offset:6756*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6756*0 + 3*716*FLEN/8, x4, x1, x2)

inst_2253:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffc000; valaddr_reg:x3; val_offset:6759*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6759*0 + 3*717*FLEN/8, x4, x1, x2)

inst_2254:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffe000; valaddr_reg:x3; val_offset:6762*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6762*0 + 3*718*FLEN/8, x4, x1, x2)

inst_2255:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffff000; valaddr_reg:x3; val_offset:6765*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6765*0 + 3*719*FLEN/8, x4, x1, x2)

inst_2256:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffff800; valaddr_reg:x3; val_offset:6768*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6768*0 + 3*720*FLEN/8, x4, x1, x2)

inst_2257:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffc00; valaddr_reg:x3; val_offset:6771*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6771*0 + 3*721*FLEN/8, x4, x1, x2)

inst_2258:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffe00; valaddr_reg:x3; val_offset:6774*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6774*0 + 3*722*FLEN/8, x4, x1, x2)

inst_2259:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffff00; valaddr_reg:x3; val_offset:6777*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6777*0 + 3*723*FLEN/8, x4, x1, x2)

inst_2260:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffff80; valaddr_reg:x3; val_offset:6780*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6780*0 + 3*724*FLEN/8, x4, x1, x2)

inst_2261:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffffc0; valaddr_reg:x3; val_offset:6783*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6783*0 + 3*725*FLEN/8, x4, x1, x2)

inst_2262:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffffe0; valaddr_reg:x3; val_offset:6786*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6786*0 + 3*726*FLEN/8, x4, x1, x2)

inst_2263:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffff0; valaddr_reg:x3; val_offset:6789*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6789*0 + 3*727*FLEN/8, x4, x1, x2)

inst_2264:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffff8; valaddr_reg:x3; val_offset:6792*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6792*0 + 3*728*FLEN/8, x4, x1, x2)

inst_2265:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffffc; valaddr_reg:x3; val_offset:6795*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6795*0 + 3*729*FLEN/8, x4, x1, x2)

inst_2266:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6ffffffffffffe; valaddr_reg:x3; val_offset:6798*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6798*0 + 3*730*FLEN/8, x4, x1, x2)

inst_2267:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xa2128ae113c7f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x006 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5a2128ae113c7f; op2val:0x0;
op3val:0x6fffffffffffff; valaddr_reg:x3; val_offset:6801*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6801*0 + 3*731*FLEN/8, x4, x1, x2)

inst_2268:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:6804*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6804*0 + 3*732*FLEN/8, x4, x1, x2)

inst_2269:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:6807*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6807*0 + 3*733*FLEN/8, x4, x1, x2)

inst_2270:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:6810*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6810*0 + 3*734*FLEN/8, x4, x1, x2)

inst_2271:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:6813*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6813*0 + 3*735*FLEN/8, x4, x1, x2)

inst_2272:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:6816*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6816*0 + 3*736*FLEN/8, x4, x1, x2)

inst_2273:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:6819*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6819*0 + 3*737*FLEN/8, x4, x1, x2)

inst_2274:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:6822*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6822*0 + 3*738*FLEN/8, x4, x1, x2)

inst_2275:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:6825*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6825*0 + 3*739*FLEN/8, x4, x1, x2)

inst_2276:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:6828*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6828*0 + 3*740*FLEN/8, x4, x1, x2)

inst_2277:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:6831*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6831*0 + 3*741*FLEN/8, x4, x1, x2)

inst_2278:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:6834*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6834*0 + 3*742*FLEN/8, x4, x1, x2)

inst_2279:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:6837*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6837*0 + 3*743*FLEN/8, x4, x1, x2)

inst_2280:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:6840*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6840*0 + 3*744*FLEN/8, x4, x1, x2)

inst_2281:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:6843*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6843*0 + 3*745*FLEN/8, x4, x1, x2)

inst_2282:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:6846*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6846*0 + 3*746*FLEN/8, x4, x1, x2)

inst_2283:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:6849*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6849*0 + 3*747*FLEN/8, x4, x1, x2)

inst_2284:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:6852*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6852*0 + 3*748*FLEN/8, x4, x1, x2)

inst_2285:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:6855*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6855*0 + 3*749*FLEN/8, x4, x1, x2)

inst_2286:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:6858*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6858*0 + 3*750*FLEN/8, x4, x1, x2)

inst_2287:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:6861*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6861*0 + 3*751*FLEN/8, x4, x1, x2)

inst_2288:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:6864*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6864*0 + 3*752*FLEN/8, x4, x1, x2)

inst_2289:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:6867*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6867*0 + 3*753*FLEN/8, x4, x1, x2)

inst_2290:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000000000; valaddr_reg:x3; val_offset:6870*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6870*0 + 3*754*FLEN/8, x4, x1, x2)

inst_2291:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000000001; valaddr_reg:x3; val_offset:6873*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6873*0 + 3*755*FLEN/8, x4, x1, x2)

inst_2292:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000000003; valaddr_reg:x3; val_offset:6876*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6876*0 + 3*756*FLEN/8, x4, x1, x2)

inst_2293:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000000007; valaddr_reg:x3; val_offset:6879*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6879*0 + 3*757*FLEN/8, x4, x1, x2)

inst_2294:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x804000000000000f; valaddr_reg:x3; val_offset:6882*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6882*0 + 3*758*FLEN/8, x4, x1, x2)

inst_2295:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x804000000000001f; valaddr_reg:x3; val_offset:6885*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6885*0 + 3*759*FLEN/8, x4, x1, x2)

inst_2296:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x804000000000003f; valaddr_reg:x3; val_offset:6888*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6888*0 + 3*760*FLEN/8, x4, x1, x2)

inst_2297:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x804000000000007f; valaddr_reg:x3; val_offset:6891*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6891*0 + 3*761*FLEN/8, x4, x1, x2)

inst_2298:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x80400000000000ff; valaddr_reg:x3; val_offset:6894*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6894*0 + 3*762*FLEN/8, x4, x1, x2)

inst_2299:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x80400000000001ff; valaddr_reg:x3; val_offset:6897*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6897*0 + 3*763*FLEN/8, x4, x1, x2)

inst_2300:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x80400000000003ff; valaddr_reg:x3; val_offset:6900*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6900*0 + 3*764*FLEN/8, x4, x1, x2)

inst_2301:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x80400000000007ff; valaddr_reg:x3; val_offset:6903*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6903*0 + 3*765*FLEN/8, x4, x1, x2)

inst_2302:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000000fff; valaddr_reg:x3; val_offset:6906*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6906*0 + 3*766*FLEN/8, x4, x1, x2)

inst_2303:
// fs1 == 0 and fe1 == 0x5f5 and fm1 == 0xb4d97f458961f and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x004 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f5b4d97f458961f; op2val:0x8000;
op3val:0x8040000000001fff; valaddr_reg:x3; val_offset:6909*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 6909*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523587,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523591,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523599,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523615,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523647,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523711,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523839,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524095,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524607,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987525631,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987527679,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987531775,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987539967,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987556351,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987589119,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987654655,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987785727,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988047871,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988572159,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615989620735,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615991717887,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615995912191,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616004300799,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616021078015,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616054632447,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616121741311,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616255959039,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616524394495,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573617061265407,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573618135007231,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573620282490879,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573624577458175,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573633167392767,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573650347261951,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573684707000319,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573753426477055,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573890865430527,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574165743337471,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574715499151359,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475575815010779135,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475578014034034687,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475582412080545791,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475591208173567999,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475608800359612415,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475643984731701247,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475714353475878911,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475855090964234239,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476136565940944895,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476699515894366207,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208831,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208832,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9478951315708051456,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479514265661472768,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479795740638183424,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479936478126538752,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480006846870716416,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480042031242805248,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480059623428849664,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480068419521871872,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480072817568382976,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480075016591638528,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076116103266304,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076665859080192,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076940736987136,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077078175940608,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077146895417344,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077181255155712,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077198435024896,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077207024959488,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077211319926784,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077213467410432,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077214541152256,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215078023168,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215346458624,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215480676352,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215547785216,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215581339648,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215598116864,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215606505472,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215610699776,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215612796928,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215613845504,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614369792,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614631936,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614763008,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614828544,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614861312,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614877696,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614885888,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614889984,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614892032,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893056,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893568,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893824,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893952,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894016,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894048,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894064,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894072,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894076,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894078,64,FLEN)
NAN_BOXED(6869879493493830719,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894079,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747776,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747777,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747779,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747783,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747791,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747807,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747839,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132747903,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748031,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748287,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132748799,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132749823,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132751871,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132755967,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132764159,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132780543,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132813311,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579132878847,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133009919,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133272063,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579133796351,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579134844927,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579136942079,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579141136383,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579149524991,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579166302207,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579199856639,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579266965503,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579401183231,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201579669618687,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201580206489599,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201581280231423,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201583427715071,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201587722682367,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201596312616959,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201613492486143,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201647852224511,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201716571701247,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252201854010654719,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202128888561663,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252202678644375551,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252203778156003327,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252205977179258879,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252210375225769983,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252219171318792191,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252236763504836607,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252271947876925439,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252342316621103103,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252483054109458431,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(252764529086169087,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(253327479039590399,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433023,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(254453378946433024,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(255579278853275648,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256142228806696960,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256423703783407616,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256564441271762944,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256634810015940608,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256669994388029440,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256687586574073856,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256696382667096064,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256700780713607168,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256702979736862720,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704079248490496,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704629004304384,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256704903882211328,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705041321164800,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705110040641536,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705144400379904,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705161580249088,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705170170183680,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705174465150976,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705176612634624,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705177686376448,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178223247360,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178491682816,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178625900544,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178693009408,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178726563840,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178743341056,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178751729664,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178755923968,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178758021120,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759069696,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759593984,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759856128,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178759987200,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760052736,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760085504,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760101888,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760110080,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760114176,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760116224,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117248,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760117760,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118016,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118144,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118208,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118240,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118256,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118264,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118268,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118270,64,FLEN)
NAN_BOXED(6869892343137015679,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118271,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678336,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678337,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678339,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678343,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678351,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678367,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678399,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678463,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678591,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833678847,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833679359,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833680383,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833682431,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833686527,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833694719,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833711103,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833743871,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833809407,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466833940479,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466834202623,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466834726911,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466835775487,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466837872639,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466842066943,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466850455551,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466867232767,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466900787199,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446466967896063,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446467102113791,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446467370549247,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446467907420159,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446468981161983,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446471128645631,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446475423612927,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446484013547519,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446501193416703,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446535553155071,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446604272631807,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695446741711585279,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695447016589492223,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695447566345306111,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695448665856933887,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695450864880189439,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695455262926700543,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695464059019722751,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695481651205767167,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695516835577855999,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695587204322033663,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13695727941810388991,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13696009416787099647,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13696572366740520959,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13697698266647363583,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13697698266647363584,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13698824166554206208,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699387116507627520,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699668591484338176,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699809328972693504,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699879697716871168,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699914882088960000,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699932474275004416,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699941270368026624,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699945668414537728,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699947867437793280,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699948966949421056,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699949516705234944,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699949791583141888,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699949929022095360,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699949997741572096,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950032101310464,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950049281179648,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950057871114240,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950062166081536,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950064313565184,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950065387307008,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950065924177920,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066192613376,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066326831104,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066393939968,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066427494400,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066444271616,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066452660224,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066456854528,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066458951680,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066460000256,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066460524544,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066460786688,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066460917760,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066460983296,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461016064,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461032448,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461040640,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461044736,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461046784,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461047808,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048320,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048576,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048704,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048768,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048800,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048816,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048824,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048828,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048830,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13699950066461048831,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6870151089355809887,64,FLEN)
NAN_BOXED(11535301055614289848,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078848,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078849,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078851,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078855,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078863,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078879,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078911,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840078975,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079103,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079359,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840079871,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840080895,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840082943,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840087039,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840095231,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840111615,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840144383,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840209919,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840340991,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785840603135,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785841127423,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785842175999,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785844273151,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785848467455,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785856856063,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785873633279,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785907187711,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136785974296575,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786108514303,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786376949759,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136786913820671,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136787987562495,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136790135046143,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136794430013439,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136803019948031,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136820199817215,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136854559555583,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171136923279032319,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137060717985791,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137335595892735,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171137885351706623,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171138984863334399,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171141183886589951,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171145581933101055,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171154378026123263,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171171970212167679,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171207154584256511,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171277523328434175,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171418260816789503,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(171699735793500159,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(172262685746921471,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764095,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(173388585653764096,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(174514485560606720,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175077435514028032,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175358910490738688,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175499647979094016,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175570016723271680,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175605201095360512,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175622793281404928,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175631589374427136,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175635987420938240,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175638186444193792,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639285955821568,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175639835711635456,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640110589542400,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640248028495872,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640316747972608,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640351107710976,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640368287580160,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640376877514752,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640381172482048,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640383319965696,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384393707520,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640384930578432,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385199013888,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385333231616,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385400340480,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385433894912,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385450672128,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385459060736,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385463255040,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385465352192,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466400768,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385466925056,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467187200,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467318272,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467383808,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467416576,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467432960,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467441152,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467445248,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467447296,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448320,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467448832,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449088,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449216,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449280,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449312,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449328,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449336,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449340,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449342,64,FLEN)
NAN_BOXED(6870221580928131583,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(175640385467449343,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596096,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596097,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596099,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596103,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596111,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596127,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596159,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596223,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596351,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054596607,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054597119,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054598143,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054600191,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054604287,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054612479,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054628863,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054661631,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054727167,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491054858239,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491055120383,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491055644671,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491056693247,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491058790399,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491062984703,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491071373311,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491088150527,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491121704959,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491188813823,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491323031551,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712491591467007,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712492128337919,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712493202079743,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712495349563391,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712499644530687,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712508234465279,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712525414334463,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712559774072831,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712628493549567,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402712765932503039,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402713040810409983,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402713590566223871,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402714690077851647,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402716889101107199,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402721287147618303,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402730083240640511,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402747675426684927,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402782859798773759,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402853228542951423,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13402993966031306751,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13403275441008017407,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13403838390961438719,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13404964290868281343,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13404964290868281344,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13406090190775123968,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13406653140728545280,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13406934615705255936,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407075353193611264,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407145721937788928,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407180906309877760,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407198498495922176,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407207294588944384,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407211692635455488,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407213891658711040,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407214991170338816,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407215540926152704,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407215815804059648,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407215953243013120,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216021962489856,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216056322228224,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216073502097408,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216082092032000,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216086386999296,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216088534482944,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216089608224768,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090145095680,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090413531136,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090547748864,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090614857728,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090648412160,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090665189376,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090673577984,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090677772288,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090679869440,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090680918016,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681442304,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681704448,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681835520,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681901056,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681933824,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681950208,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681958400,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681962496,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681964544,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681965568,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966080,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966336,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966464,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966528,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966560,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966576,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966584,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966588,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966590,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13407216090681966591,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6870255605395078847,64,FLEN)
NAN_BOXED(11535207095951810182,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222976,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222977,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222979,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222983,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764222991,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223007,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223039,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223103,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223231,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223487,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764223999,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764225023,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764227071,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764231167,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764239359,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764255743,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764288511,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764354047,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764485119,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597764747263,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597765271551,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597766320127,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597768417279,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597772611583,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597781000191,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597797777407,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597831331839,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021597898440703,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598032658431,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598301093887,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021598837964799,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021599911706623,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021602059190271,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021606354157567,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021614944092159,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021632123961343,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021666483699711,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021735203176447,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27021872642129919,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022147520036863,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27022697275850751,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27023796787478527,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27025995810734079,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27030393857245183,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27039189950267391,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27056782136311807,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27091966508400639,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27162335252578303,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27303072740933631,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(27584547717644287,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(28147497671065599,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908223,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(29273397577908224,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30399297484750848,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(30962247438172160,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31243722414882816,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31384459903238144,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31454828647415808,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31490013019504640,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31507605205549056,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31516401298571264,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31520799345082368,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31522998368337920,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524097879965696,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524647635779584,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31524922513686528,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525059952640000,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525128672116736,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525163031855104,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525180211724288,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525188801658880,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525193096626176,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525195244109824,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196317851648,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525196854722560,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197123158016,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197257375744,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197324484608,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197358039040,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197374816256,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197383204864,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197387399168,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197389496320,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197390544896,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391069184,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391331328,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391462400,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391527936,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391560704,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391577088,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391585280,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391589376,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391591424,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592448,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391592960,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593216,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593344,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593408,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593440,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593456,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593464,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593468,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593470,64,FLEN)
NAN_BOXED(6870840640109886591,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31525197391593471,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257792,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257793,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257795,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257799,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257807,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257823,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257855,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257919,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258047,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258303,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364258815,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364259839,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364261887,64,FLEN)
NAN_BOXED(6871170971518670367,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364265983,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
