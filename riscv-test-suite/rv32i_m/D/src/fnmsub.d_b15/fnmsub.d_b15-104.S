
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_79104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:237312*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237312*0 + 3*0*FLEN/8, x4, x1, x2)

inst_79105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:237315*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237315*0 + 3*1*FLEN/8, x4, x1, x2)

inst_79106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:237318*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237318*0 + 3*2*FLEN/8, x4, x1, x2)

inst_79107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:237321*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237321*0 + 3*3*FLEN/8, x4, x1, x2)

inst_79108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:237324*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237324*0 + 3*4*FLEN/8, x4, x1, x2)

inst_79109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:237327*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237327*0 + 3*5*FLEN/8, x4, x1, x2)

inst_79110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:237330*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237330*0 + 3*6*FLEN/8, x4, x1, x2)

inst_79111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:237333*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237333*0 + 3*7*FLEN/8, x4, x1, x2)

inst_79112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:237336*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237336*0 + 3*8*FLEN/8, x4, x1, x2)

inst_79113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:237339*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237339*0 + 3*9*FLEN/8, x4, x1, x2)

inst_79114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:237342*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237342*0 + 3*10*FLEN/8, x4, x1, x2)

inst_79115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:237345*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237345*0 + 3*11*FLEN/8, x4, x1, x2)

inst_79116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:237348*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237348*0 + 3*12*FLEN/8, x4, x1, x2)

inst_79117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:237351*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237351*0 + 3*13*FLEN/8, x4, x1, x2)

inst_79118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:237354*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237354*0 + 3*14*FLEN/8, x4, x1, x2)

inst_79119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:237357*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237357*0 + 3*15*FLEN/8, x4, x1, x2)

inst_79120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000000000; valaddr_reg:x3; val_offset:237360*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237360*0 + 3*16*FLEN/8, x4, x1, x2)

inst_79121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000000001; valaddr_reg:x3; val_offset:237363*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237363*0 + 3*17*FLEN/8, x4, x1, x2)

inst_79122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000000003; valaddr_reg:x3; val_offset:237366*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237366*0 + 3*18*FLEN/8, x4, x1, x2)

inst_79123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000000007; valaddr_reg:x3; val_offset:237369*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237369*0 + 3*19*FLEN/8, x4, x1, x2)

inst_79124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000000000f; valaddr_reg:x3; val_offset:237372*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237372*0 + 3*20*FLEN/8, x4, x1, x2)

inst_79125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000000001f; valaddr_reg:x3; val_offset:237375*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237375*0 + 3*21*FLEN/8, x4, x1, x2)

inst_79126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000000003f; valaddr_reg:x3; val_offset:237378*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237378*0 + 3*22*FLEN/8, x4, x1, x2)

inst_79127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000000007f; valaddr_reg:x3; val_offset:237381*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237381*0 + 3*23*FLEN/8, x4, x1, x2)

inst_79128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000000000ff; valaddr_reg:x3; val_offset:237384*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237384*0 + 3*24*FLEN/8, x4, x1, x2)

inst_79129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000000001ff; valaddr_reg:x3; val_offset:237387*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237387*0 + 3*25*FLEN/8, x4, x1, x2)

inst_79130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000000003ff; valaddr_reg:x3; val_offset:237390*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237390*0 + 3*26*FLEN/8, x4, x1, x2)

inst_79131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000000007ff; valaddr_reg:x3; val_offset:237393*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237393*0 + 3*27*FLEN/8, x4, x1, x2)

inst_79132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000000fff; valaddr_reg:x3; val_offset:237396*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237396*0 + 3*28*FLEN/8, x4, x1, x2)

inst_79133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000001fff; valaddr_reg:x3; val_offset:237399*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237399*0 + 3*29*FLEN/8, x4, x1, x2)

inst_79134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000003fff; valaddr_reg:x3; val_offset:237402*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237402*0 + 3*30*FLEN/8, x4, x1, x2)

inst_79135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000007fff; valaddr_reg:x3; val_offset:237405*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237405*0 + 3*31*FLEN/8, x4, x1, x2)

inst_79136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000000ffff; valaddr_reg:x3; val_offset:237408*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237408*0 + 3*32*FLEN/8, x4, x1, x2)

inst_79137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000001ffff; valaddr_reg:x3; val_offset:237411*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237411*0 + 3*33*FLEN/8, x4, x1, x2)

inst_79138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000003ffff; valaddr_reg:x3; val_offset:237414*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237414*0 + 3*34*FLEN/8, x4, x1, x2)

inst_79139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000007ffff; valaddr_reg:x3; val_offset:237417*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237417*0 + 3*35*FLEN/8, x4, x1, x2)

inst_79140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000000fffff; valaddr_reg:x3; val_offset:237420*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237420*0 + 3*36*FLEN/8, x4, x1, x2)

inst_79141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000001fffff; valaddr_reg:x3; val_offset:237423*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237423*0 + 3*37*FLEN/8, x4, x1, x2)

inst_79142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000003fffff; valaddr_reg:x3; val_offset:237426*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237426*0 + 3*38*FLEN/8, x4, x1, x2)

inst_79143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000007fffff; valaddr_reg:x3; val_offset:237429*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237429*0 + 3*39*FLEN/8, x4, x1, x2)

inst_79144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000000ffffff; valaddr_reg:x3; val_offset:237432*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237432*0 + 3*40*FLEN/8, x4, x1, x2)

inst_79145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000001ffffff; valaddr_reg:x3; val_offset:237435*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237435*0 + 3*41*FLEN/8, x4, x1, x2)

inst_79146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000003ffffff; valaddr_reg:x3; val_offset:237438*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237438*0 + 3*42*FLEN/8, x4, x1, x2)

inst_79147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000007ffffff; valaddr_reg:x3; val_offset:237441*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237441*0 + 3*43*FLEN/8, x4, x1, x2)

inst_79148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000000fffffff; valaddr_reg:x3; val_offset:237444*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237444*0 + 3*44*FLEN/8, x4, x1, x2)

inst_79149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000001fffffff; valaddr_reg:x3; val_offset:237447*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237447*0 + 3*45*FLEN/8, x4, x1, x2)

inst_79150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000003fffffff; valaddr_reg:x3; val_offset:237450*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237450*0 + 3*46*FLEN/8, x4, x1, x2)

inst_79151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000007fffffff; valaddr_reg:x3; val_offset:237453*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237453*0 + 3*47*FLEN/8, x4, x1, x2)

inst_79152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300000ffffffff; valaddr_reg:x3; val_offset:237456*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237456*0 + 3*48*FLEN/8, x4, x1, x2)

inst_79153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300001ffffffff; valaddr_reg:x3; val_offset:237459*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237459*0 + 3*49*FLEN/8, x4, x1, x2)

inst_79154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300003ffffffff; valaddr_reg:x3; val_offset:237462*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237462*0 + 3*50*FLEN/8, x4, x1, x2)

inst_79155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300007ffffffff; valaddr_reg:x3; val_offset:237465*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237465*0 + 3*51*FLEN/8, x4, x1, x2)

inst_79156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030000fffffffff; valaddr_reg:x3; val_offset:237468*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237468*0 + 3*52*FLEN/8, x4, x1, x2)

inst_79157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030001fffffffff; valaddr_reg:x3; val_offset:237471*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237471*0 + 3*53*FLEN/8, x4, x1, x2)

inst_79158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030003fffffffff; valaddr_reg:x3; val_offset:237474*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237474*0 + 3*54*FLEN/8, x4, x1, x2)

inst_79159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030007fffffffff; valaddr_reg:x3; val_offset:237477*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237477*0 + 3*55*FLEN/8, x4, x1, x2)

inst_79160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803000ffffffffff; valaddr_reg:x3; val_offset:237480*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237480*0 + 3*56*FLEN/8, x4, x1, x2)

inst_79161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803001ffffffffff; valaddr_reg:x3; val_offset:237483*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237483*0 + 3*57*FLEN/8, x4, x1, x2)

inst_79162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803003ffffffffff; valaddr_reg:x3; val_offset:237486*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237486*0 + 3*58*FLEN/8, x4, x1, x2)

inst_79163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803007ffffffffff; valaddr_reg:x3; val_offset:237489*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237489*0 + 3*59*FLEN/8, x4, x1, x2)

inst_79164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80300fffffffffff; valaddr_reg:x3; val_offset:237492*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237492*0 + 3*60*FLEN/8, x4, x1, x2)

inst_79165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80301fffffffffff; valaddr_reg:x3; val_offset:237495*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237495*0 + 3*61*FLEN/8, x4, x1, x2)

inst_79166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80303fffffffffff; valaddr_reg:x3; val_offset:237498*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237498*0 + 3*62*FLEN/8, x4, x1, x2)

inst_79167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x80307fffffffffff; valaddr_reg:x3; val_offset:237501*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237501*0 + 3*63*FLEN/8, x4, x1, x2)

inst_79168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8030ffffffffffff; valaddr_reg:x3; val_offset:237504*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237504*0 + 3*64*FLEN/8, x4, x1, x2)

inst_79169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8031ffffffffffff; valaddr_reg:x3; val_offset:237507*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237507*0 + 3*65*FLEN/8, x4, x1, x2)

inst_79170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8033ffffffffffff; valaddr_reg:x3; val_offset:237510*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237510*0 + 3*66*FLEN/8, x4, x1, x2)

inst_79171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8037ffffffffffff; valaddr_reg:x3; val_offset:237513*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237513*0 + 3*67*FLEN/8, x4, x1, x2)

inst_79172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x8038000000000000; valaddr_reg:x3; val_offset:237516*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237516*0 + 3*68*FLEN/8, x4, x1, x2)

inst_79173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803c000000000000; valaddr_reg:x3; val_offset:237519*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237519*0 + 3*69*FLEN/8, x4, x1, x2)

inst_79174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803e000000000000; valaddr_reg:x3; val_offset:237522*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237522*0 + 3*70*FLEN/8, x4, x1, x2)

inst_79175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803f000000000000; valaddr_reg:x3; val_offset:237525*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237525*0 + 3*71*FLEN/8, x4, x1, x2)

inst_79176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803f800000000000; valaddr_reg:x3; val_offset:237528*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237528*0 + 3*72*FLEN/8, x4, x1, x2)

inst_79177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fc00000000000; valaddr_reg:x3; val_offset:237531*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237531*0 + 3*73*FLEN/8, x4, x1, x2)

inst_79178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fe00000000000; valaddr_reg:x3; val_offset:237534*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237534*0 + 3*74*FLEN/8, x4, x1, x2)

inst_79179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ff00000000000; valaddr_reg:x3; val_offset:237537*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237537*0 + 3*75*FLEN/8, x4, x1, x2)

inst_79180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ff80000000000; valaddr_reg:x3; val_offset:237540*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237540*0 + 3*76*FLEN/8, x4, x1, x2)

inst_79181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffc0000000000; valaddr_reg:x3; val_offset:237543*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237543*0 + 3*77*FLEN/8, x4, x1, x2)

inst_79182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffe0000000000; valaddr_reg:x3; val_offset:237546*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237546*0 + 3*78*FLEN/8, x4, x1, x2)

inst_79183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fff0000000000; valaddr_reg:x3; val_offset:237549*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237549*0 + 3*79*FLEN/8, x4, x1, x2)

inst_79184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fff8000000000; valaddr_reg:x3; val_offset:237552*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237552*0 + 3*80*FLEN/8, x4, x1, x2)

inst_79185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffc000000000; valaddr_reg:x3; val_offset:237555*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237555*0 + 3*81*FLEN/8, x4, x1, x2)

inst_79186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffe000000000; valaddr_reg:x3; val_offset:237558*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237558*0 + 3*82*FLEN/8, x4, x1, x2)

inst_79187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffff000000000; valaddr_reg:x3; val_offset:237561*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237561*0 + 3*83*FLEN/8, x4, x1, x2)

inst_79188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffff800000000; valaddr_reg:x3; val_offset:237564*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237564*0 + 3*84*FLEN/8, x4, x1, x2)

inst_79189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffc00000000; valaddr_reg:x3; val_offset:237567*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237567*0 + 3*85*FLEN/8, x4, x1, x2)

inst_79190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffe00000000; valaddr_reg:x3; val_offset:237570*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237570*0 + 3*86*FLEN/8, x4, x1, x2)

inst_79191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffff00000000; valaddr_reg:x3; val_offset:237573*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237573*0 + 3*87*FLEN/8, x4, x1, x2)

inst_79192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffff80000000; valaddr_reg:x3; val_offset:237576*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237576*0 + 3*88*FLEN/8, x4, x1, x2)

inst_79193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffc0000000; valaddr_reg:x3; val_offset:237579*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237579*0 + 3*89*FLEN/8, x4, x1, x2)

inst_79194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffe0000000; valaddr_reg:x3; val_offset:237582*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237582*0 + 3*90*FLEN/8, x4, x1, x2)

inst_79195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffff0000000; valaddr_reg:x3; val_offset:237585*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237585*0 + 3*91*FLEN/8, x4, x1, x2)

inst_79196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffff8000000; valaddr_reg:x3; val_offset:237588*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237588*0 + 3*92*FLEN/8, x4, x1, x2)

inst_79197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffc000000; valaddr_reg:x3; val_offset:237591*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237591*0 + 3*93*FLEN/8, x4, x1, x2)

inst_79198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffe000000; valaddr_reg:x3; val_offset:237594*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237594*0 + 3*94*FLEN/8, x4, x1, x2)

inst_79199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffff000000; valaddr_reg:x3; val_offset:237597*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237597*0 + 3*95*FLEN/8, x4, x1, x2)

inst_79200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffff800000; valaddr_reg:x3; val_offset:237600*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237600*0 + 3*96*FLEN/8, x4, x1, x2)

inst_79201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffc00000; valaddr_reg:x3; val_offset:237603*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237603*0 + 3*97*FLEN/8, x4, x1, x2)

inst_79202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffe00000; valaddr_reg:x3; val_offset:237606*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237606*0 + 3*98*FLEN/8, x4, x1, x2)

inst_79203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffff00000; valaddr_reg:x3; val_offset:237609*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237609*0 + 3*99*FLEN/8, x4, x1, x2)

inst_79204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffff80000; valaddr_reg:x3; val_offset:237612*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237612*0 + 3*100*FLEN/8, x4, x1, x2)

inst_79205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffc0000; valaddr_reg:x3; val_offset:237615*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237615*0 + 3*101*FLEN/8, x4, x1, x2)

inst_79206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffe0000; valaddr_reg:x3; val_offset:237618*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237618*0 + 3*102*FLEN/8, x4, x1, x2)

inst_79207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffff0000; valaddr_reg:x3; val_offset:237621*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237621*0 + 3*103*FLEN/8, x4, x1, x2)

inst_79208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffff8000; valaddr_reg:x3; val_offset:237624*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237624*0 + 3*104*FLEN/8, x4, x1, x2)

inst_79209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffc000; valaddr_reg:x3; val_offset:237627*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237627*0 + 3*105*FLEN/8, x4, x1, x2)

inst_79210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffe000; valaddr_reg:x3; val_offset:237630*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237630*0 + 3*106*FLEN/8, x4, x1, x2)

inst_79211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffff000; valaddr_reg:x3; val_offset:237633*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237633*0 + 3*107*FLEN/8, x4, x1, x2)

inst_79212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffff800; valaddr_reg:x3; val_offset:237636*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237636*0 + 3*108*FLEN/8, x4, x1, x2)

inst_79213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffc00; valaddr_reg:x3; val_offset:237639*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237639*0 + 3*109*FLEN/8, x4, x1, x2)

inst_79214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffe00; valaddr_reg:x3; val_offset:237642*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237642*0 + 3*110*FLEN/8, x4, x1, x2)

inst_79215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffff00; valaddr_reg:x3; val_offset:237645*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237645*0 + 3*111*FLEN/8, x4, x1, x2)

inst_79216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffff80; valaddr_reg:x3; val_offset:237648*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237648*0 + 3*112*FLEN/8, x4, x1, x2)

inst_79217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffffc0; valaddr_reg:x3; val_offset:237651*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237651*0 + 3*113*FLEN/8, x4, x1, x2)

inst_79218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffffe0; valaddr_reg:x3; val_offset:237654*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237654*0 + 3*114*FLEN/8, x4, x1, x2)

inst_79219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffff0; valaddr_reg:x3; val_offset:237657*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237657*0 + 3*115*FLEN/8, x4, x1, x2)

inst_79220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffff8; valaddr_reg:x3; val_offset:237660*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237660*0 + 3*116*FLEN/8, x4, x1, x2)

inst_79221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffffc; valaddr_reg:x3; val_offset:237663*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237663*0 + 3*117*FLEN/8, x4, x1, x2)

inst_79222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803ffffffffffffe; valaddr_reg:x3; val_offset:237666*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237666*0 + 3*118*FLEN/8, x4, x1, x2)

inst_79223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x899f171a9297a and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x003 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa899f171a9297a; op2val:0x8000;
op3val:0x803fffffffffffff; valaddr_reg:x3; val_offset:237669*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237669*0 + 3*119*FLEN/8, x4, x1, x2)

inst_79224:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:237672*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237672*0 + 3*120*FLEN/8, x4, x1, x2)

inst_79225:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:237675*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237675*0 + 3*121*FLEN/8, x4, x1, x2)

inst_79226:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:237678*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237678*0 + 3*122*FLEN/8, x4, x1, x2)

inst_79227:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:237681*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237681*0 + 3*123*FLEN/8, x4, x1, x2)

inst_79228:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:237684*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237684*0 + 3*124*FLEN/8, x4, x1, x2)

inst_79229:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:237687*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237687*0 + 3*125*FLEN/8, x4, x1, x2)

inst_79230:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:237690*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237690*0 + 3*126*FLEN/8, x4, x1, x2)

inst_79231:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:237693*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237693*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_79232:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:237696*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237696*0 + 3*128*FLEN/8, x4, x1, x2)

inst_79233:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:237699*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237699*0 + 3*129*FLEN/8, x4, x1, x2)

inst_79234:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:237702*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237702*0 + 3*130*FLEN/8, x4, x1, x2)

inst_79235:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:237705*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237705*0 + 3*131*FLEN/8, x4, x1, x2)

inst_79236:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:237708*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237708*0 + 3*132*FLEN/8, x4, x1, x2)

inst_79237:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:237711*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237711*0 + 3*133*FLEN/8, x4, x1, x2)

inst_79238:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:237714*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237714*0 + 3*134*FLEN/8, x4, x1, x2)

inst_79239:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:237717*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237717*0 + 3*135*FLEN/8, x4, x1, x2)

inst_79240:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:237720*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237720*0 + 3*136*FLEN/8, x4, x1, x2)

inst_79241:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:237723*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237723*0 + 3*137*FLEN/8, x4, x1, x2)

inst_79242:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:237726*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237726*0 + 3*138*FLEN/8, x4, x1, x2)

inst_79243:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:237729*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237729*0 + 3*139*FLEN/8, x4, x1, x2)

inst_79244:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:237732*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237732*0 + 3*140*FLEN/8, x4, x1, x2)

inst_79245:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:237735*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237735*0 + 3*141*FLEN/8, x4, x1, x2)

inst_79246:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000000000; valaddr_reg:x3; val_offset:237738*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237738*0 + 3*142*FLEN/8, x4, x1, x2)

inst_79247:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000000001; valaddr_reg:x3; val_offset:237741*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237741*0 + 3*143*FLEN/8, x4, x1, x2)

inst_79248:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000000003; valaddr_reg:x3; val_offset:237744*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237744*0 + 3*144*FLEN/8, x4, x1, x2)

inst_79249:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000000007; valaddr_reg:x3; val_offset:237747*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237747*0 + 3*145*FLEN/8, x4, x1, x2)

inst_79250:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000000000f; valaddr_reg:x3; val_offset:237750*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237750*0 + 3*146*FLEN/8, x4, x1, x2)

inst_79251:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000000001f; valaddr_reg:x3; val_offset:237753*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237753*0 + 3*147*FLEN/8, x4, x1, x2)

inst_79252:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000000003f; valaddr_reg:x3; val_offset:237756*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237756*0 + 3*148*FLEN/8, x4, x1, x2)

inst_79253:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000000007f; valaddr_reg:x3; val_offset:237759*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237759*0 + 3*149*FLEN/8, x4, x1, x2)

inst_79254:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000000000ff; valaddr_reg:x3; val_offset:237762*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237762*0 + 3*150*FLEN/8, x4, x1, x2)

inst_79255:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000000001ff; valaddr_reg:x3; val_offset:237765*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237765*0 + 3*151*FLEN/8, x4, x1, x2)

inst_79256:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000000003ff; valaddr_reg:x3; val_offset:237768*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237768*0 + 3*152*FLEN/8, x4, x1, x2)

inst_79257:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000000007ff; valaddr_reg:x3; val_offset:237771*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237771*0 + 3*153*FLEN/8, x4, x1, x2)

inst_79258:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000000fff; valaddr_reg:x3; val_offset:237774*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237774*0 + 3*154*FLEN/8, x4, x1, x2)

inst_79259:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000001fff; valaddr_reg:x3; val_offset:237777*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237777*0 + 3*155*FLEN/8, x4, x1, x2)

inst_79260:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000003fff; valaddr_reg:x3; val_offset:237780*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237780*0 + 3*156*FLEN/8, x4, x1, x2)

inst_79261:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000007fff; valaddr_reg:x3; val_offset:237783*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237783*0 + 3*157*FLEN/8, x4, x1, x2)

inst_79262:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000000ffff; valaddr_reg:x3; val_offset:237786*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237786*0 + 3*158*FLEN/8, x4, x1, x2)

inst_79263:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000001ffff; valaddr_reg:x3; val_offset:237789*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237789*0 + 3*159*FLEN/8, x4, x1, x2)

inst_79264:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000003ffff; valaddr_reg:x3; val_offset:237792*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237792*0 + 3*160*FLEN/8, x4, x1, x2)

inst_79265:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000007ffff; valaddr_reg:x3; val_offset:237795*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237795*0 + 3*161*FLEN/8, x4, x1, x2)

inst_79266:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000000fffff; valaddr_reg:x3; val_offset:237798*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237798*0 + 3*162*FLEN/8, x4, x1, x2)

inst_79267:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000001fffff; valaddr_reg:x3; val_offset:237801*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237801*0 + 3*163*FLEN/8, x4, x1, x2)

inst_79268:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000003fffff; valaddr_reg:x3; val_offset:237804*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237804*0 + 3*164*FLEN/8, x4, x1, x2)

inst_79269:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000007fffff; valaddr_reg:x3; val_offset:237807*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237807*0 + 3*165*FLEN/8, x4, x1, x2)

inst_79270:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000000ffffff; valaddr_reg:x3; val_offset:237810*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237810*0 + 3*166*FLEN/8, x4, x1, x2)

inst_79271:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000001ffffff; valaddr_reg:x3; val_offset:237813*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237813*0 + 3*167*FLEN/8, x4, x1, x2)

inst_79272:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000003ffffff; valaddr_reg:x3; val_offset:237816*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237816*0 + 3*168*FLEN/8, x4, x1, x2)

inst_79273:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000007ffffff; valaddr_reg:x3; val_offset:237819*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237819*0 + 3*169*FLEN/8, x4, x1, x2)

inst_79274:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000000fffffff; valaddr_reg:x3; val_offset:237822*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237822*0 + 3*170*FLEN/8, x4, x1, x2)

inst_79275:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000001fffffff; valaddr_reg:x3; val_offset:237825*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237825*0 + 3*171*FLEN/8, x4, x1, x2)

inst_79276:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000003fffffff; valaddr_reg:x3; val_offset:237828*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237828*0 + 3*172*FLEN/8, x4, x1, x2)

inst_79277:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000007fffffff; valaddr_reg:x3; val_offset:237831*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237831*0 + 3*173*FLEN/8, x4, x1, x2)

inst_79278:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00000ffffffff; valaddr_reg:x3; val_offset:237834*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237834*0 + 3*174*FLEN/8, x4, x1, x2)

inst_79279:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00001ffffffff; valaddr_reg:x3; val_offset:237837*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237837*0 + 3*175*FLEN/8, x4, x1, x2)

inst_79280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00003ffffffff; valaddr_reg:x3; val_offset:237840*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237840*0 + 3*176*FLEN/8, x4, x1, x2)

inst_79281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00007ffffffff; valaddr_reg:x3; val_offset:237843*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237843*0 + 3*177*FLEN/8, x4, x1, x2)

inst_79282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0000fffffffff; valaddr_reg:x3; val_offset:237846*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237846*0 + 3*178*FLEN/8, x4, x1, x2)

inst_79283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0001fffffffff; valaddr_reg:x3; val_offset:237849*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237849*0 + 3*179*FLEN/8, x4, x1, x2)

inst_79284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0003fffffffff; valaddr_reg:x3; val_offset:237852*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237852*0 + 3*180*FLEN/8, x4, x1, x2)

inst_79285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0007fffffffff; valaddr_reg:x3; val_offset:237855*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237855*0 + 3*181*FLEN/8, x4, x1, x2)

inst_79286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b000ffffffffff; valaddr_reg:x3; val_offset:237858*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237858*0 + 3*182*FLEN/8, x4, x1, x2)

inst_79287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b001ffffffffff; valaddr_reg:x3; val_offset:237861*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237861*0 + 3*183*FLEN/8, x4, x1, x2)

inst_79288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b003ffffffffff; valaddr_reg:x3; val_offset:237864*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237864*0 + 3*184*FLEN/8, x4, x1, x2)

inst_79289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b007ffffffffff; valaddr_reg:x3; val_offset:237867*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237867*0 + 3*185*FLEN/8, x4, x1, x2)

inst_79290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b00fffffffffff; valaddr_reg:x3; val_offset:237870*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237870*0 + 3*186*FLEN/8, x4, x1, x2)

inst_79291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b01fffffffffff; valaddr_reg:x3; val_offset:237873*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237873*0 + 3*187*FLEN/8, x4, x1, x2)

inst_79292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b03fffffffffff; valaddr_reg:x3; val_offset:237876*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237876*0 + 3*188*FLEN/8, x4, x1, x2)

inst_79293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b07fffffffffff; valaddr_reg:x3; val_offset:237879*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237879*0 + 3*189*FLEN/8, x4, x1, x2)

inst_79294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b0ffffffffffff; valaddr_reg:x3; val_offset:237882*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237882*0 + 3*190*FLEN/8, x4, x1, x2)

inst_79295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b1ffffffffffff; valaddr_reg:x3; val_offset:237885*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237885*0 + 3*191*FLEN/8, x4, x1, x2)

inst_79296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b3ffffffffffff; valaddr_reg:x3; val_offset:237888*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237888*0 + 3*192*FLEN/8, x4, x1, x2)

inst_79297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b7ffffffffffff; valaddr_reg:x3; val_offset:237891*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237891*0 + 3*193*FLEN/8, x4, x1, x2)

inst_79298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80b8000000000000; valaddr_reg:x3; val_offset:237894*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237894*0 + 3*194*FLEN/8, x4, x1, x2)

inst_79299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bc000000000000; valaddr_reg:x3; val_offset:237897*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237897*0 + 3*195*FLEN/8, x4, x1, x2)

inst_79300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80be000000000000; valaddr_reg:x3; val_offset:237900*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237900*0 + 3*196*FLEN/8, x4, x1, x2)

inst_79301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bf000000000000; valaddr_reg:x3; val_offset:237903*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237903*0 + 3*197*FLEN/8, x4, x1, x2)

inst_79302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bf800000000000; valaddr_reg:x3; val_offset:237906*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237906*0 + 3*198*FLEN/8, x4, x1, x2)

inst_79303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfc00000000000; valaddr_reg:x3; val_offset:237909*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237909*0 + 3*199*FLEN/8, x4, x1, x2)

inst_79304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfe00000000000; valaddr_reg:x3; val_offset:237912*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237912*0 + 3*200*FLEN/8, x4, x1, x2)

inst_79305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bff00000000000; valaddr_reg:x3; val_offset:237915*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237915*0 + 3*201*FLEN/8, x4, x1, x2)

inst_79306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bff80000000000; valaddr_reg:x3; val_offset:237918*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237918*0 + 3*202*FLEN/8, x4, x1, x2)

inst_79307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffc0000000000; valaddr_reg:x3; val_offset:237921*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237921*0 + 3*203*FLEN/8, x4, x1, x2)

inst_79308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffe0000000000; valaddr_reg:x3; val_offset:237924*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237924*0 + 3*204*FLEN/8, x4, x1, x2)

inst_79309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfff0000000000; valaddr_reg:x3; val_offset:237927*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237927*0 + 3*205*FLEN/8, x4, x1, x2)

inst_79310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfff8000000000; valaddr_reg:x3; val_offset:237930*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237930*0 + 3*206*FLEN/8, x4, x1, x2)

inst_79311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffc000000000; valaddr_reg:x3; val_offset:237933*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237933*0 + 3*207*FLEN/8, x4, x1, x2)

inst_79312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffe000000000; valaddr_reg:x3; val_offset:237936*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237936*0 + 3*208*FLEN/8, x4, x1, x2)

inst_79313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffff000000000; valaddr_reg:x3; val_offset:237939*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237939*0 + 3*209*FLEN/8, x4, x1, x2)

inst_79314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffff800000000; valaddr_reg:x3; val_offset:237942*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237942*0 + 3*210*FLEN/8, x4, x1, x2)

inst_79315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffc00000000; valaddr_reg:x3; val_offset:237945*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237945*0 + 3*211*FLEN/8, x4, x1, x2)

inst_79316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffe00000000; valaddr_reg:x3; val_offset:237948*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237948*0 + 3*212*FLEN/8, x4, x1, x2)

inst_79317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffff00000000; valaddr_reg:x3; val_offset:237951*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237951*0 + 3*213*FLEN/8, x4, x1, x2)

inst_79318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffff80000000; valaddr_reg:x3; val_offset:237954*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237954*0 + 3*214*FLEN/8, x4, x1, x2)

inst_79319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffc0000000; valaddr_reg:x3; val_offset:237957*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237957*0 + 3*215*FLEN/8, x4, x1, x2)

inst_79320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffe0000000; valaddr_reg:x3; val_offset:237960*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237960*0 + 3*216*FLEN/8, x4, x1, x2)

inst_79321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffff0000000; valaddr_reg:x3; val_offset:237963*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237963*0 + 3*217*FLEN/8, x4, x1, x2)

inst_79322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffff8000000; valaddr_reg:x3; val_offset:237966*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237966*0 + 3*218*FLEN/8, x4, x1, x2)

inst_79323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffc000000; valaddr_reg:x3; val_offset:237969*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237969*0 + 3*219*FLEN/8, x4, x1, x2)

inst_79324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffe000000; valaddr_reg:x3; val_offset:237972*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237972*0 + 3*220*FLEN/8, x4, x1, x2)

inst_79325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffff000000; valaddr_reg:x3; val_offset:237975*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237975*0 + 3*221*FLEN/8, x4, x1, x2)

inst_79326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffff800000; valaddr_reg:x3; val_offset:237978*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237978*0 + 3*222*FLEN/8, x4, x1, x2)

inst_79327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffc00000; valaddr_reg:x3; val_offset:237981*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237981*0 + 3*223*FLEN/8, x4, x1, x2)

inst_79328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffe00000; valaddr_reg:x3; val_offset:237984*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237984*0 + 3*224*FLEN/8, x4, x1, x2)

inst_79329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffff00000; valaddr_reg:x3; val_offset:237987*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237987*0 + 3*225*FLEN/8, x4, x1, x2)

inst_79330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffff80000; valaddr_reg:x3; val_offset:237990*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237990*0 + 3*226*FLEN/8, x4, x1, x2)

inst_79331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffc0000; valaddr_reg:x3; val_offset:237993*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237993*0 + 3*227*FLEN/8, x4, x1, x2)

inst_79332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffe0000; valaddr_reg:x3; val_offset:237996*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237996*0 + 3*228*FLEN/8, x4, x1, x2)

inst_79333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffff0000; valaddr_reg:x3; val_offset:237999*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 237999*0 + 3*229*FLEN/8, x4, x1, x2)

inst_79334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffff8000; valaddr_reg:x3; val_offset:238002*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238002*0 + 3*230*FLEN/8, x4, x1, x2)

inst_79335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffc000; valaddr_reg:x3; val_offset:238005*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238005*0 + 3*231*FLEN/8, x4, x1, x2)

inst_79336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffe000; valaddr_reg:x3; val_offset:238008*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238008*0 + 3*232*FLEN/8, x4, x1, x2)

inst_79337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffff000; valaddr_reg:x3; val_offset:238011*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238011*0 + 3*233*FLEN/8, x4, x1, x2)

inst_79338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffff800; valaddr_reg:x3; val_offset:238014*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238014*0 + 3*234*FLEN/8, x4, x1, x2)

inst_79339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffc00; valaddr_reg:x3; val_offset:238017*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238017*0 + 3*235*FLEN/8, x4, x1, x2)

inst_79340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffe00; valaddr_reg:x3; val_offset:238020*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238020*0 + 3*236*FLEN/8, x4, x1, x2)

inst_79341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffff00; valaddr_reg:x3; val_offset:238023*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238023*0 + 3*237*FLEN/8, x4, x1, x2)

inst_79342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffff80; valaddr_reg:x3; val_offset:238026*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238026*0 + 3*238*FLEN/8, x4, x1, x2)

inst_79343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffffc0; valaddr_reg:x3; val_offset:238029*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238029*0 + 3*239*FLEN/8, x4, x1, x2)

inst_79344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffffe0; valaddr_reg:x3; val_offset:238032*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238032*0 + 3*240*FLEN/8, x4, x1, x2)

inst_79345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffff0; valaddr_reg:x3; val_offset:238035*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238035*0 + 3*241*FLEN/8, x4, x1, x2)

inst_79346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffff8; valaddr_reg:x3; val_offset:238038*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238038*0 + 3*242*FLEN/8, x4, x1, x2)

inst_79347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffffc; valaddr_reg:x3; val_offset:238041*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238041*0 + 3*243*FLEN/8, x4, x1, x2)

inst_79348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bffffffffffffe; valaddr_reg:x3; val_offset:238044*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238044*0 + 3*244*FLEN/8, x4, x1, x2)

inst_79349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x89ad7120f1311 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa89ad7120f1311; op2val:0x8000;
op3val:0x80bfffffffffffff; valaddr_reg:x3; val_offset:238047*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238047*0 + 3*245*FLEN/8, x4, x1, x2)

inst_79350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:238050*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238050*0 + 3*246*FLEN/8, x4, x1, x2)

inst_79351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:238053*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238053*0 + 3*247*FLEN/8, x4, x1, x2)

inst_79352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:238056*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238056*0 + 3*248*FLEN/8, x4, x1, x2)

inst_79353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:238059*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238059*0 + 3*249*FLEN/8, x4, x1, x2)

inst_79354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:238062*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238062*0 + 3*250*FLEN/8, x4, x1, x2)

inst_79355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:238065*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238065*0 + 3*251*FLEN/8, x4, x1, x2)

inst_79356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:238068*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238068*0 + 3*252*FLEN/8, x4, x1, x2)

inst_79357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:238071*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238071*0 + 3*253*FLEN/8, x4, x1, x2)

inst_79358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:238074*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238074*0 + 3*254*FLEN/8, x4, x1, x2)

inst_79359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:238077*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238077*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_79360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:238080*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238080*0 + 3*256*FLEN/8, x4, x1, x2)

inst_79361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:238083*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238083*0 + 3*257*FLEN/8, x4, x1, x2)

inst_79362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:238086*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238086*0 + 3*258*FLEN/8, x4, x1, x2)

inst_79363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:238089*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238089*0 + 3*259*FLEN/8, x4, x1, x2)

inst_79364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:238092*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238092*0 + 3*260*FLEN/8, x4, x1, x2)

inst_79365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:238095*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238095*0 + 3*261*FLEN/8, x4, x1, x2)

inst_79366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:238098*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238098*0 + 3*262*FLEN/8, x4, x1, x2)

inst_79367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:238101*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238101*0 + 3*263*FLEN/8, x4, x1, x2)

inst_79368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:238104*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238104*0 + 3*264*FLEN/8, x4, x1, x2)

inst_79369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:238107*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238107*0 + 3*265*FLEN/8, x4, x1, x2)

inst_79370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:238110*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238110*0 + 3*266*FLEN/8, x4, x1, x2)

inst_79371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:238113*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238113*0 + 3*267*FLEN/8, x4, x1, x2)

inst_79372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000000000; valaddr_reg:x3; val_offset:238116*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238116*0 + 3*268*FLEN/8, x4, x1, x2)

inst_79373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000000001; valaddr_reg:x3; val_offset:238119*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238119*0 + 3*269*FLEN/8, x4, x1, x2)

inst_79374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000000003; valaddr_reg:x3; val_offset:238122*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238122*0 + 3*270*FLEN/8, x4, x1, x2)

inst_79375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000000007; valaddr_reg:x3; val_offset:238125*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238125*0 + 3*271*FLEN/8, x4, x1, x2)

inst_79376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000000000f; valaddr_reg:x3; val_offset:238128*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238128*0 + 3*272*FLEN/8, x4, x1, x2)

inst_79377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000000001f; valaddr_reg:x3; val_offset:238131*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238131*0 + 3*273*FLEN/8, x4, x1, x2)

inst_79378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000000003f; valaddr_reg:x3; val_offset:238134*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238134*0 + 3*274*FLEN/8, x4, x1, x2)

inst_79379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000000007f; valaddr_reg:x3; val_offset:238137*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238137*0 + 3*275*FLEN/8, x4, x1, x2)

inst_79380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000000000ff; valaddr_reg:x3; val_offset:238140*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238140*0 + 3*276*FLEN/8, x4, x1, x2)

inst_79381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000000001ff; valaddr_reg:x3; val_offset:238143*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238143*0 + 3*277*FLEN/8, x4, x1, x2)

inst_79382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000000003ff; valaddr_reg:x3; val_offset:238146*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238146*0 + 3*278*FLEN/8, x4, x1, x2)

inst_79383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000000007ff; valaddr_reg:x3; val_offset:238149*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238149*0 + 3*279*FLEN/8, x4, x1, x2)

inst_79384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000000fff; valaddr_reg:x3; val_offset:238152*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238152*0 + 3*280*FLEN/8, x4, x1, x2)

inst_79385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000001fff; valaddr_reg:x3; val_offset:238155*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238155*0 + 3*281*FLEN/8, x4, x1, x2)

inst_79386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000003fff; valaddr_reg:x3; val_offset:238158*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238158*0 + 3*282*FLEN/8, x4, x1, x2)

inst_79387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000007fff; valaddr_reg:x3; val_offset:238161*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238161*0 + 3*283*FLEN/8, x4, x1, x2)

inst_79388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000000ffff; valaddr_reg:x3; val_offset:238164*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238164*0 + 3*284*FLEN/8, x4, x1, x2)

inst_79389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000001ffff; valaddr_reg:x3; val_offset:238167*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238167*0 + 3*285*FLEN/8, x4, x1, x2)

inst_79390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000003ffff; valaddr_reg:x3; val_offset:238170*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238170*0 + 3*286*FLEN/8, x4, x1, x2)

inst_79391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000007ffff; valaddr_reg:x3; val_offset:238173*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238173*0 + 3*287*FLEN/8, x4, x1, x2)

inst_79392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000000fffff; valaddr_reg:x3; val_offset:238176*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238176*0 + 3*288*FLEN/8, x4, x1, x2)

inst_79393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000001fffff; valaddr_reg:x3; val_offset:238179*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238179*0 + 3*289*FLEN/8, x4, x1, x2)

inst_79394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000003fffff; valaddr_reg:x3; val_offset:238182*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238182*0 + 3*290*FLEN/8, x4, x1, x2)

inst_79395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000007fffff; valaddr_reg:x3; val_offset:238185*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238185*0 + 3*291*FLEN/8, x4, x1, x2)

inst_79396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000000ffffff; valaddr_reg:x3; val_offset:238188*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238188*0 + 3*292*FLEN/8, x4, x1, x2)

inst_79397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000001ffffff; valaddr_reg:x3; val_offset:238191*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238191*0 + 3*293*FLEN/8, x4, x1, x2)

inst_79398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000003ffffff; valaddr_reg:x3; val_offset:238194*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238194*0 + 3*294*FLEN/8, x4, x1, x2)

inst_79399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000007ffffff; valaddr_reg:x3; val_offset:238197*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238197*0 + 3*295*FLEN/8, x4, x1, x2)

inst_79400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000000fffffff; valaddr_reg:x3; val_offset:238200*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238200*0 + 3*296*FLEN/8, x4, x1, x2)

inst_79401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000001fffffff; valaddr_reg:x3; val_offset:238203*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238203*0 + 3*297*FLEN/8, x4, x1, x2)

inst_79402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000003fffffff; valaddr_reg:x3; val_offset:238206*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238206*0 + 3*298*FLEN/8, x4, x1, x2)

inst_79403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000007fffffff; valaddr_reg:x3; val_offset:238209*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238209*0 + 3*299*FLEN/8, x4, x1, x2)

inst_79404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800000ffffffff; valaddr_reg:x3; val_offset:238212*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238212*0 + 3*300*FLEN/8, x4, x1, x2)

inst_79405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800001ffffffff; valaddr_reg:x3; val_offset:238215*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238215*0 + 3*301*FLEN/8, x4, x1, x2)

inst_79406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800003ffffffff; valaddr_reg:x3; val_offset:238218*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238218*0 + 3*302*FLEN/8, x4, x1, x2)

inst_79407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800007ffffffff; valaddr_reg:x3; val_offset:238221*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238221*0 + 3*303*FLEN/8, x4, x1, x2)

inst_79408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380000fffffffff; valaddr_reg:x3; val_offset:238224*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238224*0 + 3*304*FLEN/8, x4, x1, x2)

inst_79409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380001fffffffff; valaddr_reg:x3; val_offset:238227*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238227*0 + 3*305*FLEN/8, x4, x1, x2)

inst_79410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380003fffffffff; valaddr_reg:x3; val_offset:238230*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238230*0 + 3*306*FLEN/8, x4, x1, x2)

inst_79411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380007fffffffff; valaddr_reg:x3; val_offset:238233*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238233*0 + 3*307*FLEN/8, x4, x1, x2)

inst_79412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838000ffffffffff; valaddr_reg:x3; val_offset:238236*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238236*0 + 3*308*FLEN/8, x4, x1, x2)

inst_79413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838001ffffffffff; valaddr_reg:x3; val_offset:238239*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238239*0 + 3*309*FLEN/8, x4, x1, x2)

inst_79414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838003ffffffffff; valaddr_reg:x3; val_offset:238242*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238242*0 + 3*310*FLEN/8, x4, x1, x2)

inst_79415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838007ffffffffff; valaddr_reg:x3; val_offset:238245*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238245*0 + 3*311*FLEN/8, x4, x1, x2)

inst_79416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83800fffffffffff; valaddr_reg:x3; val_offset:238248*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238248*0 + 3*312*FLEN/8, x4, x1, x2)

inst_79417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83801fffffffffff; valaddr_reg:x3; val_offset:238251*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238251*0 + 3*313*FLEN/8, x4, x1, x2)

inst_79418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83803fffffffffff; valaddr_reg:x3; val_offset:238254*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238254*0 + 3*314*FLEN/8, x4, x1, x2)

inst_79419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x83807fffffffffff; valaddr_reg:x3; val_offset:238257*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238257*0 + 3*315*FLEN/8, x4, x1, x2)

inst_79420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8380ffffffffffff; valaddr_reg:x3; val_offset:238260*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238260*0 + 3*316*FLEN/8, x4, x1, x2)

inst_79421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8381ffffffffffff; valaddr_reg:x3; val_offset:238263*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238263*0 + 3*317*FLEN/8, x4, x1, x2)

inst_79422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8383ffffffffffff; valaddr_reg:x3; val_offset:238266*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238266*0 + 3*318*FLEN/8, x4, x1, x2)

inst_79423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8387ffffffffffff; valaddr_reg:x3; val_offset:238269*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238269*0 + 3*319*FLEN/8, x4, x1, x2)

inst_79424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x8388000000000000; valaddr_reg:x3; val_offset:238272*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238272*0 + 3*320*FLEN/8, x4, x1, x2)

inst_79425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838c000000000000; valaddr_reg:x3; val_offset:238275*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238275*0 + 3*321*FLEN/8, x4, x1, x2)

inst_79426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838e000000000000; valaddr_reg:x3; val_offset:238278*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238278*0 + 3*322*FLEN/8, x4, x1, x2)

inst_79427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838f000000000000; valaddr_reg:x3; val_offset:238281*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238281*0 + 3*323*FLEN/8, x4, x1, x2)

inst_79428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838f800000000000; valaddr_reg:x3; val_offset:238284*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238284*0 + 3*324*FLEN/8, x4, x1, x2)

inst_79429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fc00000000000; valaddr_reg:x3; val_offset:238287*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238287*0 + 3*325*FLEN/8, x4, x1, x2)

inst_79430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fe00000000000; valaddr_reg:x3; val_offset:238290*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238290*0 + 3*326*FLEN/8, x4, x1, x2)

inst_79431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ff00000000000; valaddr_reg:x3; val_offset:238293*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238293*0 + 3*327*FLEN/8, x4, x1, x2)

inst_79432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ff80000000000; valaddr_reg:x3; val_offset:238296*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238296*0 + 3*328*FLEN/8, x4, x1, x2)

inst_79433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffc0000000000; valaddr_reg:x3; val_offset:238299*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238299*0 + 3*329*FLEN/8, x4, x1, x2)

inst_79434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffe0000000000; valaddr_reg:x3; val_offset:238302*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238302*0 + 3*330*FLEN/8, x4, x1, x2)

inst_79435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fff0000000000; valaddr_reg:x3; val_offset:238305*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238305*0 + 3*331*FLEN/8, x4, x1, x2)

inst_79436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fff8000000000; valaddr_reg:x3; val_offset:238308*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238308*0 + 3*332*FLEN/8, x4, x1, x2)

inst_79437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffc000000000; valaddr_reg:x3; val_offset:238311*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238311*0 + 3*333*FLEN/8, x4, x1, x2)

inst_79438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffe000000000; valaddr_reg:x3; val_offset:238314*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238314*0 + 3*334*FLEN/8, x4, x1, x2)

inst_79439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffff000000000; valaddr_reg:x3; val_offset:238317*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238317*0 + 3*335*FLEN/8, x4, x1, x2)

inst_79440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffff800000000; valaddr_reg:x3; val_offset:238320*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238320*0 + 3*336*FLEN/8, x4, x1, x2)

inst_79441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffc00000000; valaddr_reg:x3; val_offset:238323*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238323*0 + 3*337*FLEN/8, x4, x1, x2)

inst_79442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffe00000000; valaddr_reg:x3; val_offset:238326*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238326*0 + 3*338*FLEN/8, x4, x1, x2)

inst_79443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffff00000000; valaddr_reg:x3; val_offset:238329*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238329*0 + 3*339*FLEN/8, x4, x1, x2)

inst_79444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffff80000000; valaddr_reg:x3; val_offset:238332*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238332*0 + 3*340*FLEN/8, x4, x1, x2)

inst_79445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffc0000000; valaddr_reg:x3; val_offset:238335*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238335*0 + 3*341*FLEN/8, x4, x1, x2)

inst_79446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffe0000000; valaddr_reg:x3; val_offset:238338*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238338*0 + 3*342*FLEN/8, x4, x1, x2)

inst_79447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffff0000000; valaddr_reg:x3; val_offset:238341*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238341*0 + 3*343*FLEN/8, x4, x1, x2)

inst_79448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffff8000000; valaddr_reg:x3; val_offset:238344*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238344*0 + 3*344*FLEN/8, x4, x1, x2)

inst_79449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffc000000; valaddr_reg:x3; val_offset:238347*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238347*0 + 3*345*FLEN/8, x4, x1, x2)

inst_79450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffe000000; valaddr_reg:x3; val_offset:238350*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238350*0 + 3*346*FLEN/8, x4, x1, x2)

inst_79451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffff000000; valaddr_reg:x3; val_offset:238353*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238353*0 + 3*347*FLEN/8, x4, x1, x2)

inst_79452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffff800000; valaddr_reg:x3; val_offset:238356*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238356*0 + 3*348*FLEN/8, x4, x1, x2)

inst_79453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffc00000; valaddr_reg:x3; val_offset:238359*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238359*0 + 3*349*FLEN/8, x4, x1, x2)

inst_79454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffe00000; valaddr_reg:x3; val_offset:238362*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238362*0 + 3*350*FLEN/8, x4, x1, x2)

inst_79455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffff00000; valaddr_reg:x3; val_offset:238365*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238365*0 + 3*351*FLEN/8, x4, x1, x2)

inst_79456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffff80000; valaddr_reg:x3; val_offset:238368*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238368*0 + 3*352*FLEN/8, x4, x1, x2)

inst_79457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffc0000; valaddr_reg:x3; val_offset:238371*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238371*0 + 3*353*FLEN/8, x4, x1, x2)

inst_79458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffe0000; valaddr_reg:x3; val_offset:238374*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238374*0 + 3*354*FLEN/8, x4, x1, x2)

inst_79459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffff0000; valaddr_reg:x3; val_offset:238377*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238377*0 + 3*355*FLEN/8, x4, x1, x2)

inst_79460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffff8000; valaddr_reg:x3; val_offset:238380*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238380*0 + 3*356*FLEN/8, x4, x1, x2)

inst_79461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffc000; valaddr_reg:x3; val_offset:238383*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238383*0 + 3*357*FLEN/8, x4, x1, x2)

inst_79462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffe000; valaddr_reg:x3; val_offset:238386*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238386*0 + 3*358*FLEN/8, x4, x1, x2)

inst_79463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffff000; valaddr_reg:x3; val_offset:238389*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238389*0 + 3*359*FLEN/8, x4, x1, x2)

inst_79464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffff800; valaddr_reg:x3; val_offset:238392*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238392*0 + 3*360*FLEN/8, x4, x1, x2)

inst_79465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffc00; valaddr_reg:x3; val_offset:238395*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238395*0 + 3*361*FLEN/8, x4, x1, x2)

inst_79466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffe00; valaddr_reg:x3; val_offset:238398*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238398*0 + 3*362*FLEN/8, x4, x1, x2)

inst_79467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffff00; valaddr_reg:x3; val_offset:238401*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238401*0 + 3*363*FLEN/8, x4, x1, x2)

inst_79468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffff80; valaddr_reg:x3; val_offset:238404*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238404*0 + 3*364*FLEN/8, x4, x1, x2)

inst_79469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffffc0; valaddr_reg:x3; val_offset:238407*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238407*0 + 3*365*FLEN/8, x4, x1, x2)

inst_79470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffffe0; valaddr_reg:x3; val_offset:238410*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238410*0 + 3*366*FLEN/8, x4, x1, x2)

inst_79471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffff0; valaddr_reg:x3; val_offset:238413*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238413*0 + 3*367*FLEN/8, x4, x1, x2)

inst_79472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffff8; valaddr_reg:x3; val_offset:238416*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238416*0 + 3*368*FLEN/8, x4, x1, x2)

inst_79473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffffc; valaddr_reg:x3; val_offset:238419*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238419*0 + 3*369*FLEN/8, x4, x1, x2)

inst_79474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838ffffffffffffe; valaddr_reg:x3; val_offset:238422*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238422*0 + 3*370*FLEN/8, x4, x1, x2)

inst_79475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8a7945b061b5b and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x038 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8a7945b061b5b; op2val:0x8000;
op3val:0x838fffffffffffff; valaddr_reg:x3; val_offset:238425*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238425*0 + 3*371*FLEN/8, x4, x1, x2)

inst_79476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:238428*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238428*0 + 3*372*FLEN/8, x4, x1, x2)

inst_79477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:238431*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238431*0 + 3*373*FLEN/8, x4, x1, x2)

inst_79478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:238434*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238434*0 + 3*374*FLEN/8, x4, x1, x2)

inst_79479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:238437*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238437*0 + 3*375*FLEN/8, x4, x1, x2)

inst_79480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:238440*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238440*0 + 3*376*FLEN/8, x4, x1, x2)

inst_79481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:238443*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238443*0 + 3*377*FLEN/8, x4, x1, x2)

inst_79482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:238446*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238446*0 + 3*378*FLEN/8, x4, x1, x2)

inst_79483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:238449*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238449*0 + 3*379*FLEN/8, x4, x1, x2)

inst_79484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:238452*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238452*0 + 3*380*FLEN/8, x4, x1, x2)

inst_79485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:238455*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238455*0 + 3*381*FLEN/8, x4, x1, x2)

inst_79486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:238458*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238458*0 + 3*382*FLEN/8, x4, x1, x2)

inst_79487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:238461*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238461*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_79488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:238464*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238464*0 + 3*384*FLEN/8, x4, x1, x2)

inst_79489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:238467*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238467*0 + 3*385*FLEN/8, x4, x1, x2)

inst_79490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:238470*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238470*0 + 3*386*FLEN/8, x4, x1, x2)

inst_79491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:238473*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238473*0 + 3*387*FLEN/8, x4, x1, x2)

inst_79492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:238476*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238476*0 + 3*388*FLEN/8, x4, x1, x2)

inst_79493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:238479*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238479*0 + 3*389*FLEN/8, x4, x1, x2)

inst_79494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:238482*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238482*0 + 3*390*FLEN/8, x4, x1, x2)

inst_79495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:238485*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238485*0 + 3*391*FLEN/8, x4, x1, x2)

inst_79496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:238488*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238488*0 + 3*392*FLEN/8, x4, x1, x2)

inst_79497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:238491*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238491*0 + 3*393*FLEN/8, x4, x1, x2)

inst_79498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000000000; valaddr_reg:x3; val_offset:238494*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238494*0 + 3*394*FLEN/8, x4, x1, x2)

inst_79499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000000001; valaddr_reg:x3; val_offset:238497*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238497*0 + 3*395*FLEN/8, x4, x1, x2)

inst_79500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000000003; valaddr_reg:x3; val_offset:238500*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238500*0 + 3*396*FLEN/8, x4, x1, x2)

inst_79501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000000007; valaddr_reg:x3; val_offset:238503*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238503*0 + 3*397*FLEN/8, x4, x1, x2)

inst_79502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000000000f; valaddr_reg:x3; val_offset:238506*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238506*0 + 3*398*FLEN/8, x4, x1, x2)

inst_79503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000000001f; valaddr_reg:x3; val_offset:238509*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238509*0 + 3*399*FLEN/8, x4, x1, x2)

inst_79504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000000003f; valaddr_reg:x3; val_offset:238512*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238512*0 + 3*400*FLEN/8, x4, x1, x2)

inst_79505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000000007f; valaddr_reg:x3; val_offset:238515*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238515*0 + 3*401*FLEN/8, x4, x1, x2)

inst_79506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000000000ff; valaddr_reg:x3; val_offset:238518*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238518*0 + 3*402*FLEN/8, x4, x1, x2)

inst_79507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000000001ff; valaddr_reg:x3; val_offset:238521*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238521*0 + 3*403*FLEN/8, x4, x1, x2)

inst_79508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000000003ff; valaddr_reg:x3; val_offset:238524*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238524*0 + 3*404*FLEN/8, x4, x1, x2)

inst_79509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000000007ff; valaddr_reg:x3; val_offset:238527*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238527*0 + 3*405*FLEN/8, x4, x1, x2)

inst_79510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000000fff; valaddr_reg:x3; val_offset:238530*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238530*0 + 3*406*FLEN/8, x4, x1, x2)

inst_79511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000001fff; valaddr_reg:x3; val_offset:238533*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238533*0 + 3*407*FLEN/8, x4, x1, x2)

inst_79512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000003fff; valaddr_reg:x3; val_offset:238536*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238536*0 + 3*408*FLEN/8, x4, x1, x2)

inst_79513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000007fff; valaddr_reg:x3; val_offset:238539*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238539*0 + 3*409*FLEN/8, x4, x1, x2)

inst_79514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000000ffff; valaddr_reg:x3; val_offset:238542*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238542*0 + 3*410*FLEN/8, x4, x1, x2)

inst_79515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000001ffff; valaddr_reg:x3; val_offset:238545*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238545*0 + 3*411*FLEN/8, x4, x1, x2)

inst_79516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000003ffff; valaddr_reg:x3; val_offset:238548*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238548*0 + 3*412*FLEN/8, x4, x1, x2)

inst_79517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000007ffff; valaddr_reg:x3; val_offset:238551*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238551*0 + 3*413*FLEN/8, x4, x1, x2)

inst_79518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000000fffff; valaddr_reg:x3; val_offset:238554*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238554*0 + 3*414*FLEN/8, x4, x1, x2)

inst_79519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000001fffff; valaddr_reg:x3; val_offset:238557*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238557*0 + 3*415*FLEN/8, x4, x1, x2)

inst_79520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000003fffff; valaddr_reg:x3; val_offset:238560*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238560*0 + 3*416*FLEN/8, x4, x1, x2)

inst_79521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000007fffff; valaddr_reg:x3; val_offset:238563*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238563*0 + 3*417*FLEN/8, x4, x1, x2)

inst_79522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000000ffffff; valaddr_reg:x3; val_offset:238566*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238566*0 + 3*418*FLEN/8, x4, x1, x2)

inst_79523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000001ffffff; valaddr_reg:x3; val_offset:238569*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238569*0 + 3*419*FLEN/8, x4, x1, x2)

inst_79524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000003ffffff; valaddr_reg:x3; val_offset:238572*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238572*0 + 3*420*FLEN/8, x4, x1, x2)

inst_79525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000007ffffff; valaddr_reg:x3; val_offset:238575*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238575*0 + 3*421*FLEN/8, x4, x1, x2)

inst_79526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000000fffffff; valaddr_reg:x3; val_offset:238578*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238578*0 + 3*422*FLEN/8, x4, x1, x2)

inst_79527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000001fffffff; valaddr_reg:x3; val_offset:238581*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238581*0 + 3*423*FLEN/8, x4, x1, x2)

inst_79528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000003fffffff; valaddr_reg:x3; val_offset:238584*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238584*0 + 3*424*FLEN/8, x4, x1, x2)

inst_79529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000007fffffff; valaddr_reg:x3; val_offset:238587*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238587*0 + 3*425*FLEN/8, x4, x1, x2)

inst_79530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000000ffffffff; valaddr_reg:x3; val_offset:238590*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238590*0 + 3*426*FLEN/8, x4, x1, x2)

inst_79531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000001ffffffff; valaddr_reg:x3; val_offset:238593*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238593*0 + 3*427*FLEN/8, x4, x1, x2)

inst_79532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000003ffffffff; valaddr_reg:x3; val_offset:238596*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238596*0 + 3*428*FLEN/8, x4, x1, x2)

inst_79533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000007ffffffff; valaddr_reg:x3; val_offset:238599*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238599*0 + 3*429*FLEN/8, x4, x1, x2)

inst_79534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100000fffffffff; valaddr_reg:x3; val_offset:238602*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238602*0 + 3*430*FLEN/8, x4, x1, x2)

inst_79535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100001fffffffff; valaddr_reg:x3; val_offset:238605*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238605*0 + 3*431*FLEN/8, x4, x1, x2)

inst_79536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100003fffffffff; valaddr_reg:x3; val_offset:238608*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238608*0 + 3*432*FLEN/8, x4, x1, x2)

inst_79537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100007fffffffff; valaddr_reg:x3; val_offset:238611*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238611*0 + 3*433*FLEN/8, x4, x1, x2)

inst_79538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810000ffffffffff; valaddr_reg:x3; val_offset:238614*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238614*0 + 3*434*FLEN/8, x4, x1, x2)

inst_79539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810001ffffffffff; valaddr_reg:x3; val_offset:238617*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238617*0 + 3*435*FLEN/8, x4, x1, x2)

inst_79540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810003ffffffffff; valaddr_reg:x3; val_offset:238620*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238620*0 + 3*436*FLEN/8, x4, x1, x2)

inst_79541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810007ffffffffff; valaddr_reg:x3; val_offset:238623*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238623*0 + 3*437*FLEN/8, x4, x1, x2)

inst_79542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81000fffffffffff; valaddr_reg:x3; val_offset:238626*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238626*0 + 3*438*FLEN/8, x4, x1, x2)

inst_79543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81001fffffffffff; valaddr_reg:x3; val_offset:238629*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238629*0 + 3*439*FLEN/8, x4, x1, x2)

inst_79544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81003fffffffffff; valaddr_reg:x3; val_offset:238632*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238632*0 + 3*440*FLEN/8, x4, x1, x2)

inst_79545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x81007fffffffffff; valaddr_reg:x3; val_offset:238635*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238635*0 + 3*441*FLEN/8, x4, x1, x2)

inst_79546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8100ffffffffffff; valaddr_reg:x3; val_offset:238638*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238638*0 + 3*442*FLEN/8, x4, x1, x2)

inst_79547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8101ffffffffffff; valaddr_reg:x3; val_offset:238641*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238641*0 + 3*443*FLEN/8, x4, x1, x2)

inst_79548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8103ffffffffffff; valaddr_reg:x3; val_offset:238644*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238644*0 + 3*444*FLEN/8, x4, x1, x2)

inst_79549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8107ffffffffffff; valaddr_reg:x3; val_offset:238647*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238647*0 + 3*445*FLEN/8, x4, x1, x2)

inst_79550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x8108000000000000; valaddr_reg:x3; val_offset:238650*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238650*0 + 3*446*FLEN/8, x4, x1, x2)

inst_79551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810c000000000000; valaddr_reg:x3; val_offset:238653*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238653*0 + 3*447*FLEN/8, x4, x1, x2)

inst_79552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810e000000000000; valaddr_reg:x3; val_offset:238656*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238656*0 + 3*448*FLEN/8, x4, x1, x2)

inst_79553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810f000000000000; valaddr_reg:x3; val_offset:238659*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238659*0 + 3*449*FLEN/8, x4, x1, x2)

inst_79554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810f800000000000; valaddr_reg:x3; val_offset:238662*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238662*0 + 3*450*FLEN/8, x4, x1, x2)

inst_79555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fc00000000000; valaddr_reg:x3; val_offset:238665*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238665*0 + 3*451*FLEN/8, x4, x1, x2)

inst_79556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fe00000000000; valaddr_reg:x3; val_offset:238668*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238668*0 + 3*452*FLEN/8, x4, x1, x2)

inst_79557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ff00000000000; valaddr_reg:x3; val_offset:238671*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238671*0 + 3*453*FLEN/8, x4, x1, x2)

inst_79558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ff80000000000; valaddr_reg:x3; val_offset:238674*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238674*0 + 3*454*FLEN/8, x4, x1, x2)

inst_79559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffc0000000000; valaddr_reg:x3; val_offset:238677*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238677*0 + 3*455*FLEN/8, x4, x1, x2)

inst_79560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffe0000000000; valaddr_reg:x3; val_offset:238680*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238680*0 + 3*456*FLEN/8, x4, x1, x2)

inst_79561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fff0000000000; valaddr_reg:x3; val_offset:238683*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238683*0 + 3*457*FLEN/8, x4, x1, x2)

inst_79562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fff8000000000; valaddr_reg:x3; val_offset:238686*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238686*0 + 3*458*FLEN/8, x4, x1, x2)

inst_79563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffc000000000; valaddr_reg:x3; val_offset:238689*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238689*0 + 3*459*FLEN/8, x4, x1, x2)

inst_79564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffe000000000; valaddr_reg:x3; val_offset:238692*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238692*0 + 3*460*FLEN/8, x4, x1, x2)

inst_79565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffff000000000; valaddr_reg:x3; val_offset:238695*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238695*0 + 3*461*FLEN/8, x4, x1, x2)

inst_79566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffff800000000; valaddr_reg:x3; val_offset:238698*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238698*0 + 3*462*FLEN/8, x4, x1, x2)

inst_79567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffc00000000; valaddr_reg:x3; val_offset:238701*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238701*0 + 3*463*FLEN/8, x4, x1, x2)

inst_79568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffe00000000; valaddr_reg:x3; val_offset:238704*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238704*0 + 3*464*FLEN/8, x4, x1, x2)

inst_79569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffff00000000; valaddr_reg:x3; val_offset:238707*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238707*0 + 3*465*FLEN/8, x4, x1, x2)

inst_79570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffff80000000; valaddr_reg:x3; val_offset:238710*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238710*0 + 3*466*FLEN/8, x4, x1, x2)

inst_79571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffc0000000; valaddr_reg:x3; val_offset:238713*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238713*0 + 3*467*FLEN/8, x4, x1, x2)

inst_79572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffe0000000; valaddr_reg:x3; val_offset:238716*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238716*0 + 3*468*FLEN/8, x4, x1, x2)

inst_79573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffff0000000; valaddr_reg:x3; val_offset:238719*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238719*0 + 3*469*FLEN/8, x4, x1, x2)

inst_79574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffff8000000; valaddr_reg:x3; val_offset:238722*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238722*0 + 3*470*FLEN/8, x4, x1, x2)

inst_79575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffc000000; valaddr_reg:x3; val_offset:238725*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238725*0 + 3*471*FLEN/8, x4, x1, x2)

inst_79576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffe000000; valaddr_reg:x3; val_offset:238728*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238728*0 + 3*472*FLEN/8, x4, x1, x2)

inst_79577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffff000000; valaddr_reg:x3; val_offset:238731*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238731*0 + 3*473*FLEN/8, x4, x1, x2)

inst_79578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffff800000; valaddr_reg:x3; val_offset:238734*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238734*0 + 3*474*FLEN/8, x4, x1, x2)

inst_79579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffc00000; valaddr_reg:x3; val_offset:238737*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238737*0 + 3*475*FLEN/8, x4, x1, x2)

inst_79580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffe00000; valaddr_reg:x3; val_offset:238740*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238740*0 + 3*476*FLEN/8, x4, x1, x2)

inst_79581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffff00000; valaddr_reg:x3; val_offset:238743*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238743*0 + 3*477*FLEN/8, x4, x1, x2)

inst_79582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffff80000; valaddr_reg:x3; val_offset:238746*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238746*0 + 3*478*FLEN/8, x4, x1, x2)

inst_79583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffc0000; valaddr_reg:x3; val_offset:238749*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238749*0 + 3*479*FLEN/8, x4, x1, x2)

inst_79584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffe0000; valaddr_reg:x3; val_offset:238752*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238752*0 + 3*480*FLEN/8, x4, x1, x2)

inst_79585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffff0000; valaddr_reg:x3; val_offset:238755*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238755*0 + 3*481*FLEN/8, x4, x1, x2)

inst_79586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffff8000; valaddr_reg:x3; val_offset:238758*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238758*0 + 3*482*FLEN/8, x4, x1, x2)

inst_79587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffc000; valaddr_reg:x3; val_offset:238761*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238761*0 + 3*483*FLEN/8, x4, x1, x2)

inst_79588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffe000; valaddr_reg:x3; val_offset:238764*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238764*0 + 3*484*FLEN/8, x4, x1, x2)

inst_79589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffff000; valaddr_reg:x3; val_offset:238767*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238767*0 + 3*485*FLEN/8, x4, x1, x2)

inst_79590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffff800; valaddr_reg:x3; val_offset:238770*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238770*0 + 3*486*FLEN/8, x4, x1, x2)

inst_79591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffc00; valaddr_reg:x3; val_offset:238773*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238773*0 + 3*487*FLEN/8, x4, x1, x2)

inst_79592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffe00; valaddr_reg:x3; val_offset:238776*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238776*0 + 3*488*FLEN/8, x4, x1, x2)

inst_79593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffff00; valaddr_reg:x3; val_offset:238779*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238779*0 + 3*489*FLEN/8, x4, x1, x2)

inst_79594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffff80; valaddr_reg:x3; val_offset:238782*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238782*0 + 3*490*FLEN/8, x4, x1, x2)

inst_79595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffffc0; valaddr_reg:x3; val_offset:238785*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238785*0 + 3*491*FLEN/8, x4, x1, x2)

inst_79596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffffe0; valaddr_reg:x3; val_offset:238788*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238788*0 + 3*492*FLEN/8, x4, x1, x2)

inst_79597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffff0; valaddr_reg:x3; val_offset:238791*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238791*0 + 3*493*FLEN/8, x4, x1, x2)

inst_79598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffff8; valaddr_reg:x3; val_offset:238794*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238794*0 + 3*494*FLEN/8, x4, x1, x2)

inst_79599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffffc; valaddr_reg:x3; val_offset:238797*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238797*0 + 3*495*FLEN/8, x4, x1, x2)

inst_79600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810ffffffffffffe; valaddr_reg:x3; val_offset:238800*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238800*0 + 3*496*FLEN/8, x4, x1, x2)

inst_79601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8b1d9f846e3c3 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x010 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8b1d9f846e3c3; op2val:0x8000;
op3val:0x810fffffffffffff; valaddr_reg:x3; val_offset:238803*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238803*0 + 3*497*FLEN/8, x4, x1, x2)

inst_79602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000000000; valaddr_reg:x3; val_offset:238806*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238806*0 + 3*498*FLEN/8, x4, x1, x2)

inst_79603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000000001; valaddr_reg:x3; val_offset:238809*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238809*0 + 3*499*FLEN/8, x4, x1, x2)

inst_79604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000000003; valaddr_reg:x3; val_offset:238812*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238812*0 + 3*500*FLEN/8, x4, x1, x2)

inst_79605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000000007; valaddr_reg:x3; val_offset:238815*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238815*0 + 3*501*FLEN/8, x4, x1, x2)

inst_79606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000000000f; valaddr_reg:x3; val_offset:238818*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238818*0 + 3*502*FLEN/8, x4, x1, x2)

inst_79607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000000001f; valaddr_reg:x3; val_offset:238821*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238821*0 + 3*503*FLEN/8, x4, x1, x2)

inst_79608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000000003f; valaddr_reg:x3; val_offset:238824*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238824*0 + 3*504*FLEN/8, x4, x1, x2)

inst_79609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000000007f; valaddr_reg:x3; val_offset:238827*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238827*0 + 3*505*FLEN/8, x4, x1, x2)

inst_79610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000000000ff; valaddr_reg:x3; val_offset:238830*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238830*0 + 3*506*FLEN/8, x4, x1, x2)

inst_79611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000000001ff; valaddr_reg:x3; val_offset:238833*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238833*0 + 3*507*FLEN/8, x4, x1, x2)

inst_79612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000000003ff; valaddr_reg:x3; val_offset:238836*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238836*0 + 3*508*FLEN/8, x4, x1, x2)

inst_79613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000000007ff; valaddr_reg:x3; val_offset:238839*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238839*0 + 3*509*FLEN/8, x4, x1, x2)

inst_79614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000000fff; valaddr_reg:x3; val_offset:238842*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238842*0 + 3*510*FLEN/8, x4, x1, x2)

inst_79615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000001fff; valaddr_reg:x3; val_offset:238845*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238845*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_79616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000003fff; valaddr_reg:x3; val_offset:238848*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238848*0 + 3*512*FLEN/8, x4, x1, x2)

inst_79617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000007fff; valaddr_reg:x3; val_offset:238851*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238851*0 + 3*513*FLEN/8, x4, x1, x2)

inst_79618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000000ffff; valaddr_reg:x3; val_offset:238854*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238854*0 + 3*514*FLEN/8, x4, x1, x2)

inst_79619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000001ffff; valaddr_reg:x3; val_offset:238857*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238857*0 + 3*515*FLEN/8, x4, x1, x2)

inst_79620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000003ffff; valaddr_reg:x3; val_offset:238860*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238860*0 + 3*516*FLEN/8, x4, x1, x2)

inst_79621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000007ffff; valaddr_reg:x3; val_offset:238863*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238863*0 + 3*517*FLEN/8, x4, x1, x2)

inst_79622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000000fffff; valaddr_reg:x3; val_offset:238866*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238866*0 + 3*518*FLEN/8, x4, x1, x2)

inst_79623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000001fffff; valaddr_reg:x3; val_offset:238869*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238869*0 + 3*519*FLEN/8, x4, x1, x2)

inst_79624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000003fffff; valaddr_reg:x3; val_offset:238872*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238872*0 + 3*520*FLEN/8, x4, x1, x2)

inst_79625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000007fffff; valaddr_reg:x3; val_offset:238875*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238875*0 + 3*521*FLEN/8, x4, x1, x2)

inst_79626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000000ffffff; valaddr_reg:x3; val_offset:238878*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238878*0 + 3*522*FLEN/8, x4, x1, x2)

inst_79627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000001ffffff; valaddr_reg:x3; val_offset:238881*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238881*0 + 3*523*FLEN/8, x4, x1, x2)

inst_79628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000003ffffff; valaddr_reg:x3; val_offset:238884*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238884*0 + 3*524*FLEN/8, x4, x1, x2)

inst_79629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000007ffffff; valaddr_reg:x3; val_offset:238887*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238887*0 + 3*525*FLEN/8, x4, x1, x2)

inst_79630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000000fffffff; valaddr_reg:x3; val_offset:238890*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238890*0 + 3*526*FLEN/8, x4, x1, x2)

inst_79631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000001fffffff; valaddr_reg:x3; val_offset:238893*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238893*0 + 3*527*FLEN/8, x4, x1, x2)

inst_79632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000003fffffff; valaddr_reg:x3; val_offset:238896*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238896*0 + 3*528*FLEN/8, x4, x1, x2)

inst_79633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000007fffffff; valaddr_reg:x3; val_offset:238899*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238899*0 + 3*529*FLEN/8, x4, x1, x2)

inst_79634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700000ffffffff; valaddr_reg:x3; val_offset:238902*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238902*0 + 3*530*FLEN/8, x4, x1, x2)

inst_79635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700001ffffffff; valaddr_reg:x3; val_offset:238905*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238905*0 + 3*531*FLEN/8, x4, x1, x2)

inst_79636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700003ffffffff; valaddr_reg:x3; val_offset:238908*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238908*0 + 3*532*FLEN/8, x4, x1, x2)

inst_79637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700007ffffffff; valaddr_reg:x3; val_offset:238911*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238911*0 + 3*533*FLEN/8, x4, x1, x2)

inst_79638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70000fffffffff; valaddr_reg:x3; val_offset:238914*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238914*0 + 3*534*FLEN/8, x4, x1, x2)

inst_79639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70001fffffffff; valaddr_reg:x3; val_offset:238917*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238917*0 + 3*535*FLEN/8, x4, x1, x2)

inst_79640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70003fffffffff; valaddr_reg:x3; val_offset:238920*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238920*0 + 3*536*FLEN/8, x4, x1, x2)

inst_79641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70007fffffffff; valaddr_reg:x3; val_offset:238923*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238923*0 + 3*537*FLEN/8, x4, x1, x2)

inst_79642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7000ffffffffff; valaddr_reg:x3; val_offset:238926*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238926*0 + 3*538*FLEN/8, x4, x1, x2)

inst_79643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7001ffffffffff; valaddr_reg:x3; val_offset:238929*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238929*0 + 3*539*FLEN/8, x4, x1, x2)

inst_79644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7003ffffffffff; valaddr_reg:x3; val_offset:238932*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238932*0 + 3*540*FLEN/8, x4, x1, x2)

inst_79645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7007ffffffffff; valaddr_reg:x3; val_offset:238935*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238935*0 + 3*541*FLEN/8, x4, x1, x2)

inst_79646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe700fffffffffff; valaddr_reg:x3; val_offset:238938*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238938*0 + 3*542*FLEN/8, x4, x1, x2)

inst_79647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe701fffffffffff; valaddr_reg:x3; val_offset:238941*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238941*0 + 3*543*FLEN/8, x4, x1, x2)

inst_79648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe703fffffffffff; valaddr_reg:x3; val_offset:238944*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238944*0 + 3*544*FLEN/8, x4, x1, x2)

inst_79649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe707fffffffffff; valaddr_reg:x3; val_offset:238947*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238947*0 + 3*545*FLEN/8, x4, x1, x2)

inst_79650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe70ffffffffffff; valaddr_reg:x3; val_offset:238950*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238950*0 + 3*546*FLEN/8, x4, x1, x2)

inst_79651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe71ffffffffffff; valaddr_reg:x3; val_offset:238953*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238953*0 + 3*547*FLEN/8, x4, x1, x2)

inst_79652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe73ffffffffffff; valaddr_reg:x3; val_offset:238956*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238956*0 + 3*548*FLEN/8, x4, x1, x2)

inst_79653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe77ffffffffffff; valaddr_reg:x3; val_offset:238959*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238959*0 + 3*549*FLEN/8, x4, x1, x2)

inst_79654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe78000000000000; valaddr_reg:x3; val_offset:238962*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238962*0 + 3*550*FLEN/8, x4, x1, x2)

inst_79655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7c000000000000; valaddr_reg:x3; val_offset:238965*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238965*0 + 3*551*FLEN/8, x4, x1, x2)

inst_79656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7e000000000000; valaddr_reg:x3; val_offset:238968*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238968*0 + 3*552*FLEN/8, x4, x1, x2)

inst_79657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7f000000000000; valaddr_reg:x3; val_offset:238971*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238971*0 + 3*553*FLEN/8, x4, x1, x2)

inst_79658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7f800000000000; valaddr_reg:x3; val_offset:238974*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238974*0 + 3*554*FLEN/8, x4, x1, x2)

inst_79659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fc00000000000; valaddr_reg:x3; val_offset:238977*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238977*0 + 3*555*FLEN/8, x4, x1, x2)

inst_79660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fe00000000000; valaddr_reg:x3; val_offset:238980*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238980*0 + 3*556*FLEN/8, x4, x1, x2)

inst_79661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ff00000000000; valaddr_reg:x3; val_offset:238983*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238983*0 + 3*557*FLEN/8, x4, x1, x2)

inst_79662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ff80000000000; valaddr_reg:x3; val_offset:238986*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238986*0 + 3*558*FLEN/8, x4, x1, x2)

inst_79663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffc0000000000; valaddr_reg:x3; val_offset:238989*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238989*0 + 3*559*FLEN/8, x4, x1, x2)

inst_79664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffe0000000000; valaddr_reg:x3; val_offset:238992*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238992*0 + 3*560*FLEN/8, x4, x1, x2)

inst_79665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fff0000000000; valaddr_reg:x3; val_offset:238995*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238995*0 + 3*561*FLEN/8, x4, x1, x2)

inst_79666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fff8000000000; valaddr_reg:x3; val_offset:238998*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 238998*0 + 3*562*FLEN/8, x4, x1, x2)

inst_79667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffc000000000; valaddr_reg:x3; val_offset:239001*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239001*0 + 3*563*FLEN/8, x4, x1, x2)

inst_79668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffe000000000; valaddr_reg:x3; val_offset:239004*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239004*0 + 3*564*FLEN/8, x4, x1, x2)

inst_79669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffff000000000; valaddr_reg:x3; val_offset:239007*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239007*0 + 3*565*FLEN/8, x4, x1, x2)

inst_79670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffff800000000; valaddr_reg:x3; val_offset:239010*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239010*0 + 3*566*FLEN/8, x4, x1, x2)

inst_79671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffc00000000; valaddr_reg:x3; val_offset:239013*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239013*0 + 3*567*FLEN/8, x4, x1, x2)

inst_79672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffe00000000; valaddr_reg:x3; val_offset:239016*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239016*0 + 3*568*FLEN/8, x4, x1, x2)

inst_79673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffff00000000; valaddr_reg:x3; val_offset:239019*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239019*0 + 3*569*FLEN/8, x4, x1, x2)

inst_79674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffff80000000; valaddr_reg:x3; val_offset:239022*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239022*0 + 3*570*FLEN/8, x4, x1, x2)

inst_79675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffc0000000; valaddr_reg:x3; val_offset:239025*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239025*0 + 3*571*FLEN/8, x4, x1, x2)

inst_79676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffe0000000; valaddr_reg:x3; val_offset:239028*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239028*0 + 3*572*FLEN/8, x4, x1, x2)

inst_79677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffff0000000; valaddr_reg:x3; val_offset:239031*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239031*0 + 3*573*FLEN/8, x4, x1, x2)

inst_79678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffff8000000; valaddr_reg:x3; val_offset:239034*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239034*0 + 3*574*FLEN/8, x4, x1, x2)

inst_79679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffc000000; valaddr_reg:x3; val_offset:239037*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239037*0 + 3*575*FLEN/8, x4, x1, x2)

inst_79680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffe000000; valaddr_reg:x3; val_offset:239040*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239040*0 + 3*576*FLEN/8, x4, x1, x2)

inst_79681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffff000000; valaddr_reg:x3; val_offset:239043*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239043*0 + 3*577*FLEN/8, x4, x1, x2)

inst_79682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffff800000; valaddr_reg:x3; val_offset:239046*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239046*0 + 3*578*FLEN/8, x4, x1, x2)

inst_79683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffc00000; valaddr_reg:x3; val_offset:239049*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239049*0 + 3*579*FLEN/8, x4, x1, x2)

inst_79684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffe00000; valaddr_reg:x3; val_offset:239052*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239052*0 + 3*580*FLEN/8, x4, x1, x2)

inst_79685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffff00000; valaddr_reg:x3; val_offset:239055*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239055*0 + 3*581*FLEN/8, x4, x1, x2)

inst_79686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffff80000; valaddr_reg:x3; val_offset:239058*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239058*0 + 3*582*FLEN/8, x4, x1, x2)

inst_79687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffc0000; valaddr_reg:x3; val_offset:239061*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239061*0 + 3*583*FLEN/8, x4, x1, x2)

inst_79688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffe0000; valaddr_reg:x3; val_offset:239064*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239064*0 + 3*584*FLEN/8, x4, x1, x2)

inst_79689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffff0000; valaddr_reg:x3; val_offset:239067*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239067*0 + 3*585*FLEN/8, x4, x1, x2)

inst_79690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffff8000; valaddr_reg:x3; val_offset:239070*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239070*0 + 3*586*FLEN/8, x4, x1, x2)

inst_79691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffc000; valaddr_reg:x3; val_offset:239073*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239073*0 + 3*587*FLEN/8, x4, x1, x2)

inst_79692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffe000; valaddr_reg:x3; val_offset:239076*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239076*0 + 3*588*FLEN/8, x4, x1, x2)

inst_79693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffff000; valaddr_reg:x3; val_offset:239079*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239079*0 + 3*589*FLEN/8, x4, x1, x2)

inst_79694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffff800; valaddr_reg:x3; val_offset:239082*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239082*0 + 3*590*FLEN/8, x4, x1, x2)

inst_79695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffc00; valaddr_reg:x3; val_offset:239085*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239085*0 + 3*591*FLEN/8, x4, x1, x2)

inst_79696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffe00; valaddr_reg:x3; val_offset:239088*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239088*0 + 3*592*FLEN/8, x4, x1, x2)

inst_79697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffff00; valaddr_reg:x3; val_offset:239091*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239091*0 + 3*593*FLEN/8, x4, x1, x2)

inst_79698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffff80; valaddr_reg:x3; val_offset:239094*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239094*0 + 3*594*FLEN/8, x4, x1, x2)

inst_79699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffffc0; valaddr_reg:x3; val_offset:239097*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239097*0 + 3*595*FLEN/8, x4, x1, x2)

inst_79700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffffe0; valaddr_reg:x3; val_offset:239100*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239100*0 + 3*596*FLEN/8, x4, x1, x2)

inst_79701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffff0; valaddr_reg:x3; val_offset:239103*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239103*0 + 3*597*FLEN/8, x4, x1, x2)

inst_79702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffff8; valaddr_reg:x3; val_offset:239106*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239106*0 + 3*598*FLEN/8, x4, x1, x2)

inst_79703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffffc; valaddr_reg:x3; val_offset:239109*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239109*0 + 3*599*FLEN/8, x4, x1, x2)

inst_79704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7ffffffffffffe; valaddr_reg:x3; val_offset:239112*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239112*0 + 3*600*FLEN/8, x4, x1, x2)

inst_79705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbe7fffffffffffff; valaddr_reg:x3; val_offset:239115*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239115*0 + 3*601*FLEN/8, x4, x1, x2)

inst_79706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:239118*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239118*0 + 3*602*FLEN/8, x4, x1, x2)

inst_79707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:239121*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239121*0 + 3*603*FLEN/8, x4, x1, x2)

inst_79708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:239124*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239124*0 + 3*604*FLEN/8, x4, x1, x2)

inst_79709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:239127*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239127*0 + 3*605*FLEN/8, x4, x1, x2)

inst_79710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:239130*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239130*0 + 3*606*FLEN/8, x4, x1, x2)

inst_79711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:239133*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239133*0 + 3*607*FLEN/8, x4, x1, x2)

inst_79712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:239136*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239136*0 + 3*608*FLEN/8, x4, x1, x2)

inst_79713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:239139*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239139*0 + 3*609*FLEN/8, x4, x1, x2)

inst_79714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:239142*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239142*0 + 3*610*FLEN/8, x4, x1, x2)

inst_79715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:239145*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239145*0 + 3*611*FLEN/8, x4, x1, x2)

inst_79716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:239148*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239148*0 + 3*612*FLEN/8, x4, x1, x2)

inst_79717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:239151*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239151*0 + 3*613*FLEN/8, x4, x1, x2)

inst_79718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:239154*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239154*0 + 3*614*FLEN/8, x4, x1, x2)

inst_79719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:239157*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239157*0 + 3*615*FLEN/8, x4, x1, x2)

inst_79720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:239160*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239160*0 + 3*616*FLEN/8, x4, x1, x2)

inst_79721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:239163*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239163*0 + 3*617*FLEN/8, x4, x1, x2)

inst_79722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:239166*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239166*0 + 3*618*FLEN/8, x4, x1, x2)

inst_79723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:239169*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239169*0 + 3*619*FLEN/8, x4, x1, x2)

inst_79724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:239172*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239172*0 + 3*620*FLEN/8, x4, x1, x2)

inst_79725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:239175*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239175*0 + 3*621*FLEN/8, x4, x1, x2)

inst_79726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:239178*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239178*0 + 3*622*FLEN/8, x4, x1, x2)

inst_79727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c6489f748893 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4aa976b0d61d5 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c6489f748893; op2val:0x9fc4aa976b0d61d5;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:239181*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239181*0 + 3*623*FLEN/8, x4, x1, x2)

inst_79728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000000000; valaddr_reg:x3; val_offset:239184*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239184*0 + 3*624*FLEN/8, x4, x1, x2)

inst_79729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000000001; valaddr_reg:x3; val_offset:239187*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239187*0 + 3*625*FLEN/8, x4, x1, x2)

inst_79730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000000003; valaddr_reg:x3; val_offset:239190*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239190*0 + 3*626*FLEN/8, x4, x1, x2)

inst_79731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000000007; valaddr_reg:x3; val_offset:239193*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239193*0 + 3*627*FLEN/8, x4, x1, x2)

inst_79732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000000000f; valaddr_reg:x3; val_offset:239196*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239196*0 + 3*628*FLEN/8, x4, x1, x2)

inst_79733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000000001f; valaddr_reg:x3; val_offset:239199*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239199*0 + 3*629*FLEN/8, x4, x1, x2)

inst_79734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000000003f; valaddr_reg:x3; val_offset:239202*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239202*0 + 3*630*FLEN/8, x4, x1, x2)

inst_79735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000000007f; valaddr_reg:x3; val_offset:239205*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239205*0 + 3*631*FLEN/8, x4, x1, x2)

inst_79736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000000000ff; valaddr_reg:x3; val_offset:239208*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239208*0 + 3*632*FLEN/8, x4, x1, x2)

inst_79737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000000001ff; valaddr_reg:x3; val_offset:239211*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239211*0 + 3*633*FLEN/8, x4, x1, x2)

inst_79738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000000003ff; valaddr_reg:x3; val_offset:239214*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239214*0 + 3*634*FLEN/8, x4, x1, x2)

inst_79739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000000007ff; valaddr_reg:x3; val_offset:239217*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239217*0 + 3*635*FLEN/8, x4, x1, x2)

inst_79740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000000fff; valaddr_reg:x3; val_offset:239220*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239220*0 + 3*636*FLEN/8, x4, x1, x2)

inst_79741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000001fff; valaddr_reg:x3; val_offset:239223*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239223*0 + 3*637*FLEN/8, x4, x1, x2)

inst_79742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000003fff; valaddr_reg:x3; val_offset:239226*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239226*0 + 3*638*FLEN/8, x4, x1, x2)

inst_79743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000007fff; valaddr_reg:x3; val_offset:239229*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239229*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_79744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000000ffff; valaddr_reg:x3; val_offset:239232*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239232*0 + 3*640*FLEN/8, x4, x1, x2)

inst_79745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000001ffff; valaddr_reg:x3; val_offset:239235*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239235*0 + 3*641*FLEN/8, x4, x1, x2)

inst_79746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000003ffff; valaddr_reg:x3; val_offset:239238*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239238*0 + 3*642*FLEN/8, x4, x1, x2)

inst_79747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000007ffff; valaddr_reg:x3; val_offset:239241*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239241*0 + 3*643*FLEN/8, x4, x1, x2)

inst_79748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000000fffff; valaddr_reg:x3; val_offset:239244*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239244*0 + 3*644*FLEN/8, x4, x1, x2)

inst_79749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000001fffff; valaddr_reg:x3; val_offset:239247*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239247*0 + 3*645*FLEN/8, x4, x1, x2)

inst_79750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000003fffff; valaddr_reg:x3; val_offset:239250*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239250*0 + 3*646*FLEN/8, x4, x1, x2)

inst_79751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000007fffff; valaddr_reg:x3; val_offset:239253*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239253*0 + 3*647*FLEN/8, x4, x1, x2)

inst_79752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000000ffffff; valaddr_reg:x3; val_offset:239256*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239256*0 + 3*648*FLEN/8, x4, x1, x2)

inst_79753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000001ffffff; valaddr_reg:x3; val_offset:239259*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239259*0 + 3*649*FLEN/8, x4, x1, x2)

inst_79754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000003ffffff; valaddr_reg:x3; val_offset:239262*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239262*0 + 3*650*FLEN/8, x4, x1, x2)

inst_79755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000007ffffff; valaddr_reg:x3; val_offset:239265*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239265*0 + 3*651*FLEN/8, x4, x1, x2)

inst_79756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000000fffffff; valaddr_reg:x3; val_offset:239268*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239268*0 + 3*652*FLEN/8, x4, x1, x2)

inst_79757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000001fffffff; valaddr_reg:x3; val_offset:239271*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239271*0 + 3*653*FLEN/8, x4, x1, x2)

inst_79758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000003fffffff; valaddr_reg:x3; val_offset:239274*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239274*0 + 3*654*FLEN/8, x4, x1, x2)

inst_79759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000007fffffff; valaddr_reg:x3; val_offset:239277*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239277*0 + 3*655*FLEN/8, x4, x1, x2)

inst_79760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00000ffffffff; valaddr_reg:x3; val_offset:239280*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239280*0 + 3*656*FLEN/8, x4, x1, x2)

inst_79761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00001ffffffff; valaddr_reg:x3; val_offset:239283*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239283*0 + 3*657*FLEN/8, x4, x1, x2)

inst_79762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00003ffffffff; valaddr_reg:x3; val_offset:239286*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239286*0 + 3*658*FLEN/8, x4, x1, x2)

inst_79763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00007ffffffff; valaddr_reg:x3; val_offset:239289*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239289*0 + 3*659*FLEN/8, x4, x1, x2)

inst_79764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0000fffffffff; valaddr_reg:x3; val_offset:239292*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239292*0 + 3*660*FLEN/8, x4, x1, x2)

inst_79765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0001fffffffff; valaddr_reg:x3; val_offset:239295*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239295*0 + 3*661*FLEN/8, x4, x1, x2)

inst_79766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0003fffffffff; valaddr_reg:x3; val_offset:239298*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239298*0 + 3*662*FLEN/8, x4, x1, x2)

inst_79767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0007fffffffff; valaddr_reg:x3; val_offset:239301*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239301*0 + 3*663*FLEN/8, x4, x1, x2)

inst_79768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a000ffffffffff; valaddr_reg:x3; val_offset:239304*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239304*0 + 3*664*FLEN/8, x4, x1, x2)

inst_79769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a001ffffffffff; valaddr_reg:x3; val_offset:239307*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239307*0 + 3*665*FLEN/8, x4, x1, x2)

inst_79770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a003ffffffffff; valaddr_reg:x3; val_offset:239310*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239310*0 + 3*666*FLEN/8, x4, x1, x2)

inst_79771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a007ffffffffff; valaddr_reg:x3; val_offset:239313*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239313*0 + 3*667*FLEN/8, x4, x1, x2)

inst_79772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a00fffffffffff; valaddr_reg:x3; val_offset:239316*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239316*0 + 3*668*FLEN/8, x4, x1, x2)

inst_79773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a01fffffffffff; valaddr_reg:x3; val_offset:239319*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239319*0 + 3*669*FLEN/8, x4, x1, x2)

inst_79774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a03fffffffffff; valaddr_reg:x3; val_offset:239322*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239322*0 + 3*670*FLEN/8, x4, x1, x2)

inst_79775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a07fffffffffff; valaddr_reg:x3; val_offset:239325*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239325*0 + 3*671*FLEN/8, x4, x1, x2)

inst_79776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a0ffffffffffff; valaddr_reg:x3; val_offset:239328*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239328*0 + 3*672*FLEN/8, x4, x1, x2)

inst_79777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a1ffffffffffff; valaddr_reg:x3; val_offset:239331*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239331*0 + 3*673*FLEN/8, x4, x1, x2)

inst_79778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a3ffffffffffff; valaddr_reg:x3; val_offset:239334*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239334*0 + 3*674*FLEN/8, x4, x1, x2)

inst_79779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a7ffffffffffff; valaddr_reg:x3; val_offset:239337*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239337*0 + 3*675*FLEN/8, x4, x1, x2)

inst_79780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9a8000000000000; valaddr_reg:x3; val_offset:239340*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239340*0 + 3*676*FLEN/8, x4, x1, x2)

inst_79781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9ac000000000000; valaddr_reg:x3; val_offset:239343*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239343*0 + 3*677*FLEN/8, x4, x1, x2)

inst_79782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9ae000000000000; valaddr_reg:x3; val_offset:239346*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239346*0 + 3*678*FLEN/8, x4, x1, x2)

inst_79783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9af000000000000; valaddr_reg:x3; val_offset:239349*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239349*0 + 3*679*FLEN/8, x4, x1, x2)

inst_79784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9af800000000000; valaddr_reg:x3; val_offset:239352*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239352*0 + 3*680*FLEN/8, x4, x1, x2)

inst_79785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afc00000000000; valaddr_reg:x3; val_offset:239355*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239355*0 + 3*681*FLEN/8, x4, x1, x2)

inst_79786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afe00000000000; valaddr_reg:x3; val_offset:239358*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239358*0 + 3*682*FLEN/8, x4, x1, x2)

inst_79787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9aff00000000000; valaddr_reg:x3; val_offset:239361*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239361*0 + 3*683*FLEN/8, x4, x1, x2)

inst_79788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9aff80000000000; valaddr_reg:x3; val_offset:239364*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239364*0 + 3*684*FLEN/8, x4, x1, x2)

inst_79789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affc0000000000; valaddr_reg:x3; val_offset:239367*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239367*0 + 3*685*FLEN/8, x4, x1, x2)

inst_79790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affe0000000000; valaddr_reg:x3; val_offset:239370*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239370*0 + 3*686*FLEN/8, x4, x1, x2)

inst_79791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afff0000000000; valaddr_reg:x3; val_offset:239373*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239373*0 + 3*687*FLEN/8, x4, x1, x2)

inst_79792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afff8000000000; valaddr_reg:x3; val_offset:239376*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239376*0 + 3*688*FLEN/8, x4, x1, x2)

inst_79793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffc000000000; valaddr_reg:x3; val_offset:239379*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239379*0 + 3*689*FLEN/8, x4, x1, x2)

inst_79794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffe000000000; valaddr_reg:x3; val_offset:239382*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239382*0 + 3*690*FLEN/8, x4, x1, x2)

inst_79795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affff000000000; valaddr_reg:x3; val_offset:239385*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239385*0 + 3*691*FLEN/8, x4, x1, x2)

inst_79796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affff800000000; valaddr_reg:x3; val_offset:239388*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239388*0 + 3*692*FLEN/8, x4, x1, x2)

inst_79797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffc00000000; valaddr_reg:x3; val_offset:239391*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239391*0 + 3*693*FLEN/8, x4, x1, x2)

inst_79798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffe00000000; valaddr_reg:x3; val_offset:239394*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239394*0 + 3*694*FLEN/8, x4, x1, x2)

inst_79799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffff00000000; valaddr_reg:x3; val_offset:239397*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239397*0 + 3*695*FLEN/8, x4, x1, x2)

inst_79800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffff80000000; valaddr_reg:x3; val_offset:239400*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239400*0 + 3*696*FLEN/8, x4, x1, x2)

inst_79801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffc0000000; valaddr_reg:x3; val_offset:239403*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239403*0 + 3*697*FLEN/8, x4, x1, x2)

inst_79802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffe0000000; valaddr_reg:x3; val_offset:239406*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239406*0 + 3*698*FLEN/8, x4, x1, x2)

inst_79803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffff0000000; valaddr_reg:x3; val_offset:239409*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239409*0 + 3*699*FLEN/8, x4, x1, x2)

inst_79804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffff8000000; valaddr_reg:x3; val_offset:239412*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239412*0 + 3*700*FLEN/8, x4, x1, x2)

inst_79805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffc000000; valaddr_reg:x3; val_offset:239415*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239415*0 + 3*701*FLEN/8, x4, x1, x2)

inst_79806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffe000000; valaddr_reg:x3; val_offset:239418*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239418*0 + 3*702*FLEN/8, x4, x1, x2)

inst_79807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffff000000; valaddr_reg:x3; val_offset:239421*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239421*0 + 3*703*FLEN/8, x4, x1, x2)

inst_79808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffff800000; valaddr_reg:x3; val_offset:239424*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239424*0 + 3*704*FLEN/8, x4, x1, x2)

inst_79809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffc00000; valaddr_reg:x3; val_offset:239427*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239427*0 + 3*705*FLEN/8, x4, x1, x2)

inst_79810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffe00000; valaddr_reg:x3; val_offset:239430*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239430*0 + 3*706*FLEN/8, x4, x1, x2)

inst_79811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffff00000; valaddr_reg:x3; val_offset:239433*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239433*0 + 3*707*FLEN/8, x4, x1, x2)

inst_79812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffff80000; valaddr_reg:x3; val_offset:239436*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239436*0 + 3*708*FLEN/8, x4, x1, x2)

inst_79813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffc0000; valaddr_reg:x3; val_offset:239439*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239439*0 + 3*709*FLEN/8, x4, x1, x2)

inst_79814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffe0000; valaddr_reg:x3; val_offset:239442*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239442*0 + 3*710*FLEN/8, x4, x1, x2)

inst_79815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffff0000; valaddr_reg:x3; val_offset:239445*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239445*0 + 3*711*FLEN/8, x4, x1, x2)

inst_79816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffff8000; valaddr_reg:x3; val_offset:239448*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239448*0 + 3*712*FLEN/8, x4, x1, x2)

inst_79817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffc000; valaddr_reg:x3; val_offset:239451*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239451*0 + 3*713*FLEN/8, x4, x1, x2)

inst_79818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffe000; valaddr_reg:x3; val_offset:239454*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239454*0 + 3*714*FLEN/8, x4, x1, x2)

inst_79819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffff000; valaddr_reg:x3; val_offset:239457*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239457*0 + 3*715*FLEN/8, x4, x1, x2)

inst_79820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffff800; valaddr_reg:x3; val_offset:239460*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239460*0 + 3*716*FLEN/8, x4, x1, x2)

inst_79821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffc00; valaddr_reg:x3; val_offset:239463*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239463*0 + 3*717*FLEN/8, x4, x1, x2)

inst_79822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffe00; valaddr_reg:x3; val_offset:239466*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239466*0 + 3*718*FLEN/8, x4, x1, x2)

inst_79823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffff00; valaddr_reg:x3; val_offset:239469*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239469*0 + 3*719*FLEN/8, x4, x1, x2)

inst_79824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffff80; valaddr_reg:x3; val_offset:239472*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239472*0 + 3*720*FLEN/8, x4, x1, x2)

inst_79825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffffc0; valaddr_reg:x3; val_offset:239475*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239475*0 + 3*721*FLEN/8, x4, x1, x2)

inst_79826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffffe0; valaddr_reg:x3; val_offset:239478*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239478*0 + 3*722*FLEN/8, x4, x1, x2)

inst_79827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffff0; valaddr_reg:x3; val_offset:239481*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239481*0 + 3*723*FLEN/8, x4, x1, x2)

inst_79828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffff8; valaddr_reg:x3; val_offset:239484*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239484*0 + 3*724*FLEN/8, x4, x1, x2)

inst_79829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffffc; valaddr_reg:x3; val_offset:239487*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239487*0 + 3*725*FLEN/8, x4, x1, x2)

inst_79830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9affffffffffffe; valaddr_reg:x3; val_offset:239490*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239490*0 + 3*726*FLEN/8, x4, x1, x2)

inst_79831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x39a and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xb9afffffffffffff; valaddr_reg:x3; val_offset:239493*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239493*0 + 3*727*FLEN/8, x4, x1, x2)

inst_79832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:239496*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239496*0 + 3*728*FLEN/8, x4, x1, x2)

inst_79833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:239499*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239499*0 + 3*729*FLEN/8, x4, x1, x2)

inst_79834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:239502*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239502*0 + 3*730*FLEN/8, x4, x1, x2)

inst_79835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:239505*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239505*0 + 3*731*FLEN/8, x4, x1, x2)

inst_79836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:239508*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239508*0 + 3*732*FLEN/8, x4, x1, x2)

inst_79837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:239511*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239511*0 + 3*733*FLEN/8, x4, x1, x2)

inst_79838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:239514*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239514*0 + 3*734*FLEN/8, x4, x1, x2)

inst_79839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:239517*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239517*0 + 3*735*FLEN/8, x4, x1, x2)

inst_79840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:239520*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239520*0 + 3*736*FLEN/8, x4, x1, x2)

inst_79841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:239523*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239523*0 + 3*737*FLEN/8, x4, x1, x2)

inst_79842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:239526*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239526*0 + 3*738*FLEN/8, x4, x1, x2)

inst_79843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:239529*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239529*0 + 3*739*FLEN/8, x4, x1, x2)

inst_79844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:239532*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239532*0 + 3*740*FLEN/8, x4, x1, x2)

inst_79845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:239535*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239535*0 + 3*741*FLEN/8, x4, x1, x2)

inst_79846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:239538*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239538*0 + 3*742*FLEN/8, x4, x1, x2)

inst_79847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:239541*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239541*0 + 3*743*FLEN/8, x4, x1, x2)

inst_79848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:239544*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239544*0 + 3*744*FLEN/8, x4, x1, x2)

inst_79849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:239547*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239547*0 + 3*745*FLEN/8, x4, x1, x2)

inst_79850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:239550*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239550*0 + 3*746*FLEN/8, x4, x1, x2)

inst_79851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:239553*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239553*0 + 3*747*FLEN/8, x4, x1, x2)

inst_79852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:239556*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239556*0 + 3*748*FLEN/8, x4, x1, x2)

inst_79853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8c719398e006e and fs2 == 1 and fe2 == 0x1fc and fm2 == 0x4a9e96def7e47 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8c719398e006e; op2val:0x9fc4a9e96def7e47;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:239559*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239559*0 + 3*749*FLEN/8, x4, x1, x2)

inst_79854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000000000; valaddr_reg:x3; val_offset:239562*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239562*0 + 3*750*FLEN/8, x4, x1, x2)

inst_79855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000000001; valaddr_reg:x3; val_offset:239565*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239565*0 + 3*751*FLEN/8, x4, x1, x2)

inst_79856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000000003; valaddr_reg:x3; val_offset:239568*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239568*0 + 3*752*FLEN/8, x4, x1, x2)

inst_79857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000000007; valaddr_reg:x3; val_offset:239571*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239571*0 + 3*753*FLEN/8, x4, x1, x2)

inst_79858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000000000f; valaddr_reg:x3; val_offset:239574*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239574*0 + 3*754*FLEN/8, x4, x1, x2)

inst_79859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000000001f; valaddr_reg:x3; val_offset:239577*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239577*0 + 3*755*FLEN/8, x4, x1, x2)

inst_79860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000000003f; valaddr_reg:x3; val_offset:239580*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239580*0 + 3*756*FLEN/8, x4, x1, x2)

inst_79861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000000007f; valaddr_reg:x3; val_offset:239583*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239583*0 + 3*757*FLEN/8, x4, x1, x2)

inst_79862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000000000ff; valaddr_reg:x3; val_offset:239586*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239586*0 + 3*758*FLEN/8, x4, x1, x2)

inst_79863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000000001ff; valaddr_reg:x3; val_offset:239589*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239589*0 + 3*759*FLEN/8, x4, x1, x2)

inst_79864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000000003ff; valaddr_reg:x3; val_offset:239592*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239592*0 + 3*760*FLEN/8, x4, x1, x2)

inst_79865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e900000000007ff; valaddr_reg:x3; val_offset:239595*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239595*0 + 3*761*FLEN/8, x4, x1, x2)

inst_79866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000000fff; valaddr_reg:x3; val_offset:239598*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239598*0 + 3*762*FLEN/8, x4, x1, x2)

inst_79867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000001fff; valaddr_reg:x3; val_offset:239601*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239601*0 + 3*763*FLEN/8, x4, x1, x2)

inst_79868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000003fff; valaddr_reg:x3; val_offset:239604*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239604*0 + 3*764*FLEN/8, x4, x1, x2)

inst_79869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e90000000007fff; valaddr_reg:x3; val_offset:239607*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239607*0 + 3*765*FLEN/8, x4, x1, x2)

inst_79870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000000ffff; valaddr_reg:x3; val_offset:239610*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239610*0 + 3*766*FLEN/8, x4, x1, x2)

inst_79871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x8cecfb081e872 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x4a37ccc48e2a0 and fs3 == 0 and fe3 == 0x3e9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa8cecfb081e872; op2val:0x2034a37ccc48e2a0;
op3val:0x3e9000000001ffff; valaddr_reg:x3; val_offset:239613*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 239613*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887296,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887297,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887299,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887303,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887311,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887327,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887359,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887423,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887551,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736887807,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736888319,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736889343,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736891391,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736895487,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736903679,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736920063,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835736952831,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737018367,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737149439,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737411583,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835737935871,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835738984447,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835741081599,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835745275903,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835753664511,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835770441727,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835803996159,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882835871105023,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836005322751,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836273758207,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882836810629119,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882837884370943,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882840031854591,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882844326821887,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882852916756479,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882870096625663,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882904456364031,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236882973175840767,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883110614794239,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883385492701183,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236883935248515071,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236885034760142847,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236887233783398399,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236891631829909503,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236900427922931711,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236918020108976127,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9236953204481064959,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237023573225242623,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237164310713597951,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9237445785690308607,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9238008735643729919,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572543,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9239134635550572544,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240260535457415168,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9240823485410836480,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241104960387547136,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241245697875902464,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241316066620080128,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241351250992168960,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241368843178213376,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241377639271235584,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241382037317746688,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241384236341002240,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385335852630016,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241385885608443904,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386160486350848,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386297925304320,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386366644781056,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386401004519424,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386418184388608,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386426774323200,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386431069290496,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386433216774144,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434290515968,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386434827386880,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435095822336,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435230040064,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435297148928,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435330703360,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435347480576,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435355869184,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435360063488,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435362160640,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363209216,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363733504,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435363995648,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364126720,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364192256,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364225024,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364241408,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364249600,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364253696,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364255744,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364256768,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257280,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257536,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257664,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257728,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257760,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257776,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257784,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257788,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257790,64,FLEN)
NAN_BOXED(6892928491963623802,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9241386435364257791,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851264,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851265,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851267,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851271,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851279,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851295,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851327,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851391,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851519,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755851775,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755852287,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755853311,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755855359,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755859455,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755867647,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755884031,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755916799,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632755982335,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756113407,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756375551,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632756899839,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632757948415,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632760045567,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632764239871,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632772628479,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632789405695,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632822960127,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911632890068991,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633024286719,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633292722175,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911633829593087,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911634903334911,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911637050818559,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911641345785855,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911649935720447,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911667115589631,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911701475327999,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911770194804735,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272911907633758207,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912182511665151,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272912732267479039,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272913831779106815,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272916030802362367,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272920428848873471,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272929224941895679,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272946817127940095,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9272982001500028927,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273052370244206591,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273193107732561919,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9273474582709272575,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9274037532662693887,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536511,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9275163432569536512,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276289332476379136,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9276852282429800448,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277133757406511104,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277274494894866432,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277344863639044096,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277380048011132928,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277397640197177344,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277406436290199552,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277410834336710656,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277413033359966208,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414132871593984,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414682627407872,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277414957505314816,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415094944268288,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415163663745024,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415198023483392,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415215203352576,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415223793287168,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415228088254464,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415230235738112,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231309479936,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415231846350848,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232114786304,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232249004032,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232316112896,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232349667328,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232366444544,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232374833152,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232379027456,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232381124608,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382173184,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382697472,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232382959616,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383090688,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383156224,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383188992,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383205376,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383213568,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383217664,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383219712,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383220736,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221248,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221504,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221632,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221696,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221728,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221744,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221752,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221756,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221758,64,FLEN)
NAN_BOXED(6892929478202168081,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9277415232383221759,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523584,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523585,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523587,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523591,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523599,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523615,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523647,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523711,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987523839,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524095,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987524607,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987525631,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987527679,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987531775,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987539967,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987556351,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987589119,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987654655,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615987785727,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988047871,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615988572159,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615989620735,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615991717887,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573615995912191,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616004300799,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616021078015,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616054632447,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616121741311,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616255959039,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573616524394495,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573617061265407,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573618135007231,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573620282490879,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573624577458175,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573633167392767,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573650347261951,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573684707000319,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573753426477055,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475573890865430527,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574165743337471,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475574715499151359,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475575815010779135,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475578014034034687,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475582412080545791,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475591208173567999,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475608800359612415,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475643984731701247,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475714353475878911,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9475855090964234239,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476136565940944895,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9476699515894366207,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208831,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9477825415801208832,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9478951315708051456,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479514265661472768,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479795740638183424,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9479936478126538752,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480006846870716416,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480042031242805248,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480059623428849664,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480068419521871872,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480072817568382976,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480075016591638528,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076116103266304,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076665859080192,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480076940736987136,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077078175940608,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077146895417344,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077181255155712,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077198435024896,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077207024959488,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077211319926784,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077213467410432,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077214541152256,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215078023168,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215346458624,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215480676352,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215547785216,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215581339648,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215598116864,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215606505472,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215610699776,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215612796928,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215613845504,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614369792,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614631936,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614763008,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614828544,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614861312,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614877696,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614885888,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614889984,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614892032,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893056,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893568,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893824,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614893952,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894016,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894048,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894064,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894072,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894076,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894078,64,FLEN)
NAN_BOXED(6892943485314669403,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9480077215614894079,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703744,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703745,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703747,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703751,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703759,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703775,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703807,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703871,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703999,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704255,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892704767,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892705791,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892707839,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892711935,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892720127,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892736511,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892769279,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892834815,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892965887,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893228031,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630893752319,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630894800895,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630896898047,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630901092351,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630909480959,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630926258175,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630959812607,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631026921471,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631161139199,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631429574655,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429631966445567,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429633040187391,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429635187671039,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429639482638335,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429648072572927,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429665252442111,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429699612180479,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429768331657215,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429905770610687,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430180648517631,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295430730404331519,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295431829915959295,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295434028939214847,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295438426985725951,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295447223078748159,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295464815264792575,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295499999636881407,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295570368381059071,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295711105869414399,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295992580846125055,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9296555530799546367,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388991,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9297681430706388992,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9298807330613231616,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299370280566652928,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299651755543363584,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299792493031718912,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299862861775896576,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299898046147985408,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299915638334029824,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299924434427052032,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299928832473563136,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299931031496818688,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932131008446464,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932680764260352,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299932955642167296,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933093081120768,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933161800597504,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933196160335872,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933213340205056,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933221930139648,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933226225106944,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933228372590592,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229446332416,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933229983203328,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230251638784,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230385856512,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230452965376,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230486519808,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230503297024,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230511685632,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230515879936,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230517977088,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519025664,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519549952,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519812096,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230519943168,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520008704,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520041472,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520057856,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520066048,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520070144,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520072192,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073216,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073728,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520073984,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074112,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074176,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074208,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074224,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074232,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074236,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074238,64,FLEN)
NAN_BOXED(6892954779421959107,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9299933230520074239,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901312,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901313,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901315,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901319,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901327,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901343,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901375,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901439,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901567,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597901823,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597902335,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597903359,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597905407,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597909503,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597917695,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597934079,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064597966847,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064598032383,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064598163455,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064598425599,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064598949887,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064599998463,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064602095615,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064606289919,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064614678527,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064631455743,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064665010175,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064732119039,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468064866336767,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468065134772223,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468065671643135,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468066745384959,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468068892868607,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468073187835903,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468081777770495,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468098957639679,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468133317378047,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468202036854783,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468339475808255,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722468614353715199,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722469164109529087,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722470263621156863,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722472462644412415,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722476860690923519,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722485656783945727,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722503248969990143,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722538433342078975,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722608802086256639,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13722749539574611967,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13723031014551322623,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13723593964504743935,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13724719864411586559,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13724719864411586560,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13725845764318429184,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726408714271850496,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726690189248561152,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726830926736916480,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726901295481094144,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726936479853182976,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726954072039227392,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726962868132249600,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726967266178760704,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726969465202016256,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726970564713644032,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971114469457920,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971389347364864,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971526786318336,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971595505795072,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971629865533440,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971647045402624,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971655635337216,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971659930304512,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971662077788160,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971663151529984,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971663688400896,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971663956836352,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664091054080,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664158162944,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664191717376,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664208494592,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664216883200,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664221077504,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664223174656,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664224223232,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664224747520,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225009664,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225140736,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225206272,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225239040,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225255424,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225263616,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225267712,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225269760,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225270784,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271296,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271552,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271680,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271744,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271776,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271792,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271800,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271804,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271806,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13726971664225271807,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892977244905703571,64,FLEN)
NAN_BOXED(11512514114778653141,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373120,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373121,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373123,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373127,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373135,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373151,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373183,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373247,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373375,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290373631,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290374143,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290375167,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290377215,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290381311,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290389503,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290405887,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290438655,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290504191,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290635263,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893290897407,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893291421695,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893292470271,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893294567423,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893298761727,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893307150335,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893323927551,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893357481983,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893424590847,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893558808575,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690893827244031,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690894364114943,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690895437856767,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690897585340415,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690901880307711,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690910470242303,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690927650111487,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375690962009849855,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375691030729326591,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375691168168280063,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375691443046187007,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375691992802000895,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375693092313628671,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375695291336884223,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375699689383395327,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375708485476417535,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375726077662461951,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375761262034550783,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375831630778728447,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13375972368267083775,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13376253843243794431,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13376816793197215743,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13377942693104058367,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13377942693104058368,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13379068593010900992,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13379631542964322304,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13379913017941032960,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380053755429388288,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380124124173565952,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380159308545654784,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380176900731699200,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380185696824721408,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380190094871232512,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380192293894488064,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380193393406115840,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380193943161929728,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194218039836672,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194355478790144,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194424198266880,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194458558005248,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194475737874432,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194484327809024,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194488622776320,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194490770259968,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194491844001792,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492380872704,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492649308160,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492783525888,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492850634752,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492884189184,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492900966400,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492909355008,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492913549312,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492915646464,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492916695040,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917219328,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917481472,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917612544,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917678080,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917710848,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917727232,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917735424,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917739520,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917741568,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917742592,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743104,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743360,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743488,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743552,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743584,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743600,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743608,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743612,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743614,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13380194492917743615,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6892978140844261486,64,FLEN)
NAN_BOXED(11512513367502716487,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866496,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866497,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866499,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866503,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866511,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866527,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866559,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866623,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997866751,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997867007,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997867519,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997868543,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997870591,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997874687,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997882879,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997899263,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997932031,64,FLEN)
NAN_BOXED(6892986621105399922,64,FLEN)
NAN_BOXED(2320659464401248928,64,FLEN)
NAN_BOXED(4508103226997997567,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
