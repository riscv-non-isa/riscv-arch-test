
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_65280:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffe0000; valaddr_reg:x3; val_offset:195840*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195840*0 + 3*0*FLEN/8, x4, x1, x2)

inst_65281:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffff0000; valaddr_reg:x3; val_offset:195843*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195843*0 + 3*1*FLEN/8, x4, x1, x2)

inst_65282:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffff8000; valaddr_reg:x3; val_offset:195846*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195846*0 + 3*2*FLEN/8, x4, x1, x2)

inst_65283:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffc000; valaddr_reg:x3; val_offset:195849*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195849*0 + 3*3*FLEN/8, x4, x1, x2)

inst_65284:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffe000; valaddr_reg:x3; val_offset:195852*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195852*0 + 3*4*FLEN/8, x4, x1, x2)

inst_65285:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffff000; valaddr_reg:x3; val_offset:195855*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195855*0 + 3*5*FLEN/8, x4, x1, x2)

inst_65286:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffff800; valaddr_reg:x3; val_offset:195858*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195858*0 + 3*6*FLEN/8, x4, x1, x2)

inst_65287:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffc00; valaddr_reg:x3; val_offset:195861*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195861*0 + 3*7*FLEN/8, x4, x1, x2)

inst_65288:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffe00; valaddr_reg:x3; val_offset:195864*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195864*0 + 3*8*FLEN/8, x4, x1, x2)

inst_65289:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffff00; valaddr_reg:x3; val_offset:195867*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195867*0 + 3*9*FLEN/8, x4, x1, x2)

inst_65290:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffff80; valaddr_reg:x3; val_offset:195870*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195870*0 + 3*10*FLEN/8, x4, x1, x2)

inst_65291:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffffc0; valaddr_reg:x3; val_offset:195873*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195873*0 + 3*11*FLEN/8, x4, x1, x2)

inst_65292:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffffe0; valaddr_reg:x3; val_offset:195876*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195876*0 + 3*12*FLEN/8, x4, x1, x2)

inst_65293:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffff0; valaddr_reg:x3; val_offset:195879*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195879*0 + 3*13*FLEN/8, x4, x1, x2)

inst_65294:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffff8; valaddr_reg:x3; val_offset:195882*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195882*0 + 3*14*FLEN/8, x4, x1, x2)

inst_65295:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffffc; valaddr_reg:x3; val_offset:195885*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195885*0 + 3*15*FLEN/8, x4, x1, x2)

inst_65296:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830ffffffffffffe; valaddr_reg:x3; val_offset:195888*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195888*0 + 3*16*FLEN/8, x4, x1, x2)

inst_65297:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x43ad2ac887783 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x030 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa43ad2ac887783; op2val:0x8000;
op3val:0x830fffffffffffff; valaddr_reg:x3; val_offset:195891*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195891*0 + 3*17*FLEN/8, x4, x1, x2)

inst_65298:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:195894*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195894*0 + 3*18*FLEN/8, x4, x1, x2)

inst_65299:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:195897*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195897*0 + 3*19*FLEN/8, x4, x1, x2)

inst_65300:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:195900*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195900*0 + 3*20*FLEN/8, x4, x1, x2)

inst_65301:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:195903*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195903*0 + 3*21*FLEN/8, x4, x1, x2)

inst_65302:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:195906*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195906*0 + 3*22*FLEN/8, x4, x1, x2)

inst_65303:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:195909*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195909*0 + 3*23*FLEN/8, x4, x1, x2)

inst_65304:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:195912*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195912*0 + 3*24*FLEN/8, x4, x1, x2)

inst_65305:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:195915*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195915*0 + 3*25*FLEN/8, x4, x1, x2)

inst_65306:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:195918*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195918*0 + 3*26*FLEN/8, x4, x1, x2)

inst_65307:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:195921*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195921*0 + 3*27*FLEN/8, x4, x1, x2)

inst_65308:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:195924*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195924*0 + 3*28*FLEN/8, x4, x1, x2)

inst_65309:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:195927*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195927*0 + 3*29*FLEN/8, x4, x1, x2)

inst_65310:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:195930*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195930*0 + 3*30*FLEN/8, x4, x1, x2)

inst_65311:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:195933*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195933*0 + 3*31*FLEN/8, x4, x1, x2)

inst_65312:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:195936*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195936*0 + 3*32*FLEN/8, x4, x1, x2)

inst_65313:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:195939*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195939*0 + 3*33*FLEN/8, x4, x1, x2)

inst_65314:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:195942*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195942*0 + 3*34*FLEN/8, x4, x1, x2)

inst_65315:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:195945*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195945*0 + 3*35*FLEN/8, x4, x1, x2)

inst_65316:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:195948*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195948*0 + 3*36*FLEN/8, x4, x1, x2)

inst_65317:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:195951*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195951*0 + 3*37*FLEN/8, x4, x1, x2)

inst_65318:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:195954*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195954*0 + 3*38*FLEN/8, x4, x1, x2)

inst_65319:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:195957*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195957*0 + 3*39*FLEN/8, x4, x1, x2)

inst_65320:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:195960*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195960*0 + 3*40*FLEN/8, x4, x1, x2)

inst_65321:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:195963*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195963*0 + 3*41*FLEN/8, x4, x1, x2)

inst_65322:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:195966*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195966*0 + 3*42*FLEN/8, x4, x1, x2)

inst_65323:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:195969*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195969*0 + 3*43*FLEN/8, x4, x1, x2)

inst_65324:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:195972*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195972*0 + 3*44*FLEN/8, x4, x1, x2)

inst_65325:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:195975*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195975*0 + 3*45*FLEN/8, x4, x1, x2)

inst_65326:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:195978*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195978*0 + 3*46*FLEN/8, x4, x1, x2)

inst_65327:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:195981*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195981*0 + 3*47*FLEN/8, x4, x1, x2)

inst_65328:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:195984*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195984*0 + 3*48*FLEN/8, x4, x1, x2)

inst_65329:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:195987*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195987*0 + 3*49*FLEN/8, x4, x1, x2)

inst_65330:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:195990*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195990*0 + 3*50*FLEN/8, x4, x1, x2)

inst_65331:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:195993*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195993*0 + 3*51*FLEN/8, x4, x1, x2)

inst_65332:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:195996*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195996*0 + 3*52*FLEN/8, x4, x1, x2)

inst_65333:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:195999*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 195999*0 + 3*53*FLEN/8, x4, x1, x2)

inst_65334:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:196002*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196002*0 + 3*54*FLEN/8, x4, x1, x2)

inst_65335:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:196005*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196005*0 + 3*55*FLEN/8, x4, x1, x2)

inst_65336:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:196008*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196008*0 + 3*56*FLEN/8, x4, x1, x2)

inst_65337:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:196011*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196011*0 + 3*57*FLEN/8, x4, x1, x2)

inst_65338:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:196014*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196014*0 + 3*58*FLEN/8, x4, x1, x2)

inst_65339:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:196017*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196017*0 + 3*59*FLEN/8, x4, x1, x2)

inst_65340:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:196020*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196020*0 + 3*60*FLEN/8, x4, x1, x2)

inst_65341:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:196023*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196023*0 + 3*61*FLEN/8, x4, x1, x2)

inst_65342:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:196026*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196026*0 + 3*62*FLEN/8, x4, x1, x2)

inst_65343:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:196029*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196029*0 + 3*63*FLEN/8, x4, x1, x2)

inst_65344:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:196032*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196032*0 + 3*64*FLEN/8, x4, x1, x2)

inst_65345:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:196035*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196035*0 + 3*65*FLEN/8, x4, x1, x2)

inst_65346:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:196038*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196038*0 + 3*66*FLEN/8, x4, x1, x2)

inst_65347:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:196041*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196041*0 + 3*67*FLEN/8, x4, x1, x2)

inst_65348:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:196044*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196044*0 + 3*68*FLEN/8, x4, x1, x2)

inst_65349:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:196047*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196047*0 + 3*69*FLEN/8, x4, x1, x2)

inst_65350:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:196050*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196050*0 + 3*70*FLEN/8, x4, x1, x2)

inst_65351:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:196053*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196053*0 + 3*71*FLEN/8, x4, x1, x2)

inst_65352:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:196056*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196056*0 + 3*72*FLEN/8, x4, x1, x2)

inst_65353:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:196059*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196059*0 + 3*73*FLEN/8, x4, x1, x2)

inst_65354:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:196062*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196062*0 + 3*74*FLEN/8, x4, x1, x2)

inst_65355:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:196065*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196065*0 + 3*75*FLEN/8, x4, x1, x2)

inst_65356:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:196068*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196068*0 + 3*76*FLEN/8, x4, x1, x2)

inst_65357:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:196071*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196071*0 + 3*77*FLEN/8, x4, x1, x2)

inst_65358:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:196074*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196074*0 + 3*78*FLEN/8, x4, x1, x2)

inst_65359:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:196077*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196077*0 + 3*79*FLEN/8, x4, x1, x2)

inst_65360:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:196080*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196080*0 + 3*80*FLEN/8, x4, x1, x2)

inst_65361:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:196083*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196083*0 + 3*81*FLEN/8, x4, x1, x2)

inst_65362:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:196086*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196086*0 + 3*82*FLEN/8, x4, x1, x2)

inst_65363:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:196089*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196089*0 + 3*83*FLEN/8, x4, x1, x2)

inst_65364:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:196092*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196092*0 + 3*84*FLEN/8, x4, x1, x2)

inst_65365:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:196095*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196095*0 + 3*85*FLEN/8, x4, x1, x2)

inst_65366:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:196098*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196098*0 + 3*86*FLEN/8, x4, x1, x2)

inst_65367:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:196101*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196101*0 + 3*87*FLEN/8, x4, x1, x2)

inst_65368:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:196104*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196104*0 + 3*88*FLEN/8, x4, x1, x2)

inst_65369:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:196107*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196107*0 + 3*89*FLEN/8, x4, x1, x2)

inst_65370:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:196110*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196110*0 + 3*90*FLEN/8, x4, x1, x2)

inst_65371:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:196113*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196113*0 + 3*91*FLEN/8, x4, x1, x2)

inst_65372:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:196116*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196116*0 + 3*92*FLEN/8, x4, x1, x2)

inst_65373:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:196119*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196119*0 + 3*93*FLEN/8, x4, x1, x2)

inst_65374:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:196122*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196122*0 + 3*94*FLEN/8, x4, x1, x2)

inst_65375:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:196125*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196125*0 + 3*95*FLEN/8, x4, x1, x2)

inst_65376:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:196128*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196128*0 + 3*96*FLEN/8, x4, x1, x2)

inst_65377:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:196131*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196131*0 + 3*97*FLEN/8, x4, x1, x2)

inst_65378:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:196134*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196134*0 + 3*98*FLEN/8, x4, x1, x2)

inst_65379:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:196137*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196137*0 + 3*99*FLEN/8, x4, x1, x2)

inst_65380:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:196140*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196140*0 + 3*100*FLEN/8, x4, x1, x2)

inst_65381:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:196143*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196143*0 + 3*101*FLEN/8, x4, x1, x2)

inst_65382:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:196146*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196146*0 + 3*102*FLEN/8, x4, x1, x2)

inst_65383:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:196149*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196149*0 + 3*103*FLEN/8, x4, x1, x2)

inst_65384:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:196152*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196152*0 + 3*104*FLEN/8, x4, x1, x2)

inst_65385:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:196155*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196155*0 + 3*105*FLEN/8, x4, x1, x2)

inst_65386:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:196158*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196158*0 + 3*106*FLEN/8, x4, x1, x2)

inst_65387:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:196161*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196161*0 + 3*107*FLEN/8, x4, x1, x2)

inst_65388:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:196164*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196164*0 + 3*108*FLEN/8, x4, x1, x2)

inst_65389:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:196167*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196167*0 + 3*109*FLEN/8, x4, x1, x2)

inst_65390:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:196170*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196170*0 + 3*110*FLEN/8, x4, x1, x2)

inst_65391:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:196173*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196173*0 + 3*111*FLEN/8, x4, x1, x2)

inst_65392:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:196176*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196176*0 + 3*112*FLEN/8, x4, x1, x2)

inst_65393:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:196179*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196179*0 + 3*113*FLEN/8, x4, x1, x2)

inst_65394:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:196182*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196182*0 + 3*114*FLEN/8, x4, x1, x2)

inst_65395:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:196185*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196185*0 + 3*115*FLEN/8, x4, x1, x2)

inst_65396:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:196188*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196188*0 + 3*116*FLEN/8, x4, x1, x2)

inst_65397:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:196191*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196191*0 + 3*117*FLEN/8, x4, x1, x2)

inst_65398:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:196194*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196194*0 + 3*118*FLEN/8, x4, x1, x2)

inst_65399:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:196197*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196197*0 + 3*119*FLEN/8, x4, x1, x2)

inst_65400:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:196200*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196200*0 + 3*120*FLEN/8, x4, x1, x2)

inst_65401:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:196203*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196203*0 + 3*121*FLEN/8, x4, x1, x2)

inst_65402:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:196206*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196206*0 + 3*122*FLEN/8, x4, x1, x2)

inst_65403:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:196209*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196209*0 + 3*123*FLEN/8, x4, x1, x2)

inst_65404:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:196212*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196212*0 + 3*124*FLEN/8, x4, x1, x2)

inst_65405:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:196215*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196215*0 + 3*125*FLEN/8, x4, x1, x2)

inst_65406:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:196218*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196218*0 + 3*126*FLEN/8, x4, x1, x2)

inst_65407:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:196221*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196221*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_65408:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:196224*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196224*0 + 3*128*FLEN/8, x4, x1, x2)

inst_65409:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:196227*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196227*0 + 3*129*FLEN/8, x4, x1, x2)

inst_65410:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:196230*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196230*0 + 3*130*FLEN/8, x4, x1, x2)

inst_65411:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:196233*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196233*0 + 3*131*FLEN/8, x4, x1, x2)

inst_65412:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:196236*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196236*0 + 3*132*FLEN/8, x4, x1, x2)

inst_65413:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:196239*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196239*0 + 3*133*FLEN/8, x4, x1, x2)

inst_65414:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:196242*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196242*0 + 3*134*FLEN/8, x4, x1, x2)

inst_65415:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:196245*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196245*0 + 3*135*FLEN/8, x4, x1, x2)

inst_65416:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:196248*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196248*0 + 3*136*FLEN/8, x4, x1, x2)

inst_65417:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:196251*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196251*0 + 3*137*FLEN/8, x4, x1, x2)

inst_65418:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:196254*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196254*0 + 3*138*FLEN/8, x4, x1, x2)

inst_65419:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:196257*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196257*0 + 3*139*FLEN/8, x4, x1, x2)

inst_65420:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:196260*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196260*0 + 3*140*FLEN/8, x4, x1, x2)

inst_65421:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:196263*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196263*0 + 3*141*FLEN/8, x4, x1, x2)

inst_65422:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:196266*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196266*0 + 3*142*FLEN/8, x4, x1, x2)

inst_65423:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44156af539106 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44156af539106; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:196269*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196269*0 + 3*143*FLEN/8, x4, x1, x2)

inst_65424:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:196272*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196272*0 + 3*144*FLEN/8, x4, x1, x2)

inst_65425:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:196275*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196275*0 + 3*145*FLEN/8, x4, x1, x2)

inst_65426:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:196278*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196278*0 + 3*146*FLEN/8, x4, x1, x2)

inst_65427:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:196281*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196281*0 + 3*147*FLEN/8, x4, x1, x2)

inst_65428:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:196284*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196284*0 + 3*148*FLEN/8, x4, x1, x2)

inst_65429:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:196287*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196287*0 + 3*149*FLEN/8, x4, x1, x2)

inst_65430:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:196290*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196290*0 + 3*150*FLEN/8, x4, x1, x2)

inst_65431:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:196293*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196293*0 + 3*151*FLEN/8, x4, x1, x2)

inst_65432:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:196296*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196296*0 + 3*152*FLEN/8, x4, x1, x2)

inst_65433:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:196299*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196299*0 + 3*153*FLEN/8, x4, x1, x2)

inst_65434:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:196302*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196302*0 + 3*154*FLEN/8, x4, x1, x2)

inst_65435:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:196305*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196305*0 + 3*155*FLEN/8, x4, x1, x2)

inst_65436:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:196308*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196308*0 + 3*156*FLEN/8, x4, x1, x2)

inst_65437:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:196311*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196311*0 + 3*157*FLEN/8, x4, x1, x2)

inst_65438:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:196314*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196314*0 + 3*158*FLEN/8, x4, x1, x2)

inst_65439:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:196317*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196317*0 + 3*159*FLEN/8, x4, x1, x2)

inst_65440:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:196320*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196320*0 + 3*160*FLEN/8, x4, x1, x2)

inst_65441:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:196323*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196323*0 + 3*161*FLEN/8, x4, x1, x2)

inst_65442:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:196326*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196326*0 + 3*162*FLEN/8, x4, x1, x2)

inst_65443:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:196329*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196329*0 + 3*163*FLEN/8, x4, x1, x2)

inst_65444:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:196332*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196332*0 + 3*164*FLEN/8, x4, x1, x2)

inst_65445:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:196335*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196335*0 + 3*165*FLEN/8, x4, x1, x2)

inst_65446:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000000000; valaddr_reg:x3; val_offset:196338*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196338*0 + 3*166*FLEN/8, x4, x1, x2)

inst_65447:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000000001; valaddr_reg:x3; val_offset:196341*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196341*0 + 3*167*FLEN/8, x4, x1, x2)

inst_65448:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000000003; valaddr_reg:x3; val_offset:196344*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196344*0 + 3*168*FLEN/8, x4, x1, x2)

inst_65449:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000000007; valaddr_reg:x3; val_offset:196347*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196347*0 + 3*169*FLEN/8, x4, x1, x2)

inst_65450:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000000000f; valaddr_reg:x3; val_offset:196350*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196350*0 + 3*170*FLEN/8, x4, x1, x2)

inst_65451:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000000001f; valaddr_reg:x3; val_offset:196353*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196353*0 + 3*171*FLEN/8, x4, x1, x2)

inst_65452:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000000003f; valaddr_reg:x3; val_offset:196356*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196356*0 + 3*172*FLEN/8, x4, x1, x2)

inst_65453:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000000007f; valaddr_reg:x3; val_offset:196359*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196359*0 + 3*173*FLEN/8, x4, x1, x2)

inst_65454:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000000000ff; valaddr_reg:x3; val_offset:196362*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196362*0 + 3*174*FLEN/8, x4, x1, x2)

inst_65455:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000000001ff; valaddr_reg:x3; val_offset:196365*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196365*0 + 3*175*FLEN/8, x4, x1, x2)

inst_65456:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000000003ff; valaddr_reg:x3; val_offset:196368*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196368*0 + 3*176*FLEN/8, x4, x1, x2)

inst_65457:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000000007ff; valaddr_reg:x3; val_offset:196371*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196371*0 + 3*177*FLEN/8, x4, x1, x2)

inst_65458:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000000fff; valaddr_reg:x3; val_offset:196374*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196374*0 + 3*178*FLEN/8, x4, x1, x2)

inst_65459:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000001fff; valaddr_reg:x3; val_offset:196377*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196377*0 + 3*179*FLEN/8, x4, x1, x2)

inst_65460:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000003fff; valaddr_reg:x3; val_offset:196380*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196380*0 + 3*180*FLEN/8, x4, x1, x2)

inst_65461:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000007fff; valaddr_reg:x3; val_offset:196383*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196383*0 + 3*181*FLEN/8, x4, x1, x2)

inst_65462:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000000ffff; valaddr_reg:x3; val_offset:196386*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196386*0 + 3*182*FLEN/8, x4, x1, x2)

inst_65463:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000001ffff; valaddr_reg:x3; val_offset:196389*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196389*0 + 3*183*FLEN/8, x4, x1, x2)

inst_65464:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000003ffff; valaddr_reg:x3; val_offset:196392*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196392*0 + 3*184*FLEN/8, x4, x1, x2)

inst_65465:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000007ffff; valaddr_reg:x3; val_offset:196395*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196395*0 + 3*185*FLEN/8, x4, x1, x2)

inst_65466:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000000fffff; valaddr_reg:x3; val_offset:196398*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196398*0 + 3*186*FLEN/8, x4, x1, x2)

inst_65467:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000001fffff; valaddr_reg:x3; val_offset:196401*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196401*0 + 3*187*FLEN/8, x4, x1, x2)

inst_65468:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000003fffff; valaddr_reg:x3; val_offset:196404*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196404*0 + 3*188*FLEN/8, x4, x1, x2)

inst_65469:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000007fffff; valaddr_reg:x3; val_offset:196407*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196407*0 + 3*189*FLEN/8, x4, x1, x2)

inst_65470:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000000ffffff; valaddr_reg:x3; val_offset:196410*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196410*0 + 3*190*FLEN/8, x4, x1, x2)

inst_65471:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000001ffffff; valaddr_reg:x3; val_offset:196413*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196413*0 + 3*191*FLEN/8, x4, x1, x2)

inst_65472:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000003ffffff; valaddr_reg:x3; val_offset:196416*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196416*0 + 3*192*FLEN/8, x4, x1, x2)

inst_65473:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000007ffffff; valaddr_reg:x3; val_offset:196419*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196419*0 + 3*193*FLEN/8, x4, x1, x2)

inst_65474:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000000fffffff; valaddr_reg:x3; val_offset:196422*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196422*0 + 3*194*FLEN/8, x4, x1, x2)

inst_65475:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000001fffffff; valaddr_reg:x3; val_offset:196425*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196425*0 + 3*195*FLEN/8, x4, x1, x2)

inst_65476:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000003fffffff; valaddr_reg:x3; val_offset:196428*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196428*0 + 3*196*FLEN/8, x4, x1, x2)

inst_65477:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000007fffffff; valaddr_reg:x3; val_offset:196431*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196431*0 + 3*197*FLEN/8, x4, x1, x2)

inst_65478:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00000ffffffff; valaddr_reg:x3; val_offset:196434*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196434*0 + 3*198*FLEN/8, x4, x1, x2)

inst_65479:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00001ffffffff; valaddr_reg:x3; val_offset:196437*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196437*0 + 3*199*FLEN/8, x4, x1, x2)

inst_65480:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00003ffffffff; valaddr_reg:x3; val_offset:196440*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196440*0 + 3*200*FLEN/8, x4, x1, x2)

inst_65481:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00007ffffffff; valaddr_reg:x3; val_offset:196443*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196443*0 + 3*201*FLEN/8, x4, x1, x2)

inst_65482:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0000fffffffff; valaddr_reg:x3; val_offset:196446*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196446*0 + 3*202*FLEN/8, x4, x1, x2)

inst_65483:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0001fffffffff; valaddr_reg:x3; val_offset:196449*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196449*0 + 3*203*FLEN/8, x4, x1, x2)

inst_65484:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0003fffffffff; valaddr_reg:x3; val_offset:196452*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196452*0 + 3*204*FLEN/8, x4, x1, x2)

inst_65485:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0007fffffffff; valaddr_reg:x3; val_offset:196455*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196455*0 + 3*205*FLEN/8, x4, x1, x2)

inst_65486:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f000ffffffffff; valaddr_reg:x3; val_offset:196458*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196458*0 + 3*206*FLEN/8, x4, x1, x2)

inst_65487:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f001ffffffffff; valaddr_reg:x3; val_offset:196461*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196461*0 + 3*207*FLEN/8, x4, x1, x2)

inst_65488:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f003ffffffffff; valaddr_reg:x3; val_offset:196464*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196464*0 + 3*208*FLEN/8, x4, x1, x2)

inst_65489:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f007ffffffffff; valaddr_reg:x3; val_offset:196467*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196467*0 + 3*209*FLEN/8, x4, x1, x2)

inst_65490:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f00fffffffffff; valaddr_reg:x3; val_offset:196470*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196470*0 + 3*210*FLEN/8, x4, x1, x2)

inst_65491:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f01fffffffffff; valaddr_reg:x3; val_offset:196473*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196473*0 + 3*211*FLEN/8, x4, x1, x2)

inst_65492:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f03fffffffffff; valaddr_reg:x3; val_offset:196476*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196476*0 + 3*212*FLEN/8, x4, x1, x2)

inst_65493:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f07fffffffffff; valaddr_reg:x3; val_offset:196479*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196479*0 + 3*213*FLEN/8, x4, x1, x2)

inst_65494:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f0ffffffffffff; valaddr_reg:x3; val_offset:196482*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196482*0 + 3*214*FLEN/8, x4, x1, x2)

inst_65495:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f1ffffffffffff; valaddr_reg:x3; val_offset:196485*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196485*0 + 3*215*FLEN/8, x4, x1, x2)

inst_65496:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f3ffffffffffff; valaddr_reg:x3; val_offset:196488*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196488*0 + 3*216*FLEN/8, x4, x1, x2)

inst_65497:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f7ffffffffffff; valaddr_reg:x3; val_offset:196491*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196491*0 + 3*217*FLEN/8, x4, x1, x2)

inst_65498:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82f8000000000000; valaddr_reg:x3; val_offset:196494*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196494*0 + 3*218*FLEN/8, x4, x1, x2)

inst_65499:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fc000000000000; valaddr_reg:x3; val_offset:196497*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196497*0 + 3*219*FLEN/8, x4, x1, x2)

inst_65500:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fe000000000000; valaddr_reg:x3; val_offset:196500*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196500*0 + 3*220*FLEN/8, x4, x1, x2)

inst_65501:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ff000000000000; valaddr_reg:x3; val_offset:196503*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196503*0 + 3*221*FLEN/8, x4, x1, x2)

inst_65502:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ff800000000000; valaddr_reg:x3; val_offset:196506*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196506*0 + 3*222*FLEN/8, x4, x1, x2)

inst_65503:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffc00000000000; valaddr_reg:x3; val_offset:196509*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196509*0 + 3*223*FLEN/8, x4, x1, x2)

inst_65504:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffe00000000000; valaddr_reg:x3; val_offset:196512*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196512*0 + 3*224*FLEN/8, x4, x1, x2)

inst_65505:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fff00000000000; valaddr_reg:x3; val_offset:196515*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196515*0 + 3*225*FLEN/8, x4, x1, x2)

inst_65506:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fff80000000000; valaddr_reg:x3; val_offset:196518*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196518*0 + 3*226*FLEN/8, x4, x1, x2)

inst_65507:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffc0000000000; valaddr_reg:x3; val_offset:196521*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196521*0 + 3*227*FLEN/8, x4, x1, x2)

inst_65508:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffe0000000000; valaddr_reg:x3; val_offset:196524*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196524*0 + 3*228*FLEN/8, x4, x1, x2)

inst_65509:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffff0000000000; valaddr_reg:x3; val_offset:196527*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196527*0 + 3*229*FLEN/8, x4, x1, x2)

inst_65510:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffff8000000000; valaddr_reg:x3; val_offset:196530*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196530*0 + 3*230*FLEN/8, x4, x1, x2)

inst_65511:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffc000000000; valaddr_reg:x3; val_offset:196533*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196533*0 + 3*231*FLEN/8, x4, x1, x2)

inst_65512:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffe000000000; valaddr_reg:x3; val_offset:196536*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196536*0 + 3*232*FLEN/8, x4, x1, x2)

inst_65513:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffff000000000; valaddr_reg:x3; val_offset:196539*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196539*0 + 3*233*FLEN/8, x4, x1, x2)

inst_65514:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffff800000000; valaddr_reg:x3; val_offset:196542*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196542*0 + 3*234*FLEN/8, x4, x1, x2)

inst_65515:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffc00000000; valaddr_reg:x3; val_offset:196545*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196545*0 + 3*235*FLEN/8, x4, x1, x2)

inst_65516:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffe00000000; valaddr_reg:x3; val_offset:196548*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196548*0 + 3*236*FLEN/8, x4, x1, x2)

inst_65517:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffff00000000; valaddr_reg:x3; val_offset:196551*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196551*0 + 3*237*FLEN/8, x4, x1, x2)

inst_65518:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffff80000000; valaddr_reg:x3; val_offset:196554*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196554*0 + 3*238*FLEN/8, x4, x1, x2)

inst_65519:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffc0000000; valaddr_reg:x3; val_offset:196557*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196557*0 + 3*239*FLEN/8, x4, x1, x2)

inst_65520:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffe0000000; valaddr_reg:x3; val_offset:196560*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196560*0 + 3*240*FLEN/8, x4, x1, x2)

inst_65521:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffff0000000; valaddr_reg:x3; val_offset:196563*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196563*0 + 3*241*FLEN/8, x4, x1, x2)

inst_65522:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffff8000000; valaddr_reg:x3; val_offset:196566*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196566*0 + 3*242*FLEN/8, x4, x1, x2)

inst_65523:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffc000000; valaddr_reg:x3; val_offset:196569*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196569*0 + 3*243*FLEN/8, x4, x1, x2)

inst_65524:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffe000000; valaddr_reg:x3; val_offset:196572*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196572*0 + 3*244*FLEN/8, x4, x1, x2)

inst_65525:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffff000000; valaddr_reg:x3; val_offset:196575*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196575*0 + 3*245*FLEN/8, x4, x1, x2)

inst_65526:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffff800000; valaddr_reg:x3; val_offset:196578*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196578*0 + 3*246*FLEN/8, x4, x1, x2)

inst_65527:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffc00000; valaddr_reg:x3; val_offset:196581*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196581*0 + 3*247*FLEN/8, x4, x1, x2)

inst_65528:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffe00000; valaddr_reg:x3; val_offset:196584*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196584*0 + 3*248*FLEN/8, x4, x1, x2)

inst_65529:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffff00000; valaddr_reg:x3; val_offset:196587*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196587*0 + 3*249*FLEN/8, x4, x1, x2)

inst_65530:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffff80000; valaddr_reg:x3; val_offset:196590*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196590*0 + 3*250*FLEN/8, x4, x1, x2)

inst_65531:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffc0000; valaddr_reg:x3; val_offset:196593*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196593*0 + 3*251*FLEN/8, x4, x1, x2)

inst_65532:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffe0000; valaddr_reg:x3; val_offset:196596*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196596*0 + 3*252*FLEN/8, x4, x1, x2)

inst_65533:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffff0000; valaddr_reg:x3; val_offset:196599*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196599*0 + 3*253*FLEN/8, x4, x1, x2)

inst_65534:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffff8000; valaddr_reg:x3; val_offset:196602*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196602*0 + 3*254*FLEN/8, x4, x1, x2)

inst_65535:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffc000; valaddr_reg:x3; val_offset:196605*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196605*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_65536:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffe000; valaddr_reg:x3; val_offset:196608*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196608*0 + 3*256*FLEN/8, x4, x1, x2)

inst_65537:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffff000; valaddr_reg:x3; val_offset:196611*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196611*0 + 3*257*FLEN/8, x4, x1, x2)

inst_65538:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffff800; valaddr_reg:x3; val_offset:196614*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196614*0 + 3*258*FLEN/8, x4, x1, x2)

inst_65539:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffc00; valaddr_reg:x3; val_offset:196617*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196617*0 + 3*259*FLEN/8, x4, x1, x2)

inst_65540:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffe00; valaddr_reg:x3; val_offset:196620*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196620*0 + 3*260*FLEN/8, x4, x1, x2)

inst_65541:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffff00; valaddr_reg:x3; val_offset:196623*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196623*0 + 3*261*FLEN/8, x4, x1, x2)

inst_65542:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffff80; valaddr_reg:x3; val_offset:196626*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196626*0 + 3*262*FLEN/8, x4, x1, x2)

inst_65543:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffffc0; valaddr_reg:x3; val_offset:196629*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196629*0 + 3*263*FLEN/8, x4, x1, x2)

inst_65544:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffffe0; valaddr_reg:x3; val_offset:196632*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196632*0 + 3*264*FLEN/8, x4, x1, x2)

inst_65545:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffff0; valaddr_reg:x3; val_offset:196635*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196635*0 + 3*265*FLEN/8, x4, x1, x2)

inst_65546:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffff8; valaddr_reg:x3; val_offset:196638*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196638*0 + 3*266*FLEN/8, x4, x1, x2)

inst_65547:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffffc; valaddr_reg:x3; val_offset:196641*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196641*0 + 3*267*FLEN/8, x4, x1, x2)

inst_65548:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82fffffffffffffe; valaddr_reg:x3; val_offset:196644*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196644*0 + 3*268*FLEN/8, x4, x1, x2)

inst_65549:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x446cb61fdc3b2 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x02f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa446cb61fdc3b2; op2val:0x8000;
op3val:0x82ffffffffffffff; valaddr_reg:x3; val_offset:196647*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196647*0 + 3*269*FLEN/8, x4, x1, x2)

inst_65550:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000000000; valaddr_reg:x3; val_offset:196650*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196650*0 + 3*270*FLEN/8, x4, x1, x2)

inst_65551:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000000001; valaddr_reg:x3; val_offset:196653*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196653*0 + 3*271*FLEN/8, x4, x1, x2)

inst_65552:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000000003; valaddr_reg:x3; val_offset:196656*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196656*0 + 3*272*FLEN/8, x4, x1, x2)

inst_65553:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000000007; valaddr_reg:x3; val_offset:196659*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196659*0 + 3*273*FLEN/8, x4, x1, x2)

inst_65554:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000000000f; valaddr_reg:x3; val_offset:196662*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196662*0 + 3*274*FLEN/8, x4, x1, x2)

inst_65555:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000000001f; valaddr_reg:x3; val_offset:196665*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196665*0 + 3*275*FLEN/8, x4, x1, x2)

inst_65556:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000000003f; valaddr_reg:x3; val_offset:196668*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196668*0 + 3*276*FLEN/8, x4, x1, x2)

inst_65557:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000000007f; valaddr_reg:x3; val_offset:196671*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196671*0 + 3*277*FLEN/8, x4, x1, x2)

inst_65558:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000000000ff; valaddr_reg:x3; val_offset:196674*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196674*0 + 3*278*FLEN/8, x4, x1, x2)

inst_65559:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000000001ff; valaddr_reg:x3; val_offset:196677*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196677*0 + 3*279*FLEN/8, x4, x1, x2)

inst_65560:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000000003ff; valaddr_reg:x3; val_offset:196680*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196680*0 + 3*280*FLEN/8, x4, x1, x2)

inst_65561:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000000007ff; valaddr_reg:x3; val_offset:196683*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196683*0 + 3*281*FLEN/8, x4, x1, x2)

inst_65562:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000000fff; valaddr_reg:x3; val_offset:196686*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196686*0 + 3*282*FLEN/8, x4, x1, x2)

inst_65563:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000001fff; valaddr_reg:x3; val_offset:196689*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196689*0 + 3*283*FLEN/8, x4, x1, x2)

inst_65564:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000003fff; valaddr_reg:x3; val_offset:196692*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196692*0 + 3*284*FLEN/8, x4, x1, x2)

inst_65565:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000007fff; valaddr_reg:x3; val_offset:196695*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196695*0 + 3*285*FLEN/8, x4, x1, x2)

inst_65566:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000000ffff; valaddr_reg:x3; val_offset:196698*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196698*0 + 3*286*FLEN/8, x4, x1, x2)

inst_65567:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000001ffff; valaddr_reg:x3; val_offset:196701*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196701*0 + 3*287*FLEN/8, x4, x1, x2)

inst_65568:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000003ffff; valaddr_reg:x3; val_offset:196704*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196704*0 + 3*288*FLEN/8, x4, x1, x2)

inst_65569:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000007ffff; valaddr_reg:x3; val_offset:196707*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196707*0 + 3*289*FLEN/8, x4, x1, x2)

inst_65570:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000000fffff; valaddr_reg:x3; val_offset:196710*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196710*0 + 3*290*FLEN/8, x4, x1, x2)

inst_65571:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000001fffff; valaddr_reg:x3; val_offset:196713*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196713*0 + 3*291*FLEN/8, x4, x1, x2)

inst_65572:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000003fffff; valaddr_reg:x3; val_offset:196716*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196716*0 + 3*292*FLEN/8, x4, x1, x2)

inst_65573:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000007fffff; valaddr_reg:x3; val_offset:196719*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196719*0 + 3*293*FLEN/8, x4, x1, x2)

inst_65574:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000000ffffff; valaddr_reg:x3; val_offset:196722*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196722*0 + 3*294*FLEN/8, x4, x1, x2)

inst_65575:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000001ffffff; valaddr_reg:x3; val_offset:196725*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196725*0 + 3*295*FLEN/8, x4, x1, x2)

inst_65576:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000003ffffff; valaddr_reg:x3; val_offset:196728*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196728*0 + 3*296*FLEN/8, x4, x1, x2)

inst_65577:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000007ffffff; valaddr_reg:x3; val_offset:196731*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196731*0 + 3*297*FLEN/8, x4, x1, x2)

inst_65578:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000000fffffff; valaddr_reg:x3; val_offset:196734*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196734*0 + 3*298*FLEN/8, x4, x1, x2)

inst_65579:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000001fffffff; valaddr_reg:x3; val_offset:196737*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196737*0 + 3*299*FLEN/8, x4, x1, x2)

inst_65580:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000003fffffff; valaddr_reg:x3; val_offset:196740*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196740*0 + 3*300*FLEN/8, x4, x1, x2)

inst_65581:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000007fffffff; valaddr_reg:x3; val_offset:196743*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196743*0 + 3*301*FLEN/8, x4, x1, x2)

inst_65582:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700000ffffffff; valaddr_reg:x3; val_offset:196746*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196746*0 + 3*302*FLEN/8, x4, x1, x2)

inst_65583:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700001ffffffff; valaddr_reg:x3; val_offset:196749*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196749*0 + 3*303*FLEN/8, x4, x1, x2)

inst_65584:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700003ffffffff; valaddr_reg:x3; val_offset:196752*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196752*0 + 3*304*FLEN/8, x4, x1, x2)

inst_65585:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700007ffffffff; valaddr_reg:x3; val_offset:196755*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196755*0 + 3*305*FLEN/8, x4, x1, x2)

inst_65586:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70000fffffffff; valaddr_reg:x3; val_offset:196758*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196758*0 + 3*306*FLEN/8, x4, x1, x2)

inst_65587:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70001fffffffff; valaddr_reg:x3; val_offset:196761*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196761*0 + 3*307*FLEN/8, x4, x1, x2)

inst_65588:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70003fffffffff; valaddr_reg:x3; val_offset:196764*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196764*0 + 3*308*FLEN/8, x4, x1, x2)

inst_65589:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70007fffffffff; valaddr_reg:x3; val_offset:196767*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196767*0 + 3*309*FLEN/8, x4, x1, x2)

inst_65590:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7000ffffffffff; valaddr_reg:x3; val_offset:196770*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196770*0 + 3*310*FLEN/8, x4, x1, x2)

inst_65591:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7001ffffffffff; valaddr_reg:x3; val_offset:196773*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196773*0 + 3*311*FLEN/8, x4, x1, x2)

inst_65592:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7003ffffffffff; valaddr_reg:x3; val_offset:196776*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196776*0 + 3*312*FLEN/8, x4, x1, x2)

inst_65593:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7007ffffffffff; valaddr_reg:x3; val_offset:196779*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196779*0 + 3*313*FLEN/8, x4, x1, x2)

inst_65594:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a700fffffffffff; valaddr_reg:x3; val_offset:196782*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196782*0 + 3*314*FLEN/8, x4, x1, x2)

inst_65595:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a701fffffffffff; valaddr_reg:x3; val_offset:196785*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196785*0 + 3*315*FLEN/8, x4, x1, x2)

inst_65596:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a703fffffffffff; valaddr_reg:x3; val_offset:196788*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196788*0 + 3*316*FLEN/8, x4, x1, x2)

inst_65597:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a707fffffffffff; valaddr_reg:x3; val_offset:196791*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196791*0 + 3*317*FLEN/8, x4, x1, x2)

inst_65598:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a70ffffffffffff; valaddr_reg:x3; val_offset:196794*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196794*0 + 3*318*FLEN/8, x4, x1, x2)

inst_65599:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a71ffffffffffff; valaddr_reg:x3; val_offset:196797*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196797*0 + 3*319*FLEN/8, x4, x1, x2)

inst_65600:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a73ffffffffffff; valaddr_reg:x3; val_offset:196800*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196800*0 + 3*320*FLEN/8, x4, x1, x2)

inst_65601:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a77ffffffffffff; valaddr_reg:x3; val_offset:196803*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196803*0 + 3*321*FLEN/8, x4, x1, x2)

inst_65602:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a78000000000000; valaddr_reg:x3; val_offset:196806*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196806*0 + 3*322*FLEN/8, x4, x1, x2)

inst_65603:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7c000000000000; valaddr_reg:x3; val_offset:196809*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196809*0 + 3*323*FLEN/8, x4, x1, x2)

inst_65604:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7e000000000000; valaddr_reg:x3; val_offset:196812*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196812*0 + 3*324*FLEN/8, x4, x1, x2)

inst_65605:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7f000000000000; valaddr_reg:x3; val_offset:196815*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196815*0 + 3*325*FLEN/8, x4, x1, x2)

inst_65606:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7f800000000000; valaddr_reg:x3; val_offset:196818*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196818*0 + 3*326*FLEN/8, x4, x1, x2)

inst_65607:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fc00000000000; valaddr_reg:x3; val_offset:196821*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196821*0 + 3*327*FLEN/8, x4, x1, x2)

inst_65608:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fe00000000000; valaddr_reg:x3; val_offset:196824*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196824*0 + 3*328*FLEN/8, x4, x1, x2)

inst_65609:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ff00000000000; valaddr_reg:x3; val_offset:196827*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196827*0 + 3*329*FLEN/8, x4, x1, x2)

inst_65610:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ff80000000000; valaddr_reg:x3; val_offset:196830*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196830*0 + 3*330*FLEN/8, x4, x1, x2)

inst_65611:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffc0000000000; valaddr_reg:x3; val_offset:196833*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196833*0 + 3*331*FLEN/8, x4, x1, x2)

inst_65612:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffe0000000000; valaddr_reg:x3; val_offset:196836*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196836*0 + 3*332*FLEN/8, x4, x1, x2)

inst_65613:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fff0000000000; valaddr_reg:x3; val_offset:196839*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196839*0 + 3*333*FLEN/8, x4, x1, x2)

inst_65614:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fff8000000000; valaddr_reg:x3; val_offset:196842*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196842*0 + 3*334*FLEN/8, x4, x1, x2)

inst_65615:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffc000000000; valaddr_reg:x3; val_offset:196845*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196845*0 + 3*335*FLEN/8, x4, x1, x2)

inst_65616:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffe000000000; valaddr_reg:x3; val_offset:196848*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196848*0 + 3*336*FLEN/8, x4, x1, x2)

inst_65617:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffff000000000; valaddr_reg:x3; val_offset:196851*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196851*0 + 3*337*FLEN/8, x4, x1, x2)

inst_65618:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffff800000000; valaddr_reg:x3; val_offset:196854*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196854*0 + 3*338*FLEN/8, x4, x1, x2)

inst_65619:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffc00000000; valaddr_reg:x3; val_offset:196857*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196857*0 + 3*339*FLEN/8, x4, x1, x2)

inst_65620:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffe00000000; valaddr_reg:x3; val_offset:196860*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196860*0 + 3*340*FLEN/8, x4, x1, x2)

inst_65621:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffff00000000; valaddr_reg:x3; val_offset:196863*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196863*0 + 3*341*FLEN/8, x4, x1, x2)

inst_65622:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffff80000000; valaddr_reg:x3; val_offset:196866*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196866*0 + 3*342*FLEN/8, x4, x1, x2)

inst_65623:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffc0000000; valaddr_reg:x3; val_offset:196869*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196869*0 + 3*343*FLEN/8, x4, x1, x2)

inst_65624:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffe0000000; valaddr_reg:x3; val_offset:196872*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196872*0 + 3*344*FLEN/8, x4, x1, x2)

inst_65625:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffff0000000; valaddr_reg:x3; val_offset:196875*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196875*0 + 3*345*FLEN/8, x4, x1, x2)

inst_65626:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffff8000000; valaddr_reg:x3; val_offset:196878*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196878*0 + 3*346*FLEN/8, x4, x1, x2)

inst_65627:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffc000000; valaddr_reg:x3; val_offset:196881*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196881*0 + 3*347*FLEN/8, x4, x1, x2)

inst_65628:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffe000000; valaddr_reg:x3; val_offset:196884*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196884*0 + 3*348*FLEN/8, x4, x1, x2)

inst_65629:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffff000000; valaddr_reg:x3; val_offset:196887*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196887*0 + 3*349*FLEN/8, x4, x1, x2)

inst_65630:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffff800000; valaddr_reg:x3; val_offset:196890*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196890*0 + 3*350*FLEN/8, x4, x1, x2)

inst_65631:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffc00000; valaddr_reg:x3; val_offset:196893*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196893*0 + 3*351*FLEN/8, x4, x1, x2)

inst_65632:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffe00000; valaddr_reg:x3; val_offset:196896*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196896*0 + 3*352*FLEN/8, x4, x1, x2)

inst_65633:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffff00000; valaddr_reg:x3; val_offset:196899*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196899*0 + 3*353*FLEN/8, x4, x1, x2)

inst_65634:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffff80000; valaddr_reg:x3; val_offset:196902*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196902*0 + 3*354*FLEN/8, x4, x1, x2)

inst_65635:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffc0000; valaddr_reg:x3; val_offset:196905*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196905*0 + 3*355*FLEN/8, x4, x1, x2)

inst_65636:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffe0000; valaddr_reg:x3; val_offset:196908*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196908*0 + 3*356*FLEN/8, x4, x1, x2)

inst_65637:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffff0000; valaddr_reg:x3; val_offset:196911*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196911*0 + 3*357*FLEN/8, x4, x1, x2)

inst_65638:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffff8000; valaddr_reg:x3; val_offset:196914*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196914*0 + 3*358*FLEN/8, x4, x1, x2)

inst_65639:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffc000; valaddr_reg:x3; val_offset:196917*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196917*0 + 3*359*FLEN/8, x4, x1, x2)

inst_65640:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffe000; valaddr_reg:x3; val_offset:196920*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196920*0 + 3*360*FLEN/8, x4, x1, x2)

inst_65641:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffff000; valaddr_reg:x3; val_offset:196923*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196923*0 + 3*361*FLEN/8, x4, x1, x2)

inst_65642:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffff800; valaddr_reg:x3; val_offset:196926*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196926*0 + 3*362*FLEN/8, x4, x1, x2)

inst_65643:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffc00; valaddr_reg:x3; val_offset:196929*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196929*0 + 3*363*FLEN/8, x4, x1, x2)

inst_65644:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffe00; valaddr_reg:x3; val_offset:196932*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196932*0 + 3*364*FLEN/8, x4, x1, x2)

inst_65645:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffff00; valaddr_reg:x3; val_offset:196935*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196935*0 + 3*365*FLEN/8, x4, x1, x2)

inst_65646:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffff80; valaddr_reg:x3; val_offset:196938*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196938*0 + 3*366*FLEN/8, x4, x1, x2)

inst_65647:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffffc0; valaddr_reg:x3; val_offset:196941*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196941*0 + 3*367*FLEN/8, x4, x1, x2)

inst_65648:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffffe0; valaddr_reg:x3; val_offset:196944*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196944*0 + 3*368*FLEN/8, x4, x1, x2)

inst_65649:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffff0; valaddr_reg:x3; val_offset:196947*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196947*0 + 3*369*FLEN/8, x4, x1, x2)

inst_65650:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffff8; valaddr_reg:x3; val_offset:196950*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196950*0 + 3*370*FLEN/8, x4, x1, x2)

inst_65651:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffffc; valaddr_reg:x3; val_offset:196953*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196953*0 + 3*371*FLEN/8, x4, x1, x2)

inst_65652:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7ffffffffffffe; valaddr_reg:x3; val_offset:196956*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196956*0 + 3*372*FLEN/8, x4, x1, x2)

inst_65653:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3a7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3a7fffffffffffff; valaddr_reg:x3; val_offset:196959*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196959*0 + 3*373*FLEN/8, x4, x1, x2)

inst_65654:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:196962*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196962*0 + 3*374*FLEN/8, x4, x1, x2)

inst_65655:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:196965*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196965*0 + 3*375*FLEN/8, x4, x1, x2)

inst_65656:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:196968*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196968*0 + 3*376*FLEN/8, x4, x1, x2)

inst_65657:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:196971*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196971*0 + 3*377*FLEN/8, x4, x1, x2)

inst_65658:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:196974*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196974*0 + 3*378*FLEN/8, x4, x1, x2)

inst_65659:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:196977*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196977*0 + 3*379*FLEN/8, x4, x1, x2)

inst_65660:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:196980*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196980*0 + 3*380*FLEN/8, x4, x1, x2)

inst_65661:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:196983*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196983*0 + 3*381*FLEN/8, x4, x1, x2)

inst_65662:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:196986*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196986*0 + 3*382*FLEN/8, x4, x1, x2)

inst_65663:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:196989*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196989*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_65664:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:196992*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196992*0 + 3*384*FLEN/8, x4, x1, x2)

inst_65665:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:196995*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196995*0 + 3*385*FLEN/8, x4, x1, x2)

inst_65666:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:196998*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 196998*0 + 3*386*FLEN/8, x4, x1, x2)

inst_65667:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:197001*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197001*0 + 3*387*FLEN/8, x4, x1, x2)

inst_65668:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:197004*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197004*0 + 3*388*FLEN/8, x4, x1, x2)

inst_65669:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:197007*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197007*0 + 3*389*FLEN/8, x4, x1, x2)

inst_65670:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:197010*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197010*0 + 3*390*FLEN/8, x4, x1, x2)

inst_65671:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:197013*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197013*0 + 3*391*FLEN/8, x4, x1, x2)

inst_65672:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:197016*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197016*0 + 3*392*FLEN/8, x4, x1, x2)

inst_65673:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:197019*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197019*0 + 3*393*FLEN/8, x4, x1, x2)

inst_65674:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:197022*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197022*0 + 3*394*FLEN/8, x4, x1, x2)

inst_65675:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44b329daae952 and fs2 == 0 and fe2 == 0x203 and fm2 == 0x93abd795438a9 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44b329daae952; op2val:0x20393abd795438a9;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:197025*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197025*0 + 3*395*FLEN/8, x4, x1, x2)

inst_65676:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:197028*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197028*0 + 3*396*FLEN/8, x4, x1, x2)

inst_65677:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:197031*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197031*0 + 3*397*FLEN/8, x4, x1, x2)

inst_65678:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:197034*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197034*0 + 3*398*FLEN/8, x4, x1, x2)

inst_65679:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:197037*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197037*0 + 3*399*FLEN/8, x4, x1, x2)

inst_65680:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:197040*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197040*0 + 3*400*FLEN/8, x4, x1, x2)

inst_65681:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:197043*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197043*0 + 3*401*FLEN/8, x4, x1, x2)

inst_65682:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:197046*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197046*0 + 3*402*FLEN/8, x4, x1, x2)

inst_65683:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:197049*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197049*0 + 3*403*FLEN/8, x4, x1, x2)

inst_65684:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:197052*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197052*0 + 3*404*FLEN/8, x4, x1, x2)

inst_65685:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:197055*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197055*0 + 3*405*FLEN/8, x4, x1, x2)

inst_65686:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:197058*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197058*0 + 3*406*FLEN/8, x4, x1, x2)

inst_65687:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:197061*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197061*0 + 3*407*FLEN/8, x4, x1, x2)

inst_65688:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:197064*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197064*0 + 3*408*FLEN/8, x4, x1, x2)

inst_65689:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:197067*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197067*0 + 3*409*FLEN/8, x4, x1, x2)

inst_65690:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:197070*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197070*0 + 3*410*FLEN/8, x4, x1, x2)

inst_65691:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:197073*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197073*0 + 3*411*FLEN/8, x4, x1, x2)

inst_65692:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:197076*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197076*0 + 3*412*FLEN/8, x4, x1, x2)

inst_65693:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:197079*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197079*0 + 3*413*FLEN/8, x4, x1, x2)

inst_65694:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:197082*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197082*0 + 3*414*FLEN/8, x4, x1, x2)

inst_65695:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:197085*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197085*0 + 3*415*FLEN/8, x4, x1, x2)

inst_65696:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:197088*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197088*0 + 3*416*FLEN/8, x4, x1, x2)

inst_65697:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:197091*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197091*0 + 3*417*FLEN/8, x4, x1, x2)

inst_65698:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000000000; valaddr_reg:x3; val_offset:197094*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197094*0 + 3*418*FLEN/8, x4, x1, x2)

inst_65699:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000000001; valaddr_reg:x3; val_offset:197097*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197097*0 + 3*419*FLEN/8, x4, x1, x2)

inst_65700:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000000003; valaddr_reg:x3; val_offset:197100*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197100*0 + 3*420*FLEN/8, x4, x1, x2)

inst_65701:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000000007; valaddr_reg:x3; val_offset:197103*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197103*0 + 3*421*FLEN/8, x4, x1, x2)

inst_65702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000000000f; valaddr_reg:x3; val_offset:197106*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197106*0 + 3*422*FLEN/8, x4, x1, x2)

inst_65703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000000001f; valaddr_reg:x3; val_offset:197109*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197109*0 + 3*423*FLEN/8, x4, x1, x2)

inst_65704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000000003f; valaddr_reg:x3; val_offset:197112*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197112*0 + 3*424*FLEN/8, x4, x1, x2)

inst_65705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000000007f; valaddr_reg:x3; val_offset:197115*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197115*0 + 3*425*FLEN/8, x4, x1, x2)

inst_65706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000000000ff; valaddr_reg:x3; val_offset:197118*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197118*0 + 3*426*FLEN/8, x4, x1, x2)

inst_65707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000000001ff; valaddr_reg:x3; val_offset:197121*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197121*0 + 3*427*FLEN/8, x4, x1, x2)

inst_65708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000000003ff; valaddr_reg:x3; val_offset:197124*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197124*0 + 3*428*FLEN/8, x4, x1, x2)

inst_65709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000000007ff; valaddr_reg:x3; val_offset:197127*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197127*0 + 3*429*FLEN/8, x4, x1, x2)

inst_65710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000000fff; valaddr_reg:x3; val_offset:197130*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197130*0 + 3*430*FLEN/8, x4, x1, x2)

inst_65711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000001fff; valaddr_reg:x3; val_offset:197133*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197133*0 + 3*431*FLEN/8, x4, x1, x2)

inst_65712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000003fff; valaddr_reg:x3; val_offset:197136*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197136*0 + 3*432*FLEN/8, x4, x1, x2)

inst_65713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000007fff; valaddr_reg:x3; val_offset:197139*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197139*0 + 3*433*FLEN/8, x4, x1, x2)

inst_65714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000000ffff; valaddr_reg:x3; val_offset:197142*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197142*0 + 3*434*FLEN/8, x4, x1, x2)

inst_65715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000001ffff; valaddr_reg:x3; val_offset:197145*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197145*0 + 3*435*FLEN/8, x4, x1, x2)

inst_65716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000003ffff; valaddr_reg:x3; val_offset:197148*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197148*0 + 3*436*FLEN/8, x4, x1, x2)

inst_65717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000007ffff; valaddr_reg:x3; val_offset:197151*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197151*0 + 3*437*FLEN/8, x4, x1, x2)

inst_65718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000000fffff; valaddr_reg:x3; val_offset:197154*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197154*0 + 3*438*FLEN/8, x4, x1, x2)

inst_65719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000001fffff; valaddr_reg:x3; val_offset:197157*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197157*0 + 3*439*FLEN/8, x4, x1, x2)

inst_65720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000003fffff; valaddr_reg:x3; val_offset:197160*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197160*0 + 3*440*FLEN/8, x4, x1, x2)

inst_65721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000007fffff; valaddr_reg:x3; val_offset:197163*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197163*0 + 3*441*FLEN/8, x4, x1, x2)

inst_65722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000000ffffff; valaddr_reg:x3; val_offset:197166*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197166*0 + 3*442*FLEN/8, x4, x1, x2)

inst_65723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000001ffffff; valaddr_reg:x3; val_offset:197169*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197169*0 + 3*443*FLEN/8, x4, x1, x2)

inst_65724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000003ffffff; valaddr_reg:x3; val_offset:197172*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197172*0 + 3*444*FLEN/8, x4, x1, x2)

inst_65725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000007ffffff; valaddr_reg:x3; val_offset:197175*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197175*0 + 3*445*FLEN/8, x4, x1, x2)

inst_65726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000000fffffff; valaddr_reg:x3; val_offset:197178*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197178*0 + 3*446*FLEN/8, x4, x1, x2)

inst_65727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000001fffffff; valaddr_reg:x3; val_offset:197181*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197181*0 + 3*447*FLEN/8, x4, x1, x2)

inst_65728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000003fffffff; valaddr_reg:x3; val_offset:197184*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197184*0 + 3*448*FLEN/8, x4, x1, x2)

inst_65729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000007fffffff; valaddr_reg:x3; val_offset:197187*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197187*0 + 3*449*FLEN/8, x4, x1, x2)

inst_65730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00000ffffffff; valaddr_reg:x3; val_offset:197190*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197190*0 + 3*450*FLEN/8, x4, x1, x2)

inst_65731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00001ffffffff; valaddr_reg:x3; val_offset:197193*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197193*0 + 3*451*FLEN/8, x4, x1, x2)

inst_65732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00003ffffffff; valaddr_reg:x3; val_offset:197196*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197196*0 + 3*452*FLEN/8, x4, x1, x2)

inst_65733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00007ffffffff; valaddr_reg:x3; val_offset:197199*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197199*0 + 3*453*FLEN/8, x4, x1, x2)

inst_65734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0000fffffffff; valaddr_reg:x3; val_offset:197202*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197202*0 + 3*454*FLEN/8, x4, x1, x2)

inst_65735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0001fffffffff; valaddr_reg:x3; val_offset:197205*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197205*0 + 3*455*FLEN/8, x4, x1, x2)

inst_65736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0003fffffffff; valaddr_reg:x3; val_offset:197208*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197208*0 + 3*456*FLEN/8, x4, x1, x2)

inst_65737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0007fffffffff; valaddr_reg:x3; val_offset:197211*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197211*0 + 3*457*FLEN/8, x4, x1, x2)

inst_65738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f000ffffffffff; valaddr_reg:x3; val_offset:197214*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197214*0 + 3*458*FLEN/8, x4, x1, x2)

inst_65739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f001ffffffffff; valaddr_reg:x3; val_offset:197217*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197217*0 + 3*459*FLEN/8, x4, x1, x2)

inst_65740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f003ffffffffff; valaddr_reg:x3; val_offset:197220*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197220*0 + 3*460*FLEN/8, x4, x1, x2)

inst_65741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f007ffffffffff; valaddr_reg:x3; val_offset:197223*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197223*0 + 3*461*FLEN/8, x4, x1, x2)

inst_65742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f00fffffffffff; valaddr_reg:x3; val_offset:197226*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197226*0 + 3*462*FLEN/8, x4, x1, x2)

inst_65743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f01fffffffffff; valaddr_reg:x3; val_offset:197229*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197229*0 + 3*463*FLEN/8, x4, x1, x2)

inst_65744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f03fffffffffff; valaddr_reg:x3; val_offset:197232*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197232*0 + 3*464*FLEN/8, x4, x1, x2)

inst_65745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f07fffffffffff; valaddr_reg:x3; val_offset:197235*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197235*0 + 3*465*FLEN/8, x4, x1, x2)

inst_65746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f0ffffffffffff; valaddr_reg:x3; val_offset:197238*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197238*0 + 3*466*FLEN/8, x4, x1, x2)

inst_65747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f1ffffffffffff; valaddr_reg:x3; val_offset:197241*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197241*0 + 3*467*FLEN/8, x4, x1, x2)

inst_65748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f3ffffffffffff; valaddr_reg:x3; val_offset:197244*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197244*0 + 3*468*FLEN/8, x4, x1, x2)

inst_65749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f7ffffffffffff; valaddr_reg:x3; val_offset:197247*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197247*0 + 3*469*FLEN/8, x4, x1, x2)

inst_65750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83f8000000000000; valaddr_reg:x3; val_offset:197250*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197250*0 + 3*470*FLEN/8, x4, x1, x2)

inst_65751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fc000000000000; valaddr_reg:x3; val_offset:197253*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197253*0 + 3*471*FLEN/8, x4, x1, x2)

inst_65752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fe000000000000; valaddr_reg:x3; val_offset:197256*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197256*0 + 3*472*FLEN/8, x4, x1, x2)

inst_65753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ff000000000000; valaddr_reg:x3; val_offset:197259*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197259*0 + 3*473*FLEN/8, x4, x1, x2)

inst_65754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ff800000000000; valaddr_reg:x3; val_offset:197262*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197262*0 + 3*474*FLEN/8, x4, x1, x2)

inst_65755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffc00000000000; valaddr_reg:x3; val_offset:197265*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197265*0 + 3*475*FLEN/8, x4, x1, x2)

inst_65756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffe00000000000; valaddr_reg:x3; val_offset:197268*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197268*0 + 3*476*FLEN/8, x4, x1, x2)

inst_65757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fff00000000000; valaddr_reg:x3; val_offset:197271*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197271*0 + 3*477*FLEN/8, x4, x1, x2)

inst_65758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fff80000000000; valaddr_reg:x3; val_offset:197274*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197274*0 + 3*478*FLEN/8, x4, x1, x2)

inst_65759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffc0000000000; valaddr_reg:x3; val_offset:197277*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197277*0 + 3*479*FLEN/8, x4, x1, x2)

inst_65760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffe0000000000; valaddr_reg:x3; val_offset:197280*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197280*0 + 3*480*FLEN/8, x4, x1, x2)

inst_65761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffff0000000000; valaddr_reg:x3; val_offset:197283*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197283*0 + 3*481*FLEN/8, x4, x1, x2)

inst_65762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffff8000000000; valaddr_reg:x3; val_offset:197286*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197286*0 + 3*482*FLEN/8, x4, x1, x2)

inst_65763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffc000000000; valaddr_reg:x3; val_offset:197289*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197289*0 + 3*483*FLEN/8, x4, x1, x2)

inst_65764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffe000000000; valaddr_reg:x3; val_offset:197292*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197292*0 + 3*484*FLEN/8, x4, x1, x2)

inst_65765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffff000000000; valaddr_reg:x3; val_offset:197295*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197295*0 + 3*485*FLEN/8, x4, x1, x2)

inst_65766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffff800000000; valaddr_reg:x3; val_offset:197298*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197298*0 + 3*486*FLEN/8, x4, x1, x2)

inst_65767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffc00000000; valaddr_reg:x3; val_offset:197301*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197301*0 + 3*487*FLEN/8, x4, x1, x2)

inst_65768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffe00000000; valaddr_reg:x3; val_offset:197304*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197304*0 + 3*488*FLEN/8, x4, x1, x2)

inst_65769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffff00000000; valaddr_reg:x3; val_offset:197307*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197307*0 + 3*489*FLEN/8, x4, x1, x2)

inst_65770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffff80000000; valaddr_reg:x3; val_offset:197310*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197310*0 + 3*490*FLEN/8, x4, x1, x2)

inst_65771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffc0000000; valaddr_reg:x3; val_offset:197313*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197313*0 + 3*491*FLEN/8, x4, x1, x2)

inst_65772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffe0000000; valaddr_reg:x3; val_offset:197316*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197316*0 + 3*492*FLEN/8, x4, x1, x2)

inst_65773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffff0000000; valaddr_reg:x3; val_offset:197319*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197319*0 + 3*493*FLEN/8, x4, x1, x2)

inst_65774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffff8000000; valaddr_reg:x3; val_offset:197322*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197322*0 + 3*494*FLEN/8, x4, x1, x2)

inst_65775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffc000000; valaddr_reg:x3; val_offset:197325*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197325*0 + 3*495*FLEN/8, x4, x1, x2)

inst_65776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffe000000; valaddr_reg:x3; val_offset:197328*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197328*0 + 3*496*FLEN/8, x4, x1, x2)

inst_65777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffff000000; valaddr_reg:x3; val_offset:197331*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197331*0 + 3*497*FLEN/8, x4, x1, x2)

inst_65778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffff800000; valaddr_reg:x3; val_offset:197334*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197334*0 + 3*498*FLEN/8, x4, x1, x2)

inst_65779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffc00000; valaddr_reg:x3; val_offset:197337*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197337*0 + 3*499*FLEN/8, x4, x1, x2)

inst_65780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffe00000; valaddr_reg:x3; val_offset:197340*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197340*0 + 3*500*FLEN/8, x4, x1, x2)

inst_65781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffff00000; valaddr_reg:x3; val_offset:197343*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197343*0 + 3*501*FLEN/8, x4, x1, x2)

inst_65782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffff80000; valaddr_reg:x3; val_offset:197346*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197346*0 + 3*502*FLEN/8, x4, x1, x2)

inst_65783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffc0000; valaddr_reg:x3; val_offset:197349*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197349*0 + 3*503*FLEN/8, x4, x1, x2)

inst_65784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffe0000; valaddr_reg:x3; val_offset:197352*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197352*0 + 3*504*FLEN/8, x4, x1, x2)

inst_65785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffff0000; valaddr_reg:x3; val_offset:197355*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197355*0 + 3*505*FLEN/8, x4, x1, x2)

inst_65786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffff8000; valaddr_reg:x3; val_offset:197358*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197358*0 + 3*506*FLEN/8, x4, x1, x2)

inst_65787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffc000; valaddr_reg:x3; val_offset:197361*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197361*0 + 3*507*FLEN/8, x4, x1, x2)

inst_65788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffe000; valaddr_reg:x3; val_offset:197364*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197364*0 + 3*508*FLEN/8, x4, x1, x2)

inst_65789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffff000; valaddr_reg:x3; val_offset:197367*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197367*0 + 3*509*FLEN/8, x4, x1, x2)

inst_65790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffff800; valaddr_reg:x3; val_offset:197370*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197370*0 + 3*510*FLEN/8, x4, x1, x2)

inst_65791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffc00; valaddr_reg:x3; val_offset:197373*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197373*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_65792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffe00; valaddr_reg:x3; val_offset:197376*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197376*0 + 3*512*FLEN/8, x4, x1, x2)

inst_65793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffff00; valaddr_reg:x3; val_offset:197379*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197379*0 + 3*513*FLEN/8, x4, x1, x2)

inst_65794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffff80; valaddr_reg:x3; val_offset:197382*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197382*0 + 3*514*FLEN/8, x4, x1, x2)

inst_65795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffffc0; valaddr_reg:x3; val_offset:197385*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197385*0 + 3*515*FLEN/8, x4, x1, x2)

inst_65796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffffe0; valaddr_reg:x3; val_offset:197388*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197388*0 + 3*516*FLEN/8, x4, x1, x2)

inst_65797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffff0; valaddr_reg:x3; val_offset:197391*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197391*0 + 3*517*FLEN/8, x4, x1, x2)

inst_65798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffff8; valaddr_reg:x3; val_offset:197394*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197394*0 + 3*518*FLEN/8, x4, x1, x2)

inst_65799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffffc; valaddr_reg:x3; val_offset:197397*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197397*0 + 3*519*FLEN/8, x4, x1, x2)

inst_65800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83fffffffffffffe; valaddr_reg:x3; val_offset:197400*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197400*0 + 3*520*FLEN/8, x4, x1, x2)

inst_65801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x44bd0517d85ce and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x03f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa44bd0517d85ce; op2val:0x8000;
op3val:0x83ffffffffffffff; valaddr_reg:x3; val_offset:197403*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197403*0 + 3*521*FLEN/8, x4, x1, x2)

inst_65802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:197406*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197406*0 + 3*522*FLEN/8, x4, x1, x2)

inst_65803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:197409*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197409*0 + 3*523*FLEN/8, x4, x1, x2)

inst_65804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:197412*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197412*0 + 3*524*FLEN/8, x4, x1, x2)

inst_65805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:197415*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197415*0 + 3*525*FLEN/8, x4, x1, x2)

inst_65806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:197418*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197418*0 + 3*526*FLEN/8, x4, x1, x2)

inst_65807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:197421*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197421*0 + 3*527*FLEN/8, x4, x1, x2)

inst_65808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:197424*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197424*0 + 3*528*FLEN/8, x4, x1, x2)

inst_65809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:197427*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197427*0 + 3*529*FLEN/8, x4, x1, x2)

inst_65810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:197430*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197430*0 + 3*530*FLEN/8, x4, x1, x2)

inst_65811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:197433*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197433*0 + 3*531*FLEN/8, x4, x1, x2)

inst_65812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:197436*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197436*0 + 3*532*FLEN/8, x4, x1, x2)

inst_65813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:197439*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197439*0 + 3*533*FLEN/8, x4, x1, x2)

inst_65814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:197442*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197442*0 + 3*534*FLEN/8, x4, x1, x2)

inst_65815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:197445*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197445*0 + 3*535*FLEN/8, x4, x1, x2)

inst_65816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:197448*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197448*0 + 3*536*FLEN/8, x4, x1, x2)

inst_65817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:197451*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197451*0 + 3*537*FLEN/8, x4, x1, x2)

inst_65818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:197454*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197454*0 + 3*538*FLEN/8, x4, x1, x2)

inst_65819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:197457*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197457*0 + 3*539*FLEN/8, x4, x1, x2)

inst_65820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:197460*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197460*0 + 3*540*FLEN/8, x4, x1, x2)

inst_65821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:197463*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197463*0 + 3*541*FLEN/8, x4, x1, x2)

inst_65822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:197466*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197466*0 + 3*542*FLEN/8, x4, x1, x2)

inst_65823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:197469*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197469*0 + 3*543*FLEN/8, x4, x1, x2)

inst_65824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000000000; valaddr_reg:x3; val_offset:197472*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197472*0 + 3*544*FLEN/8, x4, x1, x2)

inst_65825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000000001; valaddr_reg:x3; val_offset:197475*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197475*0 + 3*545*FLEN/8, x4, x1, x2)

inst_65826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000000003; valaddr_reg:x3; val_offset:197478*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197478*0 + 3*546*FLEN/8, x4, x1, x2)

inst_65827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000000007; valaddr_reg:x3; val_offset:197481*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197481*0 + 3*547*FLEN/8, x4, x1, x2)

inst_65828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000000000f; valaddr_reg:x3; val_offset:197484*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197484*0 + 3*548*FLEN/8, x4, x1, x2)

inst_65829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000000001f; valaddr_reg:x3; val_offset:197487*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197487*0 + 3*549*FLEN/8, x4, x1, x2)

inst_65830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000000003f; valaddr_reg:x3; val_offset:197490*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197490*0 + 3*550*FLEN/8, x4, x1, x2)

inst_65831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000000007f; valaddr_reg:x3; val_offset:197493*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197493*0 + 3*551*FLEN/8, x4, x1, x2)

inst_65832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000000000ff; valaddr_reg:x3; val_offset:197496*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197496*0 + 3*552*FLEN/8, x4, x1, x2)

inst_65833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000000001ff; valaddr_reg:x3; val_offset:197499*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197499*0 + 3*553*FLEN/8, x4, x1, x2)

inst_65834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000000003ff; valaddr_reg:x3; val_offset:197502*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197502*0 + 3*554*FLEN/8, x4, x1, x2)

inst_65835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000000007ff; valaddr_reg:x3; val_offset:197505*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197505*0 + 3*555*FLEN/8, x4, x1, x2)

inst_65836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000000fff; valaddr_reg:x3; val_offset:197508*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197508*0 + 3*556*FLEN/8, x4, x1, x2)

inst_65837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000001fff; valaddr_reg:x3; val_offset:197511*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197511*0 + 3*557*FLEN/8, x4, x1, x2)

inst_65838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000003fff; valaddr_reg:x3; val_offset:197514*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197514*0 + 3*558*FLEN/8, x4, x1, x2)

inst_65839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000007fff; valaddr_reg:x3; val_offset:197517*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197517*0 + 3*559*FLEN/8, x4, x1, x2)

inst_65840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000000ffff; valaddr_reg:x3; val_offset:197520*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197520*0 + 3*560*FLEN/8, x4, x1, x2)

inst_65841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000001ffff; valaddr_reg:x3; val_offset:197523*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197523*0 + 3*561*FLEN/8, x4, x1, x2)

inst_65842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000003ffff; valaddr_reg:x3; val_offset:197526*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197526*0 + 3*562*FLEN/8, x4, x1, x2)

inst_65843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000007ffff; valaddr_reg:x3; val_offset:197529*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197529*0 + 3*563*FLEN/8, x4, x1, x2)

inst_65844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000000fffff; valaddr_reg:x3; val_offset:197532*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197532*0 + 3*564*FLEN/8, x4, x1, x2)

inst_65845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000001fffff; valaddr_reg:x3; val_offset:197535*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197535*0 + 3*565*FLEN/8, x4, x1, x2)

inst_65846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000003fffff; valaddr_reg:x3; val_offset:197538*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197538*0 + 3*566*FLEN/8, x4, x1, x2)

inst_65847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000007fffff; valaddr_reg:x3; val_offset:197541*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197541*0 + 3*567*FLEN/8, x4, x1, x2)

inst_65848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000000ffffff; valaddr_reg:x3; val_offset:197544*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197544*0 + 3*568*FLEN/8, x4, x1, x2)

inst_65849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000001ffffff; valaddr_reg:x3; val_offset:197547*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197547*0 + 3*569*FLEN/8, x4, x1, x2)

inst_65850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000003ffffff; valaddr_reg:x3; val_offset:197550*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197550*0 + 3*570*FLEN/8, x4, x1, x2)

inst_65851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000007ffffff; valaddr_reg:x3; val_offset:197553*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197553*0 + 3*571*FLEN/8, x4, x1, x2)

inst_65852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000000fffffff; valaddr_reg:x3; val_offset:197556*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197556*0 + 3*572*FLEN/8, x4, x1, x2)

inst_65853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000001fffffff; valaddr_reg:x3; val_offset:197559*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197559*0 + 3*573*FLEN/8, x4, x1, x2)

inst_65854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000003fffffff; valaddr_reg:x3; val_offset:197562*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197562*0 + 3*574*FLEN/8, x4, x1, x2)

inst_65855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000007fffffff; valaddr_reg:x3; val_offset:197565*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197565*0 + 3*575*FLEN/8, x4, x1, x2)

inst_65856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00000ffffffff; valaddr_reg:x3; val_offset:197568*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197568*0 + 3*576*FLEN/8, x4, x1, x2)

inst_65857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00001ffffffff; valaddr_reg:x3; val_offset:197571*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197571*0 + 3*577*FLEN/8, x4, x1, x2)

inst_65858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00003ffffffff; valaddr_reg:x3; val_offset:197574*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197574*0 + 3*578*FLEN/8, x4, x1, x2)

inst_65859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00007ffffffff; valaddr_reg:x3; val_offset:197577*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197577*0 + 3*579*FLEN/8, x4, x1, x2)

inst_65860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0000fffffffff; valaddr_reg:x3; val_offset:197580*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197580*0 + 3*580*FLEN/8, x4, x1, x2)

inst_65861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0001fffffffff; valaddr_reg:x3; val_offset:197583*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197583*0 + 3*581*FLEN/8, x4, x1, x2)

inst_65862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0003fffffffff; valaddr_reg:x3; val_offset:197586*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197586*0 + 3*582*FLEN/8, x4, x1, x2)

inst_65863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0007fffffffff; valaddr_reg:x3; val_offset:197589*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197589*0 + 3*583*FLEN/8, x4, x1, x2)

inst_65864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b000ffffffffff; valaddr_reg:x3; val_offset:197592*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197592*0 + 3*584*FLEN/8, x4, x1, x2)

inst_65865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b001ffffffffff; valaddr_reg:x3; val_offset:197595*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197595*0 + 3*585*FLEN/8, x4, x1, x2)

inst_65866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b003ffffffffff; valaddr_reg:x3; val_offset:197598*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197598*0 + 3*586*FLEN/8, x4, x1, x2)

inst_65867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b007ffffffffff; valaddr_reg:x3; val_offset:197601*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197601*0 + 3*587*FLEN/8, x4, x1, x2)

inst_65868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b00fffffffffff; valaddr_reg:x3; val_offset:197604*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197604*0 + 3*588*FLEN/8, x4, x1, x2)

inst_65869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b01fffffffffff; valaddr_reg:x3; val_offset:197607*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197607*0 + 3*589*FLEN/8, x4, x1, x2)

inst_65870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b03fffffffffff; valaddr_reg:x3; val_offset:197610*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197610*0 + 3*590*FLEN/8, x4, x1, x2)

inst_65871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b07fffffffffff; valaddr_reg:x3; val_offset:197613*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197613*0 + 3*591*FLEN/8, x4, x1, x2)

inst_65872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b0ffffffffffff; valaddr_reg:x3; val_offset:197616*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197616*0 + 3*592*FLEN/8, x4, x1, x2)

inst_65873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b1ffffffffffff; valaddr_reg:x3; val_offset:197619*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197619*0 + 3*593*FLEN/8, x4, x1, x2)

inst_65874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b3ffffffffffff; valaddr_reg:x3; val_offset:197622*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197622*0 + 3*594*FLEN/8, x4, x1, x2)

inst_65875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b7ffffffffffff; valaddr_reg:x3; val_offset:197625*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197625*0 + 3*595*FLEN/8, x4, x1, x2)

inst_65876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3b8000000000000; valaddr_reg:x3; val_offset:197628*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197628*0 + 3*596*FLEN/8, x4, x1, x2)

inst_65877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bc000000000000; valaddr_reg:x3; val_offset:197631*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197631*0 + 3*597*FLEN/8, x4, x1, x2)

inst_65878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3be000000000000; valaddr_reg:x3; val_offset:197634*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197634*0 + 3*598*FLEN/8, x4, x1, x2)

inst_65879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bf000000000000; valaddr_reg:x3; val_offset:197637*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197637*0 + 3*599*FLEN/8, x4, x1, x2)

inst_65880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bf800000000000; valaddr_reg:x3; val_offset:197640*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197640*0 + 3*600*FLEN/8, x4, x1, x2)

inst_65881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfc00000000000; valaddr_reg:x3; val_offset:197643*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197643*0 + 3*601*FLEN/8, x4, x1, x2)

inst_65882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfe00000000000; valaddr_reg:x3; val_offset:197646*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197646*0 + 3*602*FLEN/8, x4, x1, x2)

inst_65883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bff00000000000; valaddr_reg:x3; val_offset:197649*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197649*0 + 3*603*FLEN/8, x4, x1, x2)

inst_65884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bff80000000000; valaddr_reg:x3; val_offset:197652*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197652*0 + 3*604*FLEN/8, x4, x1, x2)

inst_65885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffc0000000000; valaddr_reg:x3; val_offset:197655*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197655*0 + 3*605*FLEN/8, x4, x1, x2)

inst_65886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffe0000000000; valaddr_reg:x3; val_offset:197658*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197658*0 + 3*606*FLEN/8, x4, x1, x2)

inst_65887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfff0000000000; valaddr_reg:x3; val_offset:197661*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197661*0 + 3*607*FLEN/8, x4, x1, x2)

inst_65888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfff8000000000; valaddr_reg:x3; val_offset:197664*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197664*0 + 3*608*FLEN/8, x4, x1, x2)

inst_65889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffc000000000; valaddr_reg:x3; val_offset:197667*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197667*0 + 3*609*FLEN/8, x4, x1, x2)

inst_65890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffe000000000; valaddr_reg:x3; val_offset:197670*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197670*0 + 3*610*FLEN/8, x4, x1, x2)

inst_65891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffff000000000; valaddr_reg:x3; val_offset:197673*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197673*0 + 3*611*FLEN/8, x4, x1, x2)

inst_65892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffff800000000; valaddr_reg:x3; val_offset:197676*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197676*0 + 3*612*FLEN/8, x4, x1, x2)

inst_65893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffc00000000; valaddr_reg:x3; val_offset:197679*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197679*0 + 3*613*FLEN/8, x4, x1, x2)

inst_65894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffe00000000; valaddr_reg:x3; val_offset:197682*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197682*0 + 3*614*FLEN/8, x4, x1, x2)

inst_65895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffff00000000; valaddr_reg:x3; val_offset:197685*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197685*0 + 3*615*FLEN/8, x4, x1, x2)

inst_65896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffff80000000; valaddr_reg:x3; val_offset:197688*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197688*0 + 3*616*FLEN/8, x4, x1, x2)

inst_65897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffc0000000; valaddr_reg:x3; val_offset:197691*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197691*0 + 3*617*FLEN/8, x4, x1, x2)

inst_65898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffe0000000; valaddr_reg:x3; val_offset:197694*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197694*0 + 3*618*FLEN/8, x4, x1, x2)

inst_65899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffff0000000; valaddr_reg:x3; val_offset:197697*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197697*0 + 3*619*FLEN/8, x4, x1, x2)

inst_65900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffff8000000; valaddr_reg:x3; val_offset:197700*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197700*0 + 3*620*FLEN/8, x4, x1, x2)

inst_65901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffc000000; valaddr_reg:x3; val_offset:197703*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197703*0 + 3*621*FLEN/8, x4, x1, x2)

inst_65902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffe000000; valaddr_reg:x3; val_offset:197706*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197706*0 + 3*622*FLEN/8, x4, x1, x2)

inst_65903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffff000000; valaddr_reg:x3; val_offset:197709*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197709*0 + 3*623*FLEN/8, x4, x1, x2)

inst_65904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffff800000; valaddr_reg:x3; val_offset:197712*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197712*0 + 3*624*FLEN/8, x4, x1, x2)

inst_65905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffc00000; valaddr_reg:x3; val_offset:197715*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197715*0 + 3*625*FLEN/8, x4, x1, x2)

inst_65906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffe00000; valaddr_reg:x3; val_offset:197718*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197718*0 + 3*626*FLEN/8, x4, x1, x2)

inst_65907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffff00000; valaddr_reg:x3; val_offset:197721*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197721*0 + 3*627*FLEN/8, x4, x1, x2)

inst_65908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffff80000; valaddr_reg:x3; val_offset:197724*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197724*0 + 3*628*FLEN/8, x4, x1, x2)

inst_65909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffc0000; valaddr_reg:x3; val_offset:197727*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197727*0 + 3*629*FLEN/8, x4, x1, x2)

inst_65910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffe0000; valaddr_reg:x3; val_offset:197730*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197730*0 + 3*630*FLEN/8, x4, x1, x2)

inst_65911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffff0000; valaddr_reg:x3; val_offset:197733*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197733*0 + 3*631*FLEN/8, x4, x1, x2)

inst_65912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffff8000; valaddr_reg:x3; val_offset:197736*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197736*0 + 3*632*FLEN/8, x4, x1, x2)

inst_65913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffc000; valaddr_reg:x3; val_offset:197739*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197739*0 + 3*633*FLEN/8, x4, x1, x2)

inst_65914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffe000; valaddr_reg:x3; val_offset:197742*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197742*0 + 3*634*FLEN/8, x4, x1, x2)

inst_65915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffff000; valaddr_reg:x3; val_offset:197745*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197745*0 + 3*635*FLEN/8, x4, x1, x2)

inst_65916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffff800; valaddr_reg:x3; val_offset:197748*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197748*0 + 3*636*FLEN/8, x4, x1, x2)

inst_65917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffc00; valaddr_reg:x3; val_offset:197751*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197751*0 + 3*637*FLEN/8, x4, x1, x2)

inst_65918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffe00; valaddr_reg:x3; val_offset:197754*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197754*0 + 3*638*FLEN/8, x4, x1, x2)

inst_65919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffff00; valaddr_reg:x3; val_offset:197757*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197757*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_65920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffff80; valaddr_reg:x3; val_offset:197760*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197760*0 + 3*640*FLEN/8, x4, x1, x2)

inst_65921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffffc0; valaddr_reg:x3; val_offset:197763*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197763*0 + 3*641*FLEN/8, x4, x1, x2)

inst_65922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffffe0; valaddr_reg:x3; val_offset:197766*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197766*0 + 3*642*FLEN/8, x4, x1, x2)

inst_65923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffff0; valaddr_reg:x3; val_offset:197769*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197769*0 + 3*643*FLEN/8, x4, x1, x2)

inst_65924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffff8; valaddr_reg:x3; val_offset:197772*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197772*0 + 3*644*FLEN/8, x4, x1, x2)

inst_65925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffffc; valaddr_reg:x3; val_offset:197775*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197775*0 + 3*645*FLEN/8, x4, x1, x2)

inst_65926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bffffffffffffe; valaddr_reg:x3; val_offset:197778*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197778*0 + 3*646*FLEN/8, x4, x1, x2)

inst_65927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x45ffdf41c2467 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x03b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa45ffdf41c2467; op2val:0x0;
op3val:0x3bfffffffffffff; valaddr_reg:x3; val_offset:197781*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197781*0 + 3*647*FLEN/8, x4, x1, x2)

inst_65928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:197784*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197784*0 + 3*648*FLEN/8, x4, x1, x2)

inst_65929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:197787*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197787*0 + 3*649*FLEN/8, x4, x1, x2)

inst_65930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:197790*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197790*0 + 3*650*FLEN/8, x4, x1, x2)

inst_65931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:197793*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197793*0 + 3*651*FLEN/8, x4, x1, x2)

inst_65932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:197796*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197796*0 + 3*652*FLEN/8, x4, x1, x2)

inst_65933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:197799*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197799*0 + 3*653*FLEN/8, x4, x1, x2)

inst_65934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:197802*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197802*0 + 3*654*FLEN/8, x4, x1, x2)

inst_65935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:197805*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197805*0 + 3*655*FLEN/8, x4, x1, x2)

inst_65936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:197808*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197808*0 + 3*656*FLEN/8, x4, x1, x2)

inst_65937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:197811*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197811*0 + 3*657*FLEN/8, x4, x1, x2)

inst_65938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:197814*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197814*0 + 3*658*FLEN/8, x4, x1, x2)

inst_65939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:197817*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197817*0 + 3*659*FLEN/8, x4, x1, x2)

inst_65940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:197820*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197820*0 + 3*660*FLEN/8, x4, x1, x2)

inst_65941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:197823*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197823*0 + 3*661*FLEN/8, x4, x1, x2)

inst_65942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:197826*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197826*0 + 3*662*FLEN/8, x4, x1, x2)

inst_65943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:197829*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197829*0 + 3*663*FLEN/8, x4, x1, x2)

inst_65944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:197832*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197832*0 + 3*664*FLEN/8, x4, x1, x2)

inst_65945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:197835*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197835*0 + 3*665*FLEN/8, x4, x1, x2)

inst_65946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:197838*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197838*0 + 3*666*FLEN/8, x4, x1, x2)

inst_65947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:197841*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197841*0 + 3*667*FLEN/8, x4, x1, x2)

inst_65948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:197844*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197844*0 + 3*668*FLEN/8, x4, x1, x2)

inst_65949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:197847*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197847*0 + 3*669*FLEN/8, x4, x1, x2)

inst_65950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000000000; valaddr_reg:x3; val_offset:197850*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197850*0 + 3*670*FLEN/8, x4, x1, x2)

inst_65951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000000001; valaddr_reg:x3; val_offset:197853*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197853*0 + 3*671*FLEN/8, x4, x1, x2)

inst_65952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000000003; valaddr_reg:x3; val_offset:197856*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197856*0 + 3*672*FLEN/8, x4, x1, x2)

inst_65953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000000007; valaddr_reg:x3; val_offset:197859*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197859*0 + 3*673*FLEN/8, x4, x1, x2)

inst_65954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000000000f; valaddr_reg:x3; val_offset:197862*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197862*0 + 3*674*FLEN/8, x4, x1, x2)

inst_65955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000000001f; valaddr_reg:x3; val_offset:197865*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197865*0 + 3*675*FLEN/8, x4, x1, x2)

inst_65956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000000003f; valaddr_reg:x3; val_offset:197868*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197868*0 + 3*676*FLEN/8, x4, x1, x2)

inst_65957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000000007f; valaddr_reg:x3; val_offset:197871*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197871*0 + 3*677*FLEN/8, x4, x1, x2)

inst_65958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000000000ff; valaddr_reg:x3; val_offset:197874*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197874*0 + 3*678*FLEN/8, x4, x1, x2)

inst_65959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000000001ff; valaddr_reg:x3; val_offset:197877*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197877*0 + 3*679*FLEN/8, x4, x1, x2)

inst_65960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000000003ff; valaddr_reg:x3; val_offset:197880*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197880*0 + 3*680*FLEN/8, x4, x1, x2)

inst_65961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000000007ff; valaddr_reg:x3; val_offset:197883*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197883*0 + 3*681*FLEN/8, x4, x1, x2)

inst_65962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000000fff; valaddr_reg:x3; val_offset:197886*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197886*0 + 3*682*FLEN/8, x4, x1, x2)

inst_65963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000001fff; valaddr_reg:x3; val_offset:197889*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197889*0 + 3*683*FLEN/8, x4, x1, x2)

inst_65964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000003fff; valaddr_reg:x3; val_offset:197892*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197892*0 + 3*684*FLEN/8, x4, x1, x2)

inst_65965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000007fff; valaddr_reg:x3; val_offset:197895*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197895*0 + 3*685*FLEN/8, x4, x1, x2)

inst_65966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000000ffff; valaddr_reg:x3; val_offset:197898*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197898*0 + 3*686*FLEN/8, x4, x1, x2)

inst_65967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000001ffff; valaddr_reg:x3; val_offset:197901*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197901*0 + 3*687*FLEN/8, x4, x1, x2)

inst_65968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000003ffff; valaddr_reg:x3; val_offset:197904*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197904*0 + 3*688*FLEN/8, x4, x1, x2)

inst_65969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000007ffff; valaddr_reg:x3; val_offset:197907*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197907*0 + 3*689*FLEN/8, x4, x1, x2)

inst_65970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000000fffff; valaddr_reg:x3; val_offset:197910*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197910*0 + 3*690*FLEN/8, x4, x1, x2)

inst_65971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000001fffff; valaddr_reg:x3; val_offset:197913*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197913*0 + 3*691*FLEN/8, x4, x1, x2)

inst_65972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000003fffff; valaddr_reg:x3; val_offset:197916*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197916*0 + 3*692*FLEN/8, x4, x1, x2)

inst_65973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000007fffff; valaddr_reg:x3; val_offset:197919*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197919*0 + 3*693*FLEN/8, x4, x1, x2)

inst_65974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000000ffffff; valaddr_reg:x3; val_offset:197922*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197922*0 + 3*694*FLEN/8, x4, x1, x2)

inst_65975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000001ffffff; valaddr_reg:x3; val_offset:197925*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197925*0 + 3*695*FLEN/8, x4, x1, x2)

inst_65976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000003ffffff; valaddr_reg:x3; val_offset:197928*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197928*0 + 3*696*FLEN/8, x4, x1, x2)

inst_65977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000007ffffff; valaddr_reg:x3; val_offset:197931*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197931*0 + 3*697*FLEN/8, x4, x1, x2)

inst_65978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000000fffffff; valaddr_reg:x3; val_offset:197934*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197934*0 + 3*698*FLEN/8, x4, x1, x2)

inst_65979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000001fffffff; valaddr_reg:x3; val_offset:197937*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197937*0 + 3*699*FLEN/8, x4, x1, x2)

inst_65980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000003fffffff; valaddr_reg:x3; val_offset:197940*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197940*0 + 3*700*FLEN/8, x4, x1, x2)

inst_65981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000007fffffff; valaddr_reg:x3; val_offset:197943*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197943*0 + 3*701*FLEN/8, x4, x1, x2)

inst_65982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000000ffffffff; valaddr_reg:x3; val_offset:197946*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197946*0 + 3*702*FLEN/8, x4, x1, x2)

inst_65983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000001ffffffff; valaddr_reg:x3; val_offset:197949*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197949*0 + 3*703*FLEN/8, x4, x1, x2)

inst_65984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000003ffffffff; valaddr_reg:x3; val_offset:197952*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197952*0 + 3*704*FLEN/8, x4, x1, x2)

inst_65985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000007ffffffff; valaddr_reg:x3; val_offset:197955*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197955*0 + 3*705*FLEN/8, x4, x1, x2)

inst_65986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400000fffffffff; valaddr_reg:x3; val_offset:197958*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197958*0 + 3*706*FLEN/8, x4, x1, x2)

inst_65987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400001fffffffff; valaddr_reg:x3; val_offset:197961*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197961*0 + 3*707*FLEN/8, x4, x1, x2)

inst_65988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400003fffffffff; valaddr_reg:x3; val_offset:197964*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197964*0 + 3*708*FLEN/8, x4, x1, x2)

inst_65989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400007fffffffff; valaddr_reg:x3; val_offset:197967*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197967*0 + 3*709*FLEN/8, x4, x1, x2)

inst_65990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40000ffffffffff; valaddr_reg:x3; val_offset:197970*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197970*0 + 3*710*FLEN/8, x4, x1, x2)

inst_65991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40001ffffffffff; valaddr_reg:x3; val_offset:197973*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197973*0 + 3*711*FLEN/8, x4, x1, x2)

inst_65992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40003ffffffffff; valaddr_reg:x3; val_offset:197976*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197976*0 + 3*712*FLEN/8, x4, x1, x2)

inst_65993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40007ffffffffff; valaddr_reg:x3; val_offset:197979*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197979*0 + 3*713*FLEN/8, x4, x1, x2)

inst_65994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4000fffffffffff; valaddr_reg:x3; val_offset:197982*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197982*0 + 3*714*FLEN/8, x4, x1, x2)

inst_65995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4001fffffffffff; valaddr_reg:x3; val_offset:197985*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197985*0 + 3*715*FLEN/8, x4, x1, x2)

inst_65996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4003fffffffffff; valaddr_reg:x3; val_offset:197988*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197988*0 + 3*716*FLEN/8, x4, x1, x2)

inst_65997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x4007fffffffffff; valaddr_reg:x3; val_offset:197991*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197991*0 + 3*717*FLEN/8, x4, x1, x2)

inst_65998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x400ffffffffffff; valaddr_reg:x3; val_offset:197994*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197994*0 + 3*718*FLEN/8, x4, x1, x2)

inst_65999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x401ffffffffffff; valaddr_reg:x3; val_offset:197997*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 197997*0 + 3*719*FLEN/8, x4, x1, x2)

inst_66000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x403ffffffffffff; valaddr_reg:x3; val_offset:198000*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198000*0 + 3*720*FLEN/8, x4, x1, x2)

inst_66001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x407ffffffffffff; valaddr_reg:x3; val_offset:198003*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198003*0 + 3*721*FLEN/8, x4, x1, x2)

inst_66002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x408000000000000; valaddr_reg:x3; val_offset:198006*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198006*0 + 3*722*FLEN/8, x4, x1, x2)

inst_66003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40c000000000000; valaddr_reg:x3; val_offset:198009*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198009*0 + 3*723*FLEN/8, x4, x1, x2)

inst_66004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40e000000000000; valaddr_reg:x3; val_offset:198012*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198012*0 + 3*724*FLEN/8, x4, x1, x2)

inst_66005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40f000000000000; valaddr_reg:x3; val_offset:198015*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198015*0 + 3*725*FLEN/8, x4, x1, x2)

inst_66006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40f800000000000; valaddr_reg:x3; val_offset:198018*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198018*0 + 3*726*FLEN/8, x4, x1, x2)

inst_66007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fc00000000000; valaddr_reg:x3; val_offset:198021*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198021*0 + 3*727*FLEN/8, x4, x1, x2)

inst_66008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fe00000000000; valaddr_reg:x3; val_offset:198024*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198024*0 + 3*728*FLEN/8, x4, x1, x2)

inst_66009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ff00000000000; valaddr_reg:x3; val_offset:198027*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198027*0 + 3*729*FLEN/8, x4, x1, x2)

inst_66010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ff80000000000; valaddr_reg:x3; val_offset:198030*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198030*0 + 3*730*FLEN/8, x4, x1, x2)

inst_66011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffc0000000000; valaddr_reg:x3; val_offset:198033*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198033*0 + 3*731*FLEN/8, x4, x1, x2)

inst_66012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffe0000000000; valaddr_reg:x3; val_offset:198036*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198036*0 + 3*732*FLEN/8, x4, x1, x2)

inst_66013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fff0000000000; valaddr_reg:x3; val_offset:198039*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198039*0 + 3*733*FLEN/8, x4, x1, x2)

inst_66014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fff8000000000; valaddr_reg:x3; val_offset:198042*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198042*0 + 3*734*FLEN/8, x4, x1, x2)

inst_66015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffc000000000; valaddr_reg:x3; val_offset:198045*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198045*0 + 3*735*FLEN/8, x4, x1, x2)

inst_66016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffe000000000; valaddr_reg:x3; val_offset:198048*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198048*0 + 3*736*FLEN/8, x4, x1, x2)

inst_66017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffff000000000; valaddr_reg:x3; val_offset:198051*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198051*0 + 3*737*FLEN/8, x4, x1, x2)

inst_66018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffff800000000; valaddr_reg:x3; val_offset:198054*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198054*0 + 3*738*FLEN/8, x4, x1, x2)

inst_66019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffc00000000; valaddr_reg:x3; val_offset:198057*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198057*0 + 3*739*FLEN/8, x4, x1, x2)

inst_66020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffe00000000; valaddr_reg:x3; val_offset:198060*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198060*0 + 3*740*FLEN/8, x4, x1, x2)

inst_66021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffff00000000; valaddr_reg:x3; val_offset:198063*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198063*0 + 3*741*FLEN/8, x4, x1, x2)

inst_66022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffff80000000; valaddr_reg:x3; val_offset:198066*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198066*0 + 3*742*FLEN/8, x4, x1, x2)

inst_66023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffc0000000; valaddr_reg:x3; val_offset:198069*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198069*0 + 3*743*FLEN/8, x4, x1, x2)

inst_66024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffe0000000; valaddr_reg:x3; val_offset:198072*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198072*0 + 3*744*FLEN/8, x4, x1, x2)

inst_66025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffff0000000; valaddr_reg:x3; val_offset:198075*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198075*0 + 3*745*FLEN/8, x4, x1, x2)

inst_66026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffff8000000; valaddr_reg:x3; val_offset:198078*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198078*0 + 3*746*FLEN/8, x4, x1, x2)

inst_66027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffc000000; valaddr_reg:x3; val_offset:198081*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198081*0 + 3*747*FLEN/8, x4, x1, x2)

inst_66028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffe000000; valaddr_reg:x3; val_offset:198084*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198084*0 + 3*748*FLEN/8, x4, x1, x2)

inst_66029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffff000000; valaddr_reg:x3; val_offset:198087*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198087*0 + 3*749*FLEN/8, x4, x1, x2)

inst_66030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffff800000; valaddr_reg:x3; val_offset:198090*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198090*0 + 3*750*FLEN/8, x4, x1, x2)

inst_66031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffc00000; valaddr_reg:x3; val_offset:198093*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198093*0 + 3*751*FLEN/8, x4, x1, x2)

inst_66032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffe00000; valaddr_reg:x3; val_offset:198096*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198096*0 + 3*752*FLEN/8, x4, x1, x2)

inst_66033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffff00000; valaddr_reg:x3; val_offset:198099*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198099*0 + 3*753*FLEN/8, x4, x1, x2)

inst_66034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffff80000; valaddr_reg:x3; val_offset:198102*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198102*0 + 3*754*FLEN/8, x4, x1, x2)

inst_66035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffc0000; valaddr_reg:x3; val_offset:198105*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198105*0 + 3*755*FLEN/8, x4, x1, x2)

inst_66036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffe0000; valaddr_reg:x3; val_offset:198108*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198108*0 + 3*756*FLEN/8, x4, x1, x2)

inst_66037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffff0000; valaddr_reg:x3; val_offset:198111*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198111*0 + 3*757*FLEN/8, x4, x1, x2)

inst_66038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffff8000; valaddr_reg:x3; val_offset:198114*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198114*0 + 3*758*FLEN/8, x4, x1, x2)

inst_66039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffffc000; valaddr_reg:x3; val_offset:198117*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198117*0 + 3*759*FLEN/8, x4, x1, x2)

inst_66040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffffe000; valaddr_reg:x3; val_offset:198120*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198120*0 + 3*760*FLEN/8, x4, x1, x2)

inst_66041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffff000; valaddr_reg:x3; val_offset:198123*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198123*0 + 3*761*FLEN/8, x4, x1, x2)

inst_66042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffff800; valaddr_reg:x3; val_offset:198126*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198126*0 + 3*762*FLEN/8, x4, x1, x2)

inst_66043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffffc00; valaddr_reg:x3; val_offset:198129*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198129*0 + 3*763*FLEN/8, x4, x1, x2)

inst_66044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40ffffffffffe00; valaddr_reg:x3; val_offset:198132*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198132*0 + 3*764*FLEN/8, x4, x1, x2)

inst_66045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffffff00; valaddr_reg:x3; val_offset:198135*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198135*0 + 3*765*FLEN/8, x4, x1, x2)

inst_66046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffffff80; valaddr_reg:x3; val_offset:198138*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198138*0 + 3*766*FLEN/8, x4, x1, x2)

inst_66047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x470b58bf58fb4 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x040 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa470b58bf58fb4; op2val:0x0;
op3val:0x40fffffffffffc0; valaddr_reg:x3; val_offset:198141*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 198141*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595799040,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595864576,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595897344,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595913728,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595921920,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595926016,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595928064,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929088,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929600,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929856,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595929984,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930048,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930080,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930096,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930104,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930108,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930110,64,FLEN)
NAN_BOXED(6891698006295869315,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9444048418595930111,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6891705170348183814,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189120,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189121,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189123,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189127,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189135,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189151,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189183,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189247,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189375,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341189631,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341190143,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341191167,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341193215,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341197311,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341205503,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341221887,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341254655,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341320191,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341451263,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219341713407,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219342237695,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219343286271,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219345383423,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219349577727,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219357966335,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219374743551,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219408297983,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219475406847,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219609624575,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041219878060031,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041220414930943,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041221488672767,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041223636156415,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041227931123711,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041236521058303,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041253700927487,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041288060665855,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041356780142591,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041494219096063,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435041769097003007,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435042318852816895,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435043418364444671,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435045617387700223,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435050015434211327,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435058811527233535,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435076403713277951,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435111588085366783,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435181956829544447,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435322694317899775,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9435604169294610431,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9436167119248031743,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874367,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9437293019154874368,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438418919061716992,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9438981869015138304,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439263343991848960,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439404081480204288,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439474450224381952,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439509634596470784,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439527226782515200,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439536022875537408,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439540420922048512,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439542619945304064,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439543719456931840,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544269212745728,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544544090652672,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544681529606144,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544750249082880,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544784608821248,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544801788690432,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544810378625024,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544814673592320,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544816821075968,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544817894817792,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818431688704,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818700124160,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818834341888,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818901450752,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818935005184,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818951782400,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818960171008,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818964365312,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818966462464,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818967511040,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968035328,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968297472,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968428544,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968494080,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968526848,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968543232,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968551424,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968555520,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968557568,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968558592,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559104,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559360,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559488,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559552,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559584,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559600,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559608,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559612,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559614,64,FLEN)
NAN_BOXED(6891711169120027570,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9439544818968559615,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413760,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413761,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413763,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413767,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413775,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413791,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413823,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591413887,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591414015,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591414271,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591414783,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591415807,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591417855,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591421951,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591430143,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591446527,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591479295,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591544831,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591675903,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651591938047,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651592462335,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651593510911,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651595608063,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651599802367,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651608190975,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651624968191,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651658522623,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651725631487,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865651859849215,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865652128284671,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865652665155583,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865653738897407,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865655886381055,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865660181348351,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865668771282943,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865685951152127,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865720310890495,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865789030367231,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210865926469320703,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210866201347227647,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210866751103041535,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210867850614669311,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210870049637924863,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210874447684435967,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210883243777458175,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210900835963502591,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4210936020335591423,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4211006389079769087,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4211147126568124415,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4211428601544835071,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4211991551498256383,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4213117451405099007,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4213117451405099008,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4214243351311941632,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4214806301265362944,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215087776242073600,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215228513730428928,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215298882474606592,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215334066846695424,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215351659032739840,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215360455125762048,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215364853172273152,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215367052195528704,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215368151707156480,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215368701462970368,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215368976340877312,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369113779830784,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369182499307520,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369216859045888,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369234038915072,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369242628849664,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369246923816960,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369249071300608,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369250145042432,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369250681913344,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369250950348800,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251084566528,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251151675392,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251185229824,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251202007040,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251210395648,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251214589952,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251216687104,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251217735680,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218259968,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218522112,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218653184,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218718720,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218751488,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218767872,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218776064,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218780160,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218782208,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218783232,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218783744,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784000,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784128,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784192,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784224,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784240,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784248,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784252,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784254,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4215369251218784255,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6891716010549373266,64,FLEN)
NAN_BOXED(2321951668344993961,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117056,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117057,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117059,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117063,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117071,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117087,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117119,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117183,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117311,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379117567,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379118079,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379119103,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379121151,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379125247,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379133439,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379149823,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379182591,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379248127,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379379199,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813379641343,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813380165631,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813381214207,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813383311359,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813387505663,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813395894271,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813412671487,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813446225919,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813513334783,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813647552511,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098813915987967,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098814452858879,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098815526600703,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098817674084351,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098821969051647,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098830558986239,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098847738855423,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098882098593791,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507098950818070527,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099088257023999,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099363134930943,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507099912890744831,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507101012402372607,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507103211425628159,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507107609472139263,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507116405565161471,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507133997751205887,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507169182123294719,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507239550867472383,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507380288355827711,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9507661763332538367,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9508224713285959679,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802303,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9509350613192802304,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9510476513099644928,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511039463053066240,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511320938029776896,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511461675518132224,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511532044262309888,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511567228634398720,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511584820820443136,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511593616913465344,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511598014959976448,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511600213983232000,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601313494859776,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511601863250673664,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602138128580608,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602275567534080,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602344287010816,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602378646749184,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602395826618368,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602404416552960,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602408711520256,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602410859003904,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602411932745728,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412469616640,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412738052096,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412872269824,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412939378688,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412972933120,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412989710336,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602412998098944,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413002293248,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413004390400,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005438976,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413005963264,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006225408,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006356480,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006422016,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006454784,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006471168,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006479360,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006483456,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006485504,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006486528,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487040,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487296,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487424,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487488,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487520,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487536,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487544,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487548,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487550,64,FLEN)
NAN_BOXED(6891716687876163022,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9511602413006487551,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859264,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859265,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859267,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859271,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859279,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859295,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859327,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859391,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859519,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014859775,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014860287,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014861311,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014863359,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014867455,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014875647,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014892031,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014924799,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378014990335,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015121407,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015383551,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378015907839,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378016956415,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378019053567,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378023247871,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378031636479,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378048413695,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378081968127,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378149076991,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378283294719,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712378551730175,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712379088601087,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712380162342911,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712382309826559,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712386604793855,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712395194728447,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712412374597631,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712446734335999,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712515453812735,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712652892766207,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265712927770673151,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265713477526487039,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265714577038114815,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265716776061370367,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265721174107881471,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265729970200903679,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265747562386948095,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265782746759036927,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265853115503214591,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(265993852991569919,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266275327968280575,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(266838277921701887,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544511,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(267964177828544512,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269090077735387136,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269653027688808448,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(269934502665519104,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270075240153874432,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270145608898052096,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270180793270140928,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270198385456185344,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270207181549207552,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270211579595718656,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270213778618974208,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270214878130601984,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215427886415872,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215702764322816,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215840203276288,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215908922753024,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215943282491392,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215960462360576,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215969052295168,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215973347262464,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215975494746112,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215976568487936,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977105358848,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977373794304,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977508012032,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977575120896,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977608675328,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977625452544,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977633841152,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977638035456,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977640132608,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641181184,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641705472,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977641967616,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642098688,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642164224,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642196992,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642213376,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642221568,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642225664,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642227712,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642228736,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229248,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229504,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229632,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229696,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229728,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229744,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229752,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229756,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229758,64,FLEN)
NAN_BOXED(6891738874110551143,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(270215977642229759,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711744,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711745,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711747,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711751,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711759,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711775,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711807,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711871,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151711999,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712255,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151712767,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151713791,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151715839,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151719935,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151728127,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151744511,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151777279,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151842815,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376151973887,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152236031,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376152760319,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376153808895,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376155906047,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376160100351,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376168488959,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376185266175,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376218820607,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376285929471,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376420147199,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230376688582655,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230377225453567,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230378299195391,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230380446679039,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230384741646335,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230393331580927,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230410511450111,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230444871188479,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230513590665215,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230651029618687,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288230925907525631,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288231475663339519,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288232575174967295,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288234774198222847,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288239172244733951,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288247968337756159,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288265560523800575,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288300744895889407,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288371113640067071,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288511851128422399,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(288793326105133055,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(289356276058554367,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396991,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(290482175965396992,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(291608075872239616,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292171025825660928,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292452500802371584,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292593238290726912,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292663607034904576,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292698791406993408,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292716383593037824,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292725179686060032,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292729577732571136,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292731776755826688,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292732876267454464,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733426023268352,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733700901175296,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733838340128768,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733907059605504,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733941419343872,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733958599213056,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733967189147648,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733971484114944,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733973631598592,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733974705340416,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975242211328,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975510646784,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975644864512,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975711973376,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975745527808,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975762305024,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975770693632,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975774887936,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975776985088,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778033664,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778557952,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778820096,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975778951168,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779016704,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779049472,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779065856,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779074048,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779078144,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779080192,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081216,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081728,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779081984,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082112,64,FLEN)
NAN_BOXED(6891757254823219124,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(292733975779082176,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
