
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_11520:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38be000000000000; valaddr_reg:x3; val_offset:34560*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34560*0 + 3*0*FLEN/8, x4, x1, x2)

inst_11521:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bf000000000000; valaddr_reg:x3; val_offset:34563*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34563*0 + 3*1*FLEN/8, x4, x1, x2)

inst_11522:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bf800000000000; valaddr_reg:x3; val_offset:34566*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34566*0 + 3*2*FLEN/8, x4, x1, x2)

inst_11523:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfc00000000000; valaddr_reg:x3; val_offset:34569*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34569*0 + 3*3*FLEN/8, x4, x1, x2)

inst_11524:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfe00000000000; valaddr_reg:x3; val_offset:34572*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34572*0 + 3*4*FLEN/8, x4, x1, x2)

inst_11525:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bff00000000000; valaddr_reg:x3; val_offset:34575*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34575*0 + 3*5*FLEN/8, x4, x1, x2)

inst_11526:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bff80000000000; valaddr_reg:x3; val_offset:34578*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34578*0 + 3*6*FLEN/8, x4, x1, x2)

inst_11527:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffc0000000000; valaddr_reg:x3; val_offset:34581*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34581*0 + 3*7*FLEN/8, x4, x1, x2)

inst_11528:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffe0000000000; valaddr_reg:x3; val_offset:34584*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34584*0 + 3*8*FLEN/8, x4, x1, x2)

inst_11529:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfff0000000000; valaddr_reg:x3; val_offset:34587*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34587*0 + 3*9*FLEN/8, x4, x1, x2)

inst_11530:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfff8000000000; valaddr_reg:x3; val_offset:34590*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34590*0 + 3*10*FLEN/8, x4, x1, x2)

inst_11531:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffc000000000; valaddr_reg:x3; val_offset:34593*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34593*0 + 3*11*FLEN/8, x4, x1, x2)

inst_11532:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffe000000000; valaddr_reg:x3; val_offset:34596*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34596*0 + 3*12*FLEN/8, x4, x1, x2)

inst_11533:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffff000000000; valaddr_reg:x3; val_offset:34599*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34599*0 + 3*13*FLEN/8, x4, x1, x2)

inst_11534:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffff800000000; valaddr_reg:x3; val_offset:34602*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34602*0 + 3*14*FLEN/8, x4, x1, x2)

inst_11535:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffc00000000; valaddr_reg:x3; val_offset:34605*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34605*0 + 3*15*FLEN/8, x4, x1, x2)

inst_11536:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffe00000000; valaddr_reg:x3; val_offset:34608*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34608*0 + 3*16*FLEN/8, x4, x1, x2)

inst_11537:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffff00000000; valaddr_reg:x3; val_offset:34611*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34611*0 + 3*17*FLEN/8, x4, x1, x2)

inst_11538:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffff80000000; valaddr_reg:x3; val_offset:34614*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34614*0 + 3*18*FLEN/8, x4, x1, x2)

inst_11539:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffc0000000; valaddr_reg:x3; val_offset:34617*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34617*0 + 3*19*FLEN/8, x4, x1, x2)

inst_11540:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffe0000000; valaddr_reg:x3; val_offset:34620*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34620*0 + 3*20*FLEN/8, x4, x1, x2)

inst_11541:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffff0000000; valaddr_reg:x3; val_offset:34623*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34623*0 + 3*21*FLEN/8, x4, x1, x2)

inst_11542:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffff8000000; valaddr_reg:x3; val_offset:34626*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34626*0 + 3*22*FLEN/8, x4, x1, x2)

inst_11543:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffc000000; valaddr_reg:x3; val_offset:34629*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34629*0 + 3*23*FLEN/8, x4, x1, x2)

inst_11544:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffe000000; valaddr_reg:x3; val_offset:34632*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34632*0 + 3*24*FLEN/8, x4, x1, x2)

inst_11545:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffff000000; valaddr_reg:x3; val_offset:34635*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34635*0 + 3*25*FLEN/8, x4, x1, x2)

inst_11546:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffff800000; valaddr_reg:x3; val_offset:34638*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34638*0 + 3*26*FLEN/8, x4, x1, x2)

inst_11547:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffc00000; valaddr_reg:x3; val_offset:34641*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34641*0 + 3*27*FLEN/8, x4, x1, x2)

inst_11548:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffe00000; valaddr_reg:x3; val_offset:34644*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34644*0 + 3*28*FLEN/8, x4, x1, x2)

inst_11549:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffff00000; valaddr_reg:x3; val_offset:34647*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34647*0 + 3*29*FLEN/8, x4, x1, x2)

inst_11550:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffff80000; valaddr_reg:x3; val_offset:34650*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34650*0 + 3*30*FLEN/8, x4, x1, x2)

inst_11551:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffc0000; valaddr_reg:x3; val_offset:34653*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34653*0 + 3*31*FLEN/8, x4, x1, x2)

inst_11552:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffe0000; valaddr_reg:x3; val_offset:34656*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34656*0 + 3*32*FLEN/8, x4, x1, x2)

inst_11553:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffff0000; valaddr_reg:x3; val_offset:34659*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34659*0 + 3*33*FLEN/8, x4, x1, x2)

inst_11554:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffff8000; valaddr_reg:x3; val_offset:34662*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34662*0 + 3*34*FLEN/8, x4, x1, x2)

inst_11555:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffc000; valaddr_reg:x3; val_offset:34665*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34665*0 + 3*35*FLEN/8, x4, x1, x2)

inst_11556:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffe000; valaddr_reg:x3; val_offset:34668*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34668*0 + 3*36*FLEN/8, x4, x1, x2)

inst_11557:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffff000; valaddr_reg:x3; val_offset:34671*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34671*0 + 3*37*FLEN/8, x4, x1, x2)

inst_11558:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffff800; valaddr_reg:x3; val_offset:34674*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34674*0 + 3*38*FLEN/8, x4, x1, x2)

inst_11559:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffc00; valaddr_reg:x3; val_offset:34677*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34677*0 + 3*39*FLEN/8, x4, x1, x2)

inst_11560:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffe00; valaddr_reg:x3; val_offset:34680*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34680*0 + 3*40*FLEN/8, x4, x1, x2)

inst_11561:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffff00; valaddr_reg:x3; val_offset:34683*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34683*0 + 3*41*FLEN/8, x4, x1, x2)

inst_11562:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffff80; valaddr_reg:x3; val_offset:34686*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34686*0 + 3*42*FLEN/8, x4, x1, x2)

inst_11563:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffffc0; valaddr_reg:x3; val_offset:34689*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34689*0 + 3*43*FLEN/8, x4, x1, x2)

inst_11564:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffffe0; valaddr_reg:x3; val_offset:34692*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34692*0 + 3*44*FLEN/8, x4, x1, x2)

inst_11565:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffff0; valaddr_reg:x3; val_offset:34695*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34695*0 + 3*45*FLEN/8, x4, x1, x2)

inst_11566:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffff8; valaddr_reg:x3; val_offset:34698*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34698*0 + 3*46*FLEN/8, x4, x1, x2)

inst_11567:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffffc; valaddr_reg:x3; val_offset:34701*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34701*0 + 3*47*FLEN/8, x4, x1, x2)

inst_11568:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bffffffffffffe; valaddr_reg:x3; val_offset:34704*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34704*0 + 3*48*FLEN/8, x4, x1, x2)

inst_11569:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x38b and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x38bfffffffffffff; valaddr_reg:x3; val_offset:34707*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34707*0 + 3*49*FLEN/8, x4, x1, x2)

inst_11570:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:34710*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34710*0 + 3*50*FLEN/8, x4, x1, x2)

inst_11571:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:34713*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34713*0 + 3*51*FLEN/8, x4, x1, x2)

inst_11572:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:34716*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34716*0 + 3*52*FLEN/8, x4, x1, x2)

inst_11573:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:34719*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34719*0 + 3*53*FLEN/8, x4, x1, x2)

inst_11574:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:34722*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34722*0 + 3*54*FLEN/8, x4, x1, x2)

inst_11575:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:34725*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34725*0 + 3*55*FLEN/8, x4, x1, x2)

inst_11576:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:34728*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34728*0 + 3*56*FLEN/8, x4, x1, x2)

inst_11577:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:34731*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34731*0 + 3*57*FLEN/8, x4, x1, x2)

inst_11578:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:34734*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34734*0 + 3*58*FLEN/8, x4, x1, x2)

inst_11579:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:34737*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34737*0 + 3*59*FLEN/8, x4, x1, x2)

inst_11580:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:34740*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34740*0 + 3*60*FLEN/8, x4, x1, x2)

inst_11581:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:34743*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34743*0 + 3*61*FLEN/8, x4, x1, x2)

inst_11582:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:34746*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34746*0 + 3*62*FLEN/8, x4, x1, x2)

inst_11583:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:34749*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34749*0 + 3*63*FLEN/8, x4, x1, x2)

inst_11584:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:34752*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34752*0 + 3*64*FLEN/8, x4, x1, x2)

inst_11585:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:34755*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34755*0 + 3*65*FLEN/8, x4, x1, x2)

inst_11586:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:34758*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34758*0 + 3*66*FLEN/8, x4, x1, x2)

inst_11587:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:34761*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34761*0 + 3*67*FLEN/8, x4, x1, x2)

inst_11588:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:34764*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34764*0 + 3*68*FLEN/8, x4, x1, x2)

inst_11589:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:34767*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34767*0 + 3*69*FLEN/8, x4, x1, x2)

inst_11590:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:34770*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34770*0 + 3*70*FLEN/8, x4, x1, x2)

inst_11591:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x8d675a342497f and fs2 == 0 and fe2 == 0x206 and fm2 == 0x49d21dd22fcc2 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f78d675a342497f; op2val:0x20649d21dd22fcc2;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:34773*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34773*0 + 3*71*FLEN/8, x4, x1, x2)

inst_11592:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000000000; valaddr_reg:x3; val_offset:34776*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34776*0 + 3*72*FLEN/8, x4, x1, x2)

inst_11593:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000000001; valaddr_reg:x3; val_offset:34779*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34779*0 + 3*73*FLEN/8, x4, x1, x2)

inst_11594:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000000003; valaddr_reg:x3; val_offset:34782*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34782*0 + 3*74*FLEN/8, x4, x1, x2)

inst_11595:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000000007; valaddr_reg:x3; val_offset:34785*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34785*0 + 3*75*FLEN/8, x4, x1, x2)

inst_11596:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000000000f; valaddr_reg:x3; val_offset:34788*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34788*0 + 3*76*FLEN/8, x4, x1, x2)

inst_11597:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000000001f; valaddr_reg:x3; val_offset:34791*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34791*0 + 3*77*FLEN/8, x4, x1, x2)

inst_11598:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000000003f; valaddr_reg:x3; val_offset:34794*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34794*0 + 3*78*FLEN/8, x4, x1, x2)

inst_11599:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000000007f; valaddr_reg:x3; val_offset:34797*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34797*0 + 3*79*FLEN/8, x4, x1, x2)

inst_11600:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000000000ff; valaddr_reg:x3; val_offset:34800*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34800*0 + 3*80*FLEN/8, x4, x1, x2)

inst_11601:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000000001ff; valaddr_reg:x3; val_offset:34803*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34803*0 + 3*81*FLEN/8, x4, x1, x2)

inst_11602:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000000003ff; valaddr_reg:x3; val_offset:34806*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34806*0 + 3*82*FLEN/8, x4, x1, x2)

inst_11603:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000000007ff; valaddr_reg:x3; val_offset:34809*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34809*0 + 3*83*FLEN/8, x4, x1, x2)

inst_11604:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000000fff; valaddr_reg:x3; val_offset:34812*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34812*0 + 3*84*FLEN/8, x4, x1, x2)

inst_11605:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000001fff; valaddr_reg:x3; val_offset:34815*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34815*0 + 3*85*FLEN/8, x4, x1, x2)

inst_11606:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000003fff; valaddr_reg:x3; val_offset:34818*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34818*0 + 3*86*FLEN/8, x4, x1, x2)

inst_11607:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000007fff; valaddr_reg:x3; val_offset:34821*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34821*0 + 3*87*FLEN/8, x4, x1, x2)

inst_11608:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000000ffff; valaddr_reg:x3; val_offset:34824*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34824*0 + 3*88*FLEN/8, x4, x1, x2)

inst_11609:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000001ffff; valaddr_reg:x3; val_offset:34827*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34827*0 + 3*89*FLEN/8, x4, x1, x2)

inst_11610:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000003ffff; valaddr_reg:x3; val_offset:34830*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34830*0 + 3*90*FLEN/8, x4, x1, x2)

inst_11611:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000007ffff; valaddr_reg:x3; val_offset:34833*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34833*0 + 3*91*FLEN/8, x4, x1, x2)

inst_11612:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000000fffff; valaddr_reg:x3; val_offset:34836*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34836*0 + 3*92*FLEN/8, x4, x1, x2)

inst_11613:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000001fffff; valaddr_reg:x3; val_offset:34839*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34839*0 + 3*93*FLEN/8, x4, x1, x2)

inst_11614:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000003fffff; valaddr_reg:x3; val_offset:34842*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34842*0 + 3*94*FLEN/8, x4, x1, x2)

inst_11615:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000007fffff; valaddr_reg:x3; val_offset:34845*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34845*0 + 3*95*FLEN/8, x4, x1, x2)

inst_11616:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000000ffffff; valaddr_reg:x3; val_offset:34848*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34848*0 + 3*96*FLEN/8, x4, x1, x2)

inst_11617:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000001ffffff; valaddr_reg:x3; val_offset:34851*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34851*0 + 3*97*FLEN/8, x4, x1, x2)

inst_11618:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000003ffffff; valaddr_reg:x3; val_offset:34854*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34854*0 + 3*98*FLEN/8, x4, x1, x2)

inst_11619:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000007ffffff; valaddr_reg:x3; val_offset:34857*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34857*0 + 3*99*FLEN/8, x4, x1, x2)

inst_11620:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000000fffffff; valaddr_reg:x3; val_offset:34860*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34860*0 + 3*100*FLEN/8, x4, x1, x2)

inst_11621:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000001fffffff; valaddr_reg:x3; val_offset:34863*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34863*0 + 3*101*FLEN/8, x4, x1, x2)

inst_11622:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000003fffffff; valaddr_reg:x3; val_offset:34866*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34866*0 + 3*102*FLEN/8, x4, x1, x2)

inst_11623:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000007fffffff; valaddr_reg:x3; val_offset:34869*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34869*0 + 3*103*FLEN/8, x4, x1, x2)

inst_11624:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00000ffffffff; valaddr_reg:x3; val_offset:34872*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34872*0 + 3*104*FLEN/8, x4, x1, x2)

inst_11625:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00001ffffffff; valaddr_reg:x3; val_offset:34875*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34875*0 + 3*105*FLEN/8, x4, x1, x2)

inst_11626:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00003ffffffff; valaddr_reg:x3; val_offset:34878*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34878*0 + 3*106*FLEN/8, x4, x1, x2)

inst_11627:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00007ffffffff; valaddr_reg:x3; val_offset:34881*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34881*0 + 3*107*FLEN/8, x4, x1, x2)

inst_11628:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0000fffffffff; valaddr_reg:x3; val_offset:34884*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34884*0 + 3*108*FLEN/8, x4, x1, x2)

inst_11629:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0001fffffffff; valaddr_reg:x3; val_offset:34887*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34887*0 + 3*109*FLEN/8, x4, x1, x2)

inst_11630:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0003fffffffff; valaddr_reg:x3; val_offset:34890*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34890*0 + 3*110*FLEN/8, x4, x1, x2)

inst_11631:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0007fffffffff; valaddr_reg:x3; val_offset:34893*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34893*0 + 3*111*FLEN/8, x4, x1, x2)

inst_11632:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d000ffffffffff; valaddr_reg:x3; val_offset:34896*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34896*0 + 3*112*FLEN/8, x4, x1, x2)

inst_11633:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d001ffffffffff; valaddr_reg:x3; val_offset:34899*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34899*0 + 3*113*FLEN/8, x4, x1, x2)

inst_11634:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d003ffffffffff; valaddr_reg:x3; val_offset:34902*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34902*0 + 3*114*FLEN/8, x4, x1, x2)

inst_11635:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d007ffffffffff; valaddr_reg:x3; val_offset:34905*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34905*0 + 3*115*FLEN/8, x4, x1, x2)

inst_11636:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d00fffffffffff; valaddr_reg:x3; val_offset:34908*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34908*0 + 3*116*FLEN/8, x4, x1, x2)

inst_11637:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d01fffffffffff; valaddr_reg:x3; val_offset:34911*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34911*0 + 3*117*FLEN/8, x4, x1, x2)

inst_11638:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d03fffffffffff; valaddr_reg:x3; val_offset:34914*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34914*0 + 3*118*FLEN/8, x4, x1, x2)

inst_11639:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d07fffffffffff; valaddr_reg:x3; val_offset:34917*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34917*0 + 3*119*FLEN/8, x4, x1, x2)

inst_11640:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d0ffffffffffff; valaddr_reg:x3; val_offset:34920*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34920*0 + 3*120*FLEN/8, x4, x1, x2)

inst_11641:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d1ffffffffffff; valaddr_reg:x3; val_offset:34923*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34923*0 + 3*121*FLEN/8, x4, x1, x2)

inst_11642:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d3ffffffffffff; valaddr_reg:x3; val_offset:34926*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34926*0 + 3*122*FLEN/8, x4, x1, x2)

inst_11643:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d7ffffffffffff; valaddr_reg:x3; val_offset:34929*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34929*0 + 3*123*FLEN/8, x4, x1, x2)

inst_11644:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9d8000000000000; valaddr_reg:x3; val_offset:34932*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34932*0 + 3*124*FLEN/8, x4, x1, x2)

inst_11645:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dc000000000000; valaddr_reg:x3; val_offset:34935*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34935*0 + 3*125*FLEN/8, x4, x1, x2)

inst_11646:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9de000000000000; valaddr_reg:x3; val_offset:34938*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34938*0 + 3*126*FLEN/8, x4, x1, x2)

inst_11647:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9df000000000000; valaddr_reg:x3; val_offset:34941*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34941*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_11648:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9df800000000000; valaddr_reg:x3; val_offset:34944*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34944*0 + 3*128*FLEN/8, x4, x1, x2)

inst_11649:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfc00000000000; valaddr_reg:x3; val_offset:34947*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34947*0 + 3*129*FLEN/8, x4, x1, x2)

inst_11650:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfe00000000000; valaddr_reg:x3; val_offset:34950*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34950*0 + 3*130*FLEN/8, x4, x1, x2)

inst_11651:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dff00000000000; valaddr_reg:x3; val_offset:34953*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34953*0 + 3*131*FLEN/8, x4, x1, x2)

inst_11652:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dff80000000000; valaddr_reg:x3; val_offset:34956*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34956*0 + 3*132*FLEN/8, x4, x1, x2)

inst_11653:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffc0000000000; valaddr_reg:x3; val_offset:34959*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34959*0 + 3*133*FLEN/8, x4, x1, x2)

inst_11654:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffe0000000000; valaddr_reg:x3; val_offset:34962*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34962*0 + 3*134*FLEN/8, x4, x1, x2)

inst_11655:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfff0000000000; valaddr_reg:x3; val_offset:34965*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34965*0 + 3*135*FLEN/8, x4, x1, x2)

inst_11656:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfff8000000000; valaddr_reg:x3; val_offset:34968*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34968*0 + 3*136*FLEN/8, x4, x1, x2)

inst_11657:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffc000000000; valaddr_reg:x3; val_offset:34971*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34971*0 + 3*137*FLEN/8, x4, x1, x2)

inst_11658:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffe000000000; valaddr_reg:x3; val_offset:34974*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34974*0 + 3*138*FLEN/8, x4, x1, x2)

inst_11659:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffff000000000; valaddr_reg:x3; val_offset:34977*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34977*0 + 3*139*FLEN/8, x4, x1, x2)

inst_11660:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffff800000000; valaddr_reg:x3; val_offset:34980*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34980*0 + 3*140*FLEN/8, x4, x1, x2)

inst_11661:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffc00000000; valaddr_reg:x3; val_offset:34983*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34983*0 + 3*141*FLEN/8, x4, x1, x2)

inst_11662:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffe00000000; valaddr_reg:x3; val_offset:34986*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34986*0 + 3*142*FLEN/8, x4, x1, x2)

inst_11663:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffff00000000; valaddr_reg:x3; val_offset:34989*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34989*0 + 3*143*FLEN/8, x4, x1, x2)

inst_11664:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffff80000000; valaddr_reg:x3; val_offset:34992*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34992*0 + 3*144*FLEN/8, x4, x1, x2)

inst_11665:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffc0000000; valaddr_reg:x3; val_offset:34995*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34995*0 + 3*145*FLEN/8, x4, x1, x2)

inst_11666:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffe0000000; valaddr_reg:x3; val_offset:34998*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 34998*0 + 3*146*FLEN/8, x4, x1, x2)

inst_11667:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffff0000000; valaddr_reg:x3; val_offset:35001*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35001*0 + 3*147*FLEN/8, x4, x1, x2)

inst_11668:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffff8000000; valaddr_reg:x3; val_offset:35004*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35004*0 + 3*148*FLEN/8, x4, x1, x2)

inst_11669:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffc000000; valaddr_reg:x3; val_offset:35007*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35007*0 + 3*149*FLEN/8, x4, x1, x2)

inst_11670:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffe000000; valaddr_reg:x3; val_offset:35010*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35010*0 + 3*150*FLEN/8, x4, x1, x2)

inst_11671:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffff000000; valaddr_reg:x3; val_offset:35013*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35013*0 + 3*151*FLEN/8, x4, x1, x2)

inst_11672:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffff800000; valaddr_reg:x3; val_offset:35016*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35016*0 + 3*152*FLEN/8, x4, x1, x2)

inst_11673:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffc00000; valaddr_reg:x3; val_offset:35019*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35019*0 + 3*153*FLEN/8, x4, x1, x2)

inst_11674:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffe00000; valaddr_reg:x3; val_offset:35022*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35022*0 + 3*154*FLEN/8, x4, x1, x2)

inst_11675:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffff00000; valaddr_reg:x3; val_offset:35025*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35025*0 + 3*155*FLEN/8, x4, x1, x2)

inst_11676:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffff80000; valaddr_reg:x3; val_offset:35028*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35028*0 + 3*156*FLEN/8, x4, x1, x2)

inst_11677:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffc0000; valaddr_reg:x3; val_offset:35031*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35031*0 + 3*157*FLEN/8, x4, x1, x2)

inst_11678:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffe0000; valaddr_reg:x3; val_offset:35034*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35034*0 + 3*158*FLEN/8, x4, x1, x2)

inst_11679:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffff0000; valaddr_reg:x3; val_offset:35037*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35037*0 + 3*159*FLEN/8, x4, x1, x2)

inst_11680:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffff8000; valaddr_reg:x3; val_offset:35040*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35040*0 + 3*160*FLEN/8, x4, x1, x2)

inst_11681:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffc000; valaddr_reg:x3; val_offset:35043*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35043*0 + 3*161*FLEN/8, x4, x1, x2)

inst_11682:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffe000; valaddr_reg:x3; val_offset:35046*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35046*0 + 3*162*FLEN/8, x4, x1, x2)

inst_11683:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffff000; valaddr_reg:x3; val_offset:35049*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35049*0 + 3*163*FLEN/8, x4, x1, x2)

inst_11684:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffff800; valaddr_reg:x3; val_offset:35052*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35052*0 + 3*164*FLEN/8, x4, x1, x2)

inst_11685:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffc00; valaddr_reg:x3; val_offset:35055*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35055*0 + 3*165*FLEN/8, x4, x1, x2)

inst_11686:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffe00; valaddr_reg:x3; val_offset:35058*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35058*0 + 3*166*FLEN/8, x4, x1, x2)

inst_11687:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffff00; valaddr_reg:x3; val_offset:35061*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35061*0 + 3*167*FLEN/8, x4, x1, x2)

inst_11688:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffff80; valaddr_reg:x3; val_offset:35064*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35064*0 + 3*168*FLEN/8, x4, x1, x2)

inst_11689:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffffc0; valaddr_reg:x3; val_offset:35067*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35067*0 + 3*169*FLEN/8, x4, x1, x2)

inst_11690:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffffe0; valaddr_reg:x3; val_offset:35070*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35070*0 + 3*170*FLEN/8, x4, x1, x2)

inst_11691:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffff0; valaddr_reg:x3; val_offset:35073*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35073*0 + 3*171*FLEN/8, x4, x1, x2)

inst_11692:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffff8; valaddr_reg:x3; val_offset:35076*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35076*0 + 3*172*FLEN/8, x4, x1, x2)

inst_11693:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffffc; valaddr_reg:x3; val_offset:35079*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35079*0 + 3*173*FLEN/8, x4, x1, x2)

inst_11694:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dffffffffffffe; valaddr_reg:x3; val_offset:35082*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35082*0 + 3*174*FLEN/8, x4, x1, x2)

inst_11695:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x39d and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xb9dfffffffffffff; valaddr_reg:x3; val_offset:35085*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35085*0 + 3*175*FLEN/8, x4, x1, x2)

inst_11696:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:35088*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35088*0 + 3*176*FLEN/8, x4, x1, x2)

inst_11697:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:35091*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35091*0 + 3*177*FLEN/8, x4, x1, x2)

inst_11698:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:35094*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35094*0 + 3*178*FLEN/8, x4, x1, x2)

inst_11699:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:35097*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35097*0 + 3*179*FLEN/8, x4, x1, x2)

inst_11700:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:35100*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35100*0 + 3*180*FLEN/8, x4, x1, x2)

inst_11701:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:35103*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35103*0 + 3*181*FLEN/8, x4, x1, x2)

inst_11702:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:35106*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35106*0 + 3*182*FLEN/8, x4, x1, x2)

inst_11703:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:35109*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35109*0 + 3*183*FLEN/8, x4, x1, x2)

inst_11704:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:35112*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35112*0 + 3*184*FLEN/8, x4, x1, x2)

inst_11705:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:35115*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35115*0 + 3*185*FLEN/8, x4, x1, x2)

inst_11706:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:35118*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35118*0 + 3*186*FLEN/8, x4, x1, x2)

inst_11707:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:35121*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35121*0 + 3*187*FLEN/8, x4, x1, x2)

inst_11708:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:35124*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35124*0 + 3*188*FLEN/8, x4, x1, x2)

inst_11709:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:35127*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35127*0 + 3*189*FLEN/8, x4, x1, x2)

inst_11710:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:35130*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35130*0 + 3*190*FLEN/8, x4, x1, x2)

inst_11711:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:35133*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35133*0 + 3*191*FLEN/8, x4, x1, x2)

inst_11712:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:35136*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35136*0 + 3*192*FLEN/8, x4, x1, x2)

inst_11713:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:35139*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35139*0 + 3*193*FLEN/8, x4, x1, x2)

inst_11714:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:35142*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35142*0 + 3*194*FLEN/8, x4, x1, x2)

inst_11715:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:35145*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35145*0 + 3*195*FLEN/8, x4, x1, x2)

inst_11716:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:35148*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35148*0 + 3*196*FLEN/8, x4, x1, x2)

inst_11717:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x96bb2b5183927 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x4241d23758c95 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f796bb2b5183927; op2val:0x9ff4241d23758c95;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:35151*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35151*0 + 3*197*FLEN/8, x4, x1, x2)

inst_11718:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:35154*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35154*0 + 3*198*FLEN/8, x4, x1, x2)

inst_11719:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:35157*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35157*0 + 3*199*FLEN/8, x4, x1, x2)

inst_11720:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:35160*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35160*0 + 3*200*FLEN/8, x4, x1, x2)

inst_11721:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:35163*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35163*0 + 3*201*FLEN/8, x4, x1, x2)

inst_11722:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:35166*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35166*0 + 3*202*FLEN/8, x4, x1, x2)

inst_11723:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:35169*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35169*0 + 3*203*FLEN/8, x4, x1, x2)

inst_11724:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:35172*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35172*0 + 3*204*FLEN/8, x4, x1, x2)

inst_11725:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:35175*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35175*0 + 3*205*FLEN/8, x4, x1, x2)

inst_11726:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:35178*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35178*0 + 3*206*FLEN/8, x4, x1, x2)

inst_11727:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:35181*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35181*0 + 3*207*FLEN/8, x4, x1, x2)

inst_11728:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:35184*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35184*0 + 3*208*FLEN/8, x4, x1, x2)

inst_11729:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:35187*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35187*0 + 3*209*FLEN/8, x4, x1, x2)

inst_11730:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:35190*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35190*0 + 3*210*FLEN/8, x4, x1, x2)

inst_11731:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:35193*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35193*0 + 3*211*FLEN/8, x4, x1, x2)

inst_11732:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:35196*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35196*0 + 3*212*FLEN/8, x4, x1, x2)

inst_11733:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:35199*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35199*0 + 3*213*FLEN/8, x4, x1, x2)

inst_11734:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:35202*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35202*0 + 3*214*FLEN/8, x4, x1, x2)

inst_11735:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:35205*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35205*0 + 3*215*FLEN/8, x4, x1, x2)

inst_11736:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:35208*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35208*0 + 3*216*FLEN/8, x4, x1, x2)

inst_11737:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:35211*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35211*0 + 3*217*FLEN/8, x4, x1, x2)

inst_11738:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:35214*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35214*0 + 3*218*FLEN/8, x4, x1, x2)

inst_11739:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:35217*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35217*0 + 3*219*FLEN/8, x4, x1, x2)

inst_11740:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000000000; valaddr_reg:x3; val_offset:35220*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35220*0 + 3*220*FLEN/8, x4, x1, x2)

inst_11741:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000000001; valaddr_reg:x3; val_offset:35223*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35223*0 + 3*221*FLEN/8, x4, x1, x2)

inst_11742:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000000003; valaddr_reg:x3; val_offset:35226*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35226*0 + 3*222*FLEN/8, x4, x1, x2)

inst_11743:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000000007; valaddr_reg:x3; val_offset:35229*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35229*0 + 3*223*FLEN/8, x4, x1, x2)

inst_11744:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000000000f; valaddr_reg:x3; val_offset:35232*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35232*0 + 3*224*FLEN/8, x4, x1, x2)

inst_11745:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000000001f; valaddr_reg:x3; val_offset:35235*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35235*0 + 3*225*FLEN/8, x4, x1, x2)

inst_11746:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000000003f; valaddr_reg:x3; val_offset:35238*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35238*0 + 3*226*FLEN/8, x4, x1, x2)

inst_11747:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000000007f; valaddr_reg:x3; val_offset:35241*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35241*0 + 3*227*FLEN/8, x4, x1, x2)

inst_11748:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000000000ff; valaddr_reg:x3; val_offset:35244*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35244*0 + 3*228*FLEN/8, x4, x1, x2)

inst_11749:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000000001ff; valaddr_reg:x3; val_offset:35247*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35247*0 + 3*229*FLEN/8, x4, x1, x2)

inst_11750:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000000003ff; valaddr_reg:x3; val_offset:35250*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35250*0 + 3*230*FLEN/8, x4, x1, x2)

inst_11751:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000000007ff; valaddr_reg:x3; val_offset:35253*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35253*0 + 3*231*FLEN/8, x4, x1, x2)

inst_11752:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000000fff; valaddr_reg:x3; val_offset:35256*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35256*0 + 3*232*FLEN/8, x4, x1, x2)

inst_11753:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000001fff; valaddr_reg:x3; val_offset:35259*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35259*0 + 3*233*FLEN/8, x4, x1, x2)

inst_11754:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000003fff; valaddr_reg:x3; val_offset:35262*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35262*0 + 3*234*FLEN/8, x4, x1, x2)

inst_11755:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000007fff; valaddr_reg:x3; val_offset:35265*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35265*0 + 3*235*FLEN/8, x4, x1, x2)

inst_11756:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000000ffff; valaddr_reg:x3; val_offset:35268*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35268*0 + 3*236*FLEN/8, x4, x1, x2)

inst_11757:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000001ffff; valaddr_reg:x3; val_offset:35271*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35271*0 + 3*237*FLEN/8, x4, x1, x2)

inst_11758:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000003ffff; valaddr_reg:x3; val_offset:35274*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35274*0 + 3*238*FLEN/8, x4, x1, x2)

inst_11759:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000007ffff; valaddr_reg:x3; val_offset:35277*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35277*0 + 3*239*FLEN/8, x4, x1, x2)

inst_11760:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000000fffff; valaddr_reg:x3; val_offset:35280*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35280*0 + 3*240*FLEN/8, x4, x1, x2)

inst_11761:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000001fffff; valaddr_reg:x3; val_offset:35283*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35283*0 + 3*241*FLEN/8, x4, x1, x2)

inst_11762:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000003fffff; valaddr_reg:x3; val_offset:35286*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35286*0 + 3*242*FLEN/8, x4, x1, x2)

inst_11763:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000007fffff; valaddr_reg:x3; val_offset:35289*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35289*0 + 3*243*FLEN/8, x4, x1, x2)

inst_11764:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000000ffffff; valaddr_reg:x3; val_offset:35292*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35292*0 + 3*244*FLEN/8, x4, x1, x2)

inst_11765:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000001ffffff; valaddr_reg:x3; val_offset:35295*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35295*0 + 3*245*FLEN/8, x4, x1, x2)

inst_11766:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000003ffffff; valaddr_reg:x3; val_offset:35298*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35298*0 + 3*246*FLEN/8, x4, x1, x2)

inst_11767:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000007ffffff; valaddr_reg:x3; val_offset:35301*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35301*0 + 3*247*FLEN/8, x4, x1, x2)

inst_11768:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000000fffffff; valaddr_reg:x3; val_offset:35304*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35304*0 + 3*248*FLEN/8, x4, x1, x2)

inst_11769:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000001fffffff; valaddr_reg:x3; val_offset:35307*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35307*0 + 3*249*FLEN/8, x4, x1, x2)

inst_11770:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000003fffffff; valaddr_reg:x3; val_offset:35310*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35310*0 + 3*250*FLEN/8, x4, x1, x2)

inst_11771:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000007fffffff; valaddr_reg:x3; val_offset:35313*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35313*0 + 3*251*FLEN/8, x4, x1, x2)

inst_11772:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500000ffffffff; valaddr_reg:x3; val_offset:35316*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35316*0 + 3*252*FLEN/8, x4, x1, x2)

inst_11773:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500001ffffffff; valaddr_reg:x3; val_offset:35319*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35319*0 + 3*253*FLEN/8, x4, x1, x2)

inst_11774:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500003ffffffff; valaddr_reg:x3; val_offset:35322*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35322*0 + 3*254*FLEN/8, x4, x1, x2)

inst_11775:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500007ffffffff; valaddr_reg:x3; val_offset:35325*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35325*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_11776:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150000fffffffff; valaddr_reg:x3; val_offset:35328*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35328*0 + 3*256*FLEN/8, x4, x1, x2)

inst_11777:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150001fffffffff; valaddr_reg:x3; val_offset:35331*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35331*0 + 3*257*FLEN/8, x4, x1, x2)

inst_11778:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150003fffffffff; valaddr_reg:x3; val_offset:35334*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35334*0 + 3*258*FLEN/8, x4, x1, x2)

inst_11779:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150007fffffffff; valaddr_reg:x3; val_offset:35337*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35337*0 + 3*259*FLEN/8, x4, x1, x2)

inst_11780:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815000ffffffffff; valaddr_reg:x3; val_offset:35340*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35340*0 + 3*260*FLEN/8, x4, x1, x2)

inst_11781:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815001ffffffffff; valaddr_reg:x3; val_offset:35343*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35343*0 + 3*261*FLEN/8, x4, x1, x2)

inst_11782:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815003ffffffffff; valaddr_reg:x3; val_offset:35346*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35346*0 + 3*262*FLEN/8, x4, x1, x2)

inst_11783:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815007ffffffffff; valaddr_reg:x3; val_offset:35349*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35349*0 + 3*263*FLEN/8, x4, x1, x2)

inst_11784:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81500fffffffffff; valaddr_reg:x3; val_offset:35352*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35352*0 + 3*264*FLEN/8, x4, x1, x2)

inst_11785:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81501fffffffffff; valaddr_reg:x3; val_offset:35355*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35355*0 + 3*265*FLEN/8, x4, x1, x2)

inst_11786:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81503fffffffffff; valaddr_reg:x3; val_offset:35358*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35358*0 + 3*266*FLEN/8, x4, x1, x2)

inst_11787:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x81507fffffffffff; valaddr_reg:x3; val_offset:35361*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35361*0 + 3*267*FLEN/8, x4, x1, x2)

inst_11788:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8150ffffffffffff; valaddr_reg:x3; val_offset:35364*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35364*0 + 3*268*FLEN/8, x4, x1, x2)

inst_11789:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8151ffffffffffff; valaddr_reg:x3; val_offset:35367*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35367*0 + 3*269*FLEN/8, x4, x1, x2)

inst_11790:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8153ffffffffffff; valaddr_reg:x3; val_offset:35370*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35370*0 + 3*270*FLEN/8, x4, x1, x2)

inst_11791:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8157ffffffffffff; valaddr_reg:x3; val_offset:35373*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35373*0 + 3*271*FLEN/8, x4, x1, x2)

inst_11792:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x8158000000000000; valaddr_reg:x3; val_offset:35376*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35376*0 + 3*272*FLEN/8, x4, x1, x2)

inst_11793:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815c000000000000; valaddr_reg:x3; val_offset:35379*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35379*0 + 3*273*FLEN/8, x4, x1, x2)

inst_11794:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815e000000000000; valaddr_reg:x3; val_offset:35382*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35382*0 + 3*274*FLEN/8, x4, x1, x2)

inst_11795:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815f000000000000; valaddr_reg:x3; val_offset:35385*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35385*0 + 3*275*FLEN/8, x4, x1, x2)

inst_11796:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815f800000000000; valaddr_reg:x3; val_offset:35388*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35388*0 + 3*276*FLEN/8, x4, x1, x2)

inst_11797:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fc00000000000; valaddr_reg:x3; val_offset:35391*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35391*0 + 3*277*FLEN/8, x4, x1, x2)

inst_11798:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fe00000000000; valaddr_reg:x3; val_offset:35394*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35394*0 + 3*278*FLEN/8, x4, x1, x2)

inst_11799:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ff00000000000; valaddr_reg:x3; val_offset:35397*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35397*0 + 3*279*FLEN/8, x4, x1, x2)

inst_11800:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ff80000000000; valaddr_reg:x3; val_offset:35400*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35400*0 + 3*280*FLEN/8, x4, x1, x2)

inst_11801:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffc0000000000; valaddr_reg:x3; val_offset:35403*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35403*0 + 3*281*FLEN/8, x4, x1, x2)

inst_11802:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffe0000000000; valaddr_reg:x3; val_offset:35406*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35406*0 + 3*282*FLEN/8, x4, x1, x2)

inst_11803:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fff0000000000; valaddr_reg:x3; val_offset:35409*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35409*0 + 3*283*FLEN/8, x4, x1, x2)

inst_11804:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fff8000000000; valaddr_reg:x3; val_offset:35412*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35412*0 + 3*284*FLEN/8, x4, x1, x2)

inst_11805:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffc000000000; valaddr_reg:x3; val_offset:35415*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35415*0 + 3*285*FLEN/8, x4, x1, x2)

inst_11806:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffe000000000; valaddr_reg:x3; val_offset:35418*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35418*0 + 3*286*FLEN/8, x4, x1, x2)

inst_11807:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffff000000000; valaddr_reg:x3; val_offset:35421*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35421*0 + 3*287*FLEN/8, x4, x1, x2)

inst_11808:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffff800000000; valaddr_reg:x3; val_offset:35424*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35424*0 + 3*288*FLEN/8, x4, x1, x2)

inst_11809:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffc00000000; valaddr_reg:x3; val_offset:35427*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35427*0 + 3*289*FLEN/8, x4, x1, x2)

inst_11810:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffe00000000; valaddr_reg:x3; val_offset:35430*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35430*0 + 3*290*FLEN/8, x4, x1, x2)

inst_11811:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffff00000000; valaddr_reg:x3; val_offset:35433*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35433*0 + 3*291*FLEN/8, x4, x1, x2)

inst_11812:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffff80000000; valaddr_reg:x3; val_offset:35436*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35436*0 + 3*292*FLEN/8, x4, x1, x2)

inst_11813:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffc0000000; valaddr_reg:x3; val_offset:35439*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35439*0 + 3*293*FLEN/8, x4, x1, x2)

inst_11814:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffe0000000; valaddr_reg:x3; val_offset:35442*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35442*0 + 3*294*FLEN/8, x4, x1, x2)

inst_11815:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffff0000000; valaddr_reg:x3; val_offset:35445*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35445*0 + 3*295*FLEN/8, x4, x1, x2)

inst_11816:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffff8000000; valaddr_reg:x3; val_offset:35448*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35448*0 + 3*296*FLEN/8, x4, x1, x2)

inst_11817:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffc000000; valaddr_reg:x3; val_offset:35451*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35451*0 + 3*297*FLEN/8, x4, x1, x2)

inst_11818:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffe000000; valaddr_reg:x3; val_offset:35454*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35454*0 + 3*298*FLEN/8, x4, x1, x2)

inst_11819:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffff000000; valaddr_reg:x3; val_offset:35457*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35457*0 + 3*299*FLEN/8, x4, x1, x2)

inst_11820:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffff800000; valaddr_reg:x3; val_offset:35460*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35460*0 + 3*300*FLEN/8, x4, x1, x2)

inst_11821:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffc00000; valaddr_reg:x3; val_offset:35463*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35463*0 + 3*301*FLEN/8, x4, x1, x2)

inst_11822:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffe00000; valaddr_reg:x3; val_offset:35466*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35466*0 + 3*302*FLEN/8, x4, x1, x2)

inst_11823:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffff00000; valaddr_reg:x3; val_offset:35469*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35469*0 + 3*303*FLEN/8, x4, x1, x2)

inst_11824:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffff80000; valaddr_reg:x3; val_offset:35472*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35472*0 + 3*304*FLEN/8, x4, x1, x2)

inst_11825:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffc0000; valaddr_reg:x3; val_offset:35475*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35475*0 + 3*305*FLEN/8, x4, x1, x2)

inst_11826:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffe0000; valaddr_reg:x3; val_offset:35478*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35478*0 + 3*306*FLEN/8, x4, x1, x2)

inst_11827:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffff0000; valaddr_reg:x3; val_offset:35481*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35481*0 + 3*307*FLEN/8, x4, x1, x2)

inst_11828:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffff8000; valaddr_reg:x3; val_offset:35484*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35484*0 + 3*308*FLEN/8, x4, x1, x2)

inst_11829:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffc000; valaddr_reg:x3; val_offset:35487*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35487*0 + 3*309*FLEN/8, x4, x1, x2)

inst_11830:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffe000; valaddr_reg:x3; val_offset:35490*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35490*0 + 3*310*FLEN/8, x4, x1, x2)

inst_11831:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffff000; valaddr_reg:x3; val_offset:35493*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35493*0 + 3*311*FLEN/8, x4, x1, x2)

inst_11832:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffff800; valaddr_reg:x3; val_offset:35496*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35496*0 + 3*312*FLEN/8, x4, x1, x2)

inst_11833:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffc00; valaddr_reg:x3; val_offset:35499*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35499*0 + 3*313*FLEN/8, x4, x1, x2)

inst_11834:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffe00; valaddr_reg:x3; val_offset:35502*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35502*0 + 3*314*FLEN/8, x4, x1, x2)

inst_11835:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffff00; valaddr_reg:x3; val_offset:35505*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35505*0 + 3*315*FLEN/8, x4, x1, x2)

inst_11836:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffff80; valaddr_reg:x3; val_offset:35508*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35508*0 + 3*316*FLEN/8, x4, x1, x2)

inst_11837:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffffc0; valaddr_reg:x3; val_offset:35511*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35511*0 + 3*317*FLEN/8, x4, x1, x2)

inst_11838:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffffe0; valaddr_reg:x3; val_offset:35514*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35514*0 + 3*318*FLEN/8, x4, x1, x2)

inst_11839:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffff0; valaddr_reg:x3; val_offset:35517*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35517*0 + 3*319*FLEN/8, x4, x1, x2)

inst_11840:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffff8; valaddr_reg:x3; val_offset:35520*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35520*0 + 3*320*FLEN/8, x4, x1, x2)

inst_11841:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffffc; valaddr_reg:x3; val_offset:35523*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35523*0 + 3*321*FLEN/8, x4, x1, x2)

inst_11842:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815ffffffffffffe; valaddr_reg:x3; val_offset:35526*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35526*0 + 3*322*FLEN/8, x4, x1, x2)

inst_11843:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x98293d5ceb2ef and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x015 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f798293d5ceb2ef; op2val:0x8000;
op3val:0x815fffffffffffff; valaddr_reg:x3; val_offset:35529*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35529*0 + 3*323*FLEN/8, x4, x1, x2)

inst_11844:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x10000000000001; valaddr_reg:x3; val_offset:35532*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35532*0 + 3*324*FLEN/8, x4, x1, x2)

inst_11845:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x10000000000003; valaddr_reg:x3; val_offset:35535*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35535*0 + 3*325*FLEN/8, x4, x1, x2)

inst_11846:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x10000000000007; valaddr_reg:x3; val_offset:35538*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35538*0 + 3*326*FLEN/8, x4, x1, x2)

inst_11847:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1000000000000f; valaddr_reg:x3; val_offset:35541*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35541*0 + 3*327*FLEN/8, x4, x1, x2)

inst_11848:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1000000000001f; valaddr_reg:x3; val_offset:35544*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35544*0 + 3*328*FLEN/8, x4, x1, x2)

inst_11849:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1000000000003f; valaddr_reg:x3; val_offset:35547*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35547*0 + 3*329*FLEN/8, x4, x1, x2)

inst_11850:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x13333333333333; valaddr_reg:x3; val_offset:35550*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35550*0 + 3*330*FLEN/8, x4, x1, x2)

inst_11851:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x14924924924924; valaddr_reg:x3; val_offset:35553*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35553*0 + 3*331*FLEN/8, x4, x1, x2)

inst_11852:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x16666666666666; valaddr_reg:x3; val_offset:35556*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35556*0 + 3*332*FLEN/8, x4, x1, x2)

inst_11853:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x16db6db6db6db6; valaddr_reg:x3; val_offset:35559*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35559*0 + 3*333*FLEN/8, x4, x1, x2)

inst_11854:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x17777777777777; valaddr_reg:x3; val_offset:35562*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35562*0 + 3*334*FLEN/8, x4, x1, x2)

inst_11855:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x18888888888888; valaddr_reg:x3; val_offset:35565*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35565*0 + 3*335*FLEN/8, x4, x1, x2)

inst_11856:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x19999999999999; valaddr_reg:x3; val_offset:35568*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35568*0 + 3*336*FLEN/8, x4, x1, x2)

inst_11857:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1b6db6db6db6db; valaddr_reg:x3; val_offset:35571*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35571*0 + 3*337*FLEN/8, x4, x1, x2)

inst_11858:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1ccccccccccccc; valaddr_reg:x3; val_offset:35574*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35574*0 + 3*338*FLEN/8, x4, x1, x2)

inst_11859:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1db6db6db6db6d; valaddr_reg:x3; val_offset:35577*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35577*0 + 3*339*FLEN/8, x4, x1, x2)

inst_11860:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1fffffffffffc0; valaddr_reg:x3; val_offset:35580*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35580*0 + 3*340*FLEN/8, x4, x1, x2)

inst_11861:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1fffffffffffe0; valaddr_reg:x3; val_offset:35583*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35583*0 + 3*341*FLEN/8, x4, x1, x2)

inst_11862:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1ffffffffffff0; valaddr_reg:x3; val_offset:35586*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35586*0 + 3*342*FLEN/8, x4, x1, x2)

inst_11863:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1ffffffffffff8; valaddr_reg:x3; val_offset:35589*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35589*0 + 3*343*FLEN/8, x4, x1, x2)

inst_11864:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1ffffffffffffc; valaddr_reg:x3; val_offset:35592*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35592*0 + 3*344*FLEN/8, x4, x1, x2)

inst_11865:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x1ffffffffffffe; valaddr_reg:x3; val_offset:35595*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35595*0 + 3*345*FLEN/8, x4, x1, x2)

inst_11866:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000000000; valaddr_reg:x3; val_offset:35598*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35598*0 + 3*346*FLEN/8, x4, x1, x2)

inst_11867:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000000001; valaddr_reg:x3; val_offset:35601*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35601*0 + 3*347*FLEN/8, x4, x1, x2)

inst_11868:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000000003; valaddr_reg:x3; val_offset:35604*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35604*0 + 3*348*FLEN/8, x4, x1, x2)

inst_11869:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000000007; valaddr_reg:x3; val_offset:35607*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35607*0 + 3*349*FLEN/8, x4, x1, x2)

inst_11870:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000000000f; valaddr_reg:x3; val_offset:35610*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35610*0 + 3*350*FLEN/8, x4, x1, x2)

inst_11871:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000000001f; valaddr_reg:x3; val_offset:35613*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35613*0 + 3*351*FLEN/8, x4, x1, x2)

inst_11872:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000000003f; valaddr_reg:x3; val_offset:35616*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35616*0 + 3*352*FLEN/8, x4, x1, x2)

inst_11873:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000000007f; valaddr_reg:x3; val_offset:35619*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35619*0 + 3*353*FLEN/8, x4, x1, x2)

inst_11874:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000000000ff; valaddr_reg:x3; val_offset:35622*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35622*0 + 3*354*FLEN/8, x4, x1, x2)

inst_11875:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000000001ff; valaddr_reg:x3; val_offset:35625*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35625*0 + 3*355*FLEN/8, x4, x1, x2)

inst_11876:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000000003ff; valaddr_reg:x3; val_offset:35628*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35628*0 + 3*356*FLEN/8, x4, x1, x2)

inst_11877:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000000007ff; valaddr_reg:x3; val_offset:35631*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35631*0 + 3*357*FLEN/8, x4, x1, x2)

inst_11878:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000000fff; valaddr_reg:x3; val_offset:35634*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35634*0 + 3*358*FLEN/8, x4, x1, x2)

inst_11879:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000001fff; valaddr_reg:x3; val_offset:35637*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35637*0 + 3*359*FLEN/8, x4, x1, x2)

inst_11880:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000003fff; valaddr_reg:x3; val_offset:35640*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35640*0 + 3*360*FLEN/8, x4, x1, x2)

inst_11881:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000007fff; valaddr_reg:x3; val_offset:35643*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35643*0 + 3*361*FLEN/8, x4, x1, x2)

inst_11882:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000000ffff; valaddr_reg:x3; val_offset:35646*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35646*0 + 3*362*FLEN/8, x4, x1, x2)

inst_11883:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000001ffff; valaddr_reg:x3; val_offset:35649*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35649*0 + 3*363*FLEN/8, x4, x1, x2)

inst_11884:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000003ffff; valaddr_reg:x3; val_offset:35652*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35652*0 + 3*364*FLEN/8, x4, x1, x2)

inst_11885:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000007ffff; valaddr_reg:x3; val_offset:35655*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35655*0 + 3*365*FLEN/8, x4, x1, x2)

inst_11886:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000000fffff; valaddr_reg:x3; val_offset:35658*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35658*0 + 3*366*FLEN/8, x4, x1, x2)

inst_11887:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000001fffff; valaddr_reg:x3; val_offset:35661*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35661*0 + 3*367*FLEN/8, x4, x1, x2)

inst_11888:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000003fffff; valaddr_reg:x3; val_offset:35664*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35664*0 + 3*368*FLEN/8, x4, x1, x2)

inst_11889:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000007fffff; valaddr_reg:x3; val_offset:35667*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35667*0 + 3*369*FLEN/8, x4, x1, x2)

inst_11890:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000000ffffff; valaddr_reg:x3; val_offset:35670*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35670*0 + 3*370*FLEN/8, x4, x1, x2)

inst_11891:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000001ffffff; valaddr_reg:x3; val_offset:35673*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35673*0 + 3*371*FLEN/8, x4, x1, x2)

inst_11892:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000003ffffff; valaddr_reg:x3; val_offset:35676*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35676*0 + 3*372*FLEN/8, x4, x1, x2)

inst_11893:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000007ffffff; valaddr_reg:x3; val_offset:35679*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35679*0 + 3*373*FLEN/8, x4, x1, x2)

inst_11894:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000000fffffff; valaddr_reg:x3; val_offset:35682*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35682*0 + 3*374*FLEN/8, x4, x1, x2)

inst_11895:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000001fffffff; valaddr_reg:x3; val_offset:35685*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35685*0 + 3*375*FLEN/8, x4, x1, x2)

inst_11896:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000003fffffff; valaddr_reg:x3; val_offset:35688*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35688*0 + 3*376*FLEN/8, x4, x1, x2)

inst_11897:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000007fffffff; valaddr_reg:x3; val_offset:35691*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35691*0 + 3*377*FLEN/8, x4, x1, x2)

inst_11898:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400000ffffffff; valaddr_reg:x3; val_offset:35694*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35694*0 + 3*378*FLEN/8, x4, x1, x2)

inst_11899:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400001ffffffff; valaddr_reg:x3; val_offset:35697*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35697*0 + 3*379*FLEN/8, x4, x1, x2)

inst_11900:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400003ffffffff; valaddr_reg:x3; val_offset:35700*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35700*0 + 3*380*FLEN/8, x4, x1, x2)

inst_11901:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400007ffffffff; valaddr_reg:x3; val_offset:35703*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35703*0 + 3*381*FLEN/8, x4, x1, x2)

inst_11902:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340000fffffffff; valaddr_reg:x3; val_offset:35706*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35706*0 + 3*382*FLEN/8, x4, x1, x2)

inst_11903:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340001fffffffff; valaddr_reg:x3; val_offset:35709*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35709*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_11904:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340003fffffffff; valaddr_reg:x3; val_offset:35712*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35712*0 + 3*384*FLEN/8, x4, x1, x2)

inst_11905:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340007fffffffff; valaddr_reg:x3; val_offset:35715*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35715*0 + 3*385*FLEN/8, x4, x1, x2)

inst_11906:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34000ffffffffff; valaddr_reg:x3; val_offset:35718*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35718*0 + 3*386*FLEN/8, x4, x1, x2)

inst_11907:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34001ffffffffff; valaddr_reg:x3; val_offset:35721*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35721*0 + 3*387*FLEN/8, x4, x1, x2)

inst_11908:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34003ffffffffff; valaddr_reg:x3; val_offset:35724*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35724*0 + 3*388*FLEN/8, x4, x1, x2)

inst_11909:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34007ffffffffff; valaddr_reg:x3; val_offset:35727*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35727*0 + 3*389*FLEN/8, x4, x1, x2)

inst_11910:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3400fffffffffff; valaddr_reg:x3; val_offset:35730*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35730*0 + 3*390*FLEN/8, x4, x1, x2)

inst_11911:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3401fffffffffff; valaddr_reg:x3; val_offset:35733*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35733*0 + 3*391*FLEN/8, x4, x1, x2)

inst_11912:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3403fffffffffff; valaddr_reg:x3; val_offset:35736*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35736*0 + 3*392*FLEN/8, x4, x1, x2)

inst_11913:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x3407fffffffffff; valaddr_reg:x3; val_offset:35739*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35739*0 + 3*393*FLEN/8, x4, x1, x2)

inst_11914:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x340ffffffffffff; valaddr_reg:x3; val_offset:35742*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35742*0 + 3*394*FLEN/8, x4, x1, x2)

inst_11915:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x341ffffffffffff; valaddr_reg:x3; val_offset:35745*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35745*0 + 3*395*FLEN/8, x4, x1, x2)

inst_11916:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x343ffffffffffff; valaddr_reg:x3; val_offset:35748*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35748*0 + 3*396*FLEN/8, x4, x1, x2)

inst_11917:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x347ffffffffffff; valaddr_reg:x3; val_offset:35751*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35751*0 + 3*397*FLEN/8, x4, x1, x2)

inst_11918:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x348000000000000; valaddr_reg:x3; val_offset:35754*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35754*0 + 3*398*FLEN/8, x4, x1, x2)

inst_11919:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34c000000000000; valaddr_reg:x3; val_offset:35757*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35757*0 + 3*399*FLEN/8, x4, x1, x2)

inst_11920:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34e000000000000; valaddr_reg:x3; val_offset:35760*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35760*0 + 3*400*FLEN/8, x4, x1, x2)

inst_11921:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34f000000000000; valaddr_reg:x3; val_offset:35763*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35763*0 + 3*401*FLEN/8, x4, x1, x2)

inst_11922:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34f800000000000; valaddr_reg:x3; val_offset:35766*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35766*0 + 3*402*FLEN/8, x4, x1, x2)

inst_11923:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fc00000000000; valaddr_reg:x3; val_offset:35769*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35769*0 + 3*403*FLEN/8, x4, x1, x2)

inst_11924:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fe00000000000; valaddr_reg:x3; val_offset:35772*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35772*0 + 3*404*FLEN/8, x4, x1, x2)

inst_11925:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ff00000000000; valaddr_reg:x3; val_offset:35775*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35775*0 + 3*405*FLEN/8, x4, x1, x2)

inst_11926:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ff80000000000; valaddr_reg:x3; val_offset:35778*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35778*0 + 3*406*FLEN/8, x4, x1, x2)

inst_11927:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffc0000000000; valaddr_reg:x3; val_offset:35781*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35781*0 + 3*407*FLEN/8, x4, x1, x2)

inst_11928:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffe0000000000; valaddr_reg:x3; val_offset:35784*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35784*0 + 3*408*FLEN/8, x4, x1, x2)

inst_11929:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fff0000000000; valaddr_reg:x3; val_offset:35787*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35787*0 + 3*409*FLEN/8, x4, x1, x2)

inst_11930:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fff8000000000; valaddr_reg:x3; val_offset:35790*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35790*0 + 3*410*FLEN/8, x4, x1, x2)

inst_11931:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffc000000000; valaddr_reg:x3; val_offset:35793*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35793*0 + 3*411*FLEN/8, x4, x1, x2)

inst_11932:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffe000000000; valaddr_reg:x3; val_offset:35796*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35796*0 + 3*412*FLEN/8, x4, x1, x2)

inst_11933:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffff000000000; valaddr_reg:x3; val_offset:35799*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35799*0 + 3*413*FLEN/8, x4, x1, x2)

inst_11934:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffff800000000; valaddr_reg:x3; val_offset:35802*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35802*0 + 3*414*FLEN/8, x4, x1, x2)

inst_11935:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffc00000000; valaddr_reg:x3; val_offset:35805*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35805*0 + 3*415*FLEN/8, x4, x1, x2)

inst_11936:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffe00000000; valaddr_reg:x3; val_offset:35808*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35808*0 + 3*416*FLEN/8, x4, x1, x2)

inst_11937:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffff00000000; valaddr_reg:x3; val_offset:35811*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35811*0 + 3*417*FLEN/8, x4, x1, x2)

inst_11938:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffff80000000; valaddr_reg:x3; val_offset:35814*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35814*0 + 3*418*FLEN/8, x4, x1, x2)

inst_11939:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffc0000000; valaddr_reg:x3; val_offset:35817*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35817*0 + 3*419*FLEN/8, x4, x1, x2)

inst_11940:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffe0000000; valaddr_reg:x3; val_offset:35820*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35820*0 + 3*420*FLEN/8, x4, x1, x2)

inst_11941:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffff0000000; valaddr_reg:x3; val_offset:35823*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35823*0 + 3*421*FLEN/8, x4, x1, x2)

inst_11942:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffff8000000; valaddr_reg:x3; val_offset:35826*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35826*0 + 3*422*FLEN/8, x4, x1, x2)

inst_11943:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffc000000; valaddr_reg:x3; val_offset:35829*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35829*0 + 3*423*FLEN/8, x4, x1, x2)

inst_11944:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffe000000; valaddr_reg:x3; val_offset:35832*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35832*0 + 3*424*FLEN/8, x4, x1, x2)

inst_11945:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffff000000; valaddr_reg:x3; val_offset:35835*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35835*0 + 3*425*FLEN/8, x4, x1, x2)

inst_11946:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffff800000; valaddr_reg:x3; val_offset:35838*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35838*0 + 3*426*FLEN/8, x4, x1, x2)

inst_11947:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffc00000; valaddr_reg:x3; val_offset:35841*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35841*0 + 3*427*FLEN/8, x4, x1, x2)

inst_11948:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffe00000; valaddr_reg:x3; val_offset:35844*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35844*0 + 3*428*FLEN/8, x4, x1, x2)

inst_11949:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffff00000; valaddr_reg:x3; val_offset:35847*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35847*0 + 3*429*FLEN/8, x4, x1, x2)

inst_11950:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffff80000; valaddr_reg:x3; val_offset:35850*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35850*0 + 3*430*FLEN/8, x4, x1, x2)

inst_11951:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffc0000; valaddr_reg:x3; val_offset:35853*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35853*0 + 3*431*FLEN/8, x4, x1, x2)

inst_11952:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffe0000; valaddr_reg:x3; val_offset:35856*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35856*0 + 3*432*FLEN/8, x4, x1, x2)

inst_11953:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffff0000; valaddr_reg:x3; val_offset:35859*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35859*0 + 3*433*FLEN/8, x4, x1, x2)

inst_11954:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffff8000; valaddr_reg:x3; val_offset:35862*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35862*0 + 3*434*FLEN/8, x4, x1, x2)

inst_11955:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffc000; valaddr_reg:x3; val_offset:35865*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35865*0 + 3*435*FLEN/8, x4, x1, x2)

inst_11956:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffe000; valaddr_reg:x3; val_offset:35868*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35868*0 + 3*436*FLEN/8, x4, x1, x2)

inst_11957:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffff000; valaddr_reg:x3; val_offset:35871*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35871*0 + 3*437*FLEN/8, x4, x1, x2)

inst_11958:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffff800; valaddr_reg:x3; val_offset:35874*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35874*0 + 3*438*FLEN/8, x4, x1, x2)

inst_11959:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffc00; valaddr_reg:x3; val_offset:35877*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35877*0 + 3*439*FLEN/8, x4, x1, x2)

inst_11960:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffe00; valaddr_reg:x3; val_offset:35880*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35880*0 + 3*440*FLEN/8, x4, x1, x2)

inst_11961:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffff00; valaddr_reg:x3; val_offset:35883*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35883*0 + 3*441*FLEN/8, x4, x1, x2)

inst_11962:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffff80; valaddr_reg:x3; val_offset:35886*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35886*0 + 3*442*FLEN/8, x4, x1, x2)

inst_11963:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffffc0; valaddr_reg:x3; val_offset:35889*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35889*0 + 3*443*FLEN/8, x4, x1, x2)

inst_11964:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffffe0; valaddr_reg:x3; val_offset:35892*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35892*0 + 3*444*FLEN/8, x4, x1, x2)

inst_11965:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffff0; valaddr_reg:x3; val_offset:35895*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35895*0 + 3*445*FLEN/8, x4, x1, x2)

inst_11966:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffff8; valaddr_reg:x3; val_offset:35898*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35898*0 + 3*446*FLEN/8, x4, x1, x2)

inst_11967:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffffc; valaddr_reg:x3; val_offset:35901*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35901*0 + 3*447*FLEN/8, x4, x1, x2)

inst_11968:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34ffffffffffffe; valaddr_reg:x3; val_offset:35904*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35904*0 + 3*448*FLEN/8, x4, x1, x2)

inst_11969:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0x9f5a046604fc7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x034 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f79f5a046604fc7; op2val:0x0;
op3val:0x34fffffffffffff; valaddr_reg:x3; val_offset:35907*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35907*0 + 3*449*FLEN/8, x4, x1, x2)

inst_11970:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000000000; valaddr_reg:x3; val_offset:35910*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35910*0 + 3*450*FLEN/8, x4, x1, x2)

inst_11971:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000000001; valaddr_reg:x3; val_offset:35913*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35913*0 + 3*451*FLEN/8, x4, x1, x2)

inst_11972:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000000003; valaddr_reg:x3; val_offset:35916*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35916*0 + 3*452*FLEN/8, x4, x1, x2)

inst_11973:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000000007; valaddr_reg:x3; val_offset:35919*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35919*0 + 3*453*FLEN/8, x4, x1, x2)

inst_11974:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000000000f; valaddr_reg:x3; val_offset:35922*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35922*0 + 3*454*FLEN/8, x4, x1, x2)

inst_11975:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000000001f; valaddr_reg:x3; val_offset:35925*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35925*0 + 3*455*FLEN/8, x4, x1, x2)

inst_11976:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000000003f; valaddr_reg:x3; val_offset:35928*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35928*0 + 3*456*FLEN/8, x4, x1, x2)

inst_11977:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000000007f; valaddr_reg:x3; val_offset:35931*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35931*0 + 3*457*FLEN/8, x4, x1, x2)

inst_11978:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000000000ff; valaddr_reg:x3; val_offset:35934*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35934*0 + 3*458*FLEN/8, x4, x1, x2)

inst_11979:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000000001ff; valaddr_reg:x3; val_offset:35937*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35937*0 + 3*459*FLEN/8, x4, x1, x2)

inst_11980:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000000003ff; valaddr_reg:x3; val_offset:35940*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35940*0 + 3*460*FLEN/8, x4, x1, x2)

inst_11981:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000000007ff; valaddr_reg:x3; val_offset:35943*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35943*0 + 3*461*FLEN/8, x4, x1, x2)

inst_11982:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000000fff; valaddr_reg:x3; val_offset:35946*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35946*0 + 3*462*FLEN/8, x4, x1, x2)

inst_11983:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000001fff; valaddr_reg:x3; val_offset:35949*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35949*0 + 3*463*FLEN/8, x4, x1, x2)

inst_11984:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000003fff; valaddr_reg:x3; val_offset:35952*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35952*0 + 3*464*FLEN/8, x4, x1, x2)

inst_11985:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000007fff; valaddr_reg:x3; val_offset:35955*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35955*0 + 3*465*FLEN/8, x4, x1, x2)

inst_11986:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000000ffff; valaddr_reg:x3; val_offset:35958*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35958*0 + 3*466*FLEN/8, x4, x1, x2)

inst_11987:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000001ffff; valaddr_reg:x3; val_offset:35961*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35961*0 + 3*467*FLEN/8, x4, x1, x2)

inst_11988:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000003ffff; valaddr_reg:x3; val_offset:35964*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35964*0 + 3*468*FLEN/8, x4, x1, x2)

inst_11989:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000007ffff; valaddr_reg:x3; val_offset:35967*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35967*0 + 3*469*FLEN/8, x4, x1, x2)

inst_11990:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000000fffff; valaddr_reg:x3; val_offset:35970*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35970*0 + 3*470*FLEN/8, x4, x1, x2)

inst_11991:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000001fffff; valaddr_reg:x3; val_offset:35973*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35973*0 + 3*471*FLEN/8, x4, x1, x2)

inst_11992:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000003fffff; valaddr_reg:x3; val_offset:35976*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35976*0 + 3*472*FLEN/8, x4, x1, x2)

inst_11993:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000007fffff; valaddr_reg:x3; val_offset:35979*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35979*0 + 3*473*FLEN/8, x4, x1, x2)

inst_11994:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000000ffffff; valaddr_reg:x3; val_offset:35982*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35982*0 + 3*474*FLEN/8, x4, x1, x2)

inst_11995:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000001ffffff; valaddr_reg:x3; val_offset:35985*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35985*0 + 3*475*FLEN/8, x4, x1, x2)

inst_11996:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000003ffffff; valaddr_reg:x3; val_offset:35988*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35988*0 + 3*476*FLEN/8, x4, x1, x2)

inst_11997:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000007ffffff; valaddr_reg:x3; val_offset:35991*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35991*0 + 3*477*FLEN/8, x4, x1, x2)

inst_11998:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000000fffffff; valaddr_reg:x3; val_offset:35994*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35994*0 + 3*478*FLEN/8, x4, x1, x2)

inst_11999:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000001fffffff; valaddr_reg:x3; val_offset:35997*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 35997*0 + 3*479*FLEN/8, x4, x1, x2)

inst_12000:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000003fffffff; valaddr_reg:x3; val_offset:36000*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36000*0 + 3*480*FLEN/8, x4, x1, x2)

inst_12001:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000007fffffff; valaddr_reg:x3; val_offset:36003*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36003*0 + 3*481*FLEN/8, x4, x1, x2)

inst_12002:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600000ffffffff; valaddr_reg:x3; val_offset:36006*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36006*0 + 3*482*FLEN/8, x4, x1, x2)

inst_12003:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600001ffffffff; valaddr_reg:x3; val_offset:36009*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36009*0 + 3*483*FLEN/8, x4, x1, x2)

inst_12004:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600003ffffffff; valaddr_reg:x3; val_offset:36012*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36012*0 + 3*484*FLEN/8, x4, x1, x2)

inst_12005:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600007ffffffff; valaddr_reg:x3; val_offset:36015*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36015*0 + 3*485*FLEN/8, x4, x1, x2)

inst_12006:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960000fffffffff; valaddr_reg:x3; val_offset:36018*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36018*0 + 3*486*FLEN/8, x4, x1, x2)

inst_12007:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960001fffffffff; valaddr_reg:x3; val_offset:36021*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36021*0 + 3*487*FLEN/8, x4, x1, x2)

inst_12008:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960003fffffffff; valaddr_reg:x3; val_offset:36024*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36024*0 + 3*488*FLEN/8, x4, x1, x2)

inst_12009:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960007fffffffff; valaddr_reg:x3; val_offset:36027*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36027*0 + 3*489*FLEN/8, x4, x1, x2)

inst_12010:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96000ffffffffff; valaddr_reg:x3; val_offset:36030*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36030*0 + 3*490*FLEN/8, x4, x1, x2)

inst_12011:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96001ffffffffff; valaddr_reg:x3; val_offset:36033*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36033*0 + 3*491*FLEN/8, x4, x1, x2)

inst_12012:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96003ffffffffff; valaddr_reg:x3; val_offset:36036*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36036*0 + 3*492*FLEN/8, x4, x1, x2)

inst_12013:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96007ffffffffff; valaddr_reg:x3; val_offset:36039*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36039*0 + 3*493*FLEN/8, x4, x1, x2)

inst_12014:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9600fffffffffff; valaddr_reg:x3; val_offset:36042*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36042*0 + 3*494*FLEN/8, x4, x1, x2)

inst_12015:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9601fffffffffff; valaddr_reg:x3; val_offset:36045*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36045*0 + 3*495*FLEN/8, x4, x1, x2)

inst_12016:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9603fffffffffff; valaddr_reg:x3; val_offset:36048*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36048*0 + 3*496*FLEN/8, x4, x1, x2)

inst_12017:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb9607fffffffffff; valaddr_reg:x3; val_offset:36051*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36051*0 + 3*497*FLEN/8, x4, x1, x2)

inst_12018:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb960ffffffffffff; valaddr_reg:x3; val_offset:36054*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36054*0 + 3*498*FLEN/8, x4, x1, x2)

inst_12019:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb961ffffffffffff; valaddr_reg:x3; val_offset:36057*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36057*0 + 3*499*FLEN/8, x4, x1, x2)

inst_12020:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb963ffffffffffff; valaddr_reg:x3; val_offset:36060*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36060*0 + 3*500*FLEN/8, x4, x1, x2)

inst_12021:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb967ffffffffffff; valaddr_reg:x3; val_offset:36063*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36063*0 + 3*501*FLEN/8, x4, x1, x2)

inst_12022:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb968000000000000; valaddr_reg:x3; val_offset:36066*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36066*0 + 3*502*FLEN/8, x4, x1, x2)

inst_12023:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96c000000000000; valaddr_reg:x3; val_offset:36069*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36069*0 + 3*503*FLEN/8, x4, x1, x2)

inst_12024:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96e000000000000; valaddr_reg:x3; val_offset:36072*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36072*0 + 3*504*FLEN/8, x4, x1, x2)

inst_12025:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96f000000000000; valaddr_reg:x3; val_offset:36075*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36075*0 + 3*505*FLEN/8, x4, x1, x2)

inst_12026:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96f800000000000; valaddr_reg:x3; val_offset:36078*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36078*0 + 3*506*FLEN/8, x4, x1, x2)

inst_12027:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fc00000000000; valaddr_reg:x3; val_offset:36081*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36081*0 + 3*507*FLEN/8, x4, x1, x2)

inst_12028:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fe00000000000; valaddr_reg:x3; val_offset:36084*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36084*0 + 3*508*FLEN/8, x4, x1, x2)

inst_12029:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ff00000000000; valaddr_reg:x3; val_offset:36087*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36087*0 + 3*509*FLEN/8, x4, x1, x2)

inst_12030:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ff80000000000; valaddr_reg:x3; val_offset:36090*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36090*0 + 3*510*FLEN/8, x4, x1, x2)

inst_12031:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffc0000000000; valaddr_reg:x3; val_offset:36093*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36093*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_12032:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffe0000000000; valaddr_reg:x3; val_offset:36096*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36096*0 + 3*512*FLEN/8, x4, x1, x2)

inst_12033:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fff0000000000; valaddr_reg:x3; val_offset:36099*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36099*0 + 3*513*FLEN/8, x4, x1, x2)

inst_12034:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fff8000000000; valaddr_reg:x3; val_offset:36102*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36102*0 + 3*514*FLEN/8, x4, x1, x2)

inst_12035:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffc000000000; valaddr_reg:x3; val_offset:36105*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36105*0 + 3*515*FLEN/8, x4, x1, x2)

inst_12036:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffe000000000; valaddr_reg:x3; val_offset:36108*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36108*0 + 3*516*FLEN/8, x4, x1, x2)

inst_12037:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffff000000000; valaddr_reg:x3; val_offset:36111*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36111*0 + 3*517*FLEN/8, x4, x1, x2)

inst_12038:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffff800000000; valaddr_reg:x3; val_offset:36114*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36114*0 + 3*518*FLEN/8, x4, x1, x2)

inst_12039:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffc00000000; valaddr_reg:x3; val_offset:36117*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36117*0 + 3*519*FLEN/8, x4, x1, x2)

inst_12040:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffe00000000; valaddr_reg:x3; val_offset:36120*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36120*0 + 3*520*FLEN/8, x4, x1, x2)

inst_12041:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffff00000000; valaddr_reg:x3; val_offset:36123*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36123*0 + 3*521*FLEN/8, x4, x1, x2)

inst_12042:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffff80000000; valaddr_reg:x3; val_offset:36126*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36126*0 + 3*522*FLEN/8, x4, x1, x2)

inst_12043:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffc0000000; valaddr_reg:x3; val_offset:36129*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36129*0 + 3*523*FLEN/8, x4, x1, x2)

inst_12044:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffe0000000; valaddr_reg:x3; val_offset:36132*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36132*0 + 3*524*FLEN/8, x4, x1, x2)

inst_12045:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffff0000000; valaddr_reg:x3; val_offset:36135*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36135*0 + 3*525*FLEN/8, x4, x1, x2)

inst_12046:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffff8000000; valaddr_reg:x3; val_offset:36138*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36138*0 + 3*526*FLEN/8, x4, x1, x2)

inst_12047:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffc000000; valaddr_reg:x3; val_offset:36141*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36141*0 + 3*527*FLEN/8, x4, x1, x2)

inst_12048:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffe000000; valaddr_reg:x3; val_offset:36144*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36144*0 + 3*528*FLEN/8, x4, x1, x2)

inst_12049:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffff000000; valaddr_reg:x3; val_offset:36147*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36147*0 + 3*529*FLEN/8, x4, x1, x2)

inst_12050:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffff800000; valaddr_reg:x3; val_offset:36150*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36150*0 + 3*530*FLEN/8, x4, x1, x2)

inst_12051:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffc00000; valaddr_reg:x3; val_offset:36153*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36153*0 + 3*531*FLEN/8, x4, x1, x2)

inst_12052:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffe00000; valaddr_reg:x3; val_offset:36156*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36156*0 + 3*532*FLEN/8, x4, x1, x2)

inst_12053:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffff00000; valaddr_reg:x3; val_offset:36159*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36159*0 + 3*533*FLEN/8, x4, x1, x2)

inst_12054:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffff80000; valaddr_reg:x3; val_offset:36162*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36162*0 + 3*534*FLEN/8, x4, x1, x2)

inst_12055:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffc0000; valaddr_reg:x3; val_offset:36165*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36165*0 + 3*535*FLEN/8, x4, x1, x2)

inst_12056:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffe0000; valaddr_reg:x3; val_offset:36168*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36168*0 + 3*536*FLEN/8, x4, x1, x2)

inst_12057:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffff0000; valaddr_reg:x3; val_offset:36171*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36171*0 + 3*537*FLEN/8, x4, x1, x2)

inst_12058:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffff8000; valaddr_reg:x3; val_offset:36174*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36174*0 + 3*538*FLEN/8, x4, x1, x2)

inst_12059:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffc000; valaddr_reg:x3; val_offset:36177*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36177*0 + 3*539*FLEN/8, x4, x1, x2)

inst_12060:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffe000; valaddr_reg:x3; val_offset:36180*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36180*0 + 3*540*FLEN/8, x4, x1, x2)

inst_12061:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffff000; valaddr_reg:x3; val_offset:36183*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36183*0 + 3*541*FLEN/8, x4, x1, x2)

inst_12062:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffff800; valaddr_reg:x3; val_offset:36186*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36186*0 + 3*542*FLEN/8, x4, x1, x2)

inst_12063:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffc00; valaddr_reg:x3; val_offset:36189*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36189*0 + 3*543*FLEN/8, x4, x1, x2)

inst_12064:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffe00; valaddr_reg:x3; val_offset:36192*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36192*0 + 3*544*FLEN/8, x4, x1, x2)

inst_12065:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffff00; valaddr_reg:x3; val_offset:36195*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36195*0 + 3*545*FLEN/8, x4, x1, x2)

inst_12066:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffff80; valaddr_reg:x3; val_offset:36198*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36198*0 + 3*546*FLEN/8, x4, x1, x2)

inst_12067:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffffc0; valaddr_reg:x3; val_offset:36201*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36201*0 + 3*547*FLEN/8, x4, x1, x2)

inst_12068:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffffe0; valaddr_reg:x3; val_offset:36204*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36204*0 + 3*548*FLEN/8, x4, x1, x2)

inst_12069:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffff0; valaddr_reg:x3; val_offset:36207*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36207*0 + 3*549*FLEN/8, x4, x1, x2)

inst_12070:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffff8; valaddr_reg:x3; val_offset:36210*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36210*0 + 3*550*FLEN/8, x4, x1, x2)

inst_12071:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffffc; valaddr_reg:x3; val_offset:36213*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36213*0 + 3*551*FLEN/8, x4, x1, x2)

inst_12072:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96ffffffffffffe; valaddr_reg:x3; val_offset:36216*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36216*0 + 3*552*FLEN/8, x4, x1, x2)

inst_12073:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x396 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xb96fffffffffffff; valaddr_reg:x3; val_offset:36219*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36219*0 + 3*553*FLEN/8, x4, x1, x2)

inst_12074:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:36222*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36222*0 + 3*554*FLEN/8, x4, x1, x2)

inst_12075:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:36225*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36225*0 + 3*555*FLEN/8, x4, x1, x2)

inst_12076:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:36228*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36228*0 + 3*556*FLEN/8, x4, x1, x2)

inst_12077:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:36231*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36231*0 + 3*557*FLEN/8, x4, x1, x2)

inst_12078:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:36234*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36234*0 + 3*558*FLEN/8, x4, x1, x2)

inst_12079:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:36237*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36237*0 + 3*559*FLEN/8, x4, x1, x2)

inst_12080:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:36240*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36240*0 + 3*560*FLEN/8, x4, x1, x2)

inst_12081:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:36243*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36243*0 + 3*561*FLEN/8, x4, x1, x2)

inst_12082:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:36246*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36246*0 + 3*562*FLEN/8, x4, x1, x2)

inst_12083:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:36249*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36249*0 + 3*563*FLEN/8, x4, x1, x2)

inst_12084:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:36252*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36252*0 + 3*564*FLEN/8, x4, x1, x2)

inst_12085:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:36255*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36255*0 + 3*565*FLEN/8, x4, x1, x2)

inst_12086:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:36258*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36258*0 + 3*566*FLEN/8, x4, x1, x2)

inst_12087:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:36261*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36261*0 + 3*567*FLEN/8, x4, x1, x2)

inst_12088:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:36264*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36264*0 + 3*568*FLEN/8, x4, x1, x2)

inst_12089:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:36267*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36267*0 + 3*569*FLEN/8, x4, x1, x2)

inst_12090:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:36270*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36270*0 + 3*570*FLEN/8, x4, x1, x2)

inst_12091:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:36273*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36273*0 + 3*571*FLEN/8, x4, x1, x2)

inst_12092:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:36276*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36276*0 + 3*572*FLEN/8, x4, x1, x2)

inst_12093:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:36279*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36279*0 + 3*573*FLEN/8, x4, x1, x2)

inst_12094:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:36282*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36282*0 + 3*574*FLEN/8, x4, x1, x2)

inst_12095:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xa66f0b9f8cc27 and fs2 == 1 and fe2 == 0x1ff and fm2 == 0x364739a5f44e9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7a66f0b9f8cc27; op2val:0x9ff364739a5f44e9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:36285*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36285*0 + 3*575*FLEN/8, x4, x1, x2)

inst_12096:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:36288*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36288*0 + 3*576*FLEN/8, x4, x1, x2)

inst_12097:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:36291*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36291*0 + 3*577*FLEN/8, x4, x1, x2)

inst_12098:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:36294*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36294*0 + 3*578*FLEN/8, x4, x1, x2)

inst_12099:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:36297*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36297*0 + 3*579*FLEN/8, x4, x1, x2)

inst_12100:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:36300*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36300*0 + 3*580*FLEN/8, x4, x1, x2)

inst_12101:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:36303*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36303*0 + 3*581*FLEN/8, x4, x1, x2)

inst_12102:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:36306*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36306*0 + 3*582*FLEN/8, x4, x1, x2)

inst_12103:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:36309*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36309*0 + 3*583*FLEN/8, x4, x1, x2)

inst_12104:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:36312*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36312*0 + 3*584*FLEN/8, x4, x1, x2)

inst_12105:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:36315*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36315*0 + 3*585*FLEN/8, x4, x1, x2)

inst_12106:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:36318*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36318*0 + 3*586*FLEN/8, x4, x1, x2)

inst_12107:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:36321*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36321*0 + 3*587*FLEN/8, x4, x1, x2)

inst_12108:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:36324*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36324*0 + 3*588*FLEN/8, x4, x1, x2)

inst_12109:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:36327*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36327*0 + 3*589*FLEN/8, x4, x1, x2)

inst_12110:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:36330*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36330*0 + 3*590*FLEN/8, x4, x1, x2)

inst_12111:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:36333*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36333*0 + 3*591*FLEN/8, x4, x1, x2)

inst_12112:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:36336*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36336*0 + 3*592*FLEN/8, x4, x1, x2)

inst_12113:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:36339*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36339*0 + 3*593*FLEN/8, x4, x1, x2)

inst_12114:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:36342*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36342*0 + 3*594*FLEN/8, x4, x1, x2)

inst_12115:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:36345*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36345*0 + 3*595*FLEN/8, x4, x1, x2)

inst_12116:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:36348*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36348*0 + 3*596*FLEN/8, x4, x1, x2)

inst_12117:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:36351*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36351*0 + 3*597*FLEN/8, x4, x1, x2)

inst_12118:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000000000; valaddr_reg:x3; val_offset:36354*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36354*0 + 3*598*FLEN/8, x4, x1, x2)

inst_12119:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000000001; valaddr_reg:x3; val_offset:36357*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36357*0 + 3*599*FLEN/8, x4, x1, x2)

inst_12120:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000000003; valaddr_reg:x3; val_offset:36360*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36360*0 + 3*600*FLEN/8, x4, x1, x2)

inst_12121:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000000007; valaddr_reg:x3; val_offset:36363*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36363*0 + 3*601*FLEN/8, x4, x1, x2)

inst_12122:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000000000f; valaddr_reg:x3; val_offset:36366*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36366*0 + 3*602*FLEN/8, x4, x1, x2)

inst_12123:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000000001f; valaddr_reg:x3; val_offset:36369*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36369*0 + 3*603*FLEN/8, x4, x1, x2)

inst_12124:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000000003f; valaddr_reg:x3; val_offset:36372*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36372*0 + 3*604*FLEN/8, x4, x1, x2)

inst_12125:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000000007f; valaddr_reg:x3; val_offset:36375*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36375*0 + 3*605*FLEN/8, x4, x1, x2)

inst_12126:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000000000ff; valaddr_reg:x3; val_offset:36378*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36378*0 + 3*606*FLEN/8, x4, x1, x2)

inst_12127:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000000001ff; valaddr_reg:x3; val_offset:36381*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36381*0 + 3*607*FLEN/8, x4, x1, x2)

inst_12128:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000000003ff; valaddr_reg:x3; val_offset:36384*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36384*0 + 3*608*FLEN/8, x4, x1, x2)

inst_12129:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000000007ff; valaddr_reg:x3; val_offset:36387*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36387*0 + 3*609*FLEN/8, x4, x1, x2)

inst_12130:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000000fff; valaddr_reg:x3; val_offset:36390*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36390*0 + 3*610*FLEN/8, x4, x1, x2)

inst_12131:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000001fff; valaddr_reg:x3; val_offset:36393*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36393*0 + 3*611*FLEN/8, x4, x1, x2)

inst_12132:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000003fff; valaddr_reg:x3; val_offset:36396*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36396*0 + 3*612*FLEN/8, x4, x1, x2)

inst_12133:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000007fff; valaddr_reg:x3; val_offset:36399*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36399*0 + 3*613*FLEN/8, x4, x1, x2)

inst_12134:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000000ffff; valaddr_reg:x3; val_offset:36402*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36402*0 + 3*614*FLEN/8, x4, x1, x2)

inst_12135:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000001ffff; valaddr_reg:x3; val_offset:36405*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36405*0 + 3*615*FLEN/8, x4, x1, x2)

inst_12136:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000003ffff; valaddr_reg:x3; val_offset:36408*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36408*0 + 3*616*FLEN/8, x4, x1, x2)

inst_12137:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000007ffff; valaddr_reg:x3; val_offset:36411*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36411*0 + 3*617*FLEN/8, x4, x1, x2)

inst_12138:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000000fffff; valaddr_reg:x3; val_offset:36414*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36414*0 + 3*618*FLEN/8, x4, x1, x2)

inst_12139:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000001fffff; valaddr_reg:x3; val_offset:36417*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36417*0 + 3*619*FLEN/8, x4, x1, x2)

inst_12140:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000003fffff; valaddr_reg:x3; val_offset:36420*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36420*0 + 3*620*FLEN/8, x4, x1, x2)

inst_12141:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000007fffff; valaddr_reg:x3; val_offset:36423*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36423*0 + 3*621*FLEN/8, x4, x1, x2)

inst_12142:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000000ffffff; valaddr_reg:x3; val_offset:36426*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36426*0 + 3*622*FLEN/8, x4, x1, x2)

inst_12143:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000001ffffff; valaddr_reg:x3; val_offset:36429*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36429*0 + 3*623*FLEN/8, x4, x1, x2)

inst_12144:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000003ffffff; valaddr_reg:x3; val_offset:36432*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36432*0 + 3*624*FLEN/8, x4, x1, x2)

inst_12145:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000007ffffff; valaddr_reg:x3; val_offset:36435*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36435*0 + 3*625*FLEN/8, x4, x1, x2)

inst_12146:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000000fffffff; valaddr_reg:x3; val_offset:36438*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36438*0 + 3*626*FLEN/8, x4, x1, x2)

inst_12147:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000001fffffff; valaddr_reg:x3; val_offset:36441*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36441*0 + 3*627*FLEN/8, x4, x1, x2)

inst_12148:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000003fffffff; valaddr_reg:x3; val_offset:36444*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36444*0 + 3*628*FLEN/8, x4, x1, x2)

inst_12149:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000007fffffff; valaddr_reg:x3; val_offset:36447*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36447*0 + 3*629*FLEN/8, x4, x1, x2)

inst_12150:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900000ffffffff; valaddr_reg:x3; val_offset:36450*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36450*0 + 3*630*FLEN/8, x4, x1, x2)

inst_12151:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900001ffffffff; valaddr_reg:x3; val_offset:36453*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36453*0 + 3*631*FLEN/8, x4, x1, x2)

inst_12152:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900003ffffffff; valaddr_reg:x3; val_offset:36456*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36456*0 + 3*632*FLEN/8, x4, x1, x2)

inst_12153:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900007ffffffff; valaddr_reg:x3; val_offset:36459*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36459*0 + 3*633*FLEN/8, x4, x1, x2)

inst_12154:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390000fffffffff; valaddr_reg:x3; val_offset:36462*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36462*0 + 3*634*FLEN/8, x4, x1, x2)

inst_12155:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390001fffffffff; valaddr_reg:x3; val_offset:36465*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36465*0 + 3*635*FLEN/8, x4, x1, x2)

inst_12156:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390003fffffffff; valaddr_reg:x3; val_offset:36468*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36468*0 + 3*636*FLEN/8, x4, x1, x2)

inst_12157:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390007fffffffff; valaddr_reg:x3; val_offset:36471*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36471*0 + 3*637*FLEN/8, x4, x1, x2)

inst_12158:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39000ffffffffff; valaddr_reg:x3; val_offset:36474*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36474*0 + 3*638*FLEN/8, x4, x1, x2)

inst_12159:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39001ffffffffff; valaddr_reg:x3; val_offset:36477*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36477*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_12160:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39003ffffffffff; valaddr_reg:x3; val_offset:36480*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36480*0 + 3*640*FLEN/8, x4, x1, x2)

inst_12161:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39007ffffffffff; valaddr_reg:x3; val_offset:36483*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36483*0 + 3*641*FLEN/8, x4, x1, x2)

inst_12162:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3900fffffffffff; valaddr_reg:x3; val_offset:36486*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36486*0 + 3*642*FLEN/8, x4, x1, x2)

inst_12163:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3901fffffffffff; valaddr_reg:x3; val_offset:36489*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36489*0 + 3*643*FLEN/8, x4, x1, x2)

inst_12164:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3903fffffffffff; valaddr_reg:x3; val_offset:36492*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36492*0 + 3*644*FLEN/8, x4, x1, x2)

inst_12165:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x3907fffffffffff; valaddr_reg:x3; val_offset:36495*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36495*0 + 3*645*FLEN/8, x4, x1, x2)

inst_12166:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x390ffffffffffff; valaddr_reg:x3; val_offset:36498*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36498*0 + 3*646*FLEN/8, x4, x1, x2)

inst_12167:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x391ffffffffffff; valaddr_reg:x3; val_offset:36501*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36501*0 + 3*647*FLEN/8, x4, x1, x2)

inst_12168:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x393ffffffffffff; valaddr_reg:x3; val_offset:36504*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36504*0 + 3*648*FLEN/8, x4, x1, x2)

inst_12169:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x397ffffffffffff; valaddr_reg:x3; val_offset:36507*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36507*0 + 3*649*FLEN/8, x4, x1, x2)

inst_12170:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x398000000000000; valaddr_reg:x3; val_offset:36510*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36510*0 + 3*650*FLEN/8, x4, x1, x2)

inst_12171:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39c000000000000; valaddr_reg:x3; val_offset:36513*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36513*0 + 3*651*FLEN/8, x4, x1, x2)

inst_12172:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39e000000000000; valaddr_reg:x3; val_offset:36516*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36516*0 + 3*652*FLEN/8, x4, x1, x2)

inst_12173:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39f000000000000; valaddr_reg:x3; val_offset:36519*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36519*0 + 3*653*FLEN/8, x4, x1, x2)

inst_12174:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39f800000000000; valaddr_reg:x3; val_offset:36522*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36522*0 + 3*654*FLEN/8, x4, x1, x2)

inst_12175:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fc00000000000; valaddr_reg:x3; val_offset:36525*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36525*0 + 3*655*FLEN/8, x4, x1, x2)

inst_12176:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fe00000000000; valaddr_reg:x3; val_offset:36528*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36528*0 + 3*656*FLEN/8, x4, x1, x2)

inst_12177:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ff00000000000; valaddr_reg:x3; val_offset:36531*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36531*0 + 3*657*FLEN/8, x4, x1, x2)

inst_12178:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ff80000000000; valaddr_reg:x3; val_offset:36534*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36534*0 + 3*658*FLEN/8, x4, x1, x2)

inst_12179:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffc0000000000; valaddr_reg:x3; val_offset:36537*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36537*0 + 3*659*FLEN/8, x4, x1, x2)

inst_12180:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffe0000000000; valaddr_reg:x3; val_offset:36540*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36540*0 + 3*660*FLEN/8, x4, x1, x2)

inst_12181:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fff0000000000; valaddr_reg:x3; val_offset:36543*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36543*0 + 3*661*FLEN/8, x4, x1, x2)

inst_12182:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fff8000000000; valaddr_reg:x3; val_offset:36546*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36546*0 + 3*662*FLEN/8, x4, x1, x2)

inst_12183:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffc000000000; valaddr_reg:x3; val_offset:36549*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36549*0 + 3*663*FLEN/8, x4, x1, x2)

inst_12184:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffe000000000; valaddr_reg:x3; val_offset:36552*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36552*0 + 3*664*FLEN/8, x4, x1, x2)

inst_12185:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffff000000000; valaddr_reg:x3; val_offset:36555*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36555*0 + 3*665*FLEN/8, x4, x1, x2)

inst_12186:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffff800000000; valaddr_reg:x3; val_offset:36558*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36558*0 + 3*666*FLEN/8, x4, x1, x2)

inst_12187:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffc00000000; valaddr_reg:x3; val_offset:36561*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36561*0 + 3*667*FLEN/8, x4, x1, x2)

inst_12188:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffe00000000; valaddr_reg:x3; val_offset:36564*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36564*0 + 3*668*FLEN/8, x4, x1, x2)

inst_12189:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffff00000000; valaddr_reg:x3; val_offset:36567*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36567*0 + 3*669*FLEN/8, x4, x1, x2)

inst_12190:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffff80000000; valaddr_reg:x3; val_offset:36570*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36570*0 + 3*670*FLEN/8, x4, x1, x2)

inst_12191:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffc0000000; valaddr_reg:x3; val_offset:36573*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36573*0 + 3*671*FLEN/8, x4, x1, x2)

inst_12192:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffe0000000; valaddr_reg:x3; val_offset:36576*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36576*0 + 3*672*FLEN/8, x4, x1, x2)

inst_12193:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffff0000000; valaddr_reg:x3; val_offset:36579*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36579*0 + 3*673*FLEN/8, x4, x1, x2)

inst_12194:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffff8000000; valaddr_reg:x3; val_offset:36582*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36582*0 + 3*674*FLEN/8, x4, x1, x2)

inst_12195:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffc000000; valaddr_reg:x3; val_offset:36585*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36585*0 + 3*675*FLEN/8, x4, x1, x2)

inst_12196:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffe000000; valaddr_reg:x3; val_offset:36588*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36588*0 + 3*676*FLEN/8, x4, x1, x2)

inst_12197:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffff000000; valaddr_reg:x3; val_offset:36591*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36591*0 + 3*677*FLEN/8, x4, x1, x2)

inst_12198:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffff800000; valaddr_reg:x3; val_offset:36594*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36594*0 + 3*678*FLEN/8, x4, x1, x2)

inst_12199:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffc00000; valaddr_reg:x3; val_offset:36597*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36597*0 + 3*679*FLEN/8, x4, x1, x2)

inst_12200:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffe00000; valaddr_reg:x3; val_offset:36600*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36600*0 + 3*680*FLEN/8, x4, x1, x2)

inst_12201:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffff00000; valaddr_reg:x3; val_offset:36603*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36603*0 + 3*681*FLEN/8, x4, x1, x2)

inst_12202:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffff80000; valaddr_reg:x3; val_offset:36606*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36606*0 + 3*682*FLEN/8, x4, x1, x2)

inst_12203:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffc0000; valaddr_reg:x3; val_offset:36609*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36609*0 + 3*683*FLEN/8, x4, x1, x2)

inst_12204:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffe0000; valaddr_reg:x3; val_offset:36612*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36612*0 + 3*684*FLEN/8, x4, x1, x2)

inst_12205:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffff0000; valaddr_reg:x3; val_offset:36615*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36615*0 + 3*685*FLEN/8, x4, x1, x2)

inst_12206:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffff8000; valaddr_reg:x3; val_offset:36618*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36618*0 + 3*686*FLEN/8, x4, x1, x2)

inst_12207:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffc000; valaddr_reg:x3; val_offset:36621*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36621*0 + 3*687*FLEN/8, x4, x1, x2)

inst_12208:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffe000; valaddr_reg:x3; val_offset:36624*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36624*0 + 3*688*FLEN/8, x4, x1, x2)

inst_12209:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffff000; valaddr_reg:x3; val_offset:36627*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36627*0 + 3*689*FLEN/8, x4, x1, x2)

inst_12210:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffff800; valaddr_reg:x3; val_offset:36630*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36630*0 + 3*690*FLEN/8, x4, x1, x2)

inst_12211:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffc00; valaddr_reg:x3; val_offset:36633*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36633*0 + 3*691*FLEN/8, x4, x1, x2)

inst_12212:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffe00; valaddr_reg:x3; val_offset:36636*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36636*0 + 3*692*FLEN/8, x4, x1, x2)

inst_12213:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffff00; valaddr_reg:x3; val_offset:36639*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36639*0 + 3*693*FLEN/8, x4, x1, x2)

inst_12214:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffff80; valaddr_reg:x3; val_offset:36642*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36642*0 + 3*694*FLEN/8, x4, x1, x2)

inst_12215:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffffc0; valaddr_reg:x3; val_offset:36645*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36645*0 + 3*695*FLEN/8, x4, x1, x2)

inst_12216:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffffe0; valaddr_reg:x3; val_offset:36648*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36648*0 + 3*696*FLEN/8, x4, x1, x2)

inst_12217:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffff0; valaddr_reg:x3; val_offset:36651*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36651*0 + 3*697*FLEN/8, x4, x1, x2)

inst_12218:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffff8; valaddr_reg:x3; val_offset:36654*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36654*0 + 3*698*FLEN/8, x4, x1, x2)

inst_12219:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffffc; valaddr_reg:x3; val_offset:36657*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36657*0 + 3*699*FLEN/8, x4, x1, x2)

inst_12220:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39ffffffffffffe; valaddr_reg:x3; val_offset:36660*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36660*0 + 3*700*FLEN/8, x4, x1, x2)

inst_12221:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xaa4b656d796c7 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x039 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7aa4b656d796c7; op2val:0x0;
op3val:0x39fffffffffffff; valaddr_reg:x3; val_offset:36663*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36663*0 + 3*701*FLEN/8, x4, x1, x2)

inst_12222:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000000000; valaddr_reg:x3; val_offset:36666*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36666*0 + 3*702*FLEN/8, x4, x1, x2)

inst_12223:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000000001; valaddr_reg:x3; val_offset:36669*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36669*0 + 3*703*FLEN/8, x4, x1, x2)

inst_12224:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000000003; valaddr_reg:x3; val_offset:36672*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36672*0 + 3*704*FLEN/8, x4, x1, x2)

inst_12225:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000000007; valaddr_reg:x3; val_offset:36675*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36675*0 + 3*705*FLEN/8, x4, x1, x2)

inst_12226:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000000000f; valaddr_reg:x3; val_offset:36678*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36678*0 + 3*706*FLEN/8, x4, x1, x2)

inst_12227:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000000001f; valaddr_reg:x3; val_offset:36681*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36681*0 + 3*707*FLEN/8, x4, x1, x2)

inst_12228:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000000003f; valaddr_reg:x3; val_offset:36684*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36684*0 + 3*708*FLEN/8, x4, x1, x2)

inst_12229:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000000007f; valaddr_reg:x3; val_offset:36687*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36687*0 + 3*709*FLEN/8, x4, x1, x2)

inst_12230:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000000000ff; valaddr_reg:x3; val_offset:36690*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36690*0 + 3*710*FLEN/8, x4, x1, x2)

inst_12231:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000000001ff; valaddr_reg:x3; val_offset:36693*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36693*0 + 3*711*FLEN/8, x4, x1, x2)

inst_12232:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000000003ff; valaddr_reg:x3; val_offset:36696*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36696*0 + 3*712*FLEN/8, x4, x1, x2)

inst_12233:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000000007ff; valaddr_reg:x3; val_offset:36699*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36699*0 + 3*713*FLEN/8, x4, x1, x2)

inst_12234:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000000fff; valaddr_reg:x3; val_offset:36702*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36702*0 + 3*714*FLEN/8, x4, x1, x2)

inst_12235:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000001fff; valaddr_reg:x3; val_offset:36705*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36705*0 + 3*715*FLEN/8, x4, x1, x2)

inst_12236:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000003fff; valaddr_reg:x3; val_offset:36708*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36708*0 + 3*716*FLEN/8, x4, x1, x2)

inst_12237:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000007fff; valaddr_reg:x3; val_offset:36711*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36711*0 + 3*717*FLEN/8, x4, x1, x2)

inst_12238:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000000ffff; valaddr_reg:x3; val_offset:36714*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36714*0 + 3*718*FLEN/8, x4, x1, x2)

inst_12239:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000001ffff; valaddr_reg:x3; val_offset:36717*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36717*0 + 3*719*FLEN/8, x4, x1, x2)

inst_12240:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000003ffff; valaddr_reg:x3; val_offset:36720*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36720*0 + 3*720*FLEN/8, x4, x1, x2)

inst_12241:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000007ffff; valaddr_reg:x3; val_offset:36723*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36723*0 + 3*721*FLEN/8, x4, x1, x2)

inst_12242:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000000fffff; valaddr_reg:x3; val_offset:36726*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36726*0 + 3*722*FLEN/8, x4, x1, x2)

inst_12243:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000001fffff; valaddr_reg:x3; val_offset:36729*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36729*0 + 3*723*FLEN/8, x4, x1, x2)

inst_12244:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000003fffff; valaddr_reg:x3; val_offset:36732*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36732*0 + 3*724*FLEN/8, x4, x1, x2)

inst_12245:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000007fffff; valaddr_reg:x3; val_offset:36735*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36735*0 + 3*725*FLEN/8, x4, x1, x2)

inst_12246:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000000ffffff; valaddr_reg:x3; val_offset:36738*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36738*0 + 3*726*FLEN/8, x4, x1, x2)

inst_12247:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000001ffffff; valaddr_reg:x3; val_offset:36741*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36741*0 + 3*727*FLEN/8, x4, x1, x2)

inst_12248:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000003ffffff; valaddr_reg:x3; val_offset:36744*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36744*0 + 3*728*FLEN/8, x4, x1, x2)

inst_12249:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000007ffffff; valaddr_reg:x3; val_offset:36747*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36747*0 + 3*729*FLEN/8, x4, x1, x2)

inst_12250:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000000fffffff; valaddr_reg:x3; val_offset:36750*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36750*0 + 3*730*FLEN/8, x4, x1, x2)

inst_12251:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000001fffffff; valaddr_reg:x3; val_offset:36753*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36753*0 + 3*731*FLEN/8, x4, x1, x2)

inst_12252:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000003fffffff; valaddr_reg:x3; val_offset:36756*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36756*0 + 3*732*FLEN/8, x4, x1, x2)

inst_12253:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000007fffffff; valaddr_reg:x3; val_offset:36759*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36759*0 + 3*733*FLEN/8, x4, x1, x2)

inst_12254:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000000ffffffff; valaddr_reg:x3; val_offset:36762*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36762*0 + 3*734*FLEN/8, x4, x1, x2)

inst_12255:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000001ffffffff; valaddr_reg:x3; val_offset:36765*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36765*0 + 3*735*FLEN/8, x4, x1, x2)

inst_12256:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000003ffffffff; valaddr_reg:x3; val_offset:36768*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36768*0 + 3*736*FLEN/8, x4, x1, x2)

inst_12257:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000007ffffffff; valaddr_reg:x3; val_offset:36771*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36771*0 + 3*737*FLEN/8, x4, x1, x2)

inst_12258:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800000fffffffff; valaddr_reg:x3; val_offset:36774*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36774*0 + 3*738*FLEN/8, x4, x1, x2)

inst_12259:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800001fffffffff; valaddr_reg:x3; val_offset:36777*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36777*0 + 3*739*FLEN/8, x4, x1, x2)

inst_12260:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800003fffffffff; valaddr_reg:x3; val_offset:36780*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36780*0 + 3*740*FLEN/8, x4, x1, x2)

inst_12261:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800007fffffffff; valaddr_reg:x3; val_offset:36783*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36783*0 + 3*741*FLEN/8, x4, x1, x2)

inst_12262:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380000ffffffffff; valaddr_reg:x3; val_offset:36786*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36786*0 + 3*742*FLEN/8, x4, x1, x2)

inst_12263:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380001ffffffffff; valaddr_reg:x3; val_offset:36789*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36789*0 + 3*743*FLEN/8, x4, x1, x2)

inst_12264:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380003ffffffffff; valaddr_reg:x3; val_offset:36792*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36792*0 + 3*744*FLEN/8, x4, x1, x2)

inst_12265:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380007ffffffffff; valaddr_reg:x3; val_offset:36795*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36795*0 + 3*745*FLEN/8, x4, x1, x2)

inst_12266:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38000fffffffffff; valaddr_reg:x3; val_offset:36798*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36798*0 + 3*746*FLEN/8, x4, x1, x2)

inst_12267:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38001fffffffffff; valaddr_reg:x3; val_offset:36801*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36801*0 + 3*747*FLEN/8, x4, x1, x2)

inst_12268:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38003fffffffffff; valaddr_reg:x3; val_offset:36804*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36804*0 + 3*748*FLEN/8, x4, x1, x2)

inst_12269:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x38007fffffffffff; valaddr_reg:x3; val_offset:36807*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36807*0 + 3*749*FLEN/8, x4, x1, x2)

inst_12270:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3800ffffffffffff; valaddr_reg:x3; val_offset:36810*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36810*0 + 3*750*FLEN/8, x4, x1, x2)

inst_12271:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3801ffffffffffff; valaddr_reg:x3; val_offset:36813*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36813*0 + 3*751*FLEN/8, x4, x1, x2)

inst_12272:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3803ffffffffffff; valaddr_reg:x3; val_offset:36816*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36816*0 + 3*752*FLEN/8, x4, x1, x2)

inst_12273:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3807ffffffffffff; valaddr_reg:x3; val_offset:36819*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36819*0 + 3*753*FLEN/8, x4, x1, x2)

inst_12274:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x3808000000000000; valaddr_reg:x3; val_offset:36822*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36822*0 + 3*754*FLEN/8, x4, x1, x2)

inst_12275:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380c000000000000; valaddr_reg:x3; val_offset:36825*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36825*0 + 3*755*FLEN/8, x4, x1, x2)

inst_12276:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380e000000000000; valaddr_reg:x3; val_offset:36828*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36828*0 + 3*756*FLEN/8, x4, x1, x2)

inst_12277:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380f000000000000; valaddr_reg:x3; val_offset:36831*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36831*0 + 3*757*FLEN/8, x4, x1, x2)

inst_12278:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380f800000000000; valaddr_reg:x3; val_offset:36834*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36834*0 + 3*758*FLEN/8, x4, x1, x2)

inst_12279:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380fc00000000000; valaddr_reg:x3; val_offset:36837*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36837*0 + 3*759*FLEN/8, x4, x1, x2)

inst_12280:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380fe00000000000; valaddr_reg:x3; val_offset:36840*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36840*0 + 3*760*FLEN/8, x4, x1, x2)

inst_12281:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380ff00000000000; valaddr_reg:x3; val_offset:36843*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36843*0 + 3*761*FLEN/8, x4, x1, x2)

inst_12282:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380ff80000000000; valaddr_reg:x3; val_offset:36846*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36846*0 + 3*762*FLEN/8, x4, x1, x2)

inst_12283:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380ffc0000000000; valaddr_reg:x3; val_offset:36849*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36849*0 + 3*763*FLEN/8, x4, x1, x2)

inst_12284:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380ffe0000000000; valaddr_reg:x3; val_offset:36852*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36852*0 + 3*764*FLEN/8, x4, x1, x2)

inst_12285:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380fff0000000000; valaddr_reg:x3; val_offset:36855*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36855*0 + 3*765*FLEN/8, x4, x1, x2)

inst_12286:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380fff8000000000; valaddr_reg:x3; val_offset:36858*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36858*0 + 3*766*FLEN/8, x4, x1, x2)

inst_12287:
// fs1 == 0 and fe1 == 0x5f7 and fm1 == 0xad8df98b676b7 and fs2 == 0 and fe2 == 0x206 and fm2 == 0x31227a13230c7 and fs3 == 0 and fe3 == 0x380 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f7ad8df98b676b7; op2val:0x20631227a13230c7;
op3val:0x380fffc000000000; valaddr_reg:x3; val_offset:36861*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 36861*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4088705511698989056,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4088986986675699712,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089127724164055040,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089198092908232704,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089233277280321536,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089250869466365952,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089259665559388160,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089264063605899264,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089266262629154816,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089267362140782592,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089267911896596480,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268186774503424,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268324213456896,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268392932933632,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268427292672000,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268444472541184,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268453062475776,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268457357443072,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268459504926720,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268460578668544,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461115539456,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461383974912,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461518192640,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461585301504,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461618855936,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461635633152,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461644021760,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461648216064,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461650313216,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461651361792,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461651886080,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652148224,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652279296,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652344832,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652377600,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652393984,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652402176,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652406272,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652408320,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652409344,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652409856,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410112,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410240,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410304,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410336,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410352,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410360,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410364,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410366,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4089268461652410367,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6879484231546980735,64,FLEN)
NAN_BOXED(2334163275654298818,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484608,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484609,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484611,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484615,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484623,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484639,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484671,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484735,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172484863,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172485119,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172485631,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172486655,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172488703,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172492799,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172500991,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172517375,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172550143,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172615679,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692172746751,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692173008895,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692173533183,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692174581759,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692176678911,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692180873215,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692189261823,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692206039039,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692239593471,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692306702335,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692440920063,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201692709355519,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201693246226431,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201694319968255,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201696467451903,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201700762419199,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201709352353791,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201726532222975,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201760891961343,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201829611438079,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389201967050391551,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389202241928298495,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389202791684112383,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389203891195740159,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389206090218995711,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389210488265506815,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389219284358529023,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389236876544573439,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389272060916662271,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389342429660839935,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389483167149195263,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13389764642125905919,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13390327592079327231,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13391453491986169855,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13391453491986169856,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13392579391893012480,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393142341846433792,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393423816823144448,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393564554311499776,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393634923055677440,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393670107427766272,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393687699613810688,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393696495706832896,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393700893753344000,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393703092776599552,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393704192288227328,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393704742044041216,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705016921948160,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705154360901632,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705223080378368,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705257440116736,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705274619985920,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705283209920512,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705287504887808,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705289652371456,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705290726113280,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291262984192,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291531419648,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291665637376,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291732746240,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291766300672,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291783077888,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291791466496,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291795660800,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291797757952,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291798806528,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799330816,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799592960,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799724032,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799789568,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799822336,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799838720,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799846912,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799851008,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799853056,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799854080,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799854592,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799854848,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799854976,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855040,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855072,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855088,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855096,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855100,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855102,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13393705291799855103,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879648321071757607,64,FLEN)
NAN_BOXED(11525877053915499669,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556224,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556225,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556227,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556231,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556239,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556255,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556287,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556351,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556479,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556735,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029557247,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029558271,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029560319,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029564415,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029572607,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029588991,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029621759,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029687295,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029818367,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030080511,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629030604799,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629031653375,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629033750527,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629037944831,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629046333439,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629063110655,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629096665087,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629163773951,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629297991679,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629566427135,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947630103298047,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947631177039871,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947633324523519,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947637619490815,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947646209425407,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947663389294591,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947697749032959,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947766468509695,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947903907463167,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948178785370111,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317948728541183999,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317949828052811775,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317952027076067327,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317956425122578431,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317965221215600639,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317982813401645055,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318017997773733887,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318088366517911551,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318229104006266879,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9318510578982977535,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9319073528936398847,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241471,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9320199428843241472,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321325328750084096,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9321888278703505408,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322169753680216064,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322310491168571392,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322380859912749056,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322416044284837888,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322433636470882304,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322442432563904512,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322446830610415616,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322449029633671168,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450129145298944,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450678901112832,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322450953779019776,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451091217973248,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451159937449984,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451194297188352,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451211477057536,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451220066992128,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451224361959424,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451226509443072,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451227583184896,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228120055808,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228388491264,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228522708992,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228589817856,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228623372288,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228640149504,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228648538112,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228652732416,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228654829568,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228655878144,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656402432,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656664576,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656795648,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656861184,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656893952,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656910336,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656918528,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656922624,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656924672,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656925696,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926208,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926464,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926592,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926656,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926688,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926704,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926712,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926716,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926718,64,FLEN)
NAN_BOXED(6879673477244039919,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9322451228656926719,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370497,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370499,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370503,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370511,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370527,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370559,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5404319552844595,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(5790342378047780,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6305039478318694,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6433713753386422,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6605279453476727,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(6905519428634760,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7205759403792793,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7720456504063707,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8106479329266892,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(8363827879402349,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740928,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740960,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740976,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740984,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740988,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(9007199254740990,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265792,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265793,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265795,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265799,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265807,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265823,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265855,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623265919,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266047,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266303,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623266815,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623267839,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623269887,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623273983,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623282175,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623298559,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623331327,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623396863,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623527935,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180623790079,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180624314367,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180625362943,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180627460095,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180631654399,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180640043007,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180656820223,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180690374655,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180757483519,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187180891701247,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181160136703,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187181697007615,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187182770749439,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187184918233087,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187189213200383,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187197803134975,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187214983004159,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187249342742527,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187318062219263,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187455501172735,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234187730379079679,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234188280134893567,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234189379646521343,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234191578669776895,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234195976716287999,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234204772809310207,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234222364995354623,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234257549367443455,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234327918111621119,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234468655599976447,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(234750130576687103,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(235313080530108415,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951039,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(236438980436951040,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(237564880343793664,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238127830297214976,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238409305273925632,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238550042762280960,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238620411506458624,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238655595878547456,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238673188064591872,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238681984157614080,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238686382204125184,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238688581227380736,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238689680739008512,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690230494822400,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690505372729344,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690642811682816,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690711531159552,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690745890897920,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690763070767104,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690771660701696,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690775955668992,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690778103152640,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779176894464,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779713765376,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690779982200832,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780116418560,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780183527424,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780217081856,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780233859072,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780242247680,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780246441984,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780248539136,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780249587712,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250112000,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250374144,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250505216,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250570752,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250603520,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250619904,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250628096,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250632192,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250634240,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635264,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250635776,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636032,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636160,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636224,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636256,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636272,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636280,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636284,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636286,64,FLEN)
NAN_BOXED(6879799974509432775,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(238690780250636287,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891136,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891137,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891139,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891143,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891151,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891167,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891199,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891263,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891391,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780891647,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780892159,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780893183,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780895231,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780899327,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780907519,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780923903,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494780956671,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494781022207,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494781153279,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494781415423,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494781939711,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494782988287,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494785085439,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494789279743,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494797668351,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494814445567,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494847999999,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676494915108863,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676495049326591,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676495317762047,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676495854632959,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676496928374783,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676499075858431,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676503370825727,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676511960760319,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676529140629503,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676563500367871,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676632219844607,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357676769658798079,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357677044536705023,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357677594292518911,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357678693804146687,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357680892827402239,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357685290873913343,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357694086966935551,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357711679152979967,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357746863525068799,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357817232269246463,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13357957969757601791,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13358239444734312447,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13358802394687733759,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13359928294594576383,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13359928294594576384,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13361054194501419008,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13361617144454840320,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13361898619431550976,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362039356919906304,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362109725664083968,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362144910036172800,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362162502222217216,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362171298315239424,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362175696361750528,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362177895385006080,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362178994896633856,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362179544652447744,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362179819530354688,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362179956969308160,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180025688784896,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180060048523264,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180077228392448,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180085818327040,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180090113294336,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180092260777984,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180093334519808,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180093871390720,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094139826176,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094274043904,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094341152768,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094374707200,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094391484416,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094399873024,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094404067328,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094406164480,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094407213056,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094407737344,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094407999488,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408130560,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408196096,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408228864,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408245248,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408253440,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408257536,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408259584,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408260608,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261120,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261376,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261504,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261568,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261600,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261616,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261624,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261628,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261630,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13362180094408261631,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6879924564860128295,64,FLEN)
NAN_BOXED(11525666319045182697,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118272,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118273,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118275,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118279,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118287,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118303,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118335,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118399,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118527,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760118783,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760119295,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760120319,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760122367,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760126463,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760134655,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760151039,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760183807,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760249343,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760380415,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178760642559,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178761166847,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178762215423,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178764312575,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178768506879,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178776895487,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178793672703,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178827227135,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705178894335999,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179028553727,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179296989183,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705179833860095,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705180907601919,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705183055085567,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705187350052863,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705195939987455,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705213119856639,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705247479595007,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705316199071743,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705453638025215,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256705728515932159,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256706278271746047,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256707377783373823,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256709576806629375,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256713974853140479,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256722770946162687,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256740363132207103,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256775547504295935,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256845916248473599,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(256986653736828927,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257268128713539583,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(257831078666960895,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803519,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(258956978573803520,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260082878480646144,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260645828434067456,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(260927303410778112,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261068040899133440,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261138409643311104,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261173594015399936,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261191186201444352,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261199982294466560,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261204380340977664,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261206579364233216,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261207678875860992,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208228631674880,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208503509581824,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208640948535296,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208709668012032,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208744027750400,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208761207619584,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208769797554176,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208774092521472,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208776240005120,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777313746944,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208777850617856,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778119053312,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778253271040,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778320379904,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778353934336,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778370711552,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778379100160,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778383294464,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778385391616,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386440192,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778386964480,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387226624,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387357696,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387423232,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387456000,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387472384,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387480576,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387484672,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387486720,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387487744,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488256,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488512,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488640,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488704,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488736,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488752,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488760,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488764,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488766,64,FLEN)
NAN_BOXED(6879992483809826503,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(261208778387488767,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964416,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964417,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964419,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964423,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964431,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964447,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964479,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964543,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964671,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123964927,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123965439,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123966463,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123968511,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123972607,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123980799,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266123997183,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266124029951,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266124095487,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266124226559,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266124488703,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266125012991,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266126061567,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266128158719,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266132353023,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266140741631,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266157518847,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266191073279,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266258182143,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266392399871,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225266660835327,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225267197706239,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225268271448063,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225270418931711,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225274713899007,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225283303833599,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225300483702783,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225334843441151,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225403562917887,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225541001871359,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035225815879778303,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035226365635592191,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035227465147219967,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035229664170475519,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035234062216986623,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035242858310008831,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035260450496053247,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035295634868142079,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035366003612319743,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035506741100675071,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4035788216077385727,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4036351166030807039,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4037477065937649663,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4037477065937649664,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4038602965844492288,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039165915797913600,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039447390774624256,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039588128262979584,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039658497007157248,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039693681379246080,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039711273565290496,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039720069658312704,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039724467704823808,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039726666728079360,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039727766239707136,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039728315995521024,64,FLEN)
NAN_BOXED(6880049835613255351,64,FLEN)
NAN_BOXED(2333728993325494471,64,FLEN)
NAN_BOXED(4039728590873427968,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
