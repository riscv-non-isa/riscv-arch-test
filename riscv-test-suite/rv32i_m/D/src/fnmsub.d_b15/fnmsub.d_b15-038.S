
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fnmsub.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fnmsub.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fnmsub.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fnmsub.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_28416:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:85248*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85248*0 + 3*0*FLEN/8, x4, x1, x2)

inst_28417:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:85251*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85251*0 + 3*1*FLEN/8, x4, x1, x2)

inst_28418:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:85254*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85254*0 + 3*2*FLEN/8, x4, x1, x2)

inst_28419:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:85257*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85257*0 + 3*3*FLEN/8, x4, x1, x2)

inst_28420:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:85260*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85260*0 + 3*4*FLEN/8, x4, x1, x2)

inst_28421:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:85263*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85263*0 + 3*5*FLEN/8, x4, x1, x2)

inst_28422:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:85266*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85266*0 + 3*6*FLEN/8, x4, x1, x2)

inst_28423:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:85269*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85269*0 + 3*7*FLEN/8, x4, x1, x2)

inst_28424:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:85272*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85272*0 + 3*8*FLEN/8, x4, x1, x2)

inst_28425:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:85275*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85275*0 + 3*9*FLEN/8, x4, x1, x2)

inst_28426:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:85278*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85278*0 + 3*10*FLEN/8, x4, x1, x2)

inst_28427:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13d7dc9e8d903 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xdb2b21c59c0de and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913d7dc9e8d903; op2val:0x204db2b21c59c0de;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:85281*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85281*0 + 3*11*FLEN/8, x4, x1, x2)

inst_28428:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:85284*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85284*0 + 3*12*FLEN/8, x4, x1, x2)

inst_28429:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:85287*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85287*0 + 3*13*FLEN/8, x4, x1, x2)

inst_28430:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:85290*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85290*0 + 3*14*FLEN/8, x4, x1, x2)

inst_28431:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:85293*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85293*0 + 3*15*FLEN/8, x4, x1, x2)

inst_28432:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:85296*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85296*0 + 3*16*FLEN/8, x4, x1, x2)

inst_28433:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:85299*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85299*0 + 3*17*FLEN/8, x4, x1, x2)

inst_28434:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:85302*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85302*0 + 3*18*FLEN/8, x4, x1, x2)

inst_28435:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:85305*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85305*0 + 3*19*FLEN/8, x4, x1, x2)

inst_28436:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:85308*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85308*0 + 3*20*FLEN/8, x4, x1, x2)

inst_28437:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:85311*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85311*0 + 3*21*FLEN/8, x4, x1, x2)

inst_28438:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:85314*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85314*0 + 3*22*FLEN/8, x4, x1, x2)

inst_28439:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:85317*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85317*0 + 3*23*FLEN/8, x4, x1, x2)

inst_28440:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:85320*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85320*0 + 3*24*FLEN/8, x4, x1, x2)

inst_28441:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:85323*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85323*0 + 3*25*FLEN/8, x4, x1, x2)

inst_28442:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:85326*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85326*0 + 3*26*FLEN/8, x4, x1, x2)

inst_28443:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:85329*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85329*0 + 3*27*FLEN/8, x4, x1, x2)

inst_28444:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:85332*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85332*0 + 3*28*FLEN/8, x4, x1, x2)

inst_28445:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:85335*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85335*0 + 3*29*FLEN/8, x4, x1, x2)

inst_28446:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:85338*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85338*0 + 3*30*FLEN/8, x4, x1, x2)

inst_28447:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:85341*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85341*0 + 3*31*FLEN/8, x4, x1, x2)

inst_28448:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:85344*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85344*0 + 3*32*FLEN/8, x4, x1, x2)

inst_28449:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:85347*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85347*0 + 3*33*FLEN/8, x4, x1, x2)

inst_28450:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000000000; valaddr_reg:x3; val_offset:85350*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85350*0 + 3*34*FLEN/8, x4, x1, x2)

inst_28451:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000000001; valaddr_reg:x3; val_offset:85353*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85353*0 + 3*35*FLEN/8, x4, x1, x2)

inst_28452:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000000003; valaddr_reg:x3; val_offset:85356*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85356*0 + 3*36*FLEN/8, x4, x1, x2)

inst_28453:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000000007; valaddr_reg:x3; val_offset:85359*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85359*0 + 3*37*FLEN/8, x4, x1, x2)

inst_28454:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000000000f; valaddr_reg:x3; val_offset:85362*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85362*0 + 3*38*FLEN/8, x4, x1, x2)

inst_28455:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000000001f; valaddr_reg:x3; val_offset:85365*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85365*0 + 3*39*FLEN/8, x4, x1, x2)

inst_28456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000000003f; valaddr_reg:x3; val_offset:85368*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85368*0 + 3*40*FLEN/8, x4, x1, x2)

inst_28457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000000007f; valaddr_reg:x3; val_offset:85371*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85371*0 + 3*41*FLEN/8, x4, x1, x2)

inst_28458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000000000ff; valaddr_reg:x3; val_offset:85374*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85374*0 + 3*42*FLEN/8, x4, x1, x2)

inst_28459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000000001ff; valaddr_reg:x3; val_offset:85377*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85377*0 + 3*43*FLEN/8, x4, x1, x2)

inst_28460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000000003ff; valaddr_reg:x3; val_offset:85380*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85380*0 + 3*44*FLEN/8, x4, x1, x2)

inst_28461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000000007ff; valaddr_reg:x3; val_offset:85383*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85383*0 + 3*45*FLEN/8, x4, x1, x2)

inst_28462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000000fff; valaddr_reg:x3; val_offset:85386*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85386*0 + 3*46*FLEN/8, x4, x1, x2)

inst_28463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000001fff; valaddr_reg:x3; val_offset:85389*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85389*0 + 3*47*FLEN/8, x4, x1, x2)

inst_28464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000003fff; valaddr_reg:x3; val_offset:85392*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85392*0 + 3*48*FLEN/8, x4, x1, x2)

inst_28465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000007fff; valaddr_reg:x3; val_offset:85395*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85395*0 + 3*49*FLEN/8, x4, x1, x2)

inst_28466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000000ffff; valaddr_reg:x3; val_offset:85398*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85398*0 + 3*50*FLEN/8, x4, x1, x2)

inst_28467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000001ffff; valaddr_reg:x3; val_offset:85401*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85401*0 + 3*51*FLEN/8, x4, x1, x2)

inst_28468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000003ffff; valaddr_reg:x3; val_offset:85404*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85404*0 + 3*52*FLEN/8, x4, x1, x2)

inst_28469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000007ffff; valaddr_reg:x3; val_offset:85407*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85407*0 + 3*53*FLEN/8, x4, x1, x2)

inst_28470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000000fffff; valaddr_reg:x3; val_offset:85410*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85410*0 + 3*54*FLEN/8, x4, x1, x2)

inst_28471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000001fffff; valaddr_reg:x3; val_offset:85413*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85413*0 + 3*55*FLEN/8, x4, x1, x2)

inst_28472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000003fffff; valaddr_reg:x3; val_offset:85416*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85416*0 + 3*56*FLEN/8, x4, x1, x2)

inst_28473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000007fffff; valaddr_reg:x3; val_offset:85419*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85419*0 + 3*57*FLEN/8, x4, x1, x2)

inst_28474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000000ffffff; valaddr_reg:x3; val_offset:85422*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85422*0 + 3*58*FLEN/8, x4, x1, x2)

inst_28475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000001ffffff; valaddr_reg:x3; val_offset:85425*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85425*0 + 3*59*FLEN/8, x4, x1, x2)

inst_28476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000003ffffff; valaddr_reg:x3; val_offset:85428*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85428*0 + 3*60*FLEN/8, x4, x1, x2)

inst_28477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000007ffffff; valaddr_reg:x3; val_offset:85431*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85431*0 + 3*61*FLEN/8, x4, x1, x2)

inst_28478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000000fffffff; valaddr_reg:x3; val_offset:85434*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85434*0 + 3*62*FLEN/8, x4, x1, x2)

inst_28479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000001fffffff; valaddr_reg:x3; val_offset:85437*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85437*0 + 3*63*FLEN/8, x4, x1, x2)

inst_28480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000003fffffff; valaddr_reg:x3; val_offset:85440*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85440*0 + 3*64*FLEN/8, x4, x1, x2)

inst_28481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000007fffffff; valaddr_reg:x3; val_offset:85443*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85443*0 + 3*65*FLEN/8, x4, x1, x2)

inst_28482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800000ffffffff; valaddr_reg:x3; val_offset:85446*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85446*0 + 3*66*FLEN/8, x4, x1, x2)

inst_28483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800001ffffffff; valaddr_reg:x3; val_offset:85449*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85449*0 + 3*67*FLEN/8, x4, x1, x2)

inst_28484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800003ffffffff; valaddr_reg:x3; val_offset:85452*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85452*0 + 3*68*FLEN/8, x4, x1, x2)

inst_28485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800007ffffffff; valaddr_reg:x3; val_offset:85455*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85455*0 + 3*69*FLEN/8, x4, x1, x2)

inst_28486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180000fffffffff; valaddr_reg:x3; val_offset:85458*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85458*0 + 3*70*FLEN/8, x4, x1, x2)

inst_28487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180001fffffffff; valaddr_reg:x3; val_offset:85461*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85461*0 + 3*71*FLEN/8, x4, x1, x2)

inst_28488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180003fffffffff; valaddr_reg:x3; val_offset:85464*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85464*0 + 3*72*FLEN/8, x4, x1, x2)

inst_28489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180007fffffffff; valaddr_reg:x3; val_offset:85467*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85467*0 + 3*73*FLEN/8, x4, x1, x2)

inst_28490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18000ffffffffff; valaddr_reg:x3; val_offset:85470*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85470*0 + 3*74*FLEN/8, x4, x1, x2)

inst_28491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18001ffffffffff; valaddr_reg:x3; val_offset:85473*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85473*0 + 3*75*FLEN/8, x4, x1, x2)

inst_28492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18003ffffffffff; valaddr_reg:x3; val_offset:85476*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85476*0 + 3*76*FLEN/8, x4, x1, x2)

inst_28493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18007ffffffffff; valaddr_reg:x3; val_offset:85479*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85479*0 + 3*77*FLEN/8, x4, x1, x2)

inst_28494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1800fffffffffff; valaddr_reg:x3; val_offset:85482*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85482*0 + 3*78*FLEN/8, x4, x1, x2)

inst_28495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1801fffffffffff; valaddr_reg:x3; val_offset:85485*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85485*0 + 3*79*FLEN/8, x4, x1, x2)

inst_28496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1803fffffffffff; valaddr_reg:x3; val_offset:85488*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85488*0 + 3*80*FLEN/8, x4, x1, x2)

inst_28497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x1807fffffffffff; valaddr_reg:x3; val_offset:85491*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85491*0 + 3*81*FLEN/8, x4, x1, x2)

inst_28498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x180ffffffffffff; valaddr_reg:x3; val_offset:85494*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85494*0 + 3*82*FLEN/8, x4, x1, x2)

inst_28499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x181ffffffffffff; valaddr_reg:x3; val_offset:85497*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85497*0 + 3*83*FLEN/8, x4, x1, x2)

inst_28500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x183ffffffffffff; valaddr_reg:x3; val_offset:85500*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85500*0 + 3*84*FLEN/8, x4, x1, x2)

inst_28501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x187ffffffffffff; valaddr_reg:x3; val_offset:85503*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85503*0 + 3*85*FLEN/8, x4, x1, x2)

inst_28502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x188000000000000; valaddr_reg:x3; val_offset:85506*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85506*0 + 3*86*FLEN/8, x4, x1, x2)

inst_28503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18c000000000000; valaddr_reg:x3; val_offset:85509*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85509*0 + 3*87*FLEN/8, x4, x1, x2)

inst_28504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18e000000000000; valaddr_reg:x3; val_offset:85512*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85512*0 + 3*88*FLEN/8, x4, x1, x2)

inst_28505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18f000000000000; valaddr_reg:x3; val_offset:85515*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85515*0 + 3*89*FLEN/8, x4, x1, x2)

inst_28506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18f800000000000; valaddr_reg:x3; val_offset:85518*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85518*0 + 3*90*FLEN/8, x4, x1, x2)

inst_28507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fc00000000000; valaddr_reg:x3; val_offset:85521*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85521*0 + 3*91*FLEN/8, x4, x1, x2)

inst_28508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fe00000000000; valaddr_reg:x3; val_offset:85524*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85524*0 + 3*92*FLEN/8, x4, x1, x2)

inst_28509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ff00000000000; valaddr_reg:x3; val_offset:85527*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85527*0 + 3*93*FLEN/8, x4, x1, x2)

inst_28510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ff80000000000; valaddr_reg:x3; val_offset:85530*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85530*0 + 3*94*FLEN/8, x4, x1, x2)

inst_28511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffc0000000000; valaddr_reg:x3; val_offset:85533*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85533*0 + 3*95*FLEN/8, x4, x1, x2)

inst_28512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffe0000000000; valaddr_reg:x3; val_offset:85536*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85536*0 + 3*96*FLEN/8, x4, x1, x2)

inst_28513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fff0000000000; valaddr_reg:x3; val_offset:85539*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85539*0 + 3*97*FLEN/8, x4, x1, x2)

inst_28514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fff8000000000; valaddr_reg:x3; val_offset:85542*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85542*0 + 3*98*FLEN/8, x4, x1, x2)

inst_28515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffc000000000; valaddr_reg:x3; val_offset:85545*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85545*0 + 3*99*FLEN/8, x4, x1, x2)

inst_28516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffe000000000; valaddr_reg:x3; val_offset:85548*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85548*0 + 3*100*FLEN/8, x4, x1, x2)

inst_28517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffff000000000; valaddr_reg:x3; val_offset:85551*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85551*0 + 3*101*FLEN/8, x4, x1, x2)

inst_28518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffff800000000; valaddr_reg:x3; val_offset:85554*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85554*0 + 3*102*FLEN/8, x4, x1, x2)

inst_28519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffc00000000; valaddr_reg:x3; val_offset:85557*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85557*0 + 3*103*FLEN/8, x4, x1, x2)

inst_28520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffe00000000; valaddr_reg:x3; val_offset:85560*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85560*0 + 3*104*FLEN/8, x4, x1, x2)

inst_28521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffff00000000; valaddr_reg:x3; val_offset:85563*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85563*0 + 3*105*FLEN/8, x4, x1, x2)

inst_28522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffff80000000; valaddr_reg:x3; val_offset:85566*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85566*0 + 3*106*FLEN/8, x4, x1, x2)

inst_28523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffc0000000; valaddr_reg:x3; val_offset:85569*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85569*0 + 3*107*FLEN/8, x4, x1, x2)

inst_28524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffe0000000; valaddr_reg:x3; val_offset:85572*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85572*0 + 3*108*FLEN/8, x4, x1, x2)

inst_28525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffff0000000; valaddr_reg:x3; val_offset:85575*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85575*0 + 3*109*FLEN/8, x4, x1, x2)

inst_28526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffff8000000; valaddr_reg:x3; val_offset:85578*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85578*0 + 3*110*FLEN/8, x4, x1, x2)

inst_28527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffc000000; valaddr_reg:x3; val_offset:85581*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85581*0 + 3*111*FLEN/8, x4, x1, x2)

inst_28528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffe000000; valaddr_reg:x3; val_offset:85584*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85584*0 + 3*112*FLEN/8, x4, x1, x2)

inst_28529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffff000000; valaddr_reg:x3; val_offset:85587*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85587*0 + 3*113*FLEN/8, x4, x1, x2)

inst_28530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffff800000; valaddr_reg:x3; val_offset:85590*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85590*0 + 3*114*FLEN/8, x4, x1, x2)

inst_28531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffc00000; valaddr_reg:x3; val_offset:85593*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85593*0 + 3*115*FLEN/8, x4, x1, x2)

inst_28532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffe00000; valaddr_reg:x3; val_offset:85596*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85596*0 + 3*116*FLEN/8, x4, x1, x2)

inst_28533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffff00000; valaddr_reg:x3; val_offset:85599*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85599*0 + 3*117*FLEN/8, x4, x1, x2)

inst_28534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffff80000; valaddr_reg:x3; val_offset:85602*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85602*0 + 3*118*FLEN/8, x4, x1, x2)

inst_28535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffc0000; valaddr_reg:x3; val_offset:85605*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85605*0 + 3*119*FLEN/8, x4, x1, x2)

inst_28536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffe0000; valaddr_reg:x3; val_offset:85608*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85608*0 + 3*120*FLEN/8, x4, x1, x2)

inst_28537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffff0000; valaddr_reg:x3; val_offset:85611*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85611*0 + 3*121*FLEN/8, x4, x1, x2)

inst_28538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffff8000; valaddr_reg:x3; val_offset:85614*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85614*0 + 3*122*FLEN/8, x4, x1, x2)

inst_28539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffc000; valaddr_reg:x3; val_offset:85617*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85617*0 + 3*123*FLEN/8, x4, x1, x2)

inst_28540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffe000; valaddr_reg:x3; val_offset:85620*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85620*0 + 3*124*FLEN/8, x4, x1, x2)

inst_28541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffff000; valaddr_reg:x3; val_offset:85623*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85623*0 + 3*125*FLEN/8, x4, x1, x2)

inst_28542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffff800; valaddr_reg:x3; val_offset:85626*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85626*0 + 3*126*FLEN/8, x4, x1, x2)

inst_28543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffc00; valaddr_reg:x3; val_offset:85629*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85629*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_28544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffe00; valaddr_reg:x3; val_offset:85632*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85632*0 + 3*128*FLEN/8, x4, x1, x2)

inst_28545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffff00; valaddr_reg:x3; val_offset:85635*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85635*0 + 3*129*FLEN/8, x4, x1, x2)

inst_28546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffff80; valaddr_reg:x3; val_offset:85638*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85638*0 + 3*130*FLEN/8, x4, x1, x2)

inst_28547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffffc0; valaddr_reg:x3; val_offset:85641*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85641*0 + 3*131*FLEN/8, x4, x1, x2)

inst_28548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffffe0; valaddr_reg:x3; val_offset:85644*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85644*0 + 3*132*FLEN/8, x4, x1, x2)

inst_28549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffff0; valaddr_reg:x3; val_offset:85647*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85647*0 + 3*133*FLEN/8, x4, x1, x2)

inst_28550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffff8; valaddr_reg:x3; val_offset:85650*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85650*0 + 3*134*FLEN/8, x4, x1, x2)

inst_28551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffffc; valaddr_reg:x3; val_offset:85653*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85653*0 + 3*135*FLEN/8, x4, x1, x2)

inst_28552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18ffffffffffffe; valaddr_reg:x3; val_offset:85656*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85656*0 + 3*136*FLEN/8, x4, x1, x2)

inst_28553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x13e5e53c830ab and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x018 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f913e5e53c830ab; op2val:0x0;
op3val:0x18fffffffffffff; valaddr_reg:x3; val_offset:85659*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85659*0 + 3*137*FLEN/8, x4, x1, x2)

inst_28554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:85662*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85662*0 + 3*138*FLEN/8, x4, x1, x2)

inst_28555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:85665*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85665*0 + 3*139*FLEN/8, x4, x1, x2)

inst_28556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:85668*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85668*0 + 3*140*FLEN/8, x4, x1, x2)

inst_28557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:85671*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85671*0 + 3*141*FLEN/8, x4, x1, x2)

inst_28558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:85674*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85674*0 + 3*142*FLEN/8, x4, x1, x2)

inst_28559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:85677*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85677*0 + 3*143*FLEN/8, x4, x1, x2)

inst_28560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:85680*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85680*0 + 3*144*FLEN/8, x4, x1, x2)

inst_28561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:85683*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85683*0 + 3*145*FLEN/8, x4, x1, x2)

inst_28562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:85686*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85686*0 + 3*146*FLEN/8, x4, x1, x2)

inst_28563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:85689*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85689*0 + 3*147*FLEN/8, x4, x1, x2)

inst_28564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:85692*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85692*0 + 3*148*FLEN/8, x4, x1, x2)

inst_28565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:85695*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85695*0 + 3*149*FLEN/8, x4, x1, x2)

inst_28566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:85698*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85698*0 + 3*150*FLEN/8, x4, x1, x2)

inst_28567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:85701*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85701*0 + 3*151*FLEN/8, x4, x1, x2)

inst_28568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:85704*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85704*0 + 3*152*FLEN/8, x4, x1, x2)

inst_28569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:85707*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85707*0 + 3*153*FLEN/8, x4, x1, x2)

inst_28570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:85710*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85710*0 + 3*154*FLEN/8, x4, x1, x2)

inst_28571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:85713*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85713*0 + 3*155*FLEN/8, x4, x1, x2)

inst_28572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:85716*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85716*0 + 3*156*FLEN/8, x4, x1, x2)

inst_28573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:85719*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85719*0 + 3*157*FLEN/8, x4, x1, x2)

inst_28574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:85722*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85722*0 + 3*158*FLEN/8, x4, x1, x2)

inst_28575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:85725*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85725*0 + 3*159*FLEN/8, x4, x1, x2)

inst_28576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000000000; valaddr_reg:x3; val_offset:85728*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85728*0 + 3*160*FLEN/8, x4, x1, x2)

inst_28577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000000001; valaddr_reg:x3; val_offset:85731*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85731*0 + 3*161*FLEN/8, x4, x1, x2)

inst_28578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000000003; valaddr_reg:x3; val_offset:85734*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85734*0 + 3*162*FLEN/8, x4, x1, x2)

inst_28579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000000007; valaddr_reg:x3; val_offset:85737*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85737*0 + 3*163*FLEN/8, x4, x1, x2)

inst_28580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000000000f; valaddr_reg:x3; val_offset:85740*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85740*0 + 3*164*FLEN/8, x4, x1, x2)

inst_28581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000000001f; valaddr_reg:x3; val_offset:85743*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85743*0 + 3*165*FLEN/8, x4, x1, x2)

inst_28582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000000003f; valaddr_reg:x3; val_offset:85746*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85746*0 + 3*166*FLEN/8, x4, x1, x2)

inst_28583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000000007f; valaddr_reg:x3; val_offset:85749*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85749*0 + 3*167*FLEN/8, x4, x1, x2)

inst_28584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000000000ff; valaddr_reg:x3; val_offset:85752*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85752*0 + 3*168*FLEN/8, x4, x1, x2)

inst_28585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000000001ff; valaddr_reg:x3; val_offset:85755*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85755*0 + 3*169*FLEN/8, x4, x1, x2)

inst_28586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000000003ff; valaddr_reg:x3; val_offset:85758*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85758*0 + 3*170*FLEN/8, x4, x1, x2)

inst_28587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000000007ff; valaddr_reg:x3; val_offset:85761*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85761*0 + 3*171*FLEN/8, x4, x1, x2)

inst_28588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000000fff; valaddr_reg:x3; val_offset:85764*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85764*0 + 3*172*FLEN/8, x4, x1, x2)

inst_28589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000001fff; valaddr_reg:x3; val_offset:85767*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85767*0 + 3*173*FLEN/8, x4, x1, x2)

inst_28590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000003fff; valaddr_reg:x3; val_offset:85770*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85770*0 + 3*174*FLEN/8, x4, x1, x2)

inst_28591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000007fff; valaddr_reg:x3; val_offset:85773*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85773*0 + 3*175*FLEN/8, x4, x1, x2)

inst_28592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000000ffff; valaddr_reg:x3; val_offset:85776*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85776*0 + 3*176*FLEN/8, x4, x1, x2)

inst_28593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000001ffff; valaddr_reg:x3; val_offset:85779*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85779*0 + 3*177*FLEN/8, x4, x1, x2)

inst_28594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000003ffff; valaddr_reg:x3; val_offset:85782*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85782*0 + 3*178*FLEN/8, x4, x1, x2)

inst_28595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000007ffff; valaddr_reg:x3; val_offset:85785*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85785*0 + 3*179*FLEN/8, x4, x1, x2)

inst_28596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000000fffff; valaddr_reg:x3; val_offset:85788*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85788*0 + 3*180*FLEN/8, x4, x1, x2)

inst_28597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000001fffff; valaddr_reg:x3; val_offset:85791*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85791*0 + 3*181*FLEN/8, x4, x1, x2)

inst_28598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000003fffff; valaddr_reg:x3; val_offset:85794*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85794*0 + 3*182*FLEN/8, x4, x1, x2)

inst_28599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000007fffff; valaddr_reg:x3; val_offset:85797*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85797*0 + 3*183*FLEN/8, x4, x1, x2)

inst_28600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000000ffffff; valaddr_reg:x3; val_offset:85800*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85800*0 + 3*184*FLEN/8, x4, x1, x2)

inst_28601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000001ffffff; valaddr_reg:x3; val_offset:85803*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85803*0 + 3*185*FLEN/8, x4, x1, x2)

inst_28602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000003ffffff; valaddr_reg:x3; val_offset:85806*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85806*0 + 3*186*FLEN/8, x4, x1, x2)

inst_28603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000007ffffff; valaddr_reg:x3; val_offset:85809*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85809*0 + 3*187*FLEN/8, x4, x1, x2)

inst_28604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000000fffffff; valaddr_reg:x3; val_offset:85812*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85812*0 + 3*188*FLEN/8, x4, x1, x2)

inst_28605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000001fffffff; valaddr_reg:x3; val_offset:85815*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85815*0 + 3*189*FLEN/8, x4, x1, x2)

inst_28606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000003fffffff; valaddr_reg:x3; val_offset:85818*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85818*0 + 3*190*FLEN/8, x4, x1, x2)

inst_28607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000007fffffff; valaddr_reg:x3; val_offset:85821*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85821*0 + 3*191*FLEN/8, x4, x1, x2)

inst_28608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400000ffffffff; valaddr_reg:x3; val_offset:85824*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85824*0 + 3*192*FLEN/8, x4, x1, x2)

inst_28609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400001ffffffff; valaddr_reg:x3; val_offset:85827*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85827*0 + 3*193*FLEN/8, x4, x1, x2)

inst_28610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400003ffffffff; valaddr_reg:x3; val_offset:85830*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85830*0 + 3*194*FLEN/8, x4, x1, x2)

inst_28611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400007ffffffff; valaddr_reg:x3; val_offset:85833*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85833*0 + 3*195*FLEN/8, x4, x1, x2)

inst_28612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140000fffffffff; valaddr_reg:x3; val_offset:85836*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85836*0 + 3*196*FLEN/8, x4, x1, x2)

inst_28613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140001fffffffff; valaddr_reg:x3; val_offset:85839*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85839*0 + 3*197*FLEN/8, x4, x1, x2)

inst_28614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140003fffffffff; valaddr_reg:x3; val_offset:85842*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85842*0 + 3*198*FLEN/8, x4, x1, x2)

inst_28615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140007fffffffff; valaddr_reg:x3; val_offset:85845*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85845*0 + 3*199*FLEN/8, x4, x1, x2)

inst_28616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814000ffffffffff; valaddr_reg:x3; val_offset:85848*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85848*0 + 3*200*FLEN/8, x4, x1, x2)

inst_28617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814001ffffffffff; valaddr_reg:x3; val_offset:85851*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85851*0 + 3*201*FLEN/8, x4, x1, x2)

inst_28618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814003ffffffffff; valaddr_reg:x3; val_offset:85854*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85854*0 + 3*202*FLEN/8, x4, x1, x2)

inst_28619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814007ffffffffff; valaddr_reg:x3; val_offset:85857*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85857*0 + 3*203*FLEN/8, x4, x1, x2)

inst_28620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81400fffffffffff; valaddr_reg:x3; val_offset:85860*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85860*0 + 3*204*FLEN/8, x4, x1, x2)

inst_28621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81401fffffffffff; valaddr_reg:x3; val_offset:85863*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85863*0 + 3*205*FLEN/8, x4, x1, x2)

inst_28622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81403fffffffffff; valaddr_reg:x3; val_offset:85866*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85866*0 + 3*206*FLEN/8, x4, x1, x2)

inst_28623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x81407fffffffffff; valaddr_reg:x3; val_offset:85869*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85869*0 + 3*207*FLEN/8, x4, x1, x2)

inst_28624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8140ffffffffffff; valaddr_reg:x3; val_offset:85872*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85872*0 + 3*208*FLEN/8, x4, x1, x2)

inst_28625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8141ffffffffffff; valaddr_reg:x3; val_offset:85875*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85875*0 + 3*209*FLEN/8, x4, x1, x2)

inst_28626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8143ffffffffffff; valaddr_reg:x3; val_offset:85878*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85878*0 + 3*210*FLEN/8, x4, x1, x2)

inst_28627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8147ffffffffffff; valaddr_reg:x3; val_offset:85881*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85881*0 + 3*211*FLEN/8, x4, x1, x2)

inst_28628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x8148000000000000; valaddr_reg:x3; val_offset:85884*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85884*0 + 3*212*FLEN/8, x4, x1, x2)

inst_28629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814c000000000000; valaddr_reg:x3; val_offset:85887*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85887*0 + 3*213*FLEN/8, x4, x1, x2)

inst_28630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814e000000000000; valaddr_reg:x3; val_offset:85890*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85890*0 + 3*214*FLEN/8, x4, x1, x2)

inst_28631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814f000000000000; valaddr_reg:x3; val_offset:85893*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85893*0 + 3*215*FLEN/8, x4, x1, x2)

inst_28632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814f800000000000; valaddr_reg:x3; val_offset:85896*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85896*0 + 3*216*FLEN/8, x4, x1, x2)

inst_28633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fc00000000000; valaddr_reg:x3; val_offset:85899*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85899*0 + 3*217*FLEN/8, x4, x1, x2)

inst_28634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fe00000000000; valaddr_reg:x3; val_offset:85902*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85902*0 + 3*218*FLEN/8, x4, x1, x2)

inst_28635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ff00000000000; valaddr_reg:x3; val_offset:85905*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85905*0 + 3*219*FLEN/8, x4, x1, x2)

inst_28636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ff80000000000; valaddr_reg:x3; val_offset:85908*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85908*0 + 3*220*FLEN/8, x4, x1, x2)

inst_28637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffc0000000000; valaddr_reg:x3; val_offset:85911*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85911*0 + 3*221*FLEN/8, x4, x1, x2)

inst_28638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffe0000000000; valaddr_reg:x3; val_offset:85914*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85914*0 + 3*222*FLEN/8, x4, x1, x2)

inst_28639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fff0000000000; valaddr_reg:x3; val_offset:85917*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85917*0 + 3*223*FLEN/8, x4, x1, x2)

inst_28640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fff8000000000; valaddr_reg:x3; val_offset:85920*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85920*0 + 3*224*FLEN/8, x4, x1, x2)

inst_28641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffc000000000; valaddr_reg:x3; val_offset:85923*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85923*0 + 3*225*FLEN/8, x4, x1, x2)

inst_28642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffe000000000; valaddr_reg:x3; val_offset:85926*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85926*0 + 3*226*FLEN/8, x4, x1, x2)

inst_28643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffff000000000; valaddr_reg:x3; val_offset:85929*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85929*0 + 3*227*FLEN/8, x4, x1, x2)

inst_28644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffff800000000; valaddr_reg:x3; val_offset:85932*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85932*0 + 3*228*FLEN/8, x4, x1, x2)

inst_28645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffc00000000; valaddr_reg:x3; val_offset:85935*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85935*0 + 3*229*FLEN/8, x4, x1, x2)

inst_28646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffe00000000; valaddr_reg:x3; val_offset:85938*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85938*0 + 3*230*FLEN/8, x4, x1, x2)

inst_28647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffff00000000; valaddr_reg:x3; val_offset:85941*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85941*0 + 3*231*FLEN/8, x4, x1, x2)

inst_28648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffff80000000; valaddr_reg:x3; val_offset:85944*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85944*0 + 3*232*FLEN/8, x4, x1, x2)

inst_28649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffc0000000; valaddr_reg:x3; val_offset:85947*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85947*0 + 3*233*FLEN/8, x4, x1, x2)

inst_28650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffe0000000; valaddr_reg:x3; val_offset:85950*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85950*0 + 3*234*FLEN/8, x4, x1, x2)

inst_28651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffff0000000; valaddr_reg:x3; val_offset:85953*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85953*0 + 3*235*FLEN/8, x4, x1, x2)

inst_28652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffff8000000; valaddr_reg:x3; val_offset:85956*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85956*0 + 3*236*FLEN/8, x4, x1, x2)

inst_28653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffc000000; valaddr_reg:x3; val_offset:85959*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85959*0 + 3*237*FLEN/8, x4, x1, x2)

inst_28654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffe000000; valaddr_reg:x3; val_offset:85962*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85962*0 + 3*238*FLEN/8, x4, x1, x2)

inst_28655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffff000000; valaddr_reg:x3; val_offset:85965*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85965*0 + 3*239*FLEN/8, x4, x1, x2)

inst_28656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffff800000; valaddr_reg:x3; val_offset:85968*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85968*0 + 3*240*FLEN/8, x4, x1, x2)

inst_28657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffc00000; valaddr_reg:x3; val_offset:85971*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85971*0 + 3*241*FLEN/8, x4, x1, x2)

inst_28658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffe00000; valaddr_reg:x3; val_offset:85974*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85974*0 + 3*242*FLEN/8, x4, x1, x2)

inst_28659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffff00000; valaddr_reg:x3; val_offset:85977*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85977*0 + 3*243*FLEN/8, x4, x1, x2)

inst_28660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffff80000; valaddr_reg:x3; val_offset:85980*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85980*0 + 3*244*FLEN/8, x4, x1, x2)

inst_28661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffc0000; valaddr_reg:x3; val_offset:85983*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85983*0 + 3*245*FLEN/8, x4, x1, x2)

inst_28662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffe0000; valaddr_reg:x3; val_offset:85986*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85986*0 + 3*246*FLEN/8, x4, x1, x2)

inst_28663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffff0000; valaddr_reg:x3; val_offset:85989*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85989*0 + 3*247*FLEN/8, x4, x1, x2)

inst_28664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffff8000; valaddr_reg:x3; val_offset:85992*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85992*0 + 3*248*FLEN/8, x4, x1, x2)

inst_28665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffc000; valaddr_reg:x3; val_offset:85995*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85995*0 + 3*249*FLEN/8, x4, x1, x2)

inst_28666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffe000; valaddr_reg:x3; val_offset:85998*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 85998*0 + 3*250*FLEN/8, x4, x1, x2)

inst_28667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffff000; valaddr_reg:x3; val_offset:86001*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86001*0 + 3*251*FLEN/8, x4, x1, x2)

inst_28668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffff800; valaddr_reg:x3; val_offset:86004*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86004*0 + 3*252*FLEN/8, x4, x1, x2)

inst_28669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffc00; valaddr_reg:x3; val_offset:86007*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86007*0 + 3*253*FLEN/8, x4, x1, x2)

inst_28670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffe00; valaddr_reg:x3; val_offset:86010*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86010*0 + 3*254*FLEN/8, x4, x1, x2)

inst_28671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffff00; valaddr_reg:x3; val_offset:86013*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86013*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_28672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffff80; valaddr_reg:x3; val_offset:86016*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86016*0 + 3*256*FLEN/8, x4, x1, x2)

inst_28673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffffc0; valaddr_reg:x3; val_offset:86019*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86019*0 + 3*257*FLEN/8, x4, x1, x2)

inst_28674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffffe0; valaddr_reg:x3; val_offset:86022*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86022*0 + 3*258*FLEN/8, x4, x1, x2)

inst_28675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffff0; valaddr_reg:x3; val_offset:86025*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86025*0 + 3*259*FLEN/8, x4, x1, x2)

inst_28676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffff8; valaddr_reg:x3; val_offset:86028*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86028*0 + 3*260*FLEN/8, x4, x1, x2)

inst_28677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffffc; valaddr_reg:x3; val_offset:86031*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86031*0 + 3*261*FLEN/8, x4, x1, x2)

inst_28678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814ffffffffffffe; valaddr_reg:x3; val_offset:86034*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86034*0 + 3*262*FLEN/8, x4, x1, x2)

inst_28679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x14faadcb89035 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x014 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f914faadcb89035; op2val:0x8000;
op3val:0x814fffffffffffff; valaddr_reg:x3; val_offset:86037*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86037*0 + 3*263*FLEN/8, x4, x1, x2)

inst_28680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000000000; valaddr_reg:x3; val_offset:86040*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86040*0 + 3*264*FLEN/8, x4, x1, x2)

inst_28681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000000001; valaddr_reg:x3; val_offset:86043*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86043*0 + 3*265*FLEN/8, x4, x1, x2)

inst_28682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000000003; valaddr_reg:x3; val_offset:86046*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86046*0 + 3*266*FLEN/8, x4, x1, x2)

inst_28683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000000007; valaddr_reg:x3; val_offset:86049*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86049*0 + 3*267*FLEN/8, x4, x1, x2)

inst_28684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000000000f; valaddr_reg:x3; val_offset:86052*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86052*0 + 3*268*FLEN/8, x4, x1, x2)

inst_28685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000000001f; valaddr_reg:x3; val_offset:86055*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86055*0 + 3*269*FLEN/8, x4, x1, x2)

inst_28686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000000003f; valaddr_reg:x3; val_offset:86058*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86058*0 + 3*270*FLEN/8, x4, x1, x2)

inst_28687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000000007f; valaddr_reg:x3; val_offset:86061*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86061*0 + 3*271*FLEN/8, x4, x1, x2)

inst_28688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000000000ff; valaddr_reg:x3; val_offset:86064*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86064*0 + 3*272*FLEN/8, x4, x1, x2)

inst_28689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000000001ff; valaddr_reg:x3; val_offset:86067*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86067*0 + 3*273*FLEN/8, x4, x1, x2)

inst_28690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000000003ff; valaddr_reg:x3; val_offset:86070*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86070*0 + 3*274*FLEN/8, x4, x1, x2)

inst_28691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000000007ff; valaddr_reg:x3; val_offset:86073*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86073*0 + 3*275*FLEN/8, x4, x1, x2)

inst_28692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000000fff; valaddr_reg:x3; val_offset:86076*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86076*0 + 3*276*FLEN/8, x4, x1, x2)

inst_28693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000001fff; valaddr_reg:x3; val_offset:86079*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86079*0 + 3*277*FLEN/8, x4, x1, x2)

inst_28694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000003fff; valaddr_reg:x3; val_offset:86082*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86082*0 + 3*278*FLEN/8, x4, x1, x2)

inst_28695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000007fff; valaddr_reg:x3; val_offset:86085*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86085*0 + 3*279*FLEN/8, x4, x1, x2)

inst_28696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000000ffff; valaddr_reg:x3; val_offset:86088*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86088*0 + 3*280*FLEN/8, x4, x1, x2)

inst_28697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000001ffff; valaddr_reg:x3; val_offset:86091*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86091*0 + 3*281*FLEN/8, x4, x1, x2)

inst_28698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000003ffff; valaddr_reg:x3; val_offset:86094*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86094*0 + 3*282*FLEN/8, x4, x1, x2)

inst_28699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000007ffff; valaddr_reg:x3; val_offset:86097*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86097*0 + 3*283*FLEN/8, x4, x1, x2)

inst_28700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000000fffff; valaddr_reg:x3; val_offset:86100*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86100*0 + 3*284*FLEN/8, x4, x1, x2)

inst_28701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000001fffff; valaddr_reg:x3; val_offset:86103*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86103*0 + 3*285*FLEN/8, x4, x1, x2)

inst_28702:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000003fffff; valaddr_reg:x3; val_offset:86106*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86106*0 + 3*286*FLEN/8, x4, x1, x2)

inst_28703:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000007fffff; valaddr_reg:x3; val_offset:86109*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86109*0 + 3*287*FLEN/8, x4, x1, x2)

inst_28704:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000000ffffff; valaddr_reg:x3; val_offset:86112*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86112*0 + 3*288*FLEN/8, x4, x1, x2)

inst_28705:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000001ffffff; valaddr_reg:x3; val_offset:86115*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86115*0 + 3*289*FLEN/8, x4, x1, x2)

inst_28706:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000003ffffff; valaddr_reg:x3; val_offset:86118*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86118*0 + 3*290*FLEN/8, x4, x1, x2)

inst_28707:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000007ffffff; valaddr_reg:x3; val_offset:86121*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86121*0 + 3*291*FLEN/8, x4, x1, x2)

inst_28708:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000000fffffff; valaddr_reg:x3; val_offset:86124*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86124*0 + 3*292*FLEN/8, x4, x1, x2)

inst_28709:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000001fffffff; valaddr_reg:x3; val_offset:86127*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86127*0 + 3*293*FLEN/8, x4, x1, x2)

inst_28710:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000003fffffff; valaddr_reg:x3; val_offset:86130*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86130*0 + 3*294*FLEN/8, x4, x1, x2)

inst_28711:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000007fffffff; valaddr_reg:x3; val_offset:86133*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86133*0 + 3*295*FLEN/8, x4, x1, x2)

inst_28712:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600000ffffffff; valaddr_reg:x3; val_offset:86136*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86136*0 + 3*296*FLEN/8, x4, x1, x2)

inst_28713:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600001ffffffff; valaddr_reg:x3; val_offset:86139*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86139*0 + 3*297*FLEN/8, x4, x1, x2)

inst_28714:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600003ffffffff; valaddr_reg:x3; val_offset:86142*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86142*0 + 3*298*FLEN/8, x4, x1, x2)

inst_28715:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600007ffffffff; valaddr_reg:x3; val_offset:86145*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86145*0 + 3*299*FLEN/8, x4, x1, x2)

inst_28716:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960000fffffffff; valaddr_reg:x3; val_offset:86148*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86148*0 + 3*300*FLEN/8, x4, x1, x2)

inst_28717:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960001fffffffff; valaddr_reg:x3; val_offset:86151*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86151*0 + 3*301*FLEN/8, x4, x1, x2)

inst_28718:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960003fffffffff; valaddr_reg:x3; val_offset:86154*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86154*0 + 3*302*FLEN/8, x4, x1, x2)

inst_28719:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960007fffffffff; valaddr_reg:x3; val_offset:86157*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86157*0 + 3*303*FLEN/8, x4, x1, x2)

inst_28720:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396000ffffffffff; valaddr_reg:x3; val_offset:86160*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86160*0 + 3*304*FLEN/8, x4, x1, x2)

inst_28721:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396001ffffffffff; valaddr_reg:x3; val_offset:86163*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86163*0 + 3*305*FLEN/8, x4, x1, x2)

inst_28722:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396003ffffffffff; valaddr_reg:x3; val_offset:86166*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86166*0 + 3*306*FLEN/8, x4, x1, x2)

inst_28723:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396007ffffffffff; valaddr_reg:x3; val_offset:86169*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86169*0 + 3*307*FLEN/8, x4, x1, x2)

inst_28724:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39600fffffffffff; valaddr_reg:x3; val_offset:86172*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86172*0 + 3*308*FLEN/8, x4, x1, x2)

inst_28725:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39601fffffffffff; valaddr_reg:x3; val_offset:86175*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86175*0 + 3*309*FLEN/8, x4, x1, x2)

inst_28726:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39603fffffffffff; valaddr_reg:x3; val_offset:86178*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86178*0 + 3*310*FLEN/8, x4, x1, x2)

inst_28727:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x39607fffffffffff; valaddr_reg:x3; val_offset:86181*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86181*0 + 3*311*FLEN/8, x4, x1, x2)

inst_28728:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3960ffffffffffff; valaddr_reg:x3; val_offset:86184*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86184*0 + 3*312*FLEN/8, x4, x1, x2)

inst_28729:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3961ffffffffffff; valaddr_reg:x3; val_offset:86187*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86187*0 + 3*313*FLEN/8, x4, x1, x2)

inst_28730:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3963ffffffffffff; valaddr_reg:x3; val_offset:86190*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86190*0 + 3*314*FLEN/8, x4, x1, x2)

inst_28731:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3967ffffffffffff; valaddr_reg:x3; val_offset:86193*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86193*0 + 3*315*FLEN/8, x4, x1, x2)

inst_28732:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3968000000000000; valaddr_reg:x3; val_offset:86196*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86196*0 + 3*316*FLEN/8, x4, x1, x2)

inst_28733:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396c000000000000; valaddr_reg:x3; val_offset:86199*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86199*0 + 3*317*FLEN/8, x4, x1, x2)

inst_28734:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396e000000000000; valaddr_reg:x3; val_offset:86202*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86202*0 + 3*318*FLEN/8, x4, x1, x2)

inst_28735:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396f000000000000; valaddr_reg:x3; val_offset:86205*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86205*0 + 3*319*FLEN/8, x4, x1, x2)

inst_28736:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396f800000000000; valaddr_reg:x3; val_offset:86208*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86208*0 + 3*320*FLEN/8, x4, x1, x2)

inst_28737:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fc00000000000; valaddr_reg:x3; val_offset:86211*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86211*0 + 3*321*FLEN/8, x4, x1, x2)

inst_28738:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fe00000000000; valaddr_reg:x3; val_offset:86214*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86214*0 + 3*322*FLEN/8, x4, x1, x2)

inst_28739:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ff00000000000; valaddr_reg:x3; val_offset:86217*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86217*0 + 3*323*FLEN/8, x4, x1, x2)

inst_28740:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ff80000000000; valaddr_reg:x3; val_offset:86220*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86220*0 + 3*324*FLEN/8, x4, x1, x2)

inst_28741:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffc0000000000; valaddr_reg:x3; val_offset:86223*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86223*0 + 3*325*FLEN/8, x4, x1, x2)

inst_28742:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffe0000000000; valaddr_reg:x3; val_offset:86226*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86226*0 + 3*326*FLEN/8, x4, x1, x2)

inst_28743:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fff0000000000; valaddr_reg:x3; val_offset:86229*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86229*0 + 3*327*FLEN/8, x4, x1, x2)

inst_28744:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fff8000000000; valaddr_reg:x3; val_offset:86232*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86232*0 + 3*328*FLEN/8, x4, x1, x2)

inst_28745:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffc000000000; valaddr_reg:x3; val_offset:86235*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86235*0 + 3*329*FLEN/8, x4, x1, x2)

inst_28746:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffe000000000; valaddr_reg:x3; val_offset:86238*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86238*0 + 3*330*FLEN/8, x4, x1, x2)

inst_28747:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffff000000000; valaddr_reg:x3; val_offset:86241*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86241*0 + 3*331*FLEN/8, x4, x1, x2)

inst_28748:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffff800000000; valaddr_reg:x3; val_offset:86244*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86244*0 + 3*332*FLEN/8, x4, x1, x2)

inst_28749:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffc00000000; valaddr_reg:x3; val_offset:86247*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86247*0 + 3*333*FLEN/8, x4, x1, x2)

inst_28750:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffe00000000; valaddr_reg:x3; val_offset:86250*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86250*0 + 3*334*FLEN/8, x4, x1, x2)

inst_28751:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffff00000000; valaddr_reg:x3; val_offset:86253*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86253*0 + 3*335*FLEN/8, x4, x1, x2)

inst_28752:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffff80000000; valaddr_reg:x3; val_offset:86256*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86256*0 + 3*336*FLEN/8, x4, x1, x2)

inst_28753:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffc0000000; valaddr_reg:x3; val_offset:86259*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86259*0 + 3*337*FLEN/8, x4, x1, x2)

inst_28754:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffe0000000; valaddr_reg:x3; val_offset:86262*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86262*0 + 3*338*FLEN/8, x4, x1, x2)

inst_28755:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffff0000000; valaddr_reg:x3; val_offset:86265*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86265*0 + 3*339*FLEN/8, x4, x1, x2)

inst_28756:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffff8000000; valaddr_reg:x3; val_offset:86268*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86268*0 + 3*340*FLEN/8, x4, x1, x2)

inst_28757:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffc000000; valaddr_reg:x3; val_offset:86271*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86271*0 + 3*341*FLEN/8, x4, x1, x2)

inst_28758:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffe000000; valaddr_reg:x3; val_offset:86274*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86274*0 + 3*342*FLEN/8, x4, x1, x2)

inst_28759:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffff000000; valaddr_reg:x3; val_offset:86277*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86277*0 + 3*343*FLEN/8, x4, x1, x2)

inst_28760:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffff800000; valaddr_reg:x3; val_offset:86280*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86280*0 + 3*344*FLEN/8, x4, x1, x2)

inst_28761:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffc00000; valaddr_reg:x3; val_offset:86283*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86283*0 + 3*345*FLEN/8, x4, x1, x2)

inst_28762:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffe00000; valaddr_reg:x3; val_offset:86286*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86286*0 + 3*346*FLEN/8, x4, x1, x2)

inst_28763:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffff00000; valaddr_reg:x3; val_offset:86289*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86289*0 + 3*347*FLEN/8, x4, x1, x2)

inst_28764:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffff80000; valaddr_reg:x3; val_offset:86292*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86292*0 + 3*348*FLEN/8, x4, x1, x2)

inst_28765:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffc0000; valaddr_reg:x3; val_offset:86295*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86295*0 + 3*349*FLEN/8, x4, x1, x2)

inst_28766:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffe0000; valaddr_reg:x3; val_offset:86298*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86298*0 + 3*350*FLEN/8, x4, x1, x2)

inst_28767:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffff0000; valaddr_reg:x3; val_offset:86301*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86301*0 + 3*351*FLEN/8, x4, x1, x2)

inst_28768:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffff8000; valaddr_reg:x3; val_offset:86304*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86304*0 + 3*352*FLEN/8, x4, x1, x2)

inst_28769:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffc000; valaddr_reg:x3; val_offset:86307*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86307*0 + 3*353*FLEN/8, x4, x1, x2)

inst_28770:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffe000; valaddr_reg:x3; val_offset:86310*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86310*0 + 3*354*FLEN/8, x4, x1, x2)

inst_28771:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffff000; valaddr_reg:x3; val_offset:86313*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86313*0 + 3*355*FLEN/8, x4, x1, x2)

inst_28772:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffff800; valaddr_reg:x3; val_offset:86316*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86316*0 + 3*356*FLEN/8, x4, x1, x2)

inst_28773:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffc00; valaddr_reg:x3; val_offset:86319*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86319*0 + 3*357*FLEN/8, x4, x1, x2)

inst_28774:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffe00; valaddr_reg:x3; val_offset:86322*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86322*0 + 3*358*FLEN/8, x4, x1, x2)

inst_28775:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffff00; valaddr_reg:x3; val_offset:86325*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86325*0 + 3*359*FLEN/8, x4, x1, x2)

inst_28776:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffff80; valaddr_reg:x3; val_offset:86328*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86328*0 + 3*360*FLEN/8, x4, x1, x2)

inst_28777:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffffc0; valaddr_reg:x3; val_offset:86331*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86331*0 + 3*361*FLEN/8, x4, x1, x2)

inst_28778:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffffe0; valaddr_reg:x3; val_offset:86334*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86334*0 + 3*362*FLEN/8, x4, x1, x2)

inst_28779:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffff0; valaddr_reg:x3; val_offset:86337*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86337*0 + 3*363*FLEN/8, x4, x1, x2)

inst_28780:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffff8; valaddr_reg:x3; val_offset:86340*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86340*0 + 3*364*FLEN/8, x4, x1, x2)

inst_28781:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffffc; valaddr_reg:x3; val_offset:86343*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86343*0 + 3*365*FLEN/8, x4, x1, x2)

inst_28782:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396ffffffffffffe; valaddr_reg:x3; val_offset:86346*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86346*0 + 3*366*FLEN/8, x4, x1, x2)

inst_28783:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x396 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x396fffffffffffff; valaddr_reg:x3; val_offset:86349*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86349*0 + 3*367*FLEN/8, x4, x1, x2)

inst_28784:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:86352*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86352*0 + 3*368*FLEN/8, x4, x1, x2)

inst_28785:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:86355*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86355*0 + 3*369*FLEN/8, x4, x1, x2)

inst_28786:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:86358*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86358*0 + 3*370*FLEN/8, x4, x1, x2)

inst_28787:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:86361*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86361*0 + 3*371*FLEN/8, x4, x1, x2)

inst_28788:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:86364*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86364*0 + 3*372*FLEN/8, x4, x1, x2)

inst_28789:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:86367*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86367*0 + 3*373*FLEN/8, x4, x1, x2)

inst_28790:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:86370*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86370*0 + 3*374*FLEN/8, x4, x1, x2)

inst_28791:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:86373*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86373*0 + 3*375*FLEN/8, x4, x1, x2)

inst_28792:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:86376*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86376*0 + 3*376*FLEN/8, x4, x1, x2)

inst_28793:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:86379*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86379*0 + 3*377*FLEN/8, x4, x1, x2)

inst_28794:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:86382*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86382*0 + 3*378*FLEN/8, x4, x1, x2)

inst_28795:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:86385*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86385*0 + 3*379*FLEN/8, x4, x1, x2)

inst_28796:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:86388*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86388*0 + 3*380*FLEN/8, x4, x1, x2)

inst_28797:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:86391*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86391*0 + 3*381*FLEN/8, x4, x1, x2)

inst_28798:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:86394*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86394*0 + 3*382*FLEN/8, x4, x1, x2)

inst_28799:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:86397*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86397*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_28800:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:86400*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86400*0 + 3*384*FLEN/8, x4, x1, x2)

inst_28801:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:86403*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86403*0 + 3*385*FLEN/8, x4, x1, x2)

inst_28802:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:86406*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86406*0 + 3*386*FLEN/8, x4, x1, x2)

inst_28803:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:86409*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86409*0 + 3*387*FLEN/8, x4, x1, x2)

inst_28804:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:86412*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86412*0 + 3*388*FLEN/8, x4, x1, x2)

inst_28805:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1518229ccdb63 and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd905eb324df18 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91518229ccdb63; op2val:0x204d905eb324df18;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:86415*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86415*0 + 3*389*FLEN/8, x4, x1, x2)

inst_28806:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000000000; valaddr_reg:x3; val_offset:86418*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86418*0 + 3*390*FLEN/8, x4, x1, x2)

inst_28807:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000000001; valaddr_reg:x3; val_offset:86421*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86421*0 + 3*391*FLEN/8, x4, x1, x2)

inst_28808:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000000003; valaddr_reg:x3; val_offset:86424*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86424*0 + 3*392*FLEN/8, x4, x1, x2)

inst_28809:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000000007; valaddr_reg:x3; val_offset:86427*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86427*0 + 3*393*FLEN/8, x4, x1, x2)

inst_28810:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000000000f; valaddr_reg:x3; val_offset:86430*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86430*0 + 3*394*FLEN/8, x4, x1, x2)

inst_28811:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000000001f; valaddr_reg:x3; val_offset:86433*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86433*0 + 3*395*FLEN/8, x4, x1, x2)

inst_28812:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000000003f; valaddr_reg:x3; val_offset:86436*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86436*0 + 3*396*FLEN/8, x4, x1, x2)

inst_28813:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000000007f; valaddr_reg:x3; val_offset:86439*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86439*0 + 3*397*FLEN/8, x4, x1, x2)

inst_28814:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000000000ff; valaddr_reg:x3; val_offset:86442*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86442*0 + 3*398*FLEN/8, x4, x1, x2)

inst_28815:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000000001ff; valaddr_reg:x3; val_offset:86445*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86445*0 + 3*399*FLEN/8, x4, x1, x2)

inst_28816:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000000003ff; valaddr_reg:x3; val_offset:86448*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86448*0 + 3*400*FLEN/8, x4, x1, x2)

inst_28817:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000000007ff; valaddr_reg:x3; val_offset:86451*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86451*0 + 3*401*FLEN/8, x4, x1, x2)

inst_28818:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000000fff; valaddr_reg:x3; val_offset:86454*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86454*0 + 3*402*FLEN/8, x4, x1, x2)

inst_28819:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000001fff; valaddr_reg:x3; val_offset:86457*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86457*0 + 3*403*FLEN/8, x4, x1, x2)

inst_28820:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000003fff; valaddr_reg:x3; val_offset:86460*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86460*0 + 3*404*FLEN/8, x4, x1, x2)

inst_28821:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000007fff; valaddr_reg:x3; val_offset:86463*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86463*0 + 3*405*FLEN/8, x4, x1, x2)

inst_28822:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000000ffff; valaddr_reg:x3; val_offset:86466*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86466*0 + 3*406*FLEN/8, x4, x1, x2)

inst_28823:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000001ffff; valaddr_reg:x3; val_offset:86469*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86469*0 + 3*407*FLEN/8, x4, x1, x2)

inst_28824:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000003ffff; valaddr_reg:x3; val_offset:86472*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86472*0 + 3*408*FLEN/8, x4, x1, x2)

inst_28825:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000007ffff; valaddr_reg:x3; val_offset:86475*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86475*0 + 3*409*FLEN/8, x4, x1, x2)

inst_28826:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000000fffff; valaddr_reg:x3; val_offset:86478*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86478*0 + 3*410*FLEN/8, x4, x1, x2)

inst_28827:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000001fffff; valaddr_reg:x3; val_offset:86481*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86481*0 + 3*411*FLEN/8, x4, x1, x2)

inst_28828:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000003fffff; valaddr_reg:x3; val_offset:86484*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86484*0 + 3*412*FLEN/8, x4, x1, x2)

inst_28829:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000007fffff; valaddr_reg:x3; val_offset:86487*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86487*0 + 3*413*FLEN/8, x4, x1, x2)

inst_28830:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000000ffffff; valaddr_reg:x3; val_offset:86490*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86490*0 + 3*414*FLEN/8, x4, x1, x2)

inst_28831:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000001ffffff; valaddr_reg:x3; val_offset:86493*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86493*0 + 3*415*FLEN/8, x4, x1, x2)

inst_28832:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000003ffffff; valaddr_reg:x3; val_offset:86496*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86496*0 + 3*416*FLEN/8, x4, x1, x2)

inst_28833:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000007ffffff; valaddr_reg:x3; val_offset:86499*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86499*0 + 3*417*FLEN/8, x4, x1, x2)

inst_28834:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000000fffffff; valaddr_reg:x3; val_offset:86502*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86502*0 + 3*418*FLEN/8, x4, x1, x2)

inst_28835:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000001fffffff; valaddr_reg:x3; val_offset:86505*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86505*0 + 3*419*FLEN/8, x4, x1, x2)

inst_28836:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000003fffffff; valaddr_reg:x3; val_offset:86508*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86508*0 + 3*420*FLEN/8, x4, x1, x2)

inst_28837:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000007fffffff; valaddr_reg:x3; val_offset:86511*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86511*0 + 3*421*FLEN/8, x4, x1, x2)

inst_28838:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00000ffffffff; valaddr_reg:x3; val_offset:86514*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86514*0 + 3*422*FLEN/8, x4, x1, x2)

inst_28839:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00001ffffffff; valaddr_reg:x3; val_offset:86517*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86517*0 + 3*423*FLEN/8, x4, x1, x2)

inst_28840:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00003ffffffff; valaddr_reg:x3; val_offset:86520*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86520*0 + 3*424*FLEN/8, x4, x1, x2)

inst_28841:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00007ffffffff; valaddr_reg:x3; val_offset:86523*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86523*0 + 3*425*FLEN/8, x4, x1, x2)

inst_28842:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0000fffffffff; valaddr_reg:x3; val_offset:86526*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86526*0 + 3*426*FLEN/8, x4, x1, x2)

inst_28843:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0001fffffffff; valaddr_reg:x3; val_offset:86529*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86529*0 + 3*427*FLEN/8, x4, x1, x2)

inst_28844:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0003fffffffff; valaddr_reg:x3; val_offset:86532*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86532*0 + 3*428*FLEN/8, x4, x1, x2)

inst_28845:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0007fffffffff; valaddr_reg:x3; val_offset:86535*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86535*0 + 3*429*FLEN/8, x4, x1, x2)

inst_28846:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da000ffffffffff; valaddr_reg:x3; val_offset:86538*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86538*0 + 3*430*FLEN/8, x4, x1, x2)

inst_28847:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da001ffffffffff; valaddr_reg:x3; val_offset:86541*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86541*0 + 3*431*FLEN/8, x4, x1, x2)

inst_28848:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da003ffffffffff; valaddr_reg:x3; val_offset:86544*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86544*0 + 3*432*FLEN/8, x4, x1, x2)

inst_28849:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da007ffffffffff; valaddr_reg:x3; val_offset:86547*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86547*0 + 3*433*FLEN/8, x4, x1, x2)

inst_28850:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da00fffffffffff; valaddr_reg:x3; val_offset:86550*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86550*0 + 3*434*FLEN/8, x4, x1, x2)

inst_28851:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da01fffffffffff; valaddr_reg:x3; val_offset:86553*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86553*0 + 3*435*FLEN/8, x4, x1, x2)

inst_28852:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da03fffffffffff; valaddr_reg:x3; val_offset:86556*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86556*0 + 3*436*FLEN/8, x4, x1, x2)

inst_28853:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da07fffffffffff; valaddr_reg:x3; val_offset:86559*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86559*0 + 3*437*FLEN/8, x4, x1, x2)

inst_28854:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da0ffffffffffff; valaddr_reg:x3; val_offset:86562*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86562*0 + 3*438*FLEN/8, x4, x1, x2)

inst_28855:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da1ffffffffffff; valaddr_reg:x3; val_offset:86565*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86565*0 + 3*439*FLEN/8, x4, x1, x2)

inst_28856:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da3ffffffffffff; valaddr_reg:x3; val_offset:86568*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86568*0 + 3*440*FLEN/8, x4, x1, x2)

inst_28857:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da7ffffffffffff; valaddr_reg:x3; val_offset:86571*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86571*0 + 3*441*FLEN/8, x4, x1, x2)

inst_28858:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3da8000000000000; valaddr_reg:x3; val_offset:86574*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86574*0 + 3*442*FLEN/8, x4, x1, x2)

inst_28859:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dac000000000000; valaddr_reg:x3; val_offset:86577*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86577*0 + 3*443*FLEN/8, x4, x1, x2)

inst_28860:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dae000000000000; valaddr_reg:x3; val_offset:86580*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86580*0 + 3*444*FLEN/8, x4, x1, x2)

inst_28861:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daf000000000000; valaddr_reg:x3; val_offset:86583*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86583*0 + 3*445*FLEN/8, x4, x1, x2)

inst_28862:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daf800000000000; valaddr_reg:x3; val_offset:86586*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86586*0 + 3*446*FLEN/8, x4, x1, x2)

inst_28863:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafc00000000000; valaddr_reg:x3; val_offset:86589*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86589*0 + 3*447*FLEN/8, x4, x1, x2)

inst_28864:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafe00000000000; valaddr_reg:x3; val_offset:86592*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86592*0 + 3*448*FLEN/8, x4, x1, x2)

inst_28865:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daff00000000000; valaddr_reg:x3; val_offset:86595*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86595*0 + 3*449*FLEN/8, x4, x1, x2)

inst_28866:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daff80000000000; valaddr_reg:x3; val_offset:86598*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86598*0 + 3*450*FLEN/8, x4, x1, x2)

inst_28867:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffc0000000000; valaddr_reg:x3; val_offset:86601*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86601*0 + 3*451*FLEN/8, x4, x1, x2)

inst_28868:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffe0000000000; valaddr_reg:x3; val_offset:86604*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86604*0 + 3*452*FLEN/8, x4, x1, x2)

inst_28869:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafff0000000000; valaddr_reg:x3; val_offset:86607*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86607*0 + 3*453*FLEN/8, x4, x1, x2)

inst_28870:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafff8000000000; valaddr_reg:x3; val_offset:86610*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86610*0 + 3*454*FLEN/8, x4, x1, x2)

inst_28871:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffc000000000; valaddr_reg:x3; val_offset:86613*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86613*0 + 3*455*FLEN/8, x4, x1, x2)

inst_28872:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffe000000000; valaddr_reg:x3; val_offset:86616*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86616*0 + 3*456*FLEN/8, x4, x1, x2)

inst_28873:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffff000000000; valaddr_reg:x3; val_offset:86619*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86619*0 + 3*457*FLEN/8, x4, x1, x2)

inst_28874:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffff800000000; valaddr_reg:x3; val_offset:86622*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86622*0 + 3*458*FLEN/8, x4, x1, x2)

inst_28875:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffc00000000; valaddr_reg:x3; val_offset:86625*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86625*0 + 3*459*FLEN/8, x4, x1, x2)

inst_28876:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffe00000000; valaddr_reg:x3; val_offset:86628*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86628*0 + 3*460*FLEN/8, x4, x1, x2)

inst_28877:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffff00000000; valaddr_reg:x3; val_offset:86631*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86631*0 + 3*461*FLEN/8, x4, x1, x2)

inst_28878:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffff80000000; valaddr_reg:x3; val_offset:86634*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86634*0 + 3*462*FLEN/8, x4, x1, x2)

inst_28879:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffc0000000; valaddr_reg:x3; val_offset:86637*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86637*0 + 3*463*FLEN/8, x4, x1, x2)

inst_28880:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffe0000000; valaddr_reg:x3; val_offset:86640*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86640*0 + 3*464*FLEN/8, x4, x1, x2)

inst_28881:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffff0000000; valaddr_reg:x3; val_offset:86643*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86643*0 + 3*465*FLEN/8, x4, x1, x2)

inst_28882:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffff8000000; valaddr_reg:x3; val_offset:86646*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86646*0 + 3*466*FLEN/8, x4, x1, x2)

inst_28883:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffc000000; valaddr_reg:x3; val_offset:86649*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86649*0 + 3*467*FLEN/8, x4, x1, x2)

inst_28884:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffe000000; valaddr_reg:x3; val_offset:86652*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86652*0 + 3*468*FLEN/8, x4, x1, x2)

inst_28885:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffff000000; valaddr_reg:x3; val_offset:86655*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86655*0 + 3*469*FLEN/8, x4, x1, x2)

inst_28886:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffff800000; valaddr_reg:x3; val_offset:86658*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86658*0 + 3*470*FLEN/8, x4, x1, x2)

inst_28887:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffc00000; valaddr_reg:x3; val_offset:86661*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86661*0 + 3*471*FLEN/8, x4, x1, x2)

inst_28888:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffe00000; valaddr_reg:x3; val_offset:86664*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86664*0 + 3*472*FLEN/8, x4, x1, x2)

inst_28889:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffff00000; valaddr_reg:x3; val_offset:86667*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86667*0 + 3*473*FLEN/8, x4, x1, x2)

inst_28890:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffff80000; valaddr_reg:x3; val_offset:86670*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86670*0 + 3*474*FLEN/8, x4, x1, x2)

inst_28891:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffc0000; valaddr_reg:x3; val_offset:86673*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86673*0 + 3*475*FLEN/8, x4, x1, x2)

inst_28892:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffe0000; valaddr_reg:x3; val_offset:86676*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86676*0 + 3*476*FLEN/8, x4, x1, x2)

inst_28893:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffff0000; valaddr_reg:x3; val_offset:86679*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86679*0 + 3*477*FLEN/8, x4, x1, x2)

inst_28894:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffff8000; valaddr_reg:x3; val_offset:86682*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86682*0 + 3*478*FLEN/8, x4, x1, x2)

inst_28895:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffc000; valaddr_reg:x3; val_offset:86685*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86685*0 + 3*479*FLEN/8, x4, x1, x2)

inst_28896:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffe000; valaddr_reg:x3; val_offset:86688*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86688*0 + 3*480*FLEN/8, x4, x1, x2)

inst_28897:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffff000; valaddr_reg:x3; val_offset:86691*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86691*0 + 3*481*FLEN/8, x4, x1, x2)

inst_28898:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffff800; valaddr_reg:x3; val_offset:86694*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86694*0 + 3*482*FLEN/8, x4, x1, x2)

inst_28899:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffc00; valaddr_reg:x3; val_offset:86697*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86697*0 + 3*483*FLEN/8, x4, x1, x2)

inst_28900:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffe00; valaddr_reg:x3; val_offset:86700*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86700*0 + 3*484*FLEN/8, x4, x1, x2)

inst_28901:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffff00; valaddr_reg:x3; val_offset:86703*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86703*0 + 3*485*FLEN/8, x4, x1, x2)

inst_28902:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffff80; valaddr_reg:x3; val_offset:86706*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86706*0 + 3*486*FLEN/8, x4, x1, x2)

inst_28903:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffffc0; valaddr_reg:x3; val_offset:86709*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86709*0 + 3*487*FLEN/8, x4, x1, x2)

inst_28904:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffffe0; valaddr_reg:x3; val_offset:86712*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86712*0 + 3*488*FLEN/8, x4, x1, x2)

inst_28905:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffff0; valaddr_reg:x3; val_offset:86715*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86715*0 + 3*489*FLEN/8, x4, x1, x2)

inst_28906:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffff8; valaddr_reg:x3; val_offset:86718*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86718*0 + 3*490*FLEN/8, x4, x1, x2)

inst_28907:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffffc; valaddr_reg:x3; val_offset:86721*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86721*0 + 3*491*FLEN/8, x4, x1, x2)

inst_28908:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3daffffffffffffe; valaddr_reg:x3; val_offset:86724*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86724*0 + 3*492*FLEN/8, x4, x1, x2)

inst_28909:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3da and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3dafffffffffffff; valaddr_reg:x3; val_offset:86727*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86727*0 + 3*493*FLEN/8, x4, x1, x2)

inst_28910:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff0000000000001; valaddr_reg:x3; val_offset:86730*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86730*0 + 3*494*FLEN/8, x4, x1, x2)

inst_28911:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff0000000000003; valaddr_reg:x3; val_offset:86733*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86733*0 + 3*495*FLEN/8, x4, x1, x2)

inst_28912:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff0000000000007; valaddr_reg:x3; val_offset:86736*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86736*0 + 3*496*FLEN/8, x4, x1, x2)

inst_28913:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff000000000000f; valaddr_reg:x3; val_offset:86739*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86739*0 + 3*497*FLEN/8, x4, x1, x2)

inst_28914:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff000000000001f; valaddr_reg:x3; val_offset:86742*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86742*0 + 3*498*FLEN/8, x4, x1, x2)

inst_28915:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff000000000003f; valaddr_reg:x3; val_offset:86745*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86745*0 + 3*499*FLEN/8, x4, x1, x2)

inst_28916:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff3333333333333; valaddr_reg:x3; val_offset:86748*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86748*0 + 3*500*FLEN/8, x4, x1, x2)

inst_28917:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff4924924924924; valaddr_reg:x3; val_offset:86751*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86751*0 + 3*501*FLEN/8, x4, x1, x2)

inst_28918:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff6666666666666; valaddr_reg:x3; val_offset:86754*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86754*0 + 3*502*FLEN/8, x4, x1, x2)

inst_28919:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff6db6db6db6db6; valaddr_reg:x3; val_offset:86757*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86757*0 + 3*503*FLEN/8, x4, x1, x2)

inst_28920:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff7777777777777; valaddr_reg:x3; val_offset:86760*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86760*0 + 3*504*FLEN/8, x4, x1, x2)

inst_28921:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff8888888888888; valaddr_reg:x3; val_offset:86763*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86763*0 + 3*505*FLEN/8, x4, x1, x2)

inst_28922:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ff9999999999999; valaddr_reg:x3; val_offset:86766*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86766*0 + 3*506*FLEN/8, x4, x1, x2)

inst_28923:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffb6db6db6db6db; valaddr_reg:x3; val_offset:86769*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86769*0 + 3*507*FLEN/8, x4, x1, x2)

inst_28924:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffccccccccccccc; valaddr_reg:x3; val_offset:86772*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86772*0 + 3*508*FLEN/8, x4, x1, x2)

inst_28925:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffdb6db6db6db6d; valaddr_reg:x3; val_offset:86775*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86775*0 + 3*509*FLEN/8, x4, x1, x2)

inst_28926:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3fffffffffffffc0; valaddr_reg:x3; val_offset:86778*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86778*0 + 3*510*FLEN/8, x4, x1, x2)

inst_28927:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3fffffffffffffe0; valaddr_reg:x3; val_offset:86781*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86781*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_28928:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffffffffffffff0; valaddr_reg:x3; val_offset:86784*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86784*0 + 3*512*FLEN/8, x4, x1, x2)

inst_28929:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffffffffffffff8; valaddr_reg:x3; val_offset:86787*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86787*0 + 3*513*FLEN/8, x4, x1, x2)

inst_28930:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffffffffffffffc; valaddr_reg:x3; val_offset:86790*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86790*0 + 3*514*FLEN/8, x4, x1, x2)

inst_28931:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x18543cf5fc71d and fs2 == 0 and fe2 == 0x204 and fm2 == 0xd390970df6760 and fs3 == 0 and fe3 == 0x3ff and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f918543cf5fc71d; op2val:0x204d390970df6760;
op3val:0x3ffffffffffffffe; valaddr_reg:x3; val_offset:86793*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86793*0 + 3*515*FLEN/8, x4, x1, x2)

inst_28932:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8000000000000001; valaddr_reg:x3; val_offset:86796*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86796*0 + 3*516*FLEN/8, x4, x1, x2)

inst_28933:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8000000000000003; valaddr_reg:x3; val_offset:86799*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86799*0 + 3*517*FLEN/8, x4, x1, x2)

inst_28934:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8000000000000007; valaddr_reg:x3; val_offset:86802*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86802*0 + 3*518*FLEN/8, x4, x1, x2)

inst_28935:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800000000000000f; valaddr_reg:x3; val_offset:86805*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86805*0 + 3*519*FLEN/8, x4, x1, x2)

inst_28936:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800000000000001f; valaddr_reg:x3; val_offset:86808*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86808*0 + 3*520*FLEN/8, x4, x1, x2)

inst_28937:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800000000000003f; valaddr_reg:x3; val_offset:86811*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86811*0 + 3*521*FLEN/8, x4, x1, x2)

inst_28938:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8003333333333333; valaddr_reg:x3; val_offset:86814*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86814*0 + 3*522*FLEN/8, x4, x1, x2)

inst_28939:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8004924924924924; valaddr_reg:x3; val_offset:86817*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86817*0 + 3*523*FLEN/8, x4, x1, x2)

inst_28940:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8006666666666666; valaddr_reg:x3; val_offset:86820*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86820*0 + 3*524*FLEN/8, x4, x1, x2)

inst_28941:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8006db6db6db6db6; valaddr_reg:x3; val_offset:86823*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86823*0 + 3*525*FLEN/8, x4, x1, x2)

inst_28942:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8007777777777777; valaddr_reg:x3; val_offset:86826*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86826*0 + 3*526*FLEN/8, x4, x1, x2)

inst_28943:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8008888888888888; valaddr_reg:x3; val_offset:86829*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86829*0 + 3*527*FLEN/8, x4, x1, x2)

inst_28944:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x8009999999999999; valaddr_reg:x3; val_offset:86832*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86832*0 + 3*528*FLEN/8, x4, x1, x2)

inst_28945:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800b6db6db6db6db; valaddr_reg:x3; val_offset:86835*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86835*0 + 3*529*FLEN/8, x4, x1, x2)

inst_28946:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800ccccccccccccc; valaddr_reg:x3; val_offset:86838*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86838*0 + 3*530*FLEN/8, x4, x1, x2)

inst_28947:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800db6db6db6db6d; valaddr_reg:x3; val_offset:86841*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86841*0 + 3*531*FLEN/8, x4, x1, x2)

inst_28948:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800fffffffffffc0; valaddr_reg:x3; val_offset:86844*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86844*0 + 3*532*FLEN/8, x4, x1, x2)

inst_28949:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800fffffffffffe0; valaddr_reg:x3; val_offset:86847*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86847*0 + 3*533*FLEN/8, x4, x1, x2)

inst_28950:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800ffffffffffff0; valaddr_reg:x3; val_offset:86850*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86850*0 + 3*534*FLEN/8, x4, x1, x2)

inst_28951:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800ffffffffffff8; valaddr_reg:x3; val_offset:86853*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86853*0 + 3*535*FLEN/8, x4, x1, x2)

inst_28952:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800ffffffffffffc; valaddr_reg:x3; val_offset:86856*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86856*0 + 3*536*FLEN/8, x4, x1, x2)

inst_28953:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x800ffffffffffffe; valaddr_reg:x3; val_offset:86859*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86859*0 + 3*537*FLEN/8, x4, x1, x2)

inst_28954:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000000000; valaddr_reg:x3; val_offset:86862*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86862*0 + 3*538*FLEN/8, x4, x1, x2)

inst_28955:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000000001; valaddr_reg:x3; val_offset:86865*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86865*0 + 3*539*FLEN/8, x4, x1, x2)

inst_28956:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000000003; valaddr_reg:x3; val_offset:86868*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86868*0 + 3*540*FLEN/8, x4, x1, x2)

inst_28957:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000000007; valaddr_reg:x3; val_offset:86871*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86871*0 + 3*541*FLEN/8, x4, x1, x2)

inst_28958:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000000000f; valaddr_reg:x3; val_offset:86874*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86874*0 + 3*542*FLEN/8, x4, x1, x2)

inst_28959:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000000001f; valaddr_reg:x3; val_offset:86877*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86877*0 + 3*543*FLEN/8, x4, x1, x2)

inst_28960:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000000003f; valaddr_reg:x3; val_offset:86880*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86880*0 + 3*544*FLEN/8, x4, x1, x2)

inst_28961:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000000007f; valaddr_reg:x3; val_offset:86883*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86883*0 + 3*545*FLEN/8, x4, x1, x2)

inst_28962:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000000000ff; valaddr_reg:x3; val_offset:86886*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86886*0 + 3*546*FLEN/8, x4, x1, x2)

inst_28963:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000000001ff; valaddr_reg:x3; val_offset:86889*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86889*0 + 3*547*FLEN/8, x4, x1, x2)

inst_28964:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000000003ff; valaddr_reg:x3; val_offset:86892*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86892*0 + 3*548*FLEN/8, x4, x1, x2)

inst_28965:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000000007ff; valaddr_reg:x3; val_offset:86895*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86895*0 + 3*549*FLEN/8, x4, x1, x2)

inst_28966:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000000fff; valaddr_reg:x3; val_offset:86898*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86898*0 + 3*550*FLEN/8, x4, x1, x2)

inst_28967:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000001fff; valaddr_reg:x3; val_offset:86901*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86901*0 + 3*551*FLEN/8, x4, x1, x2)

inst_28968:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000003fff; valaddr_reg:x3; val_offset:86904*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86904*0 + 3*552*FLEN/8, x4, x1, x2)

inst_28969:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000007fff; valaddr_reg:x3; val_offset:86907*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86907*0 + 3*553*FLEN/8, x4, x1, x2)

inst_28970:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000000ffff; valaddr_reg:x3; val_offset:86910*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86910*0 + 3*554*FLEN/8, x4, x1, x2)

inst_28971:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000001ffff; valaddr_reg:x3; val_offset:86913*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86913*0 + 3*555*FLEN/8, x4, x1, x2)

inst_28972:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000003ffff; valaddr_reg:x3; val_offset:86916*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86916*0 + 3*556*FLEN/8, x4, x1, x2)

inst_28973:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000007ffff; valaddr_reg:x3; val_offset:86919*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86919*0 + 3*557*FLEN/8, x4, x1, x2)

inst_28974:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000000fffff; valaddr_reg:x3; val_offset:86922*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86922*0 + 3*558*FLEN/8, x4, x1, x2)

inst_28975:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000001fffff; valaddr_reg:x3; val_offset:86925*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86925*0 + 3*559*FLEN/8, x4, x1, x2)

inst_28976:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000003fffff; valaddr_reg:x3; val_offset:86928*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86928*0 + 3*560*FLEN/8, x4, x1, x2)

inst_28977:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000007fffff; valaddr_reg:x3; val_offset:86931*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86931*0 + 3*561*FLEN/8, x4, x1, x2)

inst_28978:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000000ffffff; valaddr_reg:x3; val_offset:86934*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86934*0 + 3*562*FLEN/8, x4, x1, x2)

inst_28979:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000001ffffff; valaddr_reg:x3; val_offset:86937*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86937*0 + 3*563*FLEN/8, x4, x1, x2)

inst_28980:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000003ffffff; valaddr_reg:x3; val_offset:86940*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86940*0 + 3*564*FLEN/8, x4, x1, x2)

inst_28981:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000007ffffff; valaddr_reg:x3; val_offset:86943*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86943*0 + 3*565*FLEN/8, x4, x1, x2)

inst_28982:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000000fffffff; valaddr_reg:x3; val_offset:86946*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86946*0 + 3*566*FLEN/8, x4, x1, x2)

inst_28983:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000001fffffff; valaddr_reg:x3; val_offset:86949*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86949*0 + 3*567*FLEN/8, x4, x1, x2)

inst_28984:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000003fffffff; valaddr_reg:x3; val_offset:86952*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86952*0 + 3*568*FLEN/8, x4, x1, x2)

inst_28985:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000007fffffff; valaddr_reg:x3; val_offset:86955*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86955*0 + 3*569*FLEN/8, x4, x1, x2)

inst_28986:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00000ffffffff; valaddr_reg:x3; val_offset:86958*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86958*0 + 3*570*FLEN/8, x4, x1, x2)

inst_28987:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00001ffffffff; valaddr_reg:x3; val_offset:86961*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86961*0 + 3*571*FLEN/8, x4, x1, x2)

inst_28988:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00003ffffffff; valaddr_reg:x3; val_offset:86964*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86964*0 + 3*572*FLEN/8, x4, x1, x2)

inst_28989:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00007ffffffff; valaddr_reg:x3; val_offset:86967*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86967*0 + 3*573*FLEN/8, x4, x1, x2)

inst_28990:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0000fffffffff; valaddr_reg:x3; val_offset:86970*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86970*0 + 3*574*FLEN/8, x4, x1, x2)

inst_28991:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0001fffffffff; valaddr_reg:x3; val_offset:86973*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86973*0 + 3*575*FLEN/8, x4, x1, x2)

inst_28992:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0003fffffffff; valaddr_reg:x3; val_offset:86976*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86976*0 + 3*576*FLEN/8, x4, x1, x2)

inst_28993:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0007fffffffff; valaddr_reg:x3; val_offset:86979*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86979*0 + 3*577*FLEN/8, x4, x1, x2)

inst_28994:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f000ffffffffff; valaddr_reg:x3; val_offset:86982*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86982*0 + 3*578*FLEN/8, x4, x1, x2)

inst_28995:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f001ffffffffff; valaddr_reg:x3; val_offset:86985*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86985*0 + 3*579*FLEN/8, x4, x1, x2)

inst_28996:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f003ffffffffff; valaddr_reg:x3; val_offset:86988*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86988*0 + 3*580*FLEN/8, x4, x1, x2)

inst_28997:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f007ffffffffff; valaddr_reg:x3; val_offset:86991*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86991*0 + 3*581*FLEN/8, x4, x1, x2)

inst_28998:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f00fffffffffff; valaddr_reg:x3; val_offset:86994*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86994*0 + 3*582*FLEN/8, x4, x1, x2)

inst_28999:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f01fffffffffff; valaddr_reg:x3; val_offset:86997*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 86997*0 + 3*583*FLEN/8, x4, x1, x2)

inst_29000:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f03fffffffffff; valaddr_reg:x3; val_offset:87000*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87000*0 + 3*584*FLEN/8, x4, x1, x2)

inst_29001:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f07fffffffffff; valaddr_reg:x3; val_offset:87003*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87003*0 + 3*585*FLEN/8, x4, x1, x2)

inst_29002:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f0ffffffffffff; valaddr_reg:x3; val_offset:87006*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87006*0 + 3*586*FLEN/8, x4, x1, x2)

inst_29003:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f1ffffffffffff; valaddr_reg:x3; val_offset:87009*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87009*0 + 3*587*FLEN/8, x4, x1, x2)

inst_29004:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f3ffffffffffff; valaddr_reg:x3; val_offset:87012*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87012*0 + 3*588*FLEN/8, x4, x1, x2)

inst_29005:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f7ffffffffffff; valaddr_reg:x3; val_offset:87015*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87015*0 + 3*589*FLEN/8, x4, x1, x2)

inst_29006:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80f8000000000000; valaddr_reg:x3; val_offset:87018*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87018*0 + 3*590*FLEN/8, x4, x1, x2)

inst_29007:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fc000000000000; valaddr_reg:x3; val_offset:87021*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87021*0 + 3*591*FLEN/8, x4, x1, x2)

inst_29008:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fe000000000000; valaddr_reg:x3; val_offset:87024*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87024*0 + 3*592*FLEN/8, x4, x1, x2)

inst_29009:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ff000000000000; valaddr_reg:x3; val_offset:87027*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87027*0 + 3*593*FLEN/8, x4, x1, x2)

inst_29010:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ff800000000000; valaddr_reg:x3; val_offset:87030*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87030*0 + 3*594*FLEN/8, x4, x1, x2)

inst_29011:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffc00000000000; valaddr_reg:x3; val_offset:87033*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87033*0 + 3*595*FLEN/8, x4, x1, x2)

inst_29012:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffe00000000000; valaddr_reg:x3; val_offset:87036*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87036*0 + 3*596*FLEN/8, x4, x1, x2)

inst_29013:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fff00000000000; valaddr_reg:x3; val_offset:87039*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87039*0 + 3*597*FLEN/8, x4, x1, x2)

inst_29014:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fff80000000000; valaddr_reg:x3; val_offset:87042*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87042*0 + 3*598*FLEN/8, x4, x1, x2)

inst_29015:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffc0000000000; valaddr_reg:x3; val_offset:87045*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87045*0 + 3*599*FLEN/8, x4, x1, x2)

inst_29016:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffe0000000000; valaddr_reg:x3; val_offset:87048*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87048*0 + 3*600*FLEN/8, x4, x1, x2)

inst_29017:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffff0000000000; valaddr_reg:x3; val_offset:87051*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87051*0 + 3*601*FLEN/8, x4, x1, x2)

inst_29018:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffff8000000000; valaddr_reg:x3; val_offset:87054*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87054*0 + 3*602*FLEN/8, x4, x1, x2)

inst_29019:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffc000000000; valaddr_reg:x3; val_offset:87057*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87057*0 + 3*603*FLEN/8, x4, x1, x2)

inst_29020:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffe000000000; valaddr_reg:x3; val_offset:87060*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87060*0 + 3*604*FLEN/8, x4, x1, x2)

inst_29021:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffff000000000; valaddr_reg:x3; val_offset:87063*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87063*0 + 3*605*FLEN/8, x4, x1, x2)

inst_29022:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffff800000000; valaddr_reg:x3; val_offset:87066*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87066*0 + 3*606*FLEN/8, x4, x1, x2)

inst_29023:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffc00000000; valaddr_reg:x3; val_offset:87069*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87069*0 + 3*607*FLEN/8, x4, x1, x2)

inst_29024:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffe00000000; valaddr_reg:x3; val_offset:87072*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87072*0 + 3*608*FLEN/8, x4, x1, x2)

inst_29025:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffff00000000; valaddr_reg:x3; val_offset:87075*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87075*0 + 3*609*FLEN/8, x4, x1, x2)

inst_29026:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffff80000000; valaddr_reg:x3; val_offset:87078*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87078*0 + 3*610*FLEN/8, x4, x1, x2)

inst_29027:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffc0000000; valaddr_reg:x3; val_offset:87081*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87081*0 + 3*611*FLEN/8, x4, x1, x2)

inst_29028:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffe0000000; valaddr_reg:x3; val_offset:87084*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87084*0 + 3*612*FLEN/8, x4, x1, x2)

inst_29029:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffff0000000; valaddr_reg:x3; val_offset:87087*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87087*0 + 3*613*FLEN/8, x4, x1, x2)

inst_29030:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffff8000000; valaddr_reg:x3; val_offset:87090*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87090*0 + 3*614*FLEN/8, x4, x1, x2)

inst_29031:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffc000000; valaddr_reg:x3; val_offset:87093*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87093*0 + 3*615*FLEN/8, x4, x1, x2)

inst_29032:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffe000000; valaddr_reg:x3; val_offset:87096*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87096*0 + 3*616*FLEN/8, x4, x1, x2)

inst_29033:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffff000000; valaddr_reg:x3; val_offset:87099*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87099*0 + 3*617*FLEN/8, x4, x1, x2)

inst_29034:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffff800000; valaddr_reg:x3; val_offset:87102*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87102*0 + 3*618*FLEN/8, x4, x1, x2)

inst_29035:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffc00000; valaddr_reg:x3; val_offset:87105*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87105*0 + 3*619*FLEN/8, x4, x1, x2)

inst_29036:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffe00000; valaddr_reg:x3; val_offset:87108*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87108*0 + 3*620*FLEN/8, x4, x1, x2)

inst_29037:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffff00000; valaddr_reg:x3; val_offset:87111*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87111*0 + 3*621*FLEN/8, x4, x1, x2)

inst_29038:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffff80000; valaddr_reg:x3; val_offset:87114*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87114*0 + 3*622*FLEN/8, x4, x1, x2)

inst_29039:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffc0000; valaddr_reg:x3; val_offset:87117*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87117*0 + 3*623*FLEN/8, x4, x1, x2)

inst_29040:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffe0000; valaddr_reg:x3; val_offset:87120*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87120*0 + 3*624*FLEN/8, x4, x1, x2)

inst_29041:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffff0000; valaddr_reg:x3; val_offset:87123*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87123*0 + 3*625*FLEN/8, x4, x1, x2)

inst_29042:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffff8000; valaddr_reg:x3; val_offset:87126*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87126*0 + 3*626*FLEN/8, x4, x1, x2)

inst_29043:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffc000; valaddr_reg:x3; val_offset:87129*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87129*0 + 3*627*FLEN/8, x4, x1, x2)

inst_29044:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffe000; valaddr_reg:x3; val_offset:87132*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87132*0 + 3*628*FLEN/8, x4, x1, x2)

inst_29045:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffff000; valaddr_reg:x3; val_offset:87135*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87135*0 + 3*629*FLEN/8, x4, x1, x2)

inst_29046:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffff800; valaddr_reg:x3; val_offset:87138*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87138*0 + 3*630*FLEN/8, x4, x1, x2)

inst_29047:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffc00; valaddr_reg:x3; val_offset:87141*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87141*0 + 3*631*FLEN/8, x4, x1, x2)

inst_29048:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffe00; valaddr_reg:x3; val_offset:87144*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87144*0 + 3*632*FLEN/8, x4, x1, x2)

inst_29049:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffff00; valaddr_reg:x3; val_offset:87147*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87147*0 + 3*633*FLEN/8, x4, x1, x2)

inst_29050:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffff80; valaddr_reg:x3; val_offset:87150*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87150*0 + 3*634*FLEN/8, x4, x1, x2)

inst_29051:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffffc0; valaddr_reg:x3; val_offset:87153*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87153*0 + 3*635*FLEN/8, x4, x1, x2)

inst_29052:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffffe0; valaddr_reg:x3; val_offset:87156*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87156*0 + 3*636*FLEN/8, x4, x1, x2)

inst_29053:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffff0; valaddr_reg:x3; val_offset:87159*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87159*0 + 3*637*FLEN/8, x4, x1, x2)

inst_29054:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffff8; valaddr_reg:x3; val_offset:87162*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87162*0 + 3*638*FLEN/8, x4, x1, x2)

inst_29055:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffffc; valaddr_reg:x3; val_offset:87165*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87165*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_29056:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80fffffffffffffe; valaddr_reg:x3; val_offset:87168*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87168*0 + 3*640*FLEN/8, x4, x1, x2)

inst_29057:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x19b0e37d9ad41 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x00f and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f919b0e37d9ad41; op2val:0x8000;
op3val:0x80ffffffffffffff; valaddr_reg:x3; val_offset:87171*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87171*0 + 3*641*FLEN/8, x4, x1, x2)

inst_29058:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x1; valaddr_reg:x3; val_offset:87174*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87174*0 + 3*642*FLEN/8, x4, x1, x2)

inst_29059:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3; valaddr_reg:x3; val_offset:87177*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87177*0 + 3*643*FLEN/8, x4, x1, x2)

inst_29060:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x7; valaddr_reg:x3; val_offset:87180*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87180*0 + 3*644*FLEN/8, x4, x1, x2)

inst_29061:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xf; valaddr_reg:x3; val_offset:87183*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87183*0 + 3*645*FLEN/8, x4, x1, x2)

inst_29062:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x1f; valaddr_reg:x3; val_offset:87186*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87186*0 + 3*646*FLEN/8, x4, x1, x2)

inst_29063:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3f; valaddr_reg:x3; val_offset:87189*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87189*0 + 3*647*FLEN/8, x4, x1, x2)

inst_29064:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3333333333333; valaddr_reg:x3; val_offset:87192*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87192*0 + 3*648*FLEN/8, x4, x1, x2)

inst_29065:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x4924924924924; valaddr_reg:x3; val_offset:87195*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87195*0 + 3*649*FLEN/8, x4, x1, x2)

inst_29066:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x6666666666666; valaddr_reg:x3; val_offset:87198*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87198*0 + 3*650*FLEN/8, x4, x1, x2)

inst_29067:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x6db6db6db6db6; valaddr_reg:x3; val_offset:87201*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87201*0 + 3*651*FLEN/8, x4, x1, x2)

inst_29068:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x7777777777777; valaddr_reg:x3; val_offset:87204*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87204*0 + 3*652*FLEN/8, x4, x1, x2)

inst_29069:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x8888888888888; valaddr_reg:x3; val_offset:87207*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87207*0 + 3*653*FLEN/8, x4, x1, x2)

inst_29070:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x9999999999999; valaddr_reg:x3; val_offset:87210*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87210*0 + 3*654*FLEN/8, x4, x1, x2)

inst_29071:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xb6db6db6db6db; valaddr_reg:x3; val_offset:87213*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87213*0 + 3*655*FLEN/8, x4, x1, x2)

inst_29072:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xccccccccccccc; valaddr_reg:x3; val_offset:87216*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87216*0 + 3*656*FLEN/8, x4, x1, x2)

inst_29073:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xdb6db6db6db6d; valaddr_reg:x3; val_offset:87219*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87219*0 + 3*657*FLEN/8, x4, x1, x2)

inst_29074:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xfffffffffffc0; valaddr_reg:x3; val_offset:87222*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87222*0 + 3*658*FLEN/8, x4, x1, x2)

inst_29075:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xfffffffffffe0; valaddr_reg:x3; val_offset:87225*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87225*0 + 3*659*FLEN/8, x4, x1, x2)

inst_29076:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xffffffffffff0; valaddr_reg:x3; val_offset:87228*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87228*0 + 3*660*FLEN/8, x4, x1, x2)

inst_29077:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xffffffffffff8; valaddr_reg:x3; val_offset:87231*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87231*0 + 3*661*FLEN/8, x4, x1, x2)

inst_29078:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xffffffffffffc; valaddr_reg:x3; val_offset:87234*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87234*0 + 3*662*FLEN/8, x4, x1, x2)

inst_29079:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x000 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0xffffffffffffe; valaddr_reg:x3; val_offset:87237*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87237*0 + 3*663*FLEN/8, x4, x1, x2)

inst_29080:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000000000; valaddr_reg:x3; val_offset:87240*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87240*0 + 3*664*FLEN/8, x4, x1, x2)

inst_29081:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000000001; valaddr_reg:x3; val_offset:87243*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87243*0 + 3*665*FLEN/8, x4, x1, x2)

inst_29082:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000000003; valaddr_reg:x3; val_offset:87246*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87246*0 + 3*666*FLEN/8, x4, x1, x2)

inst_29083:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000000007; valaddr_reg:x3; val_offset:87249*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87249*0 + 3*667*FLEN/8, x4, x1, x2)

inst_29084:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000000000f; valaddr_reg:x3; val_offset:87252*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87252*0 + 3*668*FLEN/8, x4, x1, x2)

inst_29085:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000000001f; valaddr_reg:x3; val_offset:87255*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87255*0 + 3*669*FLEN/8, x4, x1, x2)

inst_29086:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000000003f; valaddr_reg:x3; val_offset:87258*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87258*0 + 3*670*FLEN/8, x4, x1, x2)

inst_29087:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000000007f; valaddr_reg:x3; val_offset:87261*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87261*0 + 3*671*FLEN/8, x4, x1, x2)

inst_29088:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000000000ff; valaddr_reg:x3; val_offset:87264*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87264*0 + 3*672*FLEN/8, x4, x1, x2)

inst_29089:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000000001ff; valaddr_reg:x3; val_offset:87267*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87267*0 + 3*673*FLEN/8, x4, x1, x2)

inst_29090:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000000003ff; valaddr_reg:x3; val_offset:87270*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87270*0 + 3*674*FLEN/8, x4, x1, x2)

inst_29091:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000000007ff; valaddr_reg:x3; val_offset:87273*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87273*0 + 3*675*FLEN/8, x4, x1, x2)

inst_29092:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000000fff; valaddr_reg:x3; val_offset:87276*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87276*0 + 3*676*FLEN/8, x4, x1, x2)

inst_29093:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000001fff; valaddr_reg:x3; val_offset:87279*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87279*0 + 3*677*FLEN/8, x4, x1, x2)

inst_29094:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000003fff; valaddr_reg:x3; val_offset:87282*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87282*0 + 3*678*FLEN/8, x4, x1, x2)

inst_29095:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000007fff; valaddr_reg:x3; val_offset:87285*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87285*0 + 3*679*FLEN/8, x4, x1, x2)

inst_29096:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000000ffff; valaddr_reg:x3; val_offset:87288*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87288*0 + 3*680*FLEN/8, x4, x1, x2)

inst_29097:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000001ffff; valaddr_reg:x3; val_offset:87291*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87291*0 + 3*681*FLEN/8, x4, x1, x2)

inst_29098:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000003ffff; valaddr_reg:x3; val_offset:87294*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87294*0 + 3*682*FLEN/8, x4, x1, x2)

inst_29099:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000007ffff; valaddr_reg:x3; val_offset:87297*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87297*0 + 3*683*FLEN/8, x4, x1, x2)

inst_29100:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000000fffff; valaddr_reg:x3; val_offset:87300*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87300*0 + 3*684*FLEN/8, x4, x1, x2)

inst_29101:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000001fffff; valaddr_reg:x3; val_offset:87303*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87303*0 + 3*685*FLEN/8, x4, x1, x2)

inst_29102:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000003fffff; valaddr_reg:x3; val_offset:87306*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87306*0 + 3*686*FLEN/8, x4, x1, x2)

inst_29103:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000007fffff; valaddr_reg:x3; val_offset:87309*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87309*0 + 3*687*FLEN/8, x4, x1, x2)

inst_29104:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000000ffffff; valaddr_reg:x3; val_offset:87312*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87312*0 + 3*688*FLEN/8, x4, x1, x2)

inst_29105:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000001ffffff; valaddr_reg:x3; val_offset:87315*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87315*0 + 3*689*FLEN/8, x4, x1, x2)

inst_29106:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000003ffffff; valaddr_reg:x3; val_offset:87318*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87318*0 + 3*690*FLEN/8, x4, x1, x2)

inst_29107:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000007ffffff; valaddr_reg:x3; val_offset:87321*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87321*0 + 3*691*FLEN/8, x4, x1, x2)

inst_29108:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000000fffffff; valaddr_reg:x3; val_offset:87324*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87324*0 + 3*692*FLEN/8, x4, x1, x2)

inst_29109:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000001fffffff; valaddr_reg:x3; val_offset:87327*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87327*0 + 3*693*FLEN/8, x4, x1, x2)

inst_29110:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000003fffffff; valaddr_reg:x3; val_offset:87330*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87330*0 + 3*694*FLEN/8, x4, x1, x2)

inst_29111:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000007fffffff; valaddr_reg:x3; val_offset:87333*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87333*0 + 3*695*FLEN/8, x4, x1, x2)

inst_29112:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200000ffffffff; valaddr_reg:x3; val_offset:87336*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87336*0 + 3*696*FLEN/8, x4, x1, x2)

inst_29113:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200001ffffffff; valaddr_reg:x3; val_offset:87339*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87339*0 + 3*697*FLEN/8, x4, x1, x2)

inst_29114:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200003ffffffff; valaddr_reg:x3; val_offset:87342*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87342*0 + 3*698*FLEN/8, x4, x1, x2)

inst_29115:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200007ffffffff; valaddr_reg:x3; val_offset:87345*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87345*0 + 3*699*FLEN/8, x4, x1, x2)

inst_29116:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320000fffffffff; valaddr_reg:x3; val_offset:87348*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87348*0 + 3*700*FLEN/8, x4, x1, x2)

inst_29117:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320001fffffffff; valaddr_reg:x3; val_offset:87351*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87351*0 + 3*701*FLEN/8, x4, x1, x2)

inst_29118:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320003fffffffff; valaddr_reg:x3; val_offset:87354*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87354*0 + 3*702*FLEN/8, x4, x1, x2)

inst_29119:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320007fffffffff; valaddr_reg:x3; val_offset:87357*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87357*0 + 3*703*FLEN/8, x4, x1, x2)

inst_29120:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32000ffffffffff; valaddr_reg:x3; val_offset:87360*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87360*0 + 3*704*FLEN/8, x4, x1, x2)

inst_29121:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32001ffffffffff; valaddr_reg:x3; val_offset:87363*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87363*0 + 3*705*FLEN/8, x4, x1, x2)

inst_29122:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32003ffffffffff; valaddr_reg:x3; val_offset:87366*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87366*0 + 3*706*FLEN/8, x4, x1, x2)

inst_29123:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32007ffffffffff; valaddr_reg:x3; val_offset:87369*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87369*0 + 3*707*FLEN/8, x4, x1, x2)

inst_29124:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3200fffffffffff; valaddr_reg:x3; val_offset:87372*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87372*0 + 3*708*FLEN/8, x4, x1, x2)

inst_29125:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3201fffffffffff; valaddr_reg:x3; val_offset:87375*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87375*0 + 3*709*FLEN/8, x4, x1, x2)

inst_29126:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3203fffffffffff; valaddr_reg:x3; val_offset:87378*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87378*0 + 3*710*FLEN/8, x4, x1, x2)

inst_29127:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x3207fffffffffff; valaddr_reg:x3; val_offset:87381*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87381*0 + 3*711*FLEN/8, x4, x1, x2)

inst_29128:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x320ffffffffffff; valaddr_reg:x3; val_offset:87384*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87384*0 + 3*712*FLEN/8, x4, x1, x2)

inst_29129:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x321ffffffffffff; valaddr_reg:x3; val_offset:87387*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87387*0 + 3*713*FLEN/8, x4, x1, x2)

inst_29130:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x323ffffffffffff; valaddr_reg:x3; val_offset:87390*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87390*0 + 3*714*FLEN/8, x4, x1, x2)

inst_29131:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x327ffffffffffff; valaddr_reg:x3; val_offset:87393*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87393*0 + 3*715*FLEN/8, x4, x1, x2)

inst_29132:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x328000000000000; valaddr_reg:x3; val_offset:87396*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87396*0 + 3*716*FLEN/8, x4, x1, x2)

inst_29133:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32c000000000000; valaddr_reg:x3; val_offset:87399*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87399*0 + 3*717*FLEN/8, x4, x1, x2)

inst_29134:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32e000000000000; valaddr_reg:x3; val_offset:87402*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87402*0 + 3*718*FLEN/8, x4, x1, x2)

inst_29135:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32f000000000000; valaddr_reg:x3; val_offset:87405*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87405*0 + 3*719*FLEN/8, x4, x1, x2)

inst_29136:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32f800000000000; valaddr_reg:x3; val_offset:87408*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87408*0 + 3*720*FLEN/8, x4, x1, x2)

inst_29137:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fc00000000000; valaddr_reg:x3; val_offset:87411*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87411*0 + 3*721*FLEN/8, x4, x1, x2)

inst_29138:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fe00000000000; valaddr_reg:x3; val_offset:87414*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87414*0 + 3*722*FLEN/8, x4, x1, x2)

inst_29139:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ff00000000000; valaddr_reg:x3; val_offset:87417*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87417*0 + 3*723*FLEN/8, x4, x1, x2)

inst_29140:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ff80000000000; valaddr_reg:x3; val_offset:87420*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87420*0 + 3*724*FLEN/8, x4, x1, x2)

inst_29141:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffc0000000000; valaddr_reg:x3; val_offset:87423*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87423*0 + 3*725*FLEN/8, x4, x1, x2)

inst_29142:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffe0000000000; valaddr_reg:x3; val_offset:87426*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87426*0 + 3*726*FLEN/8, x4, x1, x2)

inst_29143:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fff0000000000; valaddr_reg:x3; val_offset:87429*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87429*0 + 3*727*FLEN/8, x4, x1, x2)

inst_29144:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fff8000000000; valaddr_reg:x3; val_offset:87432*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87432*0 + 3*728*FLEN/8, x4, x1, x2)

inst_29145:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffc000000000; valaddr_reg:x3; val_offset:87435*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87435*0 + 3*729*FLEN/8, x4, x1, x2)

inst_29146:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffe000000000; valaddr_reg:x3; val_offset:87438*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87438*0 + 3*730*FLEN/8, x4, x1, x2)

inst_29147:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffff000000000; valaddr_reg:x3; val_offset:87441*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87441*0 + 3*731*FLEN/8, x4, x1, x2)

inst_29148:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffff800000000; valaddr_reg:x3; val_offset:87444*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87444*0 + 3*732*FLEN/8, x4, x1, x2)

inst_29149:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffc00000000; valaddr_reg:x3; val_offset:87447*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87447*0 + 3*733*FLEN/8, x4, x1, x2)

inst_29150:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffe00000000; valaddr_reg:x3; val_offset:87450*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87450*0 + 3*734*FLEN/8, x4, x1, x2)

inst_29151:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffff00000000; valaddr_reg:x3; val_offset:87453*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87453*0 + 3*735*FLEN/8, x4, x1, x2)

inst_29152:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffff80000000; valaddr_reg:x3; val_offset:87456*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87456*0 + 3*736*FLEN/8, x4, x1, x2)

inst_29153:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffc0000000; valaddr_reg:x3; val_offset:87459*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87459*0 + 3*737*FLEN/8, x4, x1, x2)

inst_29154:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffe0000000; valaddr_reg:x3; val_offset:87462*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87462*0 + 3*738*FLEN/8, x4, x1, x2)

inst_29155:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffff0000000; valaddr_reg:x3; val_offset:87465*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87465*0 + 3*739*FLEN/8, x4, x1, x2)

inst_29156:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffff8000000; valaddr_reg:x3; val_offset:87468*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87468*0 + 3*740*FLEN/8, x4, x1, x2)

inst_29157:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffc000000; valaddr_reg:x3; val_offset:87471*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87471*0 + 3*741*FLEN/8, x4, x1, x2)

inst_29158:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffe000000; valaddr_reg:x3; val_offset:87474*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87474*0 + 3*742*FLEN/8, x4, x1, x2)

inst_29159:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffff000000; valaddr_reg:x3; val_offset:87477*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87477*0 + 3*743*FLEN/8, x4, x1, x2)

inst_29160:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffff800000; valaddr_reg:x3; val_offset:87480*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87480*0 + 3*744*FLEN/8, x4, x1, x2)

inst_29161:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffc00000; valaddr_reg:x3; val_offset:87483*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87483*0 + 3*745*FLEN/8, x4, x1, x2)

inst_29162:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffe00000; valaddr_reg:x3; val_offset:87486*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87486*0 + 3*746*FLEN/8, x4, x1, x2)

inst_29163:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffff00000; valaddr_reg:x3; val_offset:87489*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87489*0 + 3*747*FLEN/8, x4, x1, x2)

inst_29164:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffff80000; valaddr_reg:x3; val_offset:87492*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87492*0 + 3*748*FLEN/8, x4, x1, x2)

inst_29165:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffc0000; valaddr_reg:x3; val_offset:87495*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87495*0 + 3*749*FLEN/8, x4, x1, x2)

inst_29166:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffe0000; valaddr_reg:x3; val_offset:87498*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87498*0 + 3*750*FLEN/8, x4, x1, x2)

inst_29167:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffff0000; valaddr_reg:x3; val_offset:87501*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87501*0 + 3*751*FLEN/8, x4, x1, x2)

inst_29168:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffff8000; valaddr_reg:x3; val_offset:87504*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87504*0 + 3*752*FLEN/8, x4, x1, x2)

inst_29169:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffc000; valaddr_reg:x3; val_offset:87507*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87507*0 + 3*753*FLEN/8, x4, x1, x2)

inst_29170:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffe000; valaddr_reg:x3; val_offset:87510*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87510*0 + 3*754*FLEN/8, x4, x1, x2)

inst_29171:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffff000; valaddr_reg:x3; val_offset:87513*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87513*0 + 3*755*FLEN/8, x4, x1, x2)

inst_29172:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffff800; valaddr_reg:x3; val_offset:87516*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87516*0 + 3*756*FLEN/8, x4, x1, x2)

inst_29173:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffc00; valaddr_reg:x3; val_offset:87519*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87519*0 + 3*757*FLEN/8, x4, x1, x2)

inst_29174:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffe00; valaddr_reg:x3; val_offset:87522*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87522*0 + 3*758*FLEN/8, x4, x1, x2)

inst_29175:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffff00; valaddr_reg:x3; val_offset:87525*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87525*0 + 3*759*FLEN/8, x4, x1, x2)

inst_29176:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffff80; valaddr_reg:x3; val_offset:87528*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87528*0 + 3*760*FLEN/8, x4, x1, x2)

inst_29177:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffffc0; valaddr_reg:x3; val_offset:87531*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87531*0 + 3*761*FLEN/8, x4, x1, x2)

inst_29178:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffffe0; valaddr_reg:x3; val_offset:87534*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87534*0 + 3*762*FLEN/8, x4, x1, x2)

inst_29179:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffff0; valaddr_reg:x3; val_offset:87537*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87537*0 + 3*763*FLEN/8, x4, x1, x2)

inst_29180:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffff8; valaddr_reg:x3; val_offset:87540*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87540*0 + 3*764*FLEN/8, x4, x1, x2)

inst_29181:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffffc; valaddr_reg:x3; val_offset:87543*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87543*0 + 3*765*FLEN/8, x4, x1, x2)

inst_29182:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32ffffffffffffe; valaddr_reg:x3; val_offset:87546*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87546*0 + 3*766*FLEN/8, x4, x1, x2)

inst_29183:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0x1e65edfed8bf9 and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000000000 and fs3 == 0 and fe3 == 0x032 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fnmsub.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f91e65edfed8bf9; op2val:0x0;
op3val:0x32fffffffffffff; valaddr_reg:x3; val_offset:87549*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fnmsub.d, f31, f30, f29, f28, dyn, 0, 0, x3, 87549*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886352915693885699,64,FLEN)
NAN_BOXED(2327713060469981406,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891904,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891905,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891907,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891911,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891919,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891935,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056891967,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892031,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892159,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892415,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056892927,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056893951,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056895999,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056900095,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056908287,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056924671,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391056957439,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057022975,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057154047,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057416191,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391057940479,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391058989055,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391061086207,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391065280511,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391073669119,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391090446335,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391124000767,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391191109631,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391325327359,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086391593762815,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086392130633727,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086393204375551,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086395351859199,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086399646826495,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086408236761087,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086425416630271,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086459776368639,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086528495845375,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086665934798847,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108086940812705791,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108087490568519679,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108088590080147455,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108090789103403007,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108095187149914111,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108103983242936319,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108121575428980735,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108156759801069567,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108227128545247231,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108367866033602559,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(108649341010313215,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(109212290963734527,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577151,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(110338190870577152,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(111464090777419776,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112027040730841088,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112308515707551744,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112449253195907072,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112519621940084736,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112554806312173568,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112572398498217984,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112581194591240192,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112585592637751296,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112587791661006848,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112588891172634624,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589440928448512,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589715806355456,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589853245308928,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589921964785664,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589956324524032,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589973504393216,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589982094327808,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589986389295104,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589988536778752,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589989610520576,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990147391488,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990415826944,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990550044672,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990617153536,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990650707968,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990667485184,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990675873792,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990680068096,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990682165248,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683213824,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990683738112,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684000256,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684131328,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684196864,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684229632,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684246016,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684254208,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684258304,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684260352,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261376,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684261888,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262144,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262272,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262336,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262368,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262384,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262392,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262396,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262398,64,FLEN)
NAN_BOXED(6886353880079675563,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(112589990684262399,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185728,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185729,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185731,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185735,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185743,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185759,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185791,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185855,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402185983,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186239,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402186751,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402187775,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402189823,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402193919,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402202111,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402218495,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402251263,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402316799,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402447871,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029402710015,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029403234303,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029404282879,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029406380031,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029410574335,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029418962943,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029435740159,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029469294591,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029536403455,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029670621183,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444029939056639,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444030475927551,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444031549669375,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444033697153023,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444037992120319,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444046582054911,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444063761924095,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444098121662463,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444166841139199,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444304280092671,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313444579157999615,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313445128913813503,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313446228425441279,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313448427448696831,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313452825495207935,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313461621588230143,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313479213774274559,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313514398146363391,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313584766890541055,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9313725504378896383,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314006979355607039,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9314569929309028351,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870975,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9315695829215870976,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9316821729122713600,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317384679076134912,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317666154052845568,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317806891541200896,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317877260285378560,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317912444657467392,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317930036843511808,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317938832936534016,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317943230983045120,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317945430006300672,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317946529517928448,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947079273742336,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947354151649280,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947491590602752,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947560310079488,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947594669817856,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947611849687040,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947620439621632,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947624734588928,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947626882072576,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947627955814400,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628492685312,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628761120768,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628895338496,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628962447360,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947628996001792,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629012779008,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629021167616,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629025361920,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629027459072,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629028507648,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029031936,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029294080,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029425152,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029490688,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029523456,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029539840,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029548032,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029552128,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029554176,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555200,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555712,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029555968,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556096,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556160,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556192,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556208,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556216,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556220,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556222,64,FLEN)
NAN_BOXED(6886372900492316725,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9317947629029556223,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115328,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115329,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115331,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115335,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115343,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115359,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115391,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115455,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115583,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926115839,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926116351,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926117375,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926119423,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926123519,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926131711,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926148095,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926180863,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926246399,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926377471,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457926639615,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457927163903,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457928212479,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457930309631,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457934503935,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457942892543,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457959669759,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304457993224191,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304458060333055,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304458194550783,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304458462986239,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304458999857151,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304460073598975,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304462221082623,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304466516049919,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304475105984511,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304492285853695,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304526645592063,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304595365068799,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134304732804022271,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134305007681929215,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134305557437743103,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134306656949370879,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134308855972626431,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134313254019137535,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134322050112159743,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134339642298204159,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134374826670292991,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134445195414470655,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134585932902825983,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4134867407879536639,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4135430357832957951,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4136556257739800575,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4136556257739800576,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4137682157646643200,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138245107600064512,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138526582576775168,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138667320065130496,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138737688809308160,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138772873181396992,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138790465367441408,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138799261460463616,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138803659506974720,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138805858530230272,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138806958041858048,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138807507797671936,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138807782675578880,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138807920114532352,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138807988834009088,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808023193747456,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808040373616640,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808048963551232,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808053258518528,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808055406002176,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808056479744000,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057016614912,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057285050368,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057419268096,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057486376960,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057519931392,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057536708608,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057545097216,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057549291520,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057551388672,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057552437248,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057552961536,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553223680,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553354752,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553420288,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553453056,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553469440,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553477632,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553481728,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553483776,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553484800,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485312,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485568,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485696,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485760,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485792,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485808,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485816,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485820,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485822,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4138808057553485823,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886374924715088739,64,FLEN)
NAN_BOXED(2327675318827278104,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309056,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309057,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309059,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309063,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309071,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309087,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309119,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309183,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309311,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587309567,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587310079,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587311103,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587313151,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587317247,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587325439,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587341823,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587374591,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587440127,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587571199,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232587833343,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232588357631,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232589406207,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232591503359,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232595697663,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232604086271,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232620863487,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232654417919,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232721526783,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549232855744511,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549233124179967,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549233661050879,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549234734792703,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549236882276351,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549241177243647,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549249767178239,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549266947047423,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549301306785791,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549370026262527,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549507465215999,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440549782343122943,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440550332098936831,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440551431610564607,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440553630633820159,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440558028680331263,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440566824773353471,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440584416959397887,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440619601331486719,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440689970075664383,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4440830707564019711,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4441112182540730367,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4441675132494151679,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4442801032400994303,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4442801032400994304,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4443926932307836928,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4444489882261258240,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4444771357237968896,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4444912094726324224,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4444982463470501888,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445017647842590720,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445035240028635136,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445044036121657344,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445048434168168448,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445050633191424000,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445051732703051776,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052282458865664,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052557336772608,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052694775726080,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052763495202816,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052797854941184,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052815034810368,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052823624744960,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052827919712256,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052830067195904,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052831140937728,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052831677808640,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052831946244096,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832080461824,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832147570688,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832181125120,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832197902336,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832206290944,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832210485248,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832212582400,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832213630976,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214155264,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214417408,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214548480,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214614016,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214646784,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214663168,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214671360,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214675456,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214677504,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214678528,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679040,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679296,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679424,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679488,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679520,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679536,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679544,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679548,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679550,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4445052832214679551,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017409,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017411,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017415,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017423,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017439,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4607182418800017471,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4608083138725491507,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4608469161550694692,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4608983858650965606,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4609112532926033334,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4609284098626123639,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4609584338601281672,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4609884578576439705,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4610399275676710619,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4610785298501913804,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611042647052049261,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387840,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387872,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387888,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387896,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387900,64,FLEN)
NAN_BOXED(6886431831514662685,64,FLEN)
NAN_BOXED(2327579295131592544,64,FLEN)
NAN_BOXED(4611686018427387902,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775809,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775811,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775815,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775823,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775839,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9223372036854775871,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224272756780249907,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9224658779605453092,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225173476705724006,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225302150980791734,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225473716680882039,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9225773956656040072,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226074196631198105,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226588893731469019,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9226974916556672204,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227232265106807661,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146240,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146272,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146288,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146296,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146300,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146302,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333248,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333249,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333251,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333255,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333263,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333279,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333311,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333375,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333503,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265333759,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265334271,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265335295,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265337343,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265341439,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265349631,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265366015,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265398783,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265464319,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265595391,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031265857535,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031266381823,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031267430399,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031269527551,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031273721855,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031282110463,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031298887679,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031332442111,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031399550975,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031533768703,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926031802204159,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926032339075071,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926033412816895,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926035560300543,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926039855267839,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926048445202431,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926065625071615,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926099984809983,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926168704286719,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926306143240191,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290926581021147135,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290927130776961023,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290928230288588799,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290930429311844351,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290934827358355455,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290943623451377663,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290961215637422079,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9290996400009510911,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291066768753688575,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291207506242043903,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9291488981218754559,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9292051931172175871,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018495,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9293177831079018496,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294303730985861120,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9294866680939282432,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295148155915993088,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295288893404348416,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295359262148526080,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295394446520614912,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295412038706659328,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295420834799681536,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295425232846192640,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295427431869448192,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295428531381075968,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429081136889856,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429356014796800,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429493453750272,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429562173227008,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429596532965376,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429613712834560,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429622302769152,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429626597736448,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429628745220096,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429629818961920,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630355832832,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630624268288,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630758486016,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630825594880,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630859149312,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630875926528,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630884315136,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630888509440,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630890606592,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630891655168,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892179456,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892441600,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892572672,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892638208,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892670976,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892687360,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892695552,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892699648,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892701696,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892702720,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703232,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703488,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703616,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703680,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703712,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703728,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703736,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703740,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703742,64,FLEN)
NAN_BOXED(6886455790595059009,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9295429630892703743,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(7,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(15,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(31,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(63,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(900719925474099,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1286742750677284,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1801439850948198,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(1930114126015926,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2101679826106231,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2401919801264264,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(2702159776422297,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3216856876693211,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3602879701896396,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(3860228252031853,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370432,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370464,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370480,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370488,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370492,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(4503599627370494,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524800,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524801,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524803,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524807,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524815,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524831,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524863,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368524927,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525055,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525311,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368525823,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368526847,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368528895,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368532991,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368541183,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368557567,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368590335,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368655871,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981368786943,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369049087,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981369573375,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981370621951,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981372719103,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981376913407,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981385302015,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981402079231,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981435633663,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981502742527,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981636960255,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179981905395711,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179982442266623,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179983516008447,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179985663492095,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179989958459391,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225179998548393983,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180015728263167,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180050088001535,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180118807478271,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180256246431743,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225180531124338687,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225181080880152575,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225182180391780351,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225184379415035903,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225188777461547007,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225197573554569215,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225215165740613631,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225250350112702463,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225320718856880127,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225461456345235455,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(225742931321946111,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(226305881275367423,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210047,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(227431781182210048,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(228557681089052672,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229120631042473984,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229402106019184640,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229542843507539968,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229613212251717632,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229648396623806464,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229665988809850880,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229674784902873088,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229679182949384192,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229681381972639744,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229682481484267520,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683031240081408,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683306117988352,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683443556941824,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683512276418560,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683546636156928,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683563816026112,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683572405960704,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683576700928000,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683578848411648,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683579922153472,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580459024384,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580727459840,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580861677568,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580928786432,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580962340864,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580979118080,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580987506688,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580991700992,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580993798144,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580994846720,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995371008,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995633152,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995764224,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995829760,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995862528,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995878912,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995887104,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995891200,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995893248,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894272,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995894784,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895040,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895168,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895232,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895264,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895280,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895288,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895292,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895294,64,FLEN)
NAN_BOXED(6886538600384400377,64,FLEN)
NAN_BOXED(0,64,FLEN)
NAN_BOXED(229683580995895295,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
