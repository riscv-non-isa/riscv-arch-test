
// -----------
// This file was generated by riscv_ctg (https://github.com/riscv-software-src/riscv-ctg)
// version   : 0.7.1
// timestamp : Fri Jun 17 15:29:07 2022 GMT
// usage     : riscv_ctg \
//                  -- cgf //                  --cgf /scratch/pawan/work/normalised/RV32D/fmadd.d.cgf \
 \
//                  -- xlen 32  \
//                  --randomize \
// -----------
//
// -----------
// Copyright (c) 2020. RISC-V International. All rights reserved.
// SPDX-License-Identifier: BSD-3-Clause
// -----------
//
// This assembly file tests the fmadd.d instruction of the RISC-V RV32FD_Zicsr,RV64FD_Zicsr extension for the fmadd.d_b15 covergroup.
// 
#include "model_test.h"
#include "arch_test.h"
RVTEST_ISA("RV32IFD_Zicsr,RV64IFD_Zicsr,RV32EFD_Zicsr,RV64EFD_Zicsr")

.section .text.init
.globl rvtest_entry_point
rvtest_entry_point:
RVMODEL_BOOT
RVTEST_CODE_BEGIN

#ifdef TEST_CASE_1

RVTEST_CASE(0,"//check ISA:=regex(.*I.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_CASE(1,"//check ISA:=regex(.*E.*D.*);def TEST_CASE_1=True;",fmadd.d_b15)
RVTEST_FP_ENABLE()
RVTEST_VALBASEUPD(x3,test_dataset_0)
RVTEST_SIGBASE(x1,signature_x1_1)

inst_51456:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000000003f; valaddr_reg:x3; val_offset:154368*0 + 3*-1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154368*0 + 3*0*FLEN/8, x4, x1, x2)

inst_51457:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000000007f; valaddr_reg:x3; val_offset:154371*0 + 3*0*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154371*0 + 3*1*FLEN/8, x4, x1, x2)

inst_51458:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000000000ff; valaddr_reg:x3; val_offset:154374*0 + 3*1*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154374*0 + 3*2*FLEN/8, x4, x1, x2)

inst_51459:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000000001ff; valaddr_reg:x3; val_offset:154377*0 + 3*2*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154377*0 + 3*3*FLEN/8, x4, x1, x2)

inst_51460:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000000003ff; valaddr_reg:x3; val_offset:154380*0 + 3*3*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154380*0 + 3*4*FLEN/8, x4, x1, x2)

inst_51461:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000000007ff; valaddr_reg:x3; val_offset:154383*0 + 3*4*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154383*0 + 3*5*FLEN/8, x4, x1, x2)

inst_51462:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000000000fff; valaddr_reg:x3; val_offset:154386*0 + 3*5*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154386*0 + 3*6*FLEN/8, x4, x1, x2)

inst_51463:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000000001fff; valaddr_reg:x3; val_offset:154389*0 + 3*6*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154389*0 + 3*7*FLEN/8, x4, x1, x2)

inst_51464:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000000003fff; valaddr_reg:x3; val_offset:154392*0 + 3*7*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154392*0 + 3*8*FLEN/8, x4, x1, x2)

inst_51465:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000000007fff; valaddr_reg:x3; val_offset:154395*0 + 3*8*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154395*0 + 3*9*FLEN/8, x4, x1, x2)

inst_51466:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000000ffff; valaddr_reg:x3; val_offset:154398*0 + 3*9*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154398*0 + 3*10*FLEN/8, x4, x1, x2)

inst_51467:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000001ffff; valaddr_reg:x3; val_offset:154401*0 + 3*10*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154401*0 + 3*11*FLEN/8, x4, x1, x2)

inst_51468:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000003ffff; valaddr_reg:x3; val_offset:154404*0 + 3*11*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154404*0 + 3*12*FLEN/8, x4, x1, x2)

inst_51469:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000007ffff; valaddr_reg:x3; val_offset:154407*0 + 3*12*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154407*0 + 3*13*FLEN/8, x4, x1, x2)

inst_51470:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000000fffff; valaddr_reg:x3; val_offset:154410*0 + 3*13*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154410*0 + 3*14*FLEN/8, x4, x1, x2)

inst_51471:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000001fffff; valaddr_reg:x3; val_offset:154413*0 + 3*14*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154413*0 + 3*15*FLEN/8, x4, x1, x2)

inst_51472:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000003fffff; valaddr_reg:x3; val_offset:154416*0 + 3*15*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154416*0 + 3*16*FLEN/8, x4, x1, x2)

inst_51473:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000007fffff; valaddr_reg:x3; val_offset:154419*0 + 3*16*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154419*0 + 3*17*FLEN/8, x4, x1, x2)

inst_51474:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000000ffffff; valaddr_reg:x3; val_offset:154422*0 + 3*17*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154422*0 + 3*18*FLEN/8, x4, x1, x2)

inst_51475:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000001ffffff; valaddr_reg:x3; val_offset:154425*0 + 3*18*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154425*0 + 3*19*FLEN/8, x4, x1, x2)

inst_51476:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000003ffffff; valaddr_reg:x3; val_offset:154428*0 + 3*19*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154428*0 + 3*20*FLEN/8, x4, x1, x2)

inst_51477:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000007ffffff; valaddr_reg:x3; val_offset:154431*0 + 3*20*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154431*0 + 3*21*FLEN/8, x4, x1, x2)

inst_51478:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000000fffffff; valaddr_reg:x3; val_offset:154434*0 + 3*21*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154434*0 + 3*22*FLEN/8, x4, x1, x2)

inst_51479:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000001fffffff; valaddr_reg:x3; val_offset:154437*0 + 3*22*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154437*0 + 3*23*FLEN/8, x4, x1, x2)

inst_51480:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000003fffffff; valaddr_reg:x3; val_offset:154440*0 + 3*23*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154440*0 + 3*24*FLEN/8, x4, x1, x2)

inst_51481:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000007fffffff; valaddr_reg:x3; val_offset:154443*0 + 3*24*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154443*0 + 3*25*FLEN/8, x4, x1, x2)

inst_51482:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800000ffffffff; valaddr_reg:x3; val_offset:154446*0 + 3*25*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154446*0 + 3*26*FLEN/8, x4, x1, x2)

inst_51483:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800001ffffffff; valaddr_reg:x3; val_offset:154449*0 + 3*26*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154449*0 + 3*27*FLEN/8, x4, x1, x2)

inst_51484:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800003ffffffff; valaddr_reg:x3; val_offset:154452*0 + 3*27*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154452*0 + 3*28*FLEN/8, x4, x1, x2)

inst_51485:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800007ffffffff; valaddr_reg:x3; val_offset:154455*0 + 3*28*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154455*0 + 3*29*FLEN/8, x4, x1, x2)

inst_51486:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80000fffffffff; valaddr_reg:x3; val_offset:154458*0 + 3*29*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154458*0 + 3*30*FLEN/8, x4, x1, x2)

inst_51487:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80001fffffffff; valaddr_reg:x3; val_offset:154461*0 + 3*30*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154461*0 + 3*31*FLEN/8, x4, x1, x2)

inst_51488:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80003fffffffff; valaddr_reg:x3; val_offset:154464*0 + 3*31*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154464*0 + 3*32*FLEN/8, x4, x1, x2)

inst_51489:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80007fffffffff; valaddr_reg:x3; val_offset:154467*0 + 3*32*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154467*0 + 3*33*FLEN/8, x4, x1, x2)

inst_51490:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8000ffffffffff; valaddr_reg:x3; val_offset:154470*0 + 3*33*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154470*0 + 3*34*FLEN/8, x4, x1, x2)

inst_51491:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8001ffffffffff; valaddr_reg:x3; val_offset:154473*0 + 3*34*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154473*0 + 3*35*FLEN/8, x4, x1, x2)

inst_51492:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8003ffffffffff; valaddr_reg:x3; val_offset:154476*0 + 3*35*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154476*0 + 3*36*FLEN/8, x4, x1, x2)

inst_51493:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8007ffffffffff; valaddr_reg:x3; val_offset:154479*0 + 3*36*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154479*0 + 3*37*FLEN/8, x4, x1, x2)

inst_51494:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc800fffffffffff; valaddr_reg:x3; val_offset:154482*0 + 3*37*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154482*0 + 3*38*FLEN/8, x4, x1, x2)

inst_51495:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc801fffffffffff; valaddr_reg:x3; val_offset:154485*0 + 3*38*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154485*0 + 3*39*FLEN/8, x4, x1, x2)

inst_51496:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc803fffffffffff; valaddr_reg:x3; val_offset:154488*0 + 3*39*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154488*0 + 3*40*FLEN/8, x4, x1, x2)

inst_51497:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc807fffffffffff; valaddr_reg:x3; val_offset:154491*0 + 3*40*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154491*0 + 3*41*FLEN/8, x4, x1, x2)

inst_51498:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc80ffffffffffff; valaddr_reg:x3; val_offset:154494*0 + 3*41*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154494*0 + 3*42*FLEN/8, x4, x1, x2)

inst_51499:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc81ffffffffffff; valaddr_reg:x3; val_offset:154497*0 + 3*42*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154497*0 + 3*43*FLEN/8, x4, x1, x2)

inst_51500:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc83ffffffffffff; valaddr_reg:x3; val_offset:154500*0 + 3*43*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154500*0 + 3*44*FLEN/8, x4, x1, x2)

inst_51501:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc87ffffffffffff; valaddr_reg:x3; val_offset:154503*0 + 3*44*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154503*0 + 3*45*FLEN/8, x4, x1, x2)

inst_51502:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc88000000000000; valaddr_reg:x3; val_offset:154506*0 + 3*45*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154506*0 + 3*46*FLEN/8, x4, x1, x2)

inst_51503:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8c000000000000; valaddr_reg:x3; val_offset:154509*0 + 3*46*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154509*0 + 3*47*FLEN/8, x4, x1, x2)

inst_51504:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8e000000000000; valaddr_reg:x3; val_offset:154512*0 + 3*47*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154512*0 + 3*48*FLEN/8, x4, x1, x2)

inst_51505:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8f000000000000; valaddr_reg:x3; val_offset:154515*0 + 3*48*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154515*0 + 3*49*FLEN/8, x4, x1, x2)

inst_51506:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8f800000000000; valaddr_reg:x3; val_offset:154518*0 + 3*49*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154518*0 + 3*50*FLEN/8, x4, x1, x2)

inst_51507:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fc00000000000; valaddr_reg:x3; val_offset:154521*0 + 3*50*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154521*0 + 3*51*FLEN/8, x4, x1, x2)

inst_51508:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fe00000000000; valaddr_reg:x3; val_offset:154524*0 + 3*51*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154524*0 + 3*52*FLEN/8, x4, x1, x2)

inst_51509:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ff00000000000; valaddr_reg:x3; val_offset:154527*0 + 3*52*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154527*0 + 3*53*FLEN/8, x4, x1, x2)

inst_51510:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ff80000000000; valaddr_reg:x3; val_offset:154530*0 + 3*53*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154530*0 + 3*54*FLEN/8, x4, x1, x2)

inst_51511:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffc0000000000; valaddr_reg:x3; val_offset:154533*0 + 3*54*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154533*0 + 3*55*FLEN/8, x4, x1, x2)

inst_51512:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffe0000000000; valaddr_reg:x3; val_offset:154536*0 + 3*55*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154536*0 + 3*56*FLEN/8, x4, x1, x2)

inst_51513:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fff0000000000; valaddr_reg:x3; val_offset:154539*0 + 3*56*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154539*0 + 3*57*FLEN/8, x4, x1, x2)

inst_51514:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fff8000000000; valaddr_reg:x3; val_offset:154542*0 + 3*57*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154542*0 + 3*58*FLEN/8, x4, x1, x2)

inst_51515:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffc000000000; valaddr_reg:x3; val_offset:154545*0 + 3*58*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154545*0 + 3*59*FLEN/8, x4, x1, x2)

inst_51516:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffe000000000; valaddr_reg:x3; val_offset:154548*0 + 3*59*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154548*0 + 3*60*FLEN/8, x4, x1, x2)

inst_51517:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffff000000000; valaddr_reg:x3; val_offset:154551*0 + 3*60*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154551*0 + 3*61*FLEN/8, x4, x1, x2)

inst_51518:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffff800000000; valaddr_reg:x3; val_offset:154554*0 + 3*61*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154554*0 + 3*62*FLEN/8, x4, x1, x2)

inst_51519:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffc00000000; valaddr_reg:x3; val_offset:154557*0 + 3*62*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154557*0 + 3*63*FLEN/8, x4, x1, x2)

inst_51520:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffe00000000; valaddr_reg:x3; val_offset:154560*0 + 3*63*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154560*0 + 3*64*FLEN/8, x4, x1, x2)

inst_51521:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffff00000000; valaddr_reg:x3; val_offset:154563*0 + 3*64*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154563*0 + 3*65*FLEN/8, x4, x1, x2)

inst_51522:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffff80000000; valaddr_reg:x3; val_offset:154566*0 + 3*65*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154566*0 + 3*66*FLEN/8, x4, x1, x2)

inst_51523:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffc0000000; valaddr_reg:x3; val_offset:154569*0 + 3*66*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154569*0 + 3*67*FLEN/8, x4, x1, x2)

inst_51524:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffe0000000; valaddr_reg:x3; val_offset:154572*0 + 3*67*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154572*0 + 3*68*FLEN/8, x4, x1, x2)

inst_51525:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffff0000000; valaddr_reg:x3; val_offset:154575*0 + 3*68*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154575*0 + 3*69*FLEN/8, x4, x1, x2)

inst_51526:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffff8000000; valaddr_reg:x3; val_offset:154578*0 + 3*69*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154578*0 + 3*70*FLEN/8, x4, x1, x2)

inst_51527:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffc000000; valaddr_reg:x3; val_offset:154581*0 + 3*70*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154581*0 + 3*71*FLEN/8, x4, x1, x2)

inst_51528:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffe000000; valaddr_reg:x3; val_offset:154584*0 + 3*71*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154584*0 + 3*72*FLEN/8, x4, x1, x2)

inst_51529:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffff000000; valaddr_reg:x3; val_offset:154587*0 + 3*72*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154587*0 + 3*73*FLEN/8, x4, x1, x2)

inst_51530:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffff800000; valaddr_reg:x3; val_offset:154590*0 + 3*73*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154590*0 + 3*74*FLEN/8, x4, x1, x2)

inst_51531:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffc00000; valaddr_reg:x3; val_offset:154593*0 + 3*74*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154593*0 + 3*75*FLEN/8, x4, x1, x2)

inst_51532:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffe00000; valaddr_reg:x3; val_offset:154596*0 + 3*75*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154596*0 + 3*76*FLEN/8, x4, x1, x2)

inst_51533:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffff00000; valaddr_reg:x3; val_offset:154599*0 + 3*76*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154599*0 + 3*77*FLEN/8, x4, x1, x2)

inst_51534:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffff80000; valaddr_reg:x3; val_offset:154602*0 + 3*77*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154602*0 + 3*78*FLEN/8, x4, x1, x2)

inst_51535:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffc0000; valaddr_reg:x3; val_offset:154605*0 + 3*78*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154605*0 + 3*79*FLEN/8, x4, x1, x2)

inst_51536:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffe0000; valaddr_reg:x3; val_offset:154608*0 + 3*79*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154608*0 + 3*80*FLEN/8, x4, x1, x2)

inst_51537:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffff0000; valaddr_reg:x3; val_offset:154611*0 + 3*80*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154611*0 + 3*81*FLEN/8, x4, x1, x2)

inst_51538:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffff8000; valaddr_reg:x3; val_offset:154614*0 + 3*81*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154614*0 + 3*82*FLEN/8, x4, x1, x2)

inst_51539:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffc000; valaddr_reg:x3; val_offset:154617*0 + 3*82*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154617*0 + 3*83*FLEN/8, x4, x1, x2)

inst_51540:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffe000; valaddr_reg:x3; val_offset:154620*0 + 3*83*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154620*0 + 3*84*FLEN/8, x4, x1, x2)

inst_51541:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffff000; valaddr_reg:x3; val_offset:154623*0 + 3*84*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154623*0 + 3*85*FLEN/8, x4, x1, x2)

inst_51542:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffff800; valaddr_reg:x3; val_offset:154626*0 + 3*85*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154626*0 + 3*86*FLEN/8, x4, x1, x2)

inst_51543:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffc00; valaddr_reg:x3; val_offset:154629*0 + 3*86*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154629*0 + 3*87*FLEN/8, x4, x1, x2)

inst_51544:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffe00; valaddr_reg:x3; val_offset:154632*0 + 3*87*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154632*0 + 3*88*FLEN/8, x4, x1, x2)

inst_51545:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffff00; valaddr_reg:x3; val_offset:154635*0 + 3*88*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154635*0 + 3*89*FLEN/8, x4, x1, x2)

inst_51546:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffff80; valaddr_reg:x3; val_offset:154638*0 + 3*89*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154638*0 + 3*90*FLEN/8, x4, x1, x2)

inst_51547:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffffc0; valaddr_reg:x3; val_offset:154641*0 + 3*90*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154641*0 + 3*91*FLEN/8, x4, x1, x2)

inst_51548:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffffe0; valaddr_reg:x3; val_offset:154644*0 + 3*91*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154644*0 + 3*92*FLEN/8, x4, x1, x2)

inst_51549:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffff0; valaddr_reg:x3; val_offset:154647*0 + 3*92*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154647*0 + 3*93*FLEN/8, x4, x1, x2)

inst_51550:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffff8; valaddr_reg:x3; val_offset:154650*0 + 3*93*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154650*0 + 3*94*FLEN/8, x4, x1, x2)

inst_51551:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffffc; valaddr_reg:x3; val_offset:154653*0 + 3*94*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154653*0 + 3*95*FLEN/8, x4, x1, x2)

inst_51552:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8ffffffffffffe; valaddr_reg:x3; val_offset:154656*0 + 3*95*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154656*0 + 3*96*FLEN/8, x4, x1, x2)

inst_51553:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3c8 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbc8fffffffffffff; valaddr_reg:x3; val_offset:154659*0 + 3*96*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154659*0 + 3*97*FLEN/8, x4, x1, x2)

inst_51554:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:154662*0 + 3*97*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154662*0 + 3*98*FLEN/8, x4, x1, x2)

inst_51555:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:154665*0 + 3*98*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154665*0 + 3*99*FLEN/8, x4, x1, x2)

inst_51556:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:154668*0 + 3*99*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154668*0 + 3*100*FLEN/8, x4, x1, x2)

inst_51557:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:154671*0 + 3*100*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154671*0 + 3*101*FLEN/8, x4, x1, x2)

inst_51558:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:154674*0 + 3*101*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154674*0 + 3*102*FLEN/8, x4, x1, x2)

inst_51559:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:154677*0 + 3*102*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154677*0 + 3*103*FLEN/8, x4, x1, x2)

inst_51560:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:154680*0 + 3*103*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154680*0 + 3*104*FLEN/8, x4, x1, x2)

inst_51561:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:154683*0 + 3*104*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154683*0 + 3*105*FLEN/8, x4, x1, x2)

inst_51562:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:154686*0 + 3*105*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154686*0 + 3*106*FLEN/8, x4, x1, x2)

inst_51563:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:154689*0 + 3*106*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154689*0 + 3*107*FLEN/8, x4, x1, x2)

inst_51564:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:154692*0 + 3*107*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154692*0 + 3*108*FLEN/8, x4, x1, x2)

inst_51565:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:154695*0 + 3*108*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154695*0 + 3*109*FLEN/8, x4, x1, x2)

inst_51566:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:154698*0 + 3*109*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154698*0 + 3*110*FLEN/8, x4, x1, x2)

inst_51567:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:154701*0 + 3*110*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154701*0 + 3*111*FLEN/8, x4, x1, x2)

inst_51568:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:154704*0 + 3*111*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154704*0 + 3*112*FLEN/8, x4, x1, x2)

inst_51569:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:154707*0 + 3*112*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154707*0 + 3*113*FLEN/8, x4, x1, x2)

inst_51570:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:154710*0 + 3*113*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154710*0 + 3*114*FLEN/8, x4, x1, x2)

inst_51571:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:154713*0 + 3*114*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154713*0 + 3*115*FLEN/8, x4, x1, x2)

inst_51572:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:154716*0 + 3*115*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154716*0 + 3*116*FLEN/8, x4, x1, x2)

inst_51573:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:154719*0 + 3*116*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154719*0 + 3*117*FLEN/8, x4, x1, x2)

inst_51574:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:154722*0 + 3*117*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154722*0 + 3*118*FLEN/8, x4, x1, x2)

inst_51575:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe6749ffc4763 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00ccfea3e6fd1 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe6749ffc4763; op2val:0x9fd00ccfea3e6fd1;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:154725*0 + 3*118*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154725*0 + 3*119*FLEN/8, x4, x1, x2)

inst_51576:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000000000; valaddr_reg:x3; val_offset:154728*0 + 3*119*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154728*0 + 3*120*FLEN/8, x4, x1, x2)

inst_51577:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000000001; valaddr_reg:x3; val_offset:154731*0 + 3*120*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154731*0 + 3*121*FLEN/8, x4, x1, x2)

inst_51578:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000000003; valaddr_reg:x3; val_offset:154734*0 + 3*121*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154734*0 + 3*122*FLEN/8, x4, x1, x2)

inst_51579:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000000007; valaddr_reg:x3; val_offset:154737*0 + 3*122*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154737*0 + 3*123*FLEN/8, x4, x1, x2)

inst_51580:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000000000f; valaddr_reg:x3; val_offset:154740*0 + 3*123*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154740*0 + 3*124*FLEN/8, x4, x1, x2)

inst_51581:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000000001f; valaddr_reg:x3; val_offset:154743*0 + 3*124*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154743*0 + 3*125*FLEN/8, x4, x1, x2)

inst_51582:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000000003f; valaddr_reg:x3; val_offset:154746*0 + 3*125*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154746*0 + 3*126*FLEN/8, x4, x1, x2)

inst_51583:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000000007f; valaddr_reg:x3; val_offset:154749*0 + 3*126*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154749*0 + 3*127*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_2)

inst_51584:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000000000ff; valaddr_reg:x3; val_offset:154752*0 + 3*127*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154752*0 + 3*128*FLEN/8, x4, x1, x2)

inst_51585:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000000001ff; valaddr_reg:x3; val_offset:154755*0 + 3*128*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154755*0 + 3*129*FLEN/8, x4, x1, x2)

inst_51586:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000000003ff; valaddr_reg:x3; val_offset:154758*0 + 3*129*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154758*0 + 3*130*FLEN/8, x4, x1, x2)

inst_51587:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000000007ff; valaddr_reg:x3; val_offset:154761*0 + 3*130*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154761*0 + 3*131*FLEN/8, x4, x1, x2)

inst_51588:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000000fff; valaddr_reg:x3; val_offset:154764*0 + 3*131*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154764*0 + 3*132*FLEN/8, x4, x1, x2)

inst_51589:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000001fff; valaddr_reg:x3; val_offset:154767*0 + 3*132*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154767*0 + 3*133*FLEN/8, x4, x1, x2)

inst_51590:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000003fff; valaddr_reg:x3; val_offset:154770*0 + 3*133*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154770*0 + 3*134*FLEN/8, x4, x1, x2)

inst_51591:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000007fff; valaddr_reg:x3; val_offset:154773*0 + 3*134*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154773*0 + 3*135*FLEN/8, x4, x1, x2)

inst_51592:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000000ffff; valaddr_reg:x3; val_offset:154776*0 + 3*135*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154776*0 + 3*136*FLEN/8, x4, x1, x2)

inst_51593:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000001ffff; valaddr_reg:x3; val_offset:154779*0 + 3*136*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154779*0 + 3*137*FLEN/8, x4, x1, x2)

inst_51594:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000003ffff; valaddr_reg:x3; val_offset:154782*0 + 3*137*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154782*0 + 3*138*FLEN/8, x4, x1, x2)

inst_51595:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000007ffff; valaddr_reg:x3; val_offset:154785*0 + 3*138*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154785*0 + 3*139*FLEN/8, x4, x1, x2)

inst_51596:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000000fffff; valaddr_reg:x3; val_offset:154788*0 + 3*139*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154788*0 + 3*140*FLEN/8, x4, x1, x2)

inst_51597:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000001fffff; valaddr_reg:x3; val_offset:154791*0 + 3*140*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154791*0 + 3*141*FLEN/8, x4, x1, x2)

inst_51598:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000003fffff; valaddr_reg:x3; val_offset:154794*0 + 3*141*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154794*0 + 3*142*FLEN/8, x4, x1, x2)

inst_51599:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000007fffff; valaddr_reg:x3; val_offset:154797*0 + 3*142*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154797*0 + 3*143*FLEN/8, x4, x1, x2)

inst_51600:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000000ffffff; valaddr_reg:x3; val_offset:154800*0 + 3*143*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154800*0 + 3*144*FLEN/8, x4, x1, x2)

inst_51601:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000001ffffff; valaddr_reg:x3; val_offset:154803*0 + 3*144*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154803*0 + 3*145*FLEN/8, x4, x1, x2)

inst_51602:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000003ffffff; valaddr_reg:x3; val_offset:154806*0 + 3*145*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154806*0 + 3*146*FLEN/8, x4, x1, x2)

inst_51603:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000007ffffff; valaddr_reg:x3; val_offset:154809*0 + 3*146*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154809*0 + 3*147*FLEN/8, x4, x1, x2)

inst_51604:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000000fffffff; valaddr_reg:x3; val_offset:154812*0 + 3*147*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154812*0 + 3*148*FLEN/8, x4, x1, x2)

inst_51605:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000001fffffff; valaddr_reg:x3; val_offset:154815*0 + 3*148*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154815*0 + 3*149*FLEN/8, x4, x1, x2)

inst_51606:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000003fffffff; valaddr_reg:x3; val_offset:154818*0 + 3*149*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154818*0 + 3*150*FLEN/8, x4, x1, x2)

inst_51607:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000007fffffff; valaddr_reg:x3; val_offset:154821*0 + 3*150*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154821*0 + 3*151*FLEN/8, x4, x1, x2)

inst_51608:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900000ffffffff; valaddr_reg:x3; val_offset:154824*0 + 3*151*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154824*0 + 3*152*FLEN/8, x4, x1, x2)

inst_51609:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900001ffffffff; valaddr_reg:x3; val_offset:154827*0 + 3*152*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154827*0 + 3*153*FLEN/8, x4, x1, x2)

inst_51610:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900003ffffffff; valaddr_reg:x3; val_offset:154830*0 + 3*153*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154830*0 + 3*154*FLEN/8, x4, x1, x2)

inst_51611:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900007ffffffff; valaddr_reg:x3; val_offset:154833*0 + 3*154*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154833*0 + 3*155*FLEN/8, x4, x1, x2)

inst_51612:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90000fffffffff; valaddr_reg:x3; val_offset:154836*0 + 3*155*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154836*0 + 3*156*FLEN/8, x4, x1, x2)

inst_51613:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90001fffffffff; valaddr_reg:x3; val_offset:154839*0 + 3*156*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154839*0 + 3*157*FLEN/8, x4, x1, x2)

inst_51614:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90003fffffffff; valaddr_reg:x3; val_offset:154842*0 + 3*157*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154842*0 + 3*158*FLEN/8, x4, x1, x2)

inst_51615:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90007fffffffff; valaddr_reg:x3; val_offset:154845*0 + 3*158*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154845*0 + 3*159*FLEN/8, x4, x1, x2)

inst_51616:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9000ffffffffff; valaddr_reg:x3; val_offset:154848*0 + 3*159*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154848*0 + 3*160*FLEN/8, x4, x1, x2)

inst_51617:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9001ffffffffff; valaddr_reg:x3; val_offset:154851*0 + 3*160*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154851*0 + 3*161*FLEN/8, x4, x1, x2)

inst_51618:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9003ffffffffff; valaddr_reg:x3; val_offset:154854*0 + 3*161*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154854*0 + 3*162*FLEN/8, x4, x1, x2)

inst_51619:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9007ffffffffff; valaddr_reg:x3; val_offset:154857*0 + 3*162*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154857*0 + 3*163*FLEN/8, x4, x1, x2)

inst_51620:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc900fffffffffff; valaddr_reg:x3; val_offset:154860*0 + 3*163*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154860*0 + 3*164*FLEN/8, x4, x1, x2)

inst_51621:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc901fffffffffff; valaddr_reg:x3; val_offset:154863*0 + 3*164*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154863*0 + 3*165*FLEN/8, x4, x1, x2)

inst_51622:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc903fffffffffff; valaddr_reg:x3; val_offset:154866*0 + 3*165*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154866*0 + 3*166*FLEN/8, x4, x1, x2)

inst_51623:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc907fffffffffff; valaddr_reg:x3; val_offset:154869*0 + 3*166*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154869*0 + 3*167*FLEN/8, x4, x1, x2)

inst_51624:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc90ffffffffffff; valaddr_reg:x3; val_offset:154872*0 + 3*167*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154872*0 + 3*168*FLEN/8, x4, x1, x2)

inst_51625:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc91ffffffffffff; valaddr_reg:x3; val_offset:154875*0 + 3*168*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154875*0 + 3*169*FLEN/8, x4, x1, x2)

inst_51626:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc93ffffffffffff; valaddr_reg:x3; val_offset:154878*0 + 3*169*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154878*0 + 3*170*FLEN/8, x4, x1, x2)

inst_51627:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc97ffffffffffff; valaddr_reg:x3; val_offset:154881*0 + 3*170*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154881*0 + 3*171*FLEN/8, x4, x1, x2)

inst_51628:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc98000000000000; valaddr_reg:x3; val_offset:154884*0 + 3*171*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154884*0 + 3*172*FLEN/8, x4, x1, x2)

inst_51629:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9c000000000000; valaddr_reg:x3; val_offset:154887*0 + 3*172*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154887*0 + 3*173*FLEN/8, x4, x1, x2)

inst_51630:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9e000000000000; valaddr_reg:x3; val_offset:154890*0 + 3*173*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154890*0 + 3*174*FLEN/8, x4, x1, x2)

inst_51631:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9f000000000000; valaddr_reg:x3; val_offset:154893*0 + 3*174*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154893*0 + 3*175*FLEN/8, x4, x1, x2)

inst_51632:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9f800000000000; valaddr_reg:x3; val_offset:154896*0 + 3*175*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154896*0 + 3*176*FLEN/8, x4, x1, x2)

inst_51633:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fc00000000000; valaddr_reg:x3; val_offset:154899*0 + 3*176*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154899*0 + 3*177*FLEN/8, x4, x1, x2)

inst_51634:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fe00000000000; valaddr_reg:x3; val_offset:154902*0 + 3*177*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154902*0 + 3*178*FLEN/8, x4, x1, x2)

inst_51635:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ff00000000000; valaddr_reg:x3; val_offset:154905*0 + 3*178*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154905*0 + 3*179*FLEN/8, x4, x1, x2)

inst_51636:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ff80000000000; valaddr_reg:x3; val_offset:154908*0 + 3*179*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154908*0 + 3*180*FLEN/8, x4, x1, x2)

inst_51637:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffc0000000000; valaddr_reg:x3; val_offset:154911*0 + 3*180*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154911*0 + 3*181*FLEN/8, x4, x1, x2)

inst_51638:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffe0000000000; valaddr_reg:x3; val_offset:154914*0 + 3*181*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154914*0 + 3*182*FLEN/8, x4, x1, x2)

inst_51639:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fff0000000000; valaddr_reg:x3; val_offset:154917*0 + 3*182*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154917*0 + 3*183*FLEN/8, x4, x1, x2)

inst_51640:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fff8000000000; valaddr_reg:x3; val_offset:154920*0 + 3*183*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154920*0 + 3*184*FLEN/8, x4, x1, x2)

inst_51641:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffc000000000; valaddr_reg:x3; val_offset:154923*0 + 3*184*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154923*0 + 3*185*FLEN/8, x4, x1, x2)

inst_51642:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffe000000000; valaddr_reg:x3; val_offset:154926*0 + 3*185*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154926*0 + 3*186*FLEN/8, x4, x1, x2)

inst_51643:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffff000000000; valaddr_reg:x3; val_offset:154929*0 + 3*186*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154929*0 + 3*187*FLEN/8, x4, x1, x2)

inst_51644:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffff800000000; valaddr_reg:x3; val_offset:154932*0 + 3*187*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154932*0 + 3*188*FLEN/8, x4, x1, x2)

inst_51645:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffc00000000; valaddr_reg:x3; val_offset:154935*0 + 3*188*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154935*0 + 3*189*FLEN/8, x4, x1, x2)

inst_51646:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffe00000000; valaddr_reg:x3; val_offset:154938*0 + 3*189*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154938*0 + 3*190*FLEN/8, x4, x1, x2)

inst_51647:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffff00000000; valaddr_reg:x3; val_offset:154941*0 + 3*190*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154941*0 + 3*191*FLEN/8, x4, x1, x2)

inst_51648:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffff80000000; valaddr_reg:x3; val_offset:154944*0 + 3*191*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154944*0 + 3*192*FLEN/8, x4, x1, x2)

inst_51649:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffc0000000; valaddr_reg:x3; val_offset:154947*0 + 3*192*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154947*0 + 3*193*FLEN/8, x4, x1, x2)

inst_51650:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffe0000000; valaddr_reg:x3; val_offset:154950*0 + 3*193*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154950*0 + 3*194*FLEN/8, x4, x1, x2)

inst_51651:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffff0000000; valaddr_reg:x3; val_offset:154953*0 + 3*194*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154953*0 + 3*195*FLEN/8, x4, x1, x2)

inst_51652:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffff8000000; valaddr_reg:x3; val_offset:154956*0 + 3*195*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154956*0 + 3*196*FLEN/8, x4, x1, x2)

inst_51653:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffc000000; valaddr_reg:x3; val_offset:154959*0 + 3*196*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154959*0 + 3*197*FLEN/8, x4, x1, x2)

inst_51654:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffe000000; valaddr_reg:x3; val_offset:154962*0 + 3*197*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154962*0 + 3*198*FLEN/8, x4, x1, x2)

inst_51655:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffff000000; valaddr_reg:x3; val_offset:154965*0 + 3*198*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154965*0 + 3*199*FLEN/8, x4, x1, x2)

inst_51656:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffff800000; valaddr_reg:x3; val_offset:154968*0 + 3*199*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154968*0 + 3*200*FLEN/8, x4, x1, x2)

inst_51657:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffc00000; valaddr_reg:x3; val_offset:154971*0 + 3*200*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154971*0 + 3*201*FLEN/8, x4, x1, x2)

inst_51658:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffe00000; valaddr_reg:x3; val_offset:154974*0 + 3*201*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154974*0 + 3*202*FLEN/8, x4, x1, x2)

inst_51659:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffff00000; valaddr_reg:x3; val_offset:154977*0 + 3*202*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154977*0 + 3*203*FLEN/8, x4, x1, x2)

inst_51660:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffff80000; valaddr_reg:x3; val_offset:154980*0 + 3*203*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154980*0 + 3*204*FLEN/8, x4, x1, x2)

inst_51661:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffc0000; valaddr_reg:x3; val_offset:154983*0 + 3*204*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154983*0 + 3*205*FLEN/8, x4, x1, x2)

inst_51662:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffe0000; valaddr_reg:x3; val_offset:154986*0 + 3*205*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154986*0 + 3*206*FLEN/8, x4, x1, x2)

inst_51663:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffff0000; valaddr_reg:x3; val_offset:154989*0 + 3*206*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154989*0 + 3*207*FLEN/8, x4, x1, x2)

inst_51664:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffff8000; valaddr_reg:x3; val_offset:154992*0 + 3*207*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154992*0 + 3*208*FLEN/8, x4, x1, x2)

inst_51665:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffc000; valaddr_reg:x3; val_offset:154995*0 + 3*208*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154995*0 + 3*209*FLEN/8, x4, x1, x2)

inst_51666:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffe000; valaddr_reg:x3; val_offset:154998*0 + 3*209*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 154998*0 + 3*210*FLEN/8, x4, x1, x2)

inst_51667:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffff000; valaddr_reg:x3; val_offset:155001*0 + 3*210*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155001*0 + 3*211*FLEN/8, x4, x1, x2)

inst_51668:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffff800; valaddr_reg:x3; val_offset:155004*0 + 3*211*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155004*0 + 3*212*FLEN/8, x4, x1, x2)

inst_51669:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffc00; valaddr_reg:x3; val_offset:155007*0 + 3*212*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155007*0 + 3*213*FLEN/8, x4, x1, x2)

inst_51670:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffe00; valaddr_reg:x3; val_offset:155010*0 + 3*213*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155010*0 + 3*214*FLEN/8, x4, x1, x2)

inst_51671:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffff00; valaddr_reg:x3; val_offset:155013*0 + 3*214*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155013*0 + 3*215*FLEN/8, x4, x1, x2)

inst_51672:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffff80; valaddr_reg:x3; val_offset:155016*0 + 3*215*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155016*0 + 3*216*FLEN/8, x4, x1, x2)

inst_51673:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffffc0; valaddr_reg:x3; val_offset:155019*0 + 3*216*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155019*0 + 3*217*FLEN/8, x4, x1, x2)

inst_51674:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffffe0; valaddr_reg:x3; val_offset:155022*0 + 3*217*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155022*0 + 3*218*FLEN/8, x4, x1, x2)

inst_51675:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffff0; valaddr_reg:x3; val_offset:155025*0 + 3*218*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155025*0 + 3*219*FLEN/8, x4, x1, x2)

inst_51676:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffff8; valaddr_reg:x3; val_offset:155028*0 + 3*219*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155028*0 + 3*220*FLEN/8, x4, x1, x2)

inst_51677:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffffc; valaddr_reg:x3; val_offset:155031*0 + 3*220*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155031*0 + 3*221*FLEN/8, x4, x1, x2)

inst_51678:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9ffffffffffffe; valaddr_reg:x3; val_offset:155034*0 + 3*221*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155034*0 + 3*222*FLEN/8, x4, x1, x2)

inst_51679:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3c9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbc9fffffffffffff; valaddr_reg:x3; val_offset:155037*0 + 3*222*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155037*0 + 3*223*FLEN/8, x4, x1, x2)

inst_51680:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:155040*0 + 3*223*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155040*0 + 3*224*FLEN/8, x4, x1, x2)

inst_51681:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:155043*0 + 3*224*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155043*0 + 3*225*FLEN/8, x4, x1, x2)

inst_51682:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:155046*0 + 3*225*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155046*0 + 3*226*FLEN/8, x4, x1, x2)

inst_51683:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:155049*0 + 3*226*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155049*0 + 3*227*FLEN/8, x4, x1, x2)

inst_51684:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:155052*0 + 3*227*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155052*0 + 3*228*FLEN/8, x4, x1, x2)

inst_51685:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:155055*0 + 3*228*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155055*0 + 3*229*FLEN/8, x4, x1, x2)

inst_51686:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:155058*0 + 3*229*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155058*0 + 3*230*FLEN/8, x4, x1, x2)

inst_51687:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:155061*0 + 3*230*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155061*0 + 3*231*FLEN/8, x4, x1, x2)

inst_51688:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:155064*0 + 3*231*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155064*0 + 3*232*FLEN/8, x4, x1, x2)

inst_51689:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:155067*0 + 3*232*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155067*0 + 3*233*FLEN/8, x4, x1, x2)

inst_51690:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:155070*0 + 3*233*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155070*0 + 3*234*FLEN/8, x4, x1, x2)

inst_51691:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:155073*0 + 3*234*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155073*0 + 3*235*FLEN/8, x4, x1, x2)

inst_51692:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:155076*0 + 3*235*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155076*0 + 3*236*FLEN/8, x4, x1, x2)

inst_51693:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:155079*0 + 3*236*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155079*0 + 3*237*FLEN/8, x4, x1, x2)

inst_51694:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:155082*0 + 3*237*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155082*0 + 3*238*FLEN/8, x4, x1, x2)

inst_51695:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:155085*0 + 3*238*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155085*0 + 3*239*FLEN/8, x4, x1, x2)

inst_51696:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:155088*0 + 3*239*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155088*0 + 3*240*FLEN/8, x4, x1, x2)

inst_51697:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:155091*0 + 3*240*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155091*0 + 3*241*FLEN/8, x4, x1, x2)

inst_51698:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:155094*0 + 3*241*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155094*0 + 3*242*FLEN/8, x4, x1, x2)

inst_51699:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:155097*0 + 3*242*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155097*0 + 3*243*FLEN/8, x4, x1, x2)

inst_51700:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:155100*0 + 3*243*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155100*0 + 3*244*FLEN/8, x4, x1, x2)

inst_51701:
// fs1 == 0 and fe1 == 0x5f9 and fm1 == 0xfe9d365149cd7 and fs2 == 1 and fe2 == 0x1fd and fm2 == 0x00b1e0195dcf9 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5f9fe9d365149cd7; op2val:0x9fd00b1e0195dcf9;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:155103*0 + 3*244*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155103*0 + 3*245*FLEN/8, x4, x1, x2)

inst_51702:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000000000; valaddr_reg:x3; val_offset:155106*0 + 3*245*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155106*0 + 3*246*FLEN/8, x4, x1, x2)

inst_51703:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000000001; valaddr_reg:x3; val_offset:155109*0 + 3*246*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155109*0 + 3*247*FLEN/8, x4, x1, x2)

inst_51704:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000000003; valaddr_reg:x3; val_offset:155112*0 + 3*247*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155112*0 + 3*248*FLEN/8, x4, x1, x2)

inst_51705:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000000007; valaddr_reg:x3; val_offset:155115*0 + 3*248*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155115*0 + 3*249*FLEN/8, x4, x1, x2)

inst_51706:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000000000f; valaddr_reg:x3; val_offset:155118*0 + 3*249*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155118*0 + 3*250*FLEN/8, x4, x1, x2)

inst_51707:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000000001f; valaddr_reg:x3; val_offset:155121*0 + 3*250*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155121*0 + 3*251*FLEN/8, x4, x1, x2)

inst_51708:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000000003f; valaddr_reg:x3; val_offset:155124*0 + 3*251*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155124*0 + 3*252*FLEN/8, x4, x1, x2)

inst_51709:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000000007f; valaddr_reg:x3; val_offset:155127*0 + 3*252*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155127*0 + 3*253*FLEN/8, x4, x1, x2)

inst_51710:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000000000ff; valaddr_reg:x3; val_offset:155130*0 + 3*253*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155130*0 + 3*254*FLEN/8, x4, x1, x2)

inst_51711:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000000001ff; valaddr_reg:x3; val_offset:155133*0 + 3*254*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155133*0 + 3*255*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_3)

inst_51712:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000000003ff; valaddr_reg:x3; val_offset:155136*0 + 3*256*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155136*0 + 3*256*FLEN/8, x4, x1, x2)

inst_51713:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000000007ff; valaddr_reg:x3; val_offset:155139*0 + 3*257*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155139*0 + 3*257*FLEN/8, x4, x1, x2)

inst_51714:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000000fff; valaddr_reg:x3; val_offset:155142*0 + 3*258*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155142*0 + 3*258*FLEN/8, x4, x1, x2)

inst_51715:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000001fff; valaddr_reg:x3; val_offset:155145*0 + 3*259*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155145*0 + 3*259*FLEN/8, x4, x1, x2)

inst_51716:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000003fff; valaddr_reg:x3; val_offset:155148*0 + 3*260*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155148*0 + 3*260*FLEN/8, x4, x1, x2)

inst_51717:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000007fff; valaddr_reg:x3; val_offset:155151*0 + 3*261*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155151*0 + 3*261*FLEN/8, x4, x1, x2)

inst_51718:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000000ffff; valaddr_reg:x3; val_offset:155154*0 + 3*262*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155154*0 + 3*262*FLEN/8, x4, x1, x2)

inst_51719:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000001ffff; valaddr_reg:x3; val_offset:155157*0 + 3*263*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155157*0 + 3*263*FLEN/8, x4, x1, x2)

inst_51720:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000003ffff; valaddr_reg:x3; val_offset:155160*0 + 3*264*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155160*0 + 3*264*FLEN/8, x4, x1, x2)

inst_51721:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000007ffff; valaddr_reg:x3; val_offset:155163*0 + 3*265*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155163*0 + 3*265*FLEN/8, x4, x1, x2)

inst_51722:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000000fffff; valaddr_reg:x3; val_offset:155166*0 + 3*266*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155166*0 + 3*266*FLEN/8, x4, x1, x2)

inst_51723:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000001fffff; valaddr_reg:x3; val_offset:155169*0 + 3*267*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155169*0 + 3*267*FLEN/8, x4, x1, x2)

inst_51724:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000003fffff; valaddr_reg:x3; val_offset:155172*0 + 3*268*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155172*0 + 3*268*FLEN/8, x4, x1, x2)

inst_51725:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000007fffff; valaddr_reg:x3; val_offset:155175*0 + 3*269*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155175*0 + 3*269*FLEN/8, x4, x1, x2)

inst_51726:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000000ffffff; valaddr_reg:x3; val_offset:155178*0 + 3*270*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155178*0 + 3*270*FLEN/8, x4, x1, x2)

inst_51727:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000001ffffff; valaddr_reg:x3; val_offset:155181*0 + 3*271*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155181*0 + 3*271*FLEN/8, x4, x1, x2)

inst_51728:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000003ffffff; valaddr_reg:x3; val_offset:155184*0 + 3*272*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155184*0 + 3*272*FLEN/8, x4, x1, x2)

inst_51729:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000007ffffff; valaddr_reg:x3; val_offset:155187*0 + 3*273*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155187*0 + 3*273*FLEN/8, x4, x1, x2)

inst_51730:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000000fffffff; valaddr_reg:x3; val_offset:155190*0 + 3*274*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155190*0 + 3*274*FLEN/8, x4, x1, x2)

inst_51731:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000001fffffff; valaddr_reg:x3; val_offset:155193*0 + 3*275*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155193*0 + 3*275*FLEN/8, x4, x1, x2)

inst_51732:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000003fffffff; valaddr_reg:x3; val_offset:155196*0 + 3*276*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155196*0 + 3*276*FLEN/8, x4, x1, x2)

inst_51733:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000007fffffff; valaddr_reg:x3; val_offset:155199*0 + 3*277*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155199*0 + 3*277*FLEN/8, x4, x1, x2)

inst_51734:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900000ffffffff; valaddr_reg:x3; val_offset:155202*0 + 3*278*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155202*0 + 3*278*FLEN/8, x4, x1, x2)

inst_51735:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900001ffffffff; valaddr_reg:x3; val_offset:155205*0 + 3*279*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155205*0 + 3*279*FLEN/8, x4, x1, x2)

inst_51736:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900003ffffffff; valaddr_reg:x3; val_offset:155208*0 + 3*280*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155208*0 + 3*280*FLEN/8, x4, x1, x2)

inst_51737:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900007ffffffff; valaddr_reg:x3; val_offset:155211*0 + 3*281*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155211*0 + 3*281*FLEN/8, x4, x1, x2)

inst_51738:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90000fffffffff; valaddr_reg:x3; val_offset:155214*0 + 3*282*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155214*0 + 3*282*FLEN/8, x4, x1, x2)

inst_51739:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90001fffffffff; valaddr_reg:x3; val_offset:155217*0 + 3*283*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155217*0 + 3*283*FLEN/8, x4, x1, x2)

inst_51740:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90003fffffffff; valaddr_reg:x3; val_offset:155220*0 + 3*284*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155220*0 + 3*284*FLEN/8, x4, x1, x2)

inst_51741:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90007fffffffff; valaddr_reg:x3; val_offset:155223*0 + 3*285*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155223*0 + 3*285*FLEN/8, x4, x1, x2)

inst_51742:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9000ffffffffff; valaddr_reg:x3; val_offset:155226*0 + 3*286*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155226*0 + 3*286*FLEN/8, x4, x1, x2)

inst_51743:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9001ffffffffff; valaddr_reg:x3; val_offset:155229*0 + 3*287*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155229*0 + 3*287*FLEN/8, x4, x1, x2)

inst_51744:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9003ffffffffff; valaddr_reg:x3; val_offset:155232*0 + 3*288*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155232*0 + 3*288*FLEN/8, x4, x1, x2)

inst_51745:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9007ffffffffff; valaddr_reg:x3; val_offset:155235*0 + 3*289*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155235*0 + 3*289*FLEN/8, x4, x1, x2)

inst_51746:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe900fffffffffff; valaddr_reg:x3; val_offset:155238*0 + 3*290*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155238*0 + 3*290*FLEN/8, x4, x1, x2)

inst_51747:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe901fffffffffff; valaddr_reg:x3; val_offset:155241*0 + 3*291*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155241*0 + 3*291*FLEN/8, x4, x1, x2)

inst_51748:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe903fffffffffff; valaddr_reg:x3; val_offset:155244*0 + 3*292*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155244*0 + 3*292*FLEN/8, x4, x1, x2)

inst_51749:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe907fffffffffff; valaddr_reg:x3; val_offset:155247*0 + 3*293*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155247*0 + 3*293*FLEN/8, x4, x1, x2)

inst_51750:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe90ffffffffffff; valaddr_reg:x3; val_offset:155250*0 + 3*294*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155250*0 + 3*294*FLEN/8, x4, x1, x2)

inst_51751:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe91ffffffffffff; valaddr_reg:x3; val_offset:155253*0 + 3*295*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155253*0 + 3*295*FLEN/8, x4, x1, x2)

inst_51752:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe93ffffffffffff; valaddr_reg:x3; val_offset:155256*0 + 3*296*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155256*0 + 3*296*FLEN/8, x4, x1, x2)

inst_51753:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe97ffffffffffff; valaddr_reg:x3; val_offset:155259*0 + 3*297*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155259*0 + 3*297*FLEN/8, x4, x1, x2)

inst_51754:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe98000000000000; valaddr_reg:x3; val_offset:155262*0 + 3*298*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155262*0 + 3*298*FLEN/8, x4, x1, x2)

inst_51755:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9c000000000000; valaddr_reg:x3; val_offset:155265*0 + 3*299*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155265*0 + 3*299*FLEN/8, x4, x1, x2)

inst_51756:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9e000000000000; valaddr_reg:x3; val_offset:155268*0 + 3*300*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155268*0 + 3*300*FLEN/8, x4, x1, x2)

inst_51757:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9f000000000000; valaddr_reg:x3; val_offset:155271*0 + 3*301*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155271*0 + 3*301*FLEN/8, x4, x1, x2)

inst_51758:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9f800000000000; valaddr_reg:x3; val_offset:155274*0 + 3*302*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155274*0 + 3*302*FLEN/8, x4, x1, x2)

inst_51759:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fc00000000000; valaddr_reg:x3; val_offset:155277*0 + 3*303*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155277*0 + 3*303*FLEN/8, x4, x1, x2)

inst_51760:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fe00000000000; valaddr_reg:x3; val_offset:155280*0 + 3*304*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155280*0 + 3*304*FLEN/8, x4, x1, x2)

inst_51761:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ff00000000000; valaddr_reg:x3; val_offset:155283*0 + 3*305*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155283*0 + 3*305*FLEN/8, x4, x1, x2)

inst_51762:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ff80000000000; valaddr_reg:x3; val_offset:155286*0 + 3*306*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155286*0 + 3*306*FLEN/8, x4, x1, x2)

inst_51763:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffc0000000000; valaddr_reg:x3; val_offset:155289*0 + 3*307*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155289*0 + 3*307*FLEN/8, x4, x1, x2)

inst_51764:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffe0000000000; valaddr_reg:x3; val_offset:155292*0 + 3*308*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155292*0 + 3*308*FLEN/8, x4, x1, x2)

inst_51765:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fff0000000000; valaddr_reg:x3; val_offset:155295*0 + 3*309*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155295*0 + 3*309*FLEN/8, x4, x1, x2)

inst_51766:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fff8000000000; valaddr_reg:x3; val_offset:155298*0 + 3*310*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155298*0 + 3*310*FLEN/8, x4, x1, x2)

inst_51767:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffc000000000; valaddr_reg:x3; val_offset:155301*0 + 3*311*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155301*0 + 3*311*FLEN/8, x4, x1, x2)

inst_51768:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffe000000000; valaddr_reg:x3; val_offset:155304*0 + 3*312*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155304*0 + 3*312*FLEN/8, x4, x1, x2)

inst_51769:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffff000000000; valaddr_reg:x3; val_offset:155307*0 + 3*313*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155307*0 + 3*313*FLEN/8, x4, x1, x2)

inst_51770:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffff800000000; valaddr_reg:x3; val_offset:155310*0 + 3*314*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155310*0 + 3*314*FLEN/8, x4, x1, x2)

inst_51771:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffc00000000; valaddr_reg:x3; val_offset:155313*0 + 3*315*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155313*0 + 3*315*FLEN/8, x4, x1, x2)

inst_51772:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffe00000000; valaddr_reg:x3; val_offset:155316*0 + 3*316*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155316*0 + 3*316*FLEN/8, x4, x1, x2)

inst_51773:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffff00000000; valaddr_reg:x3; val_offset:155319*0 + 3*317*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155319*0 + 3*317*FLEN/8, x4, x1, x2)

inst_51774:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffff80000000; valaddr_reg:x3; val_offset:155322*0 + 3*318*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155322*0 + 3*318*FLEN/8, x4, x1, x2)

inst_51775:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffc0000000; valaddr_reg:x3; val_offset:155325*0 + 3*319*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155325*0 + 3*319*FLEN/8, x4, x1, x2)

inst_51776:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffe0000000; valaddr_reg:x3; val_offset:155328*0 + 3*320*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155328*0 + 3*320*FLEN/8, x4, x1, x2)

inst_51777:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffff0000000; valaddr_reg:x3; val_offset:155331*0 + 3*321*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155331*0 + 3*321*FLEN/8, x4, x1, x2)

inst_51778:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffff8000000; valaddr_reg:x3; val_offset:155334*0 + 3*322*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155334*0 + 3*322*FLEN/8, x4, x1, x2)

inst_51779:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffc000000; valaddr_reg:x3; val_offset:155337*0 + 3*323*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155337*0 + 3*323*FLEN/8, x4, x1, x2)

inst_51780:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffe000000; valaddr_reg:x3; val_offset:155340*0 + 3*324*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155340*0 + 3*324*FLEN/8, x4, x1, x2)

inst_51781:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffff000000; valaddr_reg:x3; val_offset:155343*0 + 3*325*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155343*0 + 3*325*FLEN/8, x4, x1, x2)

inst_51782:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffff800000; valaddr_reg:x3; val_offset:155346*0 + 3*326*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155346*0 + 3*326*FLEN/8, x4, x1, x2)

inst_51783:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffc00000; valaddr_reg:x3; val_offset:155349*0 + 3*327*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155349*0 + 3*327*FLEN/8, x4, x1, x2)

inst_51784:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffe00000; valaddr_reg:x3; val_offset:155352*0 + 3*328*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155352*0 + 3*328*FLEN/8, x4, x1, x2)

inst_51785:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffff00000; valaddr_reg:x3; val_offset:155355*0 + 3*329*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155355*0 + 3*329*FLEN/8, x4, x1, x2)

inst_51786:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffff80000; valaddr_reg:x3; val_offset:155358*0 + 3*330*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155358*0 + 3*330*FLEN/8, x4, x1, x2)

inst_51787:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffc0000; valaddr_reg:x3; val_offset:155361*0 + 3*331*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155361*0 + 3*331*FLEN/8, x4, x1, x2)

inst_51788:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffe0000; valaddr_reg:x3; val_offset:155364*0 + 3*332*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155364*0 + 3*332*FLEN/8, x4, x1, x2)

inst_51789:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffff0000; valaddr_reg:x3; val_offset:155367*0 + 3*333*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155367*0 + 3*333*FLEN/8, x4, x1, x2)

inst_51790:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffff8000; valaddr_reg:x3; val_offset:155370*0 + 3*334*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155370*0 + 3*334*FLEN/8, x4, x1, x2)

inst_51791:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffc000; valaddr_reg:x3; val_offset:155373*0 + 3*335*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155373*0 + 3*335*FLEN/8, x4, x1, x2)

inst_51792:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffe000; valaddr_reg:x3; val_offset:155376*0 + 3*336*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155376*0 + 3*336*FLEN/8, x4, x1, x2)

inst_51793:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffff000; valaddr_reg:x3; val_offset:155379*0 + 3*337*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155379*0 + 3*337*FLEN/8, x4, x1, x2)

inst_51794:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffff800; valaddr_reg:x3; val_offset:155382*0 + 3*338*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155382*0 + 3*338*FLEN/8, x4, x1, x2)

inst_51795:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffc00; valaddr_reg:x3; val_offset:155385*0 + 3*339*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155385*0 + 3*339*FLEN/8, x4, x1, x2)

inst_51796:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffe00; valaddr_reg:x3; val_offset:155388*0 + 3*340*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155388*0 + 3*340*FLEN/8, x4, x1, x2)

inst_51797:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffff00; valaddr_reg:x3; val_offset:155391*0 + 3*341*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155391*0 + 3*341*FLEN/8, x4, x1, x2)

inst_51798:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffff80; valaddr_reg:x3; val_offset:155394*0 + 3*342*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155394*0 + 3*342*FLEN/8, x4, x1, x2)

inst_51799:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffffc0; valaddr_reg:x3; val_offset:155397*0 + 3*343*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155397*0 + 3*343*FLEN/8, x4, x1, x2)

inst_51800:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffffe0; valaddr_reg:x3; val_offset:155400*0 + 3*344*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155400*0 + 3*344*FLEN/8, x4, x1, x2)

inst_51801:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffff0; valaddr_reg:x3; val_offset:155403*0 + 3*345*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155403*0 + 3*345*FLEN/8, x4, x1, x2)

inst_51802:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffff8; valaddr_reg:x3; val_offset:155406*0 + 3*346*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155406*0 + 3*346*FLEN/8, x4, x1, x2)

inst_51803:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffffc; valaddr_reg:x3; val_offset:155409*0 + 3*347*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155409*0 + 3*347*FLEN/8, x4, x1, x2)

inst_51804:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9ffffffffffffe; valaddr_reg:x3; val_offset:155412*0 + 3*348*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155412*0 + 3*348*FLEN/8, x4, x1, x2)

inst_51805:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3e9 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbe9fffffffffffff; valaddr_reg:x3; val_offset:155415*0 + 3*349*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155415*0 + 3*349*FLEN/8, x4, x1, x2)

inst_51806:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:155418*0 + 3*350*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155418*0 + 3*350*FLEN/8, x4, x1, x2)

inst_51807:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:155421*0 + 3*351*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155421*0 + 3*351*FLEN/8, x4, x1, x2)

inst_51808:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:155424*0 + 3*352*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155424*0 + 3*352*FLEN/8, x4, x1, x2)

inst_51809:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:155427*0 + 3*353*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155427*0 + 3*353*FLEN/8, x4, x1, x2)

inst_51810:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:155430*0 + 3*354*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155430*0 + 3*354*FLEN/8, x4, x1, x2)

inst_51811:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:155433*0 + 3*355*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155433*0 + 3*355*FLEN/8, x4, x1, x2)

inst_51812:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:155436*0 + 3*356*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155436*0 + 3*356*FLEN/8, x4, x1, x2)

inst_51813:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:155439*0 + 3*357*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155439*0 + 3*357*FLEN/8, x4, x1, x2)

inst_51814:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:155442*0 + 3*358*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155442*0 + 3*358*FLEN/8, x4, x1, x2)

inst_51815:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:155445*0 + 3*359*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155445*0 + 3*359*FLEN/8, x4, x1, x2)

inst_51816:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:155448*0 + 3*360*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155448*0 + 3*360*FLEN/8, x4, x1, x2)

inst_51817:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:155451*0 + 3*361*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155451*0 + 3*361*FLEN/8, x4, x1, x2)

inst_51818:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:155454*0 + 3*362*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155454*0 + 3*362*FLEN/8, x4, x1, x2)

inst_51819:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:155457*0 + 3*363*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155457*0 + 3*363*FLEN/8, x4, x1, x2)

inst_51820:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:155460*0 + 3*364*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155460*0 + 3*364*FLEN/8, x4, x1, x2)

inst_51821:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:155463*0 + 3*365*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155463*0 + 3*365*FLEN/8, x4, x1, x2)

inst_51822:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:155466*0 + 3*366*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155466*0 + 3*366*FLEN/8, x4, x1, x2)

inst_51823:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:155469*0 + 3*367*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155469*0 + 3*367*FLEN/8, x4, x1, x2)

inst_51824:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:155472*0 + 3*368*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155472*0 + 3*368*FLEN/8, x4, x1, x2)

inst_51825:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:155475*0 + 3*369*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155475*0 + 3*369*FLEN/8, x4, x1, x2)

inst_51826:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:155478*0 + 3*370*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155478*0 + 3*370*FLEN/8, x4, x1, x2)

inst_51827:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x013e524226cc1 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfd866f4909bfb and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa013e524226cc1; op2val:0x9fcfd866f4909bfb;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:155481*0 + 3*371*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155481*0 + 3*371*FLEN/8, x4, x1, x2)

inst_51828:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000000000; valaddr_reg:x3; val_offset:155484*0 + 3*372*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155484*0 + 3*372*FLEN/8, x4, x1, x2)

inst_51829:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000000001; valaddr_reg:x3; val_offset:155487*0 + 3*373*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155487*0 + 3*373*FLEN/8, x4, x1, x2)

inst_51830:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000000003; valaddr_reg:x3; val_offset:155490*0 + 3*374*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155490*0 + 3*374*FLEN/8, x4, x1, x2)

inst_51831:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000000007; valaddr_reg:x3; val_offset:155493*0 + 3*375*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155493*0 + 3*375*FLEN/8, x4, x1, x2)

inst_51832:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000000000f; valaddr_reg:x3; val_offset:155496*0 + 3*376*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155496*0 + 3*376*FLEN/8, x4, x1, x2)

inst_51833:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000000001f; valaddr_reg:x3; val_offset:155499*0 + 3*377*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155499*0 + 3*377*FLEN/8, x4, x1, x2)

inst_51834:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000000003f; valaddr_reg:x3; val_offset:155502*0 + 3*378*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155502*0 + 3*378*FLEN/8, x4, x1, x2)

inst_51835:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000000007f; valaddr_reg:x3; val_offset:155505*0 + 3*379*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155505*0 + 3*379*FLEN/8, x4, x1, x2)

inst_51836:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000000000ff; valaddr_reg:x3; val_offset:155508*0 + 3*380*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155508*0 + 3*380*FLEN/8, x4, x1, x2)

inst_51837:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000000001ff; valaddr_reg:x3; val_offset:155511*0 + 3*381*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155511*0 + 3*381*FLEN/8, x4, x1, x2)

inst_51838:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000000003ff; valaddr_reg:x3; val_offset:155514*0 + 3*382*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155514*0 + 3*382*FLEN/8, x4, x1, x2)

inst_51839:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000000007ff; valaddr_reg:x3; val_offset:155517*0 + 3*383*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155517*0 + 3*383*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_4)

inst_51840:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000000fff; valaddr_reg:x3; val_offset:155520*0 + 3*384*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155520*0 + 3*384*FLEN/8, x4, x1, x2)

inst_51841:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000001fff; valaddr_reg:x3; val_offset:155523*0 + 3*385*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155523*0 + 3*385*FLEN/8, x4, x1, x2)

inst_51842:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000003fff; valaddr_reg:x3; val_offset:155526*0 + 3*386*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155526*0 + 3*386*FLEN/8, x4, x1, x2)

inst_51843:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000007fff; valaddr_reg:x3; val_offset:155529*0 + 3*387*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155529*0 + 3*387*FLEN/8, x4, x1, x2)

inst_51844:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000000ffff; valaddr_reg:x3; val_offset:155532*0 + 3*388*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155532*0 + 3*388*FLEN/8, x4, x1, x2)

inst_51845:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000001ffff; valaddr_reg:x3; val_offset:155535*0 + 3*389*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155535*0 + 3*389*FLEN/8, x4, x1, x2)

inst_51846:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000003ffff; valaddr_reg:x3; val_offset:155538*0 + 3*390*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155538*0 + 3*390*FLEN/8, x4, x1, x2)

inst_51847:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000007ffff; valaddr_reg:x3; val_offset:155541*0 + 3*391*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155541*0 + 3*391*FLEN/8, x4, x1, x2)

inst_51848:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000000fffff; valaddr_reg:x3; val_offset:155544*0 + 3*392*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155544*0 + 3*392*FLEN/8, x4, x1, x2)

inst_51849:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000001fffff; valaddr_reg:x3; val_offset:155547*0 + 3*393*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155547*0 + 3*393*FLEN/8, x4, x1, x2)

inst_51850:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000003fffff; valaddr_reg:x3; val_offset:155550*0 + 3*394*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155550*0 + 3*394*FLEN/8, x4, x1, x2)

inst_51851:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000007fffff; valaddr_reg:x3; val_offset:155553*0 + 3*395*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155553*0 + 3*395*FLEN/8, x4, x1, x2)

inst_51852:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000000ffffff; valaddr_reg:x3; val_offset:155556*0 + 3*396*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155556*0 + 3*396*FLEN/8, x4, x1, x2)

inst_51853:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000001ffffff; valaddr_reg:x3; val_offset:155559*0 + 3*397*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155559*0 + 3*397*FLEN/8, x4, x1, x2)

inst_51854:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000003ffffff; valaddr_reg:x3; val_offset:155562*0 + 3*398*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155562*0 + 3*398*FLEN/8, x4, x1, x2)

inst_51855:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000007ffffff; valaddr_reg:x3; val_offset:155565*0 + 3*399*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155565*0 + 3*399*FLEN/8, x4, x1, x2)

inst_51856:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000000fffffff; valaddr_reg:x3; val_offset:155568*0 + 3*400*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155568*0 + 3*400*FLEN/8, x4, x1, x2)

inst_51857:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000001fffffff; valaddr_reg:x3; val_offset:155571*0 + 3*401*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155571*0 + 3*401*FLEN/8, x4, x1, x2)

inst_51858:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000003fffffff; valaddr_reg:x3; val_offset:155574*0 + 3*402*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155574*0 + 3*402*FLEN/8, x4, x1, x2)

inst_51859:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000007fffffff; valaddr_reg:x3; val_offset:155577*0 + 3*403*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155577*0 + 3*403*FLEN/8, x4, x1, x2)

inst_51860:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700000ffffffff; valaddr_reg:x3; val_offset:155580*0 + 3*404*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155580*0 + 3*404*FLEN/8, x4, x1, x2)

inst_51861:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700001ffffffff; valaddr_reg:x3; val_offset:155583*0 + 3*405*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155583*0 + 3*405*FLEN/8, x4, x1, x2)

inst_51862:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700003ffffffff; valaddr_reg:x3; val_offset:155586*0 + 3*406*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155586*0 + 3*406*FLEN/8, x4, x1, x2)

inst_51863:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700007ffffffff; valaddr_reg:x3; val_offset:155589*0 + 3*407*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155589*0 + 3*407*FLEN/8, x4, x1, x2)

inst_51864:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70000fffffffff; valaddr_reg:x3; val_offset:155592*0 + 3*408*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155592*0 + 3*408*FLEN/8, x4, x1, x2)

inst_51865:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70001fffffffff; valaddr_reg:x3; val_offset:155595*0 + 3*409*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155595*0 + 3*409*FLEN/8, x4, x1, x2)

inst_51866:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70003fffffffff; valaddr_reg:x3; val_offset:155598*0 + 3*410*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155598*0 + 3*410*FLEN/8, x4, x1, x2)

inst_51867:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70007fffffffff; valaddr_reg:x3; val_offset:155601*0 + 3*411*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155601*0 + 3*411*FLEN/8, x4, x1, x2)

inst_51868:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7000ffffffffff; valaddr_reg:x3; val_offset:155604*0 + 3*412*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155604*0 + 3*412*FLEN/8, x4, x1, x2)

inst_51869:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7001ffffffffff; valaddr_reg:x3; val_offset:155607*0 + 3*413*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155607*0 + 3*413*FLEN/8, x4, x1, x2)

inst_51870:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7003ffffffffff; valaddr_reg:x3; val_offset:155610*0 + 3*414*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155610*0 + 3*414*FLEN/8, x4, x1, x2)

inst_51871:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7007ffffffffff; valaddr_reg:x3; val_offset:155613*0 + 3*415*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155613*0 + 3*415*FLEN/8, x4, x1, x2)

inst_51872:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe700fffffffffff; valaddr_reg:x3; val_offset:155616*0 + 3*416*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155616*0 + 3*416*FLEN/8, x4, x1, x2)

inst_51873:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe701fffffffffff; valaddr_reg:x3; val_offset:155619*0 + 3*417*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155619*0 + 3*417*FLEN/8, x4, x1, x2)

inst_51874:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe703fffffffffff; valaddr_reg:x3; val_offset:155622*0 + 3*418*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155622*0 + 3*418*FLEN/8, x4, x1, x2)

inst_51875:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe707fffffffffff; valaddr_reg:x3; val_offset:155625*0 + 3*419*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155625*0 + 3*419*FLEN/8, x4, x1, x2)

inst_51876:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe70ffffffffffff; valaddr_reg:x3; val_offset:155628*0 + 3*420*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155628*0 + 3*420*FLEN/8, x4, x1, x2)

inst_51877:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe71ffffffffffff; valaddr_reg:x3; val_offset:155631*0 + 3*421*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155631*0 + 3*421*FLEN/8, x4, x1, x2)

inst_51878:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe73ffffffffffff; valaddr_reg:x3; val_offset:155634*0 + 3*422*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155634*0 + 3*422*FLEN/8, x4, x1, x2)

inst_51879:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe77ffffffffffff; valaddr_reg:x3; val_offset:155637*0 + 3*423*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155637*0 + 3*423*FLEN/8, x4, x1, x2)

inst_51880:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe78000000000000; valaddr_reg:x3; val_offset:155640*0 + 3*424*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155640*0 + 3*424*FLEN/8, x4, x1, x2)

inst_51881:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7c000000000000; valaddr_reg:x3; val_offset:155643*0 + 3*425*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155643*0 + 3*425*FLEN/8, x4, x1, x2)

inst_51882:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7e000000000000; valaddr_reg:x3; val_offset:155646*0 + 3*426*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155646*0 + 3*426*FLEN/8, x4, x1, x2)

inst_51883:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7f000000000000; valaddr_reg:x3; val_offset:155649*0 + 3*427*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155649*0 + 3*427*FLEN/8, x4, x1, x2)

inst_51884:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7f800000000000; valaddr_reg:x3; val_offset:155652*0 + 3*428*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155652*0 + 3*428*FLEN/8, x4, x1, x2)

inst_51885:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fc00000000000; valaddr_reg:x3; val_offset:155655*0 + 3*429*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155655*0 + 3*429*FLEN/8, x4, x1, x2)

inst_51886:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fe00000000000; valaddr_reg:x3; val_offset:155658*0 + 3*430*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155658*0 + 3*430*FLEN/8, x4, x1, x2)

inst_51887:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ff00000000000; valaddr_reg:x3; val_offset:155661*0 + 3*431*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155661*0 + 3*431*FLEN/8, x4, x1, x2)

inst_51888:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ff80000000000; valaddr_reg:x3; val_offset:155664*0 + 3*432*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155664*0 + 3*432*FLEN/8, x4, x1, x2)

inst_51889:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffc0000000000; valaddr_reg:x3; val_offset:155667*0 + 3*433*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155667*0 + 3*433*FLEN/8, x4, x1, x2)

inst_51890:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffe0000000000; valaddr_reg:x3; val_offset:155670*0 + 3*434*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155670*0 + 3*434*FLEN/8, x4, x1, x2)

inst_51891:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fff0000000000; valaddr_reg:x3; val_offset:155673*0 + 3*435*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155673*0 + 3*435*FLEN/8, x4, x1, x2)

inst_51892:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fff8000000000; valaddr_reg:x3; val_offset:155676*0 + 3*436*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155676*0 + 3*436*FLEN/8, x4, x1, x2)

inst_51893:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffc000000000; valaddr_reg:x3; val_offset:155679*0 + 3*437*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155679*0 + 3*437*FLEN/8, x4, x1, x2)

inst_51894:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffe000000000; valaddr_reg:x3; val_offset:155682*0 + 3*438*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155682*0 + 3*438*FLEN/8, x4, x1, x2)

inst_51895:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffff000000000; valaddr_reg:x3; val_offset:155685*0 + 3*439*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155685*0 + 3*439*FLEN/8, x4, x1, x2)

inst_51896:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffff800000000; valaddr_reg:x3; val_offset:155688*0 + 3*440*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155688*0 + 3*440*FLEN/8, x4, x1, x2)

inst_51897:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffc00000000; valaddr_reg:x3; val_offset:155691*0 + 3*441*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155691*0 + 3*441*FLEN/8, x4, x1, x2)

inst_51898:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffe00000000; valaddr_reg:x3; val_offset:155694*0 + 3*442*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155694*0 + 3*442*FLEN/8, x4, x1, x2)

inst_51899:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffff00000000; valaddr_reg:x3; val_offset:155697*0 + 3*443*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155697*0 + 3*443*FLEN/8, x4, x1, x2)

inst_51900:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffff80000000; valaddr_reg:x3; val_offset:155700*0 + 3*444*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155700*0 + 3*444*FLEN/8, x4, x1, x2)

inst_51901:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffc0000000; valaddr_reg:x3; val_offset:155703*0 + 3*445*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155703*0 + 3*445*FLEN/8, x4, x1, x2)

inst_51902:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffe0000000; valaddr_reg:x3; val_offset:155706*0 + 3*446*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155706*0 + 3*446*FLEN/8, x4, x1, x2)

inst_51903:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffff0000000; valaddr_reg:x3; val_offset:155709*0 + 3*447*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155709*0 + 3*447*FLEN/8, x4, x1, x2)

inst_51904:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffff8000000; valaddr_reg:x3; val_offset:155712*0 + 3*448*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155712*0 + 3*448*FLEN/8, x4, x1, x2)

inst_51905:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffc000000; valaddr_reg:x3; val_offset:155715*0 + 3*449*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155715*0 + 3*449*FLEN/8, x4, x1, x2)

inst_51906:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffe000000; valaddr_reg:x3; val_offset:155718*0 + 3*450*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155718*0 + 3*450*FLEN/8, x4, x1, x2)

inst_51907:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffff000000; valaddr_reg:x3; val_offset:155721*0 + 3*451*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155721*0 + 3*451*FLEN/8, x4, x1, x2)

inst_51908:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffff800000; valaddr_reg:x3; val_offset:155724*0 + 3*452*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155724*0 + 3*452*FLEN/8, x4, x1, x2)

inst_51909:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffc00000; valaddr_reg:x3; val_offset:155727*0 + 3*453*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155727*0 + 3*453*FLEN/8, x4, x1, x2)

inst_51910:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffe00000; valaddr_reg:x3; val_offset:155730*0 + 3*454*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155730*0 + 3*454*FLEN/8, x4, x1, x2)

inst_51911:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffff00000; valaddr_reg:x3; val_offset:155733*0 + 3*455*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155733*0 + 3*455*FLEN/8, x4, x1, x2)

inst_51912:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffff80000; valaddr_reg:x3; val_offset:155736*0 + 3*456*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155736*0 + 3*456*FLEN/8, x4, x1, x2)

inst_51913:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffc0000; valaddr_reg:x3; val_offset:155739*0 + 3*457*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155739*0 + 3*457*FLEN/8, x4, x1, x2)

inst_51914:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffe0000; valaddr_reg:x3; val_offset:155742*0 + 3*458*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155742*0 + 3*458*FLEN/8, x4, x1, x2)

inst_51915:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffff0000; valaddr_reg:x3; val_offset:155745*0 + 3*459*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155745*0 + 3*459*FLEN/8, x4, x1, x2)

inst_51916:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffff8000; valaddr_reg:x3; val_offset:155748*0 + 3*460*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155748*0 + 3*460*FLEN/8, x4, x1, x2)

inst_51917:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffc000; valaddr_reg:x3; val_offset:155751*0 + 3*461*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155751*0 + 3*461*FLEN/8, x4, x1, x2)

inst_51918:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffe000; valaddr_reg:x3; val_offset:155754*0 + 3*462*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155754*0 + 3*462*FLEN/8, x4, x1, x2)

inst_51919:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffff000; valaddr_reg:x3; val_offset:155757*0 + 3*463*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155757*0 + 3*463*FLEN/8, x4, x1, x2)

inst_51920:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffff800; valaddr_reg:x3; val_offset:155760*0 + 3*464*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155760*0 + 3*464*FLEN/8, x4, x1, x2)

inst_51921:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffc00; valaddr_reg:x3; val_offset:155763*0 + 3*465*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155763*0 + 3*465*FLEN/8, x4, x1, x2)

inst_51922:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffe00; valaddr_reg:x3; val_offset:155766*0 + 3*466*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155766*0 + 3*466*FLEN/8, x4, x1, x2)

inst_51923:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffff00; valaddr_reg:x3; val_offset:155769*0 + 3*467*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155769*0 + 3*467*FLEN/8, x4, x1, x2)

inst_51924:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffff80; valaddr_reg:x3; val_offset:155772*0 + 3*468*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155772*0 + 3*468*FLEN/8, x4, x1, x2)

inst_51925:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffffc0; valaddr_reg:x3; val_offset:155775*0 + 3*469*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155775*0 + 3*469*FLEN/8, x4, x1, x2)

inst_51926:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffffe0; valaddr_reg:x3; val_offset:155778*0 + 3*470*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155778*0 + 3*470*FLEN/8, x4, x1, x2)

inst_51927:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffff0; valaddr_reg:x3; val_offset:155781*0 + 3*471*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155781*0 + 3*471*FLEN/8, x4, x1, x2)

inst_51928:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffff8; valaddr_reg:x3; val_offset:155784*0 + 3*472*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155784*0 + 3*472*FLEN/8, x4, x1, x2)

inst_51929:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffffc; valaddr_reg:x3; val_offset:155787*0 + 3*473*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155787*0 + 3*473*FLEN/8, x4, x1, x2)

inst_51930:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7ffffffffffffe; valaddr_reg:x3; val_offset:155790*0 + 3*474*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155790*0 + 3*474*FLEN/8, x4, x1, x2)

inst_51931:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3e7 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbe7fffffffffffff; valaddr_reg:x3; val_offset:155793*0 + 3*475*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155793*0 + 3*475*FLEN/8, x4, x1, x2)

inst_51932:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:155796*0 + 3*476*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155796*0 + 3*476*FLEN/8, x4, x1, x2)

inst_51933:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:155799*0 + 3*477*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155799*0 + 3*477*FLEN/8, x4, x1, x2)

inst_51934:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:155802*0 + 3*478*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155802*0 + 3*478*FLEN/8, x4, x1, x2)

inst_51935:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:155805*0 + 3*479*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155805*0 + 3*479*FLEN/8, x4, x1, x2)

inst_51936:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:155808*0 + 3*480*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155808*0 + 3*480*FLEN/8, x4, x1, x2)

inst_51937:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:155811*0 + 3*481*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155811*0 + 3*481*FLEN/8, x4, x1, x2)

inst_51938:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:155814*0 + 3*482*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155814*0 + 3*482*FLEN/8, x4, x1, x2)

inst_51939:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:155817*0 + 3*483*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155817*0 + 3*483*FLEN/8, x4, x1, x2)

inst_51940:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:155820*0 + 3*484*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155820*0 + 3*484*FLEN/8, x4, x1, x2)

inst_51941:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:155823*0 + 3*485*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155823*0 + 3*485*FLEN/8, x4, x1, x2)

inst_51942:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:155826*0 + 3*486*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155826*0 + 3*486*FLEN/8, x4, x1, x2)

inst_51943:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:155829*0 + 3*487*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155829*0 + 3*487*FLEN/8, x4, x1, x2)

inst_51944:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:155832*0 + 3*488*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155832*0 + 3*488*FLEN/8, x4, x1, x2)

inst_51945:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:155835*0 + 3*489*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155835*0 + 3*489*FLEN/8, x4, x1, x2)

inst_51946:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:155838*0 + 3*490*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155838*0 + 3*490*FLEN/8, x4, x1, x2)

inst_51947:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:155841*0 + 3*491*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155841*0 + 3*491*FLEN/8, x4, x1, x2)

inst_51948:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:155844*0 + 3*492*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155844*0 + 3*492*FLEN/8, x4, x1, x2)

inst_51949:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:155847*0 + 3*493*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155847*0 + 3*493*FLEN/8, x4, x1, x2)

inst_51950:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:155850*0 + 3*494*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155850*0 + 3*494*FLEN/8, x4, x1, x2)

inst_51951:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:155853*0 + 3*495*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155853*0 + 3*495*FLEN/8, x4, x1, x2)

inst_51952:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:155856*0 + 3*496*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155856*0 + 3*496*FLEN/8, x4, x1, x2)

inst_51953:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x028f51d8767f7 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xfaee561f982ad and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa028f51d8767f7; op2val:0x9fcfaee561f982ad;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:155859*0 + 3*497*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155859*0 + 3*497*FLEN/8, x4, x1, x2)

inst_51954:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf80000000000001; valaddr_reg:x3; val_offset:155862*0 + 3*498*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155862*0 + 3*498*FLEN/8, x4, x1, x2)

inst_51955:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf80000000000003; valaddr_reg:x3; val_offset:155865*0 + 3*499*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155865*0 + 3*499*FLEN/8, x4, x1, x2)

inst_51956:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf80000000000007; valaddr_reg:x3; val_offset:155868*0 + 3*500*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155868*0 + 3*500*FLEN/8, x4, x1, x2)

inst_51957:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8000000000000f; valaddr_reg:x3; val_offset:155871*0 + 3*501*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155871*0 + 3*501*FLEN/8, x4, x1, x2)

inst_51958:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8000000000001f; valaddr_reg:x3; val_offset:155874*0 + 3*502*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155874*0 + 3*502*FLEN/8, x4, x1, x2)

inst_51959:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8000000000003f; valaddr_reg:x3; val_offset:155877*0 + 3*503*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155877*0 + 3*503*FLEN/8, x4, x1, x2)

inst_51960:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf83333333333333; valaddr_reg:x3; val_offset:155880*0 + 3*504*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155880*0 + 3*504*FLEN/8, x4, x1, x2)

inst_51961:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf84924924924924; valaddr_reg:x3; val_offset:155883*0 + 3*505*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155883*0 + 3*505*FLEN/8, x4, x1, x2)

inst_51962:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf86666666666666; valaddr_reg:x3; val_offset:155886*0 + 3*506*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155886*0 + 3*506*FLEN/8, x4, x1, x2)

inst_51963:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf86db6db6db6db6; valaddr_reg:x3; val_offset:155889*0 + 3*507*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155889*0 + 3*507*FLEN/8, x4, x1, x2)

inst_51964:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf87777777777777; valaddr_reg:x3; val_offset:155892*0 + 3*508*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155892*0 + 3*508*FLEN/8, x4, x1, x2)

inst_51965:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf88888888888888; valaddr_reg:x3; val_offset:155895*0 + 3*509*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155895*0 + 3*509*FLEN/8, x4, x1, x2)

inst_51966:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf89999999999999; valaddr_reg:x3; val_offset:155898*0 + 3*510*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155898*0 + 3*510*FLEN/8, x4, x1, x2)

inst_51967:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8b6db6db6db6db; valaddr_reg:x3; val_offset:155901*0 + 3*511*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155901*0 + 3*511*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_5)

inst_51968:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8ccccccccccccc; valaddr_reg:x3; val_offset:155904*0 + 3*512*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155904*0 + 3*512*FLEN/8, x4, x1, x2)

inst_51969:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8db6db6db6db6d; valaddr_reg:x3; val_offset:155907*0 + 3*513*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155907*0 + 3*513*FLEN/8, x4, x1, x2)

inst_51970:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8fffffffffffc0; valaddr_reg:x3; val_offset:155910*0 + 3*514*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155910*0 + 3*514*FLEN/8, x4, x1, x2)

inst_51971:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8fffffffffffe0; valaddr_reg:x3; val_offset:155913*0 + 3*515*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155913*0 + 3*515*FLEN/8, x4, x1, x2)

inst_51972:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8ffffffffffff0; valaddr_reg:x3; val_offset:155916*0 + 3*516*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155916*0 + 3*516*FLEN/8, x4, x1, x2)

inst_51973:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8ffffffffffff8; valaddr_reg:x3; val_offset:155919*0 + 3*517*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155919*0 + 3*517*FLEN/8, x4, x1, x2)

inst_51974:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8ffffffffffffc; valaddr_reg:x3; val_offset:155922*0 + 3*518*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155922*0 + 3*518*FLEN/8, x4, x1, x2)

inst_51975:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3f8 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbf8ffffffffffffe; valaddr_reg:x3; val_offset:155925*0 + 3*519*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155925*0 + 3*519*FLEN/8, x4, x1, x2)

inst_51976:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000000000; valaddr_reg:x3; val_offset:155928*0 + 3*520*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155928*0 + 3*520*FLEN/8, x4, x1, x2)

inst_51977:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000000001; valaddr_reg:x3; val_offset:155931*0 + 3*521*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155931*0 + 3*521*FLEN/8, x4, x1, x2)

inst_51978:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000000003; valaddr_reg:x3; val_offset:155934*0 + 3*522*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155934*0 + 3*522*FLEN/8, x4, x1, x2)

inst_51979:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000000007; valaddr_reg:x3; val_offset:155937*0 + 3*523*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155937*0 + 3*523*FLEN/8, x4, x1, x2)

inst_51980:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000000000f; valaddr_reg:x3; val_offset:155940*0 + 3*524*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155940*0 + 3*524*FLEN/8, x4, x1, x2)

inst_51981:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000000001f; valaddr_reg:x3; val_offset:155943*0 + 3*525*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155943*0 + 3*525*FLEN/8, x4, x1, x2)

inst_51982:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000000003f; valaddr_reg:x3; val_offset:155946*0 + 3*526*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155946*0 + 3*526*FLEN/8, x4, x1, x2)

inst_51983:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000000007f; valaddr_reg:x3; val_offset:155949*0 + 3*527*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155949*0 + 3*527*FLEN/8, x4, x1, x2)

inst_51984:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000000000ff; valaddr_reg:x3; val_offset:155952*0 + 3*528*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155952*0 + 3*528*FLEN/8, x4, x1, x2)

inst_51985:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000000001ff; valaddr_reg:x3; val_offset:155955*0 + 3*529*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155955*0 + 3*529*FLEN/8, x4, x1, x2)

inst_51986:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000000003ff; valaddr_reg:x3; val_offset:155958*0 + 3*530*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155958*0 + 3*530*FLEN/8, x4, x1, x2)

inst_51987:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000000007ff; valaddr_reg:x3; val_offset:155961*0 + 3*531*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155961*0 + 3*531*FLEN/8, x4, x1, x2)

inst_51988:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000000fff; valaddr_reg:x3; val_offset:155964*0 + 3*532*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155964*0 + 3*532*FLEN/8, x4, x1, x2)

inst_51989:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000001fff; valaddr_reg:x3; val_offset:155967*0 + 3*533*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155967*0 + 3*533*FLEN/8, x4, x1, x2)

inst_51990:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000003fff; valaddr_reg:x3; val_offset:155970*0 + 3*534*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155970*0 + 3*534*FLEN/8, x4, x1, x2)

inst_51991:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000007fff; valaddr_reg:x3; val_offset:155973*0 + 3*535*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155973*0 + 3*535*FLEN/8, x4, x1, x2)

inst_51992:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000000ffff; valaddr_reg:x3; val_offset:155976*0 + 3*536*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155976*0 + 3*536*FLEN/8, x4, x1, x2)

inst_51993:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000001ffff; valaddr_reg:x3; val_offset:155979*0 + 3*537*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155979*0 + 3*537*FLEN/8, x4, x1, x2)

inst_51994:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000003ffff; valaddr_reg:x3; val_offset:155982*0 + 3*538*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155982*0 + 3*538*FLEN/8, x4, x1, x2)

inst_51995:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000007ffff; valaddr_reg:x3; val_offset:155985*0 + 3*539*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155985*0 + 3*539*FLEN/8, x4, x1, x2)

inst_51996:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000000fffff; valaddr_reg:x3; val_offset:155988*0 + 3*540*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155988*0 + 3*540*FLEN/8, x4, x1, x2)

inst_51997:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000001fffff; valaddr_reg:x3; val_offset:155991*0 + 3*541*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155991*0 + 3*541*FLEN/8, x4, x1, x2)

inst_51998:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000003fffff; valaddr_reg:x3; val_offset:155994*0 + 3*542*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155994*0 + 3*542*FLEN/8, x4, x1, x2)

inst_51999:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000007fffff; valaddr_reg:x3; val_offset:155997*0 + 3*543*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 155997*0 + 3*543*FLEN/8, x4, x1, x2)

inst_52000:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000000ffffff; valaddr_reg:x3; val_offset:156000*0 + 3*544*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156000*0 + 3*544*FLEN/8, x4, x1, x2)

inst_52001:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000001ffffff; valaddr_reg:x3; val_offset:156003*0 + 3*545*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156003*0 + 3*545*FLEN/8, x4, x1, x2)

inst_52002:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000003ffffff; valaddr_reg:x3; val_offset:156006*0 + 3*546*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156006*0 + 3*546*FLEN/8, x4, x1, x2)

inst_52003:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000007ffffff; valaddr_reg:x3; val_offset:156009*0 + 3*547*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156009*0 + 3*547*FLEN/8, x4, x1, x2)

inst_52004:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000000fffffff; valaddr_reg:x3; val_offset:156012*0 + 3*548*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156012*0 + 3*548*FLEN/8, x4, x1, x2)

inst_52005:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000001fffffff; valaddr_reg:x3; val_offset:156015*0 + 3*549*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156015*0 + 3*549*FLEN/8, x4, x1, x2)

inst_52006:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000003fffffff; valaddr_reg:x3; val_offset:156018*0 + 3*550*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156018*0 + 3*550*FLEN/8, x4, x1, x2)

inst_52007:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000007fffffff; valaddr_reg:x3; val_offset:156021*0 + 3*551*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156021*0 + 3*551*FLEN/8, x4, x1, x2)

inst_52008:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00000ffffffff; valaddr_reg:x3; val_offset:156024*0 + 3*552*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156024*0 + 3*552*FLEN/8, x4, x1, x2)

inst_52009:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00001ffffffff; valaddr_reg:x3; val_offset:156027*0 + 3*553*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156027*0 + 3*553*FLEN/8, x4, x1, x2)

inst_52010:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00003ffffffff; valaddr_reg:x3; val_offset:156030*0 + 3*554*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156030*0 + 3*554*FLEN/8, x4, x1, x2)

inst_52011:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00007ffffffff; valaddr_reg:x3; val_offset:156033*0 + 3*555*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156033*0 + 3*555*FLEN/8, x4, x1, x2)

inst_52012:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0000fffffffff; valaddr_reg:x3; val_offset:156036*0 + 3*556*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156036*0 + 3*556*FLEN/8, x4, x1, x2)

inst_52013:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0001fffffffff; valaddr_reg:x3; val_offset:156039*0 + 3*557*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156039*0 + 3*557*FLEN/8, x4, x1, x2)

inst_52014:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0003fffffffff; valaddr_reg:x3; val_offset:156042*0 + 3*558*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156042*0 + 3*558*FLEN/8, x4, x1, x2)

inst_52015:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0007fffffffff; valaddr_reg:x3; val_offset:156045*0 + 3*559*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156045*0 + 3*559*FLEN/8, x4, x1, x2)

inst_52016:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe000ffffffffff; valaddr_reg:x3; val_offset:156048*0 + 3*560*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156048*0 + 3*560*FLEN/8, x4, x1, x2)

inst_52017:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe001ffffffffff; valaddr_reg:x3; val_offset:156051*0 + 3*561*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156051*0 + 3*561*FLEN/8, x4, x1, x2)

inst_52018:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe003ffffffffff; valaddr_reg:x3; val_offset:156054*0 + 3*562*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156054*0 + 3*562*FLEN/8, x4, x1, x2)

inst_52019:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe007ffffffffff; valaddr_reg:x3; val_offset:156057*0 + 3*563*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156057*0 + 3*563*FLEN/8, x4, x1, x2)

inst_52020:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe00fffffffffff; valaddr_reg:x3; val_offset:156060*0 + 3*564*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156060*0 + 3*564*FLEN/8, x4, x1, x2)

inst_52021:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe01fffffffffff; valaddr_reg:x3; val_offset:156063*0 + 3*565*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156063*0 + 3*565*FLEN/8, x4, x1, x2)

inst_52022:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe03fffffffffff; valaddr_reg:x3; val_offset:156066*0 + 3*566*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156066*0 + 3*566*FLEN/8, x4, x1, x2)

inst_52023:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe07fffffffffff; valaddr_reg:x3; val_offset:156069*0 + 3*567*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156069*0 + 3*567*FLEN/8, x4, x1, x2)

inst_52024:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe0ffffffffffff; valaddr_reg:x3; val_offset:156072*0 + 3*568*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156072*0 + 3*568*FLEN/8, x4, x1, x2)

inst_52025:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe1ffffffffffff; valaddr_reg:x3; val_offset:156075*0 + 3*569*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156075*0 + 3*569*FLEN/8, x4, x1, x2)

inst_52026:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe3ffffffffffff; valaddr_reg:x3; val_offset:156078*0 + 3*570*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156078*0 + 3*570*FLEN/8, x4, x1, x2)

inst_52027:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe7ffffffffffff; valaddr_reg:x3; val_offset:156081*0 + 3*571*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156081*0 + 3*571*FLEN/8, x4, x1, x2)

inst_52028:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfe8000000000000; valaddr_reg:x3; val_offset:156084*0 + 3*572*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156084*0 + 3*572*FLEN/8, x4, x1, x2)

inst_52029:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfec000000000000; valaddr_reg:x3; val_offset:156087*0 + 3*573*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156087*0 + 3*573*FLEN/8, x4, x1, x2)

inst_52030:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfee000000000000; valaddr_reg:x3; val_offset:156090*0 + 3*574*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156090*0 + 3*574*FLEN/8, x4, x1, x2)

inst_52031:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfef000000000000; valaddr_reg:x3; val_offset:156093*0 + 3*575*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156093*0 + 3*575*FLEN/8, x4, x1, x2)

inst_52032:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfef800000000000; valaddr_reg:x3; val_offset:156096*0 + 3*576*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156096*0 + 3*576*FLEN/8, x4, x1, x2)

inst_52033:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefc00000000000; valaddr_reg:x3; val_offset:156099*0 + 3*577*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156099*0 + 3*577*FLEN/8, x4, x1, x2)

inst_52034:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefe00000000000; valaddr_reg:x3; val_offset:156102*0 + 3*578*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156102*0 + 3*578*FLEN/8, x4, x1, x2)

inst_52035:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeff00000000000; valaddr_reg:x3; val_offset:156105*0 + 3*579*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156105*0 + 3*579*FLEN/8, x4, x1, x2)

inst_52036:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeff80000000000; valaddr_reg:x3; val_offset:156108*0 + 3*580*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156108*0 + 3*580*FLEN/8, x4, x1, x2)

inst_52037:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffc0000000000; valaddr_reg:x3; val_offset:156111*0 + 3*581*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156111*0 + 3*581*FLEN/8, x4, x1, x2)

inst_52038:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffe0000000000; valaddr_reg:x3; val_offset:156114*0 + 3*582*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156114*0 + 3*582*FLEN/8, x4, x1, x2)

inst_52039:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefff0000000000; valaddr_reg:x3; val_offset:156117*0 + 3*583*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156117*0 + 3*583*FLEN/8, x4, x1, x2)

inst_52040:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefff8000000000; valaddr_reg:x3; val_offset:156120*0 + 3*584*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156120*0 + 3*584*FLEN/8, x4, x1, x2)

inst_52041:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffc000000000; valaddr_reg:x3; val_offset:156123*0 + 3*585*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156123*0 + 3*585*FLEN/8, x4, x1, x2)

inst_52042:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffe000000000; valaddr_reg:x3; val_offset:156126*0 + 3*586*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156126*0 + 3*586*FLEN/8, x4, x1, x2)

inst_52043:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffff000000000; valaddr_reg:x3; val_offset:156129*0 + 3*587*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156129*0 + 3*587*FLEN/8, x4, x1, x2)

inst_52044:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffff800000000; valaddr_reg:x3; val_offset:156132*0 + 3*588*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156132*0 + 3*588*FLEN/8, x4, x1, x2)

inst_52045:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffc00000000; valaddr_reg:x3; val_offset:156135*0 + 3*589*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156135*0 + 3*589*FLEN/8, x4, x1, x2)

inst_52046:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffe00000000; valaddr_reg:x3; val_offset:156138*0 + 3*590*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156138*0 + 3*590*FLEN/8, x4, x1, x2)

inst_52047:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffff00000000; valaddr_reg:x3; val_offset:156141*0 + 3*591*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156141*0 + 3*591*FLEN/8, x4, x1, x2)

inst_52048:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffff80000000; valaddr_reg:x3; val_offset:156144*0 + 3*592*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156144*0 + 3*592*FLEN/8, x4, x1, x2)

inst_52049:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffc0000000; valaddr_reg:x3; val_offset:156147*0 + 3*593*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156147*0 + 3*593*FLEN/8, x4, x1, x2)

inst_52050:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffe0000000; valaddr_reg:x3; val_offset:156150*0 + 3*594*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156150*0 + 3*594*FLEN/8, x4, x1, x2)

inst_52051:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffff0000000; valaddr_reg:x3; val_offset:156153*0 + 3*595*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156153*0 + 3*595*FLEN/8, x4, x1, x2)

inst_52052:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffff8000000; valaddr_reg:x3; val_offset:156156*0 + 3*596*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156156*0 + 3*596*FLEN/8, x4, x1, x2)

inst_52053:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffc000000; valaddr_reg:x3; val_offset:156159*0 + 3*597*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156159*0 + 3*597*FLEN/8, x4, x1, x2)

inst_52054:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffe000000; valaddr_reg:x3; val_offset:156162*0 + 3*598*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156162*0 + 3*598*FLEN/8, x4, x1, x2)

inst_52055:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffff000000; valaddr_reg:x3; val_offset:156165*0 + 3*599*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156165*0 + 3*599*FLEN/8, x4, x1, x2)

inst_52056:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffff800000; valaddr_reg:x3; val_offset:156168*0 + 3*600*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156168*0 + 3*600*FLEN/8, x4, x1, x2)

inst_52057:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffc00000; valaddr_reg:x3; val_offset:156171*0 + 3*601*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156171*0 + 3*601*FLEN/8, x4, x1, x2)

inst_52058:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffe00000; valaddr_reg:x3; val_offset:156174*0 + 3*602*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156174*0 + 3*602*FLEN/8, x4, x1, x2)

inst_52059:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffff00000; valaddr_reg:x3; val_offset:156177*0 + 3*603*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156177*0 + 3*603*FLEN/8, x4, x1, x2)

inst_52060:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffff80000; valaddr_reg:x3; val_offset:156180*0 + 3*604*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156180*0 + 3*604*FLEN/8, x4, x1, x2)

inst_52061:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffc0000; valaddr_reg:x3; val_offset:156183*0 + 3*605*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156183*0 + 3*605*FLEN/8, x4, x1, x2)

inst_52062:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffe0000; valaddr_reg:x3; val_offset:156186*0 + 3*606*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156186*0 + 3*606*FLEN/8, x4, x1, x2)

inst_52063:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffff0000; valaddr_reg:x3; val_offset:156189*0 + 3*607*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156189*0 + 3*607*FLEN/8, x4, x1, x2)

inst_52064:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffff8000; valaddr_reg:x3; val_offset:156192*0 + 3*608*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156192*0 + 3*608*FLEN/8, x4, x1, x2)

inst_52065:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffc000; valaddr_reg:x3; val_offset:156195*0 + 3*609*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156195*0 + 3*609*FLEN/8, x4, x1, x2)

inst_52066:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffe000; valaddr_reg:x3; val_offset:156198*0 + 3*610*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156198*0 + 3*610*FLEN/8, x4, x1, x2)

inst_52067:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffff000; valaddr_reg:x3; val_offset:156201*0 + 3*611*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156201*0 + 3*611*FLEN/8, x4, x1, x2)

inst_52068:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffff800; valaddr_reg:x3; val_offset:156204*0 + 3*612*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156204*0 + 3*612*FLEN/8, x4, x1, x2)

inst_52069:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffc00; valaddr_reg:x3; val_offset:156207*0 + 3*613*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156207*0 + 3*613*FLEN/8, x4, x1, x2)

inst_52070:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffe00; valaddr_reg:x3; val_offset:156210*0 + 3*614*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156210*0 + 3*614*FLEN/8, x4, x1, x2)

inst_52071:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffff00; valaddr_reg:x3; val_offset:156213*0 + 3*615*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156213*0 + 3*615*FLEN/8, x4, x1, x2)

inst_52072:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffff80; valaddr_reg:x3; val_offset:156216*0 + 3*616*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156216*0 + 3*616*FLEN/8, x4, x1, x2)

inst_52073:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffffc0; valaddr_reg:x3; val_offset:156219*0 + 3*617*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156219*0 + 3*617*FLEN/8, x4, x1, x2)

inst_52074:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffffe0; valaddr_reg:x3; val_offset:156222*0 + 3*618*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156222*0 + 3*618*FLEN/8, x4, x1, x2)

inst_52075:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffff0; valaddr_reg:x3; val_offset:156225*0 + 3*619*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156225*0 + 3*619*FLEN/8, x4, x1, x2)

inst_52076:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffff8; valaddr_reg:x3; val_offset:156228*0 + 3*620*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156228*0 + 3*620*FLEN/8, x4, x1, x2)

inst_52077:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffffc; valaddr_reg:x3; val_offset:156231*0 + 3*621*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156231*0 + 3*621*FLEN/8, x4, x1, x2)

inst_52078:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfeffffffffffffe; valaddr_reg:x3; val_offset:156234*0 + 3*622*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156234*0 + 3*622*FLEN/8, x4, x1, x2)

inst_52079:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x0382dd247f3f9 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xf91298781b652 and fs3 == 1 and fe3 == 0x3fe and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa0382dd247f3f9; op2val:0x9fcf91298781b652;
op3val:0xbfefffffffffffff; valaddr_reg:x3; val_offset:156237*0 + 3*623*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156237*0 + 3*623*FLEN/8, x4, x1, x2)

inst_52080:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8010000000000001; valaddr_reg:x3; val_offset:156240*0 + 3*624*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156240*0 + 3*624*FLEN/8, x4, x1, x2)

inst_52081:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8010000000000003; valaddr_reg:x3; val_offset:156243*0 + 3*625*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156243*0 + 3*625*FLEN/8, x4, x1, x2)

inst_52082:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8010000000000007; valaddr_reg:x3; val_offset:156246*0 + 3*626*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156246*0 + 3*626*FLEN/8, x4, x1, x2)

inst_52083:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801000000000000f; valaddr_reg:x3; val_offset:156249*0 + 3*627*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156249*0 + 3*627*FLEN/8, x4, x1, x2)

inst_52084:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801000000000001f; valaddr_reg:x3; val_offset:156252*0 + 3*628*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156252*0 + 3*628*FLEN/8, x4, x1, x2)

inst_52085:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801000000000003f; valaddr_reg:x3; val_offset:156255*0 + 3*629*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156255*0 + 3*629*FLEN/8, x4, x1, x2)

inst_52086:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x3333333333333 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8013333333333333; valaddr_reg:x3; val_offset:156258*0 + 3*630*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156258*0 + 3*630*FLEN/8, x4, x1, x2)

inst_52087:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x4924924924924 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8014924924924924; valaddr_reg:x3; val_offset:156261*0 + 3*631*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156261*0 + 3*631*FLEN/8, x4, x1, x2)

inst_52088:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6666666666666 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8016666666666666; valaddr_reg:x3; val_offset:156264*0 + 3*632*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156264*0 + 3*632*FLEN/8, x4, x1, x2)

inst_52089:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x6db6db6db6db6 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8016db6db6db6db6; valaddr_reg:x3; val_offset:156267*0 + 3*633*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156267*0 + 3*633*FLEN/8, x4, x1, x2)

inst_52090:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x7777777777777 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8017777777777777; valaddr_reg:x3; val_offset:156270*0 + 3*634*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156270*0 + 3*634*FLEN/8, x4, x1, x2)

inst_52091:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x8888888888888 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8018888888888888; valaddr_reg:x3; val_offset:156273*0 + 3*635*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156273*0 + 3*635*FLEN/8, x4, x1, x2)

inst_52092:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0x9999999999999 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8019999999999999; valaddr_reg:x3; val_offset:156276*0 + 3*636*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156276*0 + 3*636*FLEN/8, x4, x1, x2)

inst_52093:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xb6db6db6db6db and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801b6db6db6db6db; valaddr_reg:x3; val_offset:156279*0 + 3*637*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156279*0 + 3*637*FLEN/8, x4, x1, x2)

inst_52094:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xccccccccccccc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801ccccccccccccc; valaddr_reg:x3; val_offset:156282*0 + 3*638*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156282*0 + 3*638*FLEN/8, x4, x1, x2)

inst_52095:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xdb6db6db6db6d and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801db6db6db6db6d; valaddr_reg:x3; val_offset:156285*0 + 3*639*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156285*0 + 3*639*FLEN/8, x4, x1, x2)
RVTEST_SIGBASE(x1,signature_x1_6)

inst_52096:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801fffffffffffc0; valaddr_reg:x3; val_offset:156288*0 + 3*640*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156288*0 + 3*640*FLEN/8, x4, x1, x2)

inst_52097:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801fffffffffffe0; valaddr_reg:x3; val_offset:156291*0 + 3*641*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156291*0 + 3*641*FLEN/8, x4, x1, x2)

inst_52098:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801ffffffffffff0; valaddr_reg:x3; val_offset:156294*0 + 3*642*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156294*0 + 3*642*FLEN/8, x4, x1, x2)

inst_52099:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801ffffffffffff8; valaddr_reg:x3; val_offset:156297*0 + 3*643*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156297*0 + 3*643*FLEN/8, x4, x1, x2)

inst_52100:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801ffffffffffffc; valaddr_reg:x3; val_offset:156300*0 + 3*644*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156300*0 + 3*644*FLEN/8, x4, x1, x2)

inst_52101:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x001 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x801ffffffffffffe; valaddr_reg:x3; val_offset:156303*0 + 3*645*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156303*0 + 3*645*FLEN/8, x4, x1, x2)

inst_52102:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000000000; valaddr_reg:x3; val_offset:156306*0 + 3*646*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156306*0 + 3*646*FLEN/8, x4, x1, x2)

inst_52103:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000000001; valaddr_reg:x3; val_offset:156309*0 + 3*647*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156309*0 + 3*647*FLEN/8, x4, x1, x2)

inst_52104:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000000003; valaddr_reg:x3; val_offset:156312*0 + 3*648*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156312*0 + 3*648*FLEN/8, x4, x1, x2)

inst_52105:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000000007; valaddr_reg:x3; val_offset:156315*0 + 3*649*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156315*0 + 3*649*FLEN/8, x4, x1, x2)

inst_52106:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000000000f; valaddr_reg:x3; val_offset:156318*0 + 3*650*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156318*0 + 3*650*FLEN/8, x4, x1, x2)

inst_52107:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000000001f; valaddr_reg:x3; val_offset:156321*0 + 3*651*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156321*0 + 3*651*FLEN/8, x4, x1, x2)

inst_52108:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000000003f; valaddr_reg:x3; val_offset:156324*0 + 3*652*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156324*0 + 3*652*FLEN/8, x4, x1, x2)

inst_52109:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000000007f; valaddr_reg:x3; val_offset:156327*0 + 3*653*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156327*0 + 3*653*FLEN/8, x4, x1, x2)

inst_52110:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000000000ff; valaddr_reg:x3; val_offset:156330*0 + 3*654*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156330*0 + 3*654*FLEN/8, x4, x1, x2)

inst_52111:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000000001ff; valaddr_reg:x3; val_offset:156333*0 + 3*655*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156333*0 + 3*655*FLEN/8, x4, x1, x2)

inst_52112:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000000003ff; valaddr_reg:x3; val_offset:156336*0 + 3*656*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156336*0 + 3*656*FLEN/8, x4, x1, x2)

inst_52113:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000000007ff; valaddr_reg:x3; val_offset:156339*0 + 3*657*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156339*0 + 3*657*FLEN/8, x4, x1, x2)

inst_52114:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000000fff; valaddr_reg:x3; val_offset:156342*0 + 3*658*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156342*0 + 3*658*FLEN/8, x4, x1, x2)

inst_52115:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000001fff; valaddr_reg:x3; val_offset:156345*0 + 3*659*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156345*0 + 3*659*FLEN/8, x4, x1, x2)

inst_52116:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000003fff; valaddr_reg:x3; val_offset:156348*0 + 3*660*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156348*0 + 3*660*FLEN/8, x4, x1, x2)

inst_52117:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000007fff; valaddr_reg:x3; val_offset:156351*0 + 3*661*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156351*0 + 3*661*FLEN/8, x4, x1, x2)

inst_52118:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000000ffff; valaddr_reg:x3; val_offset:156354*0 + 3*662*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156354*0 + 3*662*FLEN/8, x4, x1, x2)

inst_52119:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000001ffff; valaddr_reg:x3; val_offset:156357*0 + 3*663*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156357*0 + 3*663*FLEN/8, x4, x1, x2)

inst_52120:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000003ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000003ffff; valaddr_reg:x3; val_offset:156360*0 + 3*664*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156360*0 + 3*664*FLEN/8, x4, x1, x2)

inst_52121:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000007ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000007ffff; valaddr_reg:x3; val_offset:156363*0 + 3*665*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156363*0 + 3*665*FLEN/8, x4, x1, x2)

inst_52122:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000000fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000000fffff; valaddr_reg:x3; val_offset:156366*0 + 3*666*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156366*0 + 3*666*FLEN/8, x4, x1, x2)

inst_52123:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000001fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000001fffff; valaddr_reg:x3; val_offset:156369*0 + 3*667*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156369*0 + 3*667*FLEN/8, x4, x1, x2)

inst_52124:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000003fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000003fffff; valaddr_reg:x3; val_offset:156372*0 + 3*668*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156372*0 + 3*668*FLEN/8, x4, x1, x2)

inst_52125:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000007fffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000007fffff; valaddr_reg:x3; val_offset:156375*0 + 3*669*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156375*0 + 3*669*FLEN/8, x4, x1, x2)

inst_52126:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000000ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000000ffffff; valaddr_reg:x3; val_offset:156378*0 + 3*670*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156378*0 + 3*670*FLEN/8, x4, x1, x2)

inst_52127:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000001ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000001ffffff; valaddr_reg:x3; val_offset:156381*0 + 3*671*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156381*0 + 3*671*FLEN/8, x4, x1, x2)

inst_52128:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000003ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000003ffffff; valaddr_reg:x3; val_offset:156384*0 + 3*672*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156384*0 + 3*672*FLEN/8, x4, x1, x2)

inst_52129:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000007ffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000007ffffff; valaddr_reg:x3; val_offset:156387*0 + 3*673*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156387*0 + 3*673*FLEN/8, x4, x1, x2)

inst_52130:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000000fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000000fffffff; valaddr_reg:x3; val_offset:156390*0 + 3*674*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156390*0 + 3*674*FLEN/8, x4, x1, x2)

inst_52131:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000001fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000001fffffff; valaddr_reg:x3; val_offset:156393*0 + 3*675*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156393*0 + 3*675*FLEN/8, x4, x1, x2)

inst_52132:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000003fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000003fffffff; valaddr_reg:x3; val_offset:156396*0 + 3*676*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156396*0 + 3*676*FLEN/8, x4, x1, x2)

inst_52133:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000007fffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000007fffffff; valaddr_reg:x3; val_offset:156399*0 + 3*677*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156399*0 + 3*677*FLEN/8, x4, x1, x2)

inst_52134:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00000ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600000ffffffff; valaddr_reg:x3; val_offset:156402*0 + 3*678*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156402*0 + 3*678*FLEN/8, x4, x1, x2)

inst_52135:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00001ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600001ffffffff; valaddr_reg:x3; val_offset:156405*0 + 3*679*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156405*0 + 3*679*FLEN/8, x4, x1, x2)

inst_52136:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00003ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600003ffffffff; valaddr_reg:x3; val_offset:156408*0 + 3*680*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156408*0 + 3*680*FLEN/8, x4, x1, x2)

inst_52137:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00007ffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600007ffffffff; valaddr_reg:x3; val_offset:156411*0 + 3*681*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156411*0 + 3*681*FLEN/8, x4, x1, x2)

inst_52138:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0000fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360000fffffffff; valaddr_reg:x3; val_offset:156414*0 + 3*682*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156414*0 + 3*682*FLEN/8, x4, x1, x2)

inst_52139:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0001fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360001fffffffff; valaddr_reg:x3; val_offset:156417*0 + 3*683*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156417*0 + 3*683*FLEN/8, x4, x1, x2)

inst_52140:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0003fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360003fffffffff; valaddr_reg:x3; val_offset:156420*0 + 3*684*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156420*0 + 3*684*FLEN/8, x4, x1, x2)

inst_52141:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0007fffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360007fffffffff; valaddr_reg:x3; val_offset:156423*0 + 3*685*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156423*0 + 3*685*FLEN/8, x4, x1, x2)

inst_52142:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x000ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836000ffffffffff; valaddr_reg:x3; val_offset:156426*0 + 3*686*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156426*0 + 3*686*FLEN/8, x4, x1, x2)

inst_52143:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x001ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836001ffffffffff; valaddr_reg:x3; val_offset:156429*0 + 3*687*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156429*0 + 3*687*FLEN/8, x4, x1, x2)

inst_52144:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x003ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836003ffffffffff; valaddr_reg:x3; val_offset:156432*0 + 3*688*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156432*0 + 3*688*FLEN/8, x4, x1, x2)

inst_52145:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x007ffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836007ffffffffff; valaddr_reg:x3; val_offset:156435*0 + 3*689*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156435*0 + 3*689*FLEN/8, x4, x1, x2)

inst_52146:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x00fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83600fffffffffff; valaddr_reg:x3; val_offset:156438*0 + 3*690*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156438*0 + 3*690*FLEN/8, x4, x1, x2)

inst_52147:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x01fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83601fffffffffff; valaddr_reg:x3; val_offset:156441*0 + 3*691*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156441*0 + 3*691*FLEN/8, x4, x1, x2)

inst_52148:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x03fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83603fffffffffff; valaddr_reg:x3; val_offset:156444*0 + 3*692*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156444*0 + 3*692*FLEN/8, x4, x1, x2)

inst_52149:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x07fffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x83607fffffffffff; valaddr_reg:x3; val_offset:156447*0 + 3*693*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156447*0 + 3*693*FLEN/8, x4, x1, x2)

inst_52150:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x0ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8360ffffffffffff; valaddr_reg:x3; val_offset:156450*0 + 3*694*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156450*0 + 3*694*FLEN/8, x4, x1, x2)

inst_52151:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x1ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8361ffffffffffff; valaddr_reg:x3; val_offset:156453*0 + 3*695*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156453*0 + 3*695*FLEN/8, x4, x1, x2)

inst_52152:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x3ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8363ffffffffffff; valaddr_reg:x3; val_offset:156456*0 + 3*696*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156456*0 + 3*696*FLEN/8, x4, x1, x2)

inst_52153:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x7ffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8367ffffffffffff; valaddr_reg:x3; val_offset:156459*0 + 3*697*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156459*0 + 3*697*FLEN/8, x4, x1, x2)

inst_52154:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0x8000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x8368000000000000; valaddr_reg:x3; val_offset:156462*0 + 3*698*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156462*0 + 3*698*FLEN/8, x4, x1, x2)

inst_52155:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xc000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836c000000000000; valaddr_reg:x3; val_offset:156465*0 + 3*699*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156465*0 + 3*699*FLEN/8, x4, x1, x2)

inst_52156:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xe000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836e000000000000; valaddr_reg:x3; val_offset:156468*0 + 3*700*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156468*0 + 3*700*FLEN/8, x4, x1, x2)

inst_52157:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836f000000000000; valaddr_reg:x3; val_offset:156471*0 + 3*701*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156471*0 + 3*701*FLEN/8, x4, x1, x2)

inst_52158:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xf800000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836f800000000000; valaddr_reg:x3; val_offset:156474*0 + 3*702*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156474*0 + 3*702*FLEN/8, x4, x1, x2)

inst_52159:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfc00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fc00000000000; valaddr_reg:x3; val_offset:156477*0 + 3*703*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156477*0 + 3*703*FLEN/8, x4, x1, x2)

inst_52160:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfe00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fe00000000000; valaddr_reg:x3; val_offset:156480*0 + 3*704*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156480*0 + 3*704*FLEN/8, x4, x1, x2)

inst_52161:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff00000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ff00000000000; valaddr_reg:x3; val_offset:156483*0 + 3*705*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156483*0 + 3*705*FLEN/8, x4, x1, x2)

inst_52162:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xff80000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ff80000000000; valaddr_reg:x3; val_offset:156486*0 + 3*706*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156486*0 + 3*706*FLEN/8, x4, x1, x2)

inst_52163:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffc0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffc0000000000; valaddr_reg:x3; val_offset:156489*0 + 3*707*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156489*0 + 3*707*FLEN/8, x4, x1, x2)

inst_52164:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffe0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffe0000000000; valaddr_reg:x3; val_offset:156492*0 + 3*708*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156492*0 + 3*708*FLEN/8, x4, x1, x2)

inst_52165:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff0000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fff0000000000; valaddr_reg:x3; val_offset:156495*0 + 3*709*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156495*0 + 3*709*FLEN/8, x4, x1, x2)

inst_52166:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfff8000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fff8000000000; valaddr_reg:x3; val_offset:156498*0 + 3*710*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156498*0 + 3*710*FLEN/8, x4, x1, x2)

inst_52167:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffc000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffc000000000; valaddr_reg:x3; val_offset:156501*0 + 3*711*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156501*0 + 3*711*FLEN/8, x4, x1, x2)

inst_52168:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffe000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffe000000000; valaddr_reg:x3; val_offset:156504*0 + 3*712*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156504*0 + 3*712*FLEN/8, x4, x1, x2)

inst_52169:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffff000000000; valaddr_reg:x3; val_offset:156507*0 + 3*713*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156507*0 + 3*713*FLEN/8, x4, x1, x2)

inst_52170:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffff800000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffff800000000; valaddr_reg:x3; val_offset:156510*0 + 3*714*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156510*0 + 3*714*FLEN/8, x4, x1, x2)

inst_52171:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffc00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffc00000000; valaddr_reg:x3; val_offset:156513*0 + 3*715*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156513*0 + 3*715*FLEN/8, x4, x1, x2)

inst_52172:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffe00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffe00000000; valaddr_reg:x3; val_offset:156516*0 + 3*716*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156516*0 + 3*716*FLEN/8, x4, x1, x2)

inst_52173:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff00000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffff00000000; valaddr_reg:x3; val_offset:156519*0 + 3*717*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156519*0 + 3*717*FLEN/8, x4, x1, x2)

inst_52174:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffff80000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffff80000000; valaddr_reg:x3; val_offset:156522*0 + 3*718*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156522*0 + 3*718*FLEN/8, x4, x1, x2)

inst_52175:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffc0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffc0000000; valaddr_reg:x3; val_offset:156525*0 + 3*719*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156525*0 + 3*719*FLEN/8, x4, x1, x2)

inst_52176:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffe0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffe0000000; valaddr_reg:x3; val_offset:156528*0 + 3*720*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156528*0 + 3*720*FLEN/8, x4, x1, x2)

inst_52177:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff0000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffff0000000; valaddr_reg:x3; val_offset:156531*0 + 3*721*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156531*0 + 3*721*FLEN/8, x4, x1, x2)

inst_52178:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffff8000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffff8000000; valaddr_reg:x3; val_offset:156534*0 + 3*722*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156534*0 + 3*722*FLEN/8, x4, x1, x2)

inst_52179:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffc000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffc000000; valaddr_reg:x3; val_offset:156537*0 + 3*723*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156537*0 + 3*723*FLEN/8, x4, x1, x2)

inst_52180:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffe000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffe000000; valaddr_reg:x3; val_offset:156540*0 + 3*724*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156540*0 + 3*724*FLEN/8, x4, x1, x2)

inst_52181:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffff000000; valaddr_reg:x3; val_offset:156543*0 + 3*725*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156543*0 + 3*725*FLEN/8, x4, x1, x2)

inst_52182:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffff800000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffff800000; valaddr_reg:x3; val_offset:156546*0 + 3*726*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156546*0 + 3*726*FLEN/8, x4, x1, x2)

inst_52183:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffc00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffc00000; valaddr_reg:x3; val_offset:156549*0 + 3*727*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156549*0 + 3*727*FLEN/8, x4, x1, x2)

inst_52184:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffe00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffe00000; valaddr_reg:x3; val_offset:156552*0 + 3*728*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156552*0 + 3*728*FLEN/8, x4, x1, x2)

inst_52185:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff00000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffff00000; valaddr_reg:x3; val_offset:156555*0 + 3*729*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156555*0 + 3*729*FLEN/8, x4, x1, x2)

inst_52186:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffff80000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffff80000; valaddr_reg:x3; val_offset:156558*0 + 3*730*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156558*0 + 3*730*FLEN/8, x4, x1, x2)

inst_52187:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffc0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffc0000; valaddr_reg:x3; val_offset:156561*0 + 3*731*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156561*0 + 3*731*FLEN/8, x4, x1, x2)

inst_52188:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffe0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffe0000; valaddr_reg:x3; val_offset:156564*0 + 3*732*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156564*0 + 3*732*FLEN/8, x4, x1, x2)

inst_52189:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff0000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffff0000; valaddr_reg:x3; val_offset:156567*0 + 3*733*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156567*0 + 3*733*FLEN/8, x4, x1, x2)

inst_52190:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffff8000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffff8000; valaddr_reg:x3; val_offset:156570*0 + 3*734*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156570*0 + 3*734*FLEN/8, x4, x1, x2)

inst_52191:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffc000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffc000; valaddr_reg:x3; val_offset:156573*0 + 3*735*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156573*0 + 3*735*FLEN/8, x4, x1, x2)

inst_52192:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffe000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffe000; valaddr_reg:x3; val_offset:156576*0 + 3*736*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156576*0 + 3*736*FLEN/8, x4, x1, x2)

inst_52193:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffff000; valaddr_reg:x3; val_offset:156579*0 + 3*737*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156579*0 + 3*737*FLEN/8, x4, x1, x2)

inst_52194:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffff800 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffff800; valaddr_reg:x3; val_offset:156582*0 + 3*738*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156582*0 + 3*738*FLEN/8, x4, x1, x2)

inst_52195:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffc00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffc00; valaddr_reg:x3; val_offset:156585*0 + 3*739*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156585*0 + 3*739*FLEN/8, x4, x1, x2)

inst_52196:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffe00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffe00; valaddr_reg:x3; val_offset:156588*0 + 3*740*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156588*0 + 3*740*FLEN/8, x4, x1, x2)

inst_52197:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff00 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffff00; valaddr_reg:x3; val_offset:156591*0 + 3*741*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156591*0 + 3*741*FLEN/8, x4, x1, x2)

inst_52198:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffff80 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffff80; valaddr_reg:x3; val_offset:156594*0 + 3*742*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156594*0 + 3*742*FLEN/8, x4, x1, x2)

inst_52199:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffc0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffffc0; valaddr_reg:x3; val_offset:156597*0 + 3*743*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156597*0 + 3*743*FLEN/8, x4, x1, x2)

inst_52200:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffe0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffffe0; valaddr_reg:x3; val_offset:156600*0 + 3*744*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156600*0 + 3*744*FLEN/8, x4, x1, x2)

inst_52201:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff0 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffff0; valaddr_reg:x3; val_offset:156603*0 + 3*745*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156603*0 + 3*745*FLEN/8, x4, x1, x2)

inst_52202:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffff8 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffff8; valaddr_reg:x3; val_offset:156606*0 + 3*746*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156606*0 + 3*746*FLEN/8, x4, x1, x2)

inst_52203:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffc and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffffc; valaddr_reg:x3; val_offset:156609*0 + 3*747*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156609*0 + 3*747*FLEN/8, x4, x1, x2)

inst_52204:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xffffffffffffe and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836ffffffffffffe; valaddr_reg:x3; val_offset:156612*0 + 3*748*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156612*0 + 3*748*FLEN/8, x4, x1, x2)

inst_52205:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x07d32e5b68c4e and fs2 == 0 and fe2 == 0x000 and fm2 == 0x0000000008000 and fs3 == 1 and fe3 == 0x036 and fm3 == 0xfffffffffffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa07d32e5b68c4e; op2val:0x8000;
op3val:0x836fffffffffffff; valaddr_reg:x3; val_offset:156615*0 + 3*749*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156615*0 + 3*749*FLEN/8, x4, x1, x2)

inst_52206:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000000 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000000000; valaddr_reg:x3; val_offset:156618*0 + 3*750*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156618*0 + 3*750*FLEN/8, x4, x1, x2)

inst_52207:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000001 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000000001; valaddr_reg:x3; val_offset:156621*0 + 3*751*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156621*0 + 3*751*FLEN/8, x4, x1, x2)

inst_52208:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000003 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000000003; valaddr_reg:x3; val_offset:156624*0 + 3*752*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156624*0 + 3*752*FLEN/8, x4, x1, x2)

inst_52209:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000007 and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000000007; valaddr_reg:x3; val_offset:156627*0 + 3*753*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156627*0 + 3*753*FLEN/8, x4, x1, x2)

inst_52210:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000000f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000000000f; valaddr_reg:x3; val_offset:156630*0 + 3*754*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156630*0 + 3*754*FLEN/8, x4, x1, x2)

inst_52211:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000001f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000000001f; valaddr_reg:x3; val_offset:156633*0 + 3*755*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156633*0 + 3*755*FLEN/8, x4, x1, x2)

inst_52212:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000003f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000000003f; valaddr_reg:x3; val_offset:156636*0 + 3*756*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156636*0 + 3*756*FLEN/8, x4, x1, x2)

inst_52213:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000007f and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000000007f; valaddr_reg:x3; val_offset:156639*0 + 3*757*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156639*0 + 3*757*FLEN/8, x4, x1, x2)

inst_52214:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000000ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba200000000000ff; valaddr_reg:x3; val_offset:156642*0 + 3*758*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156642*0 + 3*758*FLEN/8, x4, x1, x2)

inst_52215:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000001ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba200000000001ff; valaddr_reg:x3; val_offset:156645*0 + 3*759*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156645*0 + 3*759*FLEN/8, x4, x1, x2)

inst_52216:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000003ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba200000000003ff; valaddr_reg:x3; val_offset:156648*0 + 3*760*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156648*0 + 3*760*FLEN/8, x4, x1, x2)

inst_52217:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x00000000007ff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba200000000007ff; valaddr_reg:x3; val_offset:156651*0 + 3*761*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156651*0 + 3*761*FLEN/8, x4, x1, x2)

inst_52218:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000000fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000000fff; valaddr_reg:x3; val_offset:156654*0 + 3*762*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156654*0 + 3*762*FLEN/8, x4, x1, x2)

inst_52219:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000001fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000001fff; valaddr_reg:x3; val_offset:156657*0 + 3*763*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156657*0 + 3*763*FLEN/8, x4, x1, x2)

inst_52220:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000003fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000003fff; valaddr_reg:x3; val_offset:156660*0 + 3*764*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156660*0 + 3*764*FLEN/8, x4, x1, x2)

inst_52221:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x0000000007fff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba20000000007fff; valaddr_reg:x3; val_offset:156663*0 + 3*765*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156663*0 + 3*765*FLEN/8, x4, x1, x2)

inst_52222:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000000ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000000ffff; valaddr_reg:x3; val_offset:156666*0 + 3*766*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156666*0 + 3*766*FLEN/8, x4, x1, x2)

inst_52223:
// fs1 == 0 and fe1 == 0x5fa and fm1 == 0x09badb528c6c8 and fs2 == 1 and fe2 == 0x1fc and fm2 == 0xed40b225d649d and fs3 == 1 and fe3 == 0x3a2 and fm3 == 0x000000001ffff and  fcsr == 0x0 and rm_val == 7   
/* opcode: fmadd.d ; op1:f30; op2:f29; op3:f28; dest:f31; op1val:0x5fa09badb528c6c8; op2val:0x9fced40b225d649d;
op3val:0xba2000000001ffff; valaddr_reg:x3; val_offset:156669*0 + 3*767*FLEN/8; rmval:dyn;
testreg:x2; fcsr_val:0 */
TEST_FPR4_OP(fmadd.d, f31, f30, f29, f28, dyn, 0, 0, x3, 156669*0 + 3*767*FLEN/8, x4, x1, x2)
#endif


RVTEST_CODE_END
RVMODEL_HALT

RVTEST_DATA_BEGIN
.align 4
rvtest_data:
.word 0xbabecafe
.word 0xabecafeb
.word 0xbecafeba
.word 0xecafebab
test_dataset_0:
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149415999,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149416063,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149416191,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149416447,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149416959,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149417983,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149420031,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149424127,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149432319,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149448703,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149481471,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149547007,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149678079,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476149940223,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476150464511,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476151513087,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476153610239,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476157804543,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476166193151,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476182970367,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476216524799,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476283633663,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476417851391,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856476686286847,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856477223157759,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856478296899583,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856480444383231,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856484739350527,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856493329285119,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856510509154303,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856544868892671,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856613588369407,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582856751027322879,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582857025905229823,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582857575661043711,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582858675172671487,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582860874195927039,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582865272242438143,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582874068335460351,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582891660521504767,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582926844893593599,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13582997213637771263,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13583137951126126591,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13583419426102837247,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13583982376056258559,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13585108275963101183,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13585108275963101184,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13586234175869943808,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13586797125823365120,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587078600800075776,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587219338288431104,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587289707032608768,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587324891404697600,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587342483590742016,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587351279683764224,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587355677730275328,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587357876753530880,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587358976265158656,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587359526020972544,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587359800898879488,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587359938337832960,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360007057309696,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360041417048064,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360058596917248,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360067186851840,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360071481819136,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360073629302784,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360074703044608,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075239915520,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075508350976,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075642568704,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075709677568,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075743232000,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075760009216,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075768397824,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075772592128,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075774689280,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075775737856,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776262144,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776524288,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776655360,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776720896,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776753664,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776770048,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776778240,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776782336,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776784384,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776785408,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776785920,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786176,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786304,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786368,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786400,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786416,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786424,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786428,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786430,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13587360075776786431,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890479343474853731,64,FLEN)
NAN_BOXED(11515718334314082257,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786432,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786433,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786435,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786439,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786447,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786463,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786495,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786559,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786687,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776786943,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776787455,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776788479,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776790527,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776794623,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776802815,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776819199,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776851967,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075776917503,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075777048575,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075777310719,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075777835007,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075778883583,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075780980735,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075785175039,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075793563647,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075810340863,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075843895295,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360075911004159,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360076045221887,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360076313657343,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360076850528255,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360077924270079,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360080071753727,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360084366721023,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360092956655615,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360110136524799,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360144496263167,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360213215739903,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360350654693375,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587360625532600319,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587361175288414207,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587362274800041983,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587364473823297535,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587368871869808639,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587377667962830847,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587395260148875263,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587430444520964095,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587500813265141759,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587641550753497087,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13587923025730207743,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13588485975683629055,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13589611875590471679,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13589611875590471680,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13590737775497314304,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591300725450735616,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591582200427446272,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591722937915801600,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591793306659979264,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591828491032068096,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591846083218112512,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591854879311134720,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591859277357645824,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591861476380901376,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591862575892529152,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863125648343040,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863400526249984,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863537965203456,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863606684680192,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863641044418560,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863658224287744,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863666814222336,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863671109189632,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863673256673280,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863674330415104,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863674867286016,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675135721472,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675269939200,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675337048064,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675370602496,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675387379712,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675395768320,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675399962624,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675402059776,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675403108352,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675403632640,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675403894784,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404025856,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404091392,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404124160,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404140544,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404148736,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404152832,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404154880,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404155904,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156416,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156672,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156800,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156864,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156896,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156912,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156920,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156924,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156926,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13591863675404156927,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890483049043369175,64,FLEN)
NAN_BOXED(11515716470689881337,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642304,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642305,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642307,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642311,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642319,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642335,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642367,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642431,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642559,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852642815,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852643327,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852644351,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852646399,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852650495,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852658687,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852675071,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852707839,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852773375,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263852904447,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263853166591,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263853690879,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263854739455,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263856836607,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263861030911,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263869419519,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263886196735,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263919751167,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475263986860031,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475264121077759,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475264389513215,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475264926384127,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475266000125951,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475268147609599,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475272442576895,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475281032511487,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475298212380671,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475332572119039,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475401291595775,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475538730549247,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731475813608456191,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731476363364270079,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731477462875897855,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731479661899153407,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731484059945664511,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731492856038686719,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731510448224731135,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731545632596819967,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731616001340997631,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13731756738829352959,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13732038213806063615,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13732601163759484927,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13733727063666327551,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13733727063666327552,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13734852963573170176,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735415913526591488,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735697388503302144,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735838125991657472,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735908494735835136,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735943679107923968,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735961271293968384,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735970067386990592,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735974465433501696,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735976664456757248,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735977763968385024,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978313724198912,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978588602105856,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978726041059328,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978794760536064,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978829120274432,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978846300143616,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978854890078208,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978859185045504,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978861332529152,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978862406270976,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978862943141888,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863211577344,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863345795072,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863412903936,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863446458368,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863463235584,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863471624192,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863475818496,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863477915648,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863478964224,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479488512,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479750656,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479881728,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479947264,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479980032,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863479996416,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480004608,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480008704,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480010752,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480011776,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012288,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012544,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012672,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012736,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012768,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012784,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012792,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012796,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012798,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13735978863480012799,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890529304751533249,64,FLEN)
NAN_BOXED(11515660708911029243,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901312,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901313,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901315,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901319,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901327,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901343,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901375,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901439,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901567,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597901823,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597902335,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597903359,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597905407,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597909503,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597917695,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597934079,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064597966847,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064598032383,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064598163455,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064598425599,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064598949887,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064599998463,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064602095615,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064606289919,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064614678527,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064631455743,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064665010175,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064732119039,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468064866336767,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468065134772223,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468065671643135,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468066745384959,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468068892868607,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468073187835903,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468081777770495,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468098957639679,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468133317378047,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468202036854783,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468339475808255,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722468614353715199,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722469164109529087,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722470263621156863,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722472462644412415,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722476860690923519,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722485656783945727,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722503248969990143,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722538433342078975,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722608802086256639,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13722749539574611967,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13723031014551322623,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13723593964504743935,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13724719864411586559,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13724719864411586560,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13725845764318429184,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726408714271850496,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726690189248561152,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726830926736916480,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726901295481094144,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726936479853182976,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726954072039227392,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726962868132249600,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726967266178760704,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726969465202016256,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726970564713644032,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971114469457920,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971389347364864,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971526786318336,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971595505795072,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971629865533440,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971647045402624,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971655635337216,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971659930304512,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971662077788160,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971663151529984,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971663688400896,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971663956836352,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664091054080,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664158162944,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664191717376,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664208494592,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664216883200,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664221077504,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664223174656,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664224223232,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664224747520,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225009664,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225140736,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225206272,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225239040,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225255424,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225263616,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225267712,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225269760,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225270784,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271296,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271552,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271680,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271744,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271776,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271792,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271800,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271804,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271806,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13726971664225271807,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890552463104370679,64,FLEN)
NAN_BOXED(11515615072424133293,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199745,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199747,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199751,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199759,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199775,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799029258263199807,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13799929978188673843,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13800316001013877028,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13800830698114147942,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13800959372389215670,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13801130938089305975,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13801431178064464008,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13801731418039622041,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13802246115139892955,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13802632137965096140,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13802889486515231597,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570176,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570208,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570224,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570232,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570236,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13803532857890570238,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422720,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422721,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422723,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422727,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422735,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422751,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422783,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422847,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027422975,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027423231,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027423743,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027424767,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027426815,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027430911,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027439103,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027455487,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027488255,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027553791,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027684863,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856027947007,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856028471295,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856029519871,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856031617023,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856035811327,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856044199935,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856060977151,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856094531583,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856161640447,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856295858175,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050856564293631,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050857101164543,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050858174906367,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050860322390015,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050864617357311,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050873207291903,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050890387161087,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050924746899455,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826050993466376191,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826051130905329663,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826051405783236607,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826051955539050495,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826053055050678271,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826055254073933823,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826059652120444927,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826068448213467135,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826086040399511551,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826121224771600383,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826191593515778047,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826332331004133375,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13826613805980844031,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13827176755934265343,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13828302655841107967,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13828302655841107968,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13829428555747950592,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13829991505701371904,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830272980678082560,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830413718166437888,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830484086910615552,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830519271282704384,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830536863468748800,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830545659561771008,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830550057608282112,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830552256631537664,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830553356143165440,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830553905898979328,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554180776886272,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554318215839744,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554386935316480,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554421295054848,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554438474924032,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554447064858624,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554451359825920,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554453507309568,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554454581051392,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455117922304,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455386357760,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455520575488,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455587684352,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455621238784,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455638016000,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455646404608,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455650598912,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455652696064,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455653744640,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654268928,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654531072,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654662144,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654727680,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654760448,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654776832,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654785024,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654789120,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654791168,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654792192,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654792704,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654792960,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793088,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793152,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793184,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793200,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793208,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793212,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793214,64,FLEN)
NAN_BOXED(6890569199329473529,64,FLEN)
NAN_BOXED(11515582379762759250,64,FLEN)
NAN_BOXED(13830554455654793215,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146305,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146307,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146311,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146319,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146335,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9227875636482146367,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9228776356407620403,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229162379232823588,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229677076333094502,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229805750608162230,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9229977316308252535,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230277556283410568,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9230577796258568601,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231092493358839515,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231478516184042700,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9231735864734178157,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516736,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516768,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516784,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516792,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516796,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9232379236109516798,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782592,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782593,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782595,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782599,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782607,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782623,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782655,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782719,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732782847,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783103,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732783615,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732784639,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732786687,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732790783,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732798975,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732815359,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732848127,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416732913663,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733044735,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733306879,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416733831167,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416734879743,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416736976895,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416741171199,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416749559807,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416766337023,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416799891455,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566416867000319,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417001218047,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417269653503,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566417806524415,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566418880266239,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566421027749887,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566425322717183,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566433912651775,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566451092520959,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566485452259327,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566554171736063,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566691610689535,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466566966488596479,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466567516244410367,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466568615756038143,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466570814779293695,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466575212825804799,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466584008918827007,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466601601104871423,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466636785476960255,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466707154221137919,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9466847891709493247,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467129366686203903,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9467692316639625215,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467839,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9468818216546467840,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9469944116453310464,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470507066406731776,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470788541383442432,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470929278871797760,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9470999647615975424,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471034831988064256,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471052424174108672,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471061220267130880,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471065618313641984,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471067817336897536,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471068916848525312,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069466604339200,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069741482246144,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069878921199616,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069947640676352,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069982000414720,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471069999180283904,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070007770218496,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070012065185792,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070014212669440,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015286411264,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070015823282176,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016091717632,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016225935360,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016293044224,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016326598656,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016343375872,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016351764480,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016355958784,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016358055936,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359104512,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359628800,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016359890944,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360022016,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360087552,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360120320,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360136704,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360144896,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360148992,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360151040,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152064,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152576,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152832,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360152960,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153024,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153056,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153072,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153080,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153084,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153086,64,FLEN)
NAN_BOXED(6890645087432641614,64,FLEN)
NAN_BOXED(32768,64,FLEN)
NAN_BOXED(9471070016360153087,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337088,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337089,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337091,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337095,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337103,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337119,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337151,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337215,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337343,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309337599,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309338111,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309339135,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309341183,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309345279,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309353471,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309369855,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309402623,64,FLEN)
NAN_BOXED(6890678600247854792,64,FLEN)
NAN_BOXED(11515374441519211677,64,FLEN)
NAN_BOXED(13411719690309468159,64,FLEN)
RVTEST_DATA_END

RVMODEL_DATA_BEGIN
rvtest_sig_begin:
sig_begin_canary:
CANARY;


signature_x1_0:
    .fill 0*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_1:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_2:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_3:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_4:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_5:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef


signature_x1_6:
    .fill 256*((SIGALIGN)/4),4,0xdeadbeef

#ifdef rvtest_mtrap_routine

tsig_begin_canary:
CANARY;
mtrap_sigptr:
    .fill 64*(XLEN/32),4,0xdeadbeef
tsig_end_canary:
CANARY;

#endif

#ifdef rvtest_gpr_save

gpr_save:
    .fill 32*XLEN/32,4,0xdeadbeef

#endif

sig_end_canary:
CANARY;
rvtest_sig_end:
RVMODEL_DATA_END
